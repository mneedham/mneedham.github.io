<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unit Test on Mark Needham</title>
    <link>http://mneedham.github.io/tag/unit-test/</link>
    <description>Recent content in Unit Test on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Apr 2009 19:51:10 +0000</lastBuildDate>
    
	<atom:link href="http://mneedham.github.io/tag/unit-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing unit tests can be fun</title>
      <link>http://mneedham.github.io/2009/04/25/writing-unit-tests-can-be-fun/</link>
      <pubDate>Sat, 25 Apr 2009 19:51:10 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2009/04/25/writing-unit-tests-can-be-fun/</guid>
      <description>I recently came across Pavel Brodzinski&amp;rsquo;s blog and while browsing through some of his most recent posts I came across one discussing when unit testing doesn&amp;rsquo;t work.
The majority of what Pavel says I&amp;rsquo;ve seen happen before on projects I&amp;rsquo;ve worked on but I disagree with his suggestion that writing unit tests is boring:
 6. Writing unit tests is boring. That’s not amusing or challenging algorithmic problem. That’s not cool hacking trick which you can show off with in front of your geeky friends.</description>
    </item>
    
    <item>
      <title>What makes a good unit test?</title>
      <link>http://mneedham.github.io/2008/12/04/what-make-a-good-unit-test/</link>
      <pubDate>Thu, 04 Dec 2008 00:31:29 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2008/12/04/what-make-a-good-unit-test/</guid>
      <description>Following on from my post around the definition of a unit test, a recent discussion on the Test Driven Development mailing list led me to question what my own approach is for writing unit tests.
To self quote from my previous post:
 A well written unit test in my book should be simple to understand and run quickly.  Quite simple in theory but as I have learnt (and am still learning) the hard way, much harder to do in practice.</description>
    </item>
    
    <item>
      <title>What is a unit test?</title>
      <link>http://mneedham.github.io/2008/10/10/what-is-a-unit-test/</link>
      <pubDate>Fri, 10 Oct 2008 23:21:43 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2008/10/10/what-is-a-unit-test/</guid>
      <description>One of the questions which came up during the Sydney Alt.NET User Group meeting at the start of October was around what a unit test actually is.
I suppose the somewhat naive or simplistic definition is that it is just any test written using an xUnit framework such as NUnit or JUnit. However, integration or acceptance tests are often written using these frameworks so this definition doesn&amp;rsquo;t hold.
While discussing this last week a colleague came up with what I considered to be a very clear yet precise definition.</description>
    </item>
    
  </channel>
</rss>