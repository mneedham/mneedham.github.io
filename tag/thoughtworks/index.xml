<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thoughtworks on Mark Needham</title>
    <link>https://mneedham.github.io/tag/thoughtworks/</link>
    <description>Recent content in Thoughtworks on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Oct 2009 23:10:36 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/tag/thoughtworks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>QTB: Agile Governance - Managing the Enterprise Issues</title>
      <link>https://mneedham.github.io/2009/10/01/qtb-agile-governance-managing-the-enterprise-issues/</link>
      <pubDate>Thu, 01 Oct 2009 23:10:36 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2009/10/01/qtb-agile-governance-managing-the-enterprise-issues/</guid>
      <description>I went to watch the latest ThoughtWorks Australia Quarterly Technology Briefing in Sydney on Wednesday where my colleague Lindy Stephens, Suncorp&amp;rsquo;s Josh Melville and Lonely Planet&amp;rsquo;s Nigel Dalton presented on &amp;lsquo;Agile Governance - Managing the Enterprise Issues&amp;rsquo;.
I was actually unsure of how interesting it would be to me as the title seemed a bit dull but it was actually quite entertaining and not at all what I expected.
These are some of the things I picked up from the presentation:</description>
    </item>
    
    <item>
      <title>QTB: Agile Adoption - How to stuff it up</title>
      <link>https://mneedham.github.io/2009/06/24/qtb-agile-adoption-how-to-stuff-it-up/</link>
      <pubDate>Wed, 24 Jun 2009 23:58:38 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2009/06/24/qtb-agile-adoption-how-to-stuff-it-up/</guid>
      <description>I attended the most recent ThoughtWorks Quarterly Technology briefing on Tuesday which was titled &amp;lsquo;Agile Adoption - How to stuff it up&amp;rsquo; and presented by my colleagues Andy Marks and Martin Fowler.
There seems to be quite a few books out at the moment about how to introduce a more agile approach into your organisation - I&amp;rsquo;ve been reading Lean-Agile Software Development and Becoming Agile and there is also a book called Scaling Lean and Agile Development - so I was intrigued to see whether the messages from this talk would be similar to those in these books.</description>
    </item>
    
    <item>
      <title>QTB: Lean Times Require Lean Thinking</title>
      <link>https://mneedham.github.io/2009/03/25/qtb-lean-times-require-lean-thinking/</link>
      <pubDate>Wed, 25 Mar 2009 00:36:09 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2009/03/25/qtb-lean-times-require-lean-thinking/</guid>
      <description>I went to watch the latest ThoughtWorks Quarterly Technology Briefing on Tuesday, which was presented by my colleague Jason Yip and Paul Heaton, titled &amp;lsquo;Lean Times Require Lean Thinking&amp;lsquo;
I&amp;rsquo;ve been reading quite a bit of lean related material lately but I thought it would be interesting to hear about it directly from the perspective of two people who have been involved with applying the concepts in organisations.
What did I learn?</description>
    </item>
    
    <item>
      <title>The Productive Programmer: Book Review</title>
      <link>https://mneedham.github.io/2008/09/05/the-productive-programmer-book-review/</link>
      <pubDate>Fri, 05 Sep 2008 00:05:40 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2008/09/05/the-productive-programmer-book-review/</guid>
      <description>The Book The Productive Programmer by Neal Ford The Review I first came across this book when I was browsing Andy Hunt&amp;rsquo;s Pragmatic Thinking and Learning: Refactor Your Wetware on Amazon. It showed up as one of the related books.
I had expected it to be a more theoretical book than it actually is. It is full of really useful command line tips and ways to use system tools and IDEs more effectively.</description>
    </item>
    
    <item>
      <title>My Software Development journey so far</title>
      <link>https://mneedham.github.io/2008/09/01/my-software-development-journey-so-far/</link>
      <pubDate>Mon, 01 Sep 2008 01:01:09 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2008/09/01/my-software-development-journey-so-far/</guid>
      <description>While reading some of the rough drafts of Apprenticeship Patterns online I started thinking about the stages I have gone through on my Software Development journey so far.
I have worked in the industry for just over 3 years; 1 year at Reed Business and 2 years at ThoughtWorks. Over that time my thoughts, opinions and ways of doing things have changed, and no doubt these will continue to evolve as I learn more and more.</description>
    </item>
    
    <item>
      <title>Hiring Developers - not just about the code</title>
      <link>https://mneedham.github.io/2008/08/10/hiring-developers-not-just-about-the-code/</link>
      <pubDate>Sun, 10 Aug 2008 01:23:38 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2008/08/10/hiring-developers-not-just-about-the-code/</guid>
      <description>It seems programmers are taking a bit of a hammering this week!
Kris Kemper talks about the Net Negative Producing Programmer referring to a paper linked to by Jay Fields, concluding that the code submission is very important in helping to distinguish between good and bad candidates.
Now I probably haven&amp;rsquo;t done as many interviews at ThoughtWorks as Kris has but from what I&amp;rsquo;ve seen of the recruitment process it seems to be more focused on ensuring that potential hires culturally fit into the organisation rather than that they write the best code that anyone has ever seen.</description>
    </item>
    
    <item>
      <title>Active listening</title>
      <link>https://mneedham.github.io/2006/09/03/active-listening/</link>
      <pubDate>Sun, 03 Sep 2006 15:39:06 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2006/09/03/active-listening/</guid>
      <description>One of the first unusual (to me) things that I noticed from the trainers at ThoughtWorks University was that when they were listening to participants they would often ask questions and re-frame the participants&amp;rsquo; comments. Intrigued and impressed by this I spoke to one of the trainers and was told that they were engaging in &amp;lsquo;active listening&amp;rsquo;. Wikipedia defines the term as follows:   Active listening is an intent &amp;ldquo;listening for meaning&amp;rdquo; in which the listener checks with the speaker to see that a statement has been correctly heard and understood.</description>
    </item>
    
    <item>
      <title>Giving effective feedback</title>
      <link>https://mneedham.github.io/2006/09/02/giving-effective-feedback/</link>
      <pubDate>Sat, 02 Sep 2006 03:07:45 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2006/09/02/giving-effective-feedback/</guid>
      <description>One of the most interesting things I have discovered since starting at ThoughtWorks earlier this month is the emphasis that is placed on giving feedback.
The first lesson we were taught about giving feedback was that it could be one of two types. Either it should Strengthen Confidence or Increase Effectiveness.
In Layman&amp;rsquo;s term that means that if you want to make a positive comment about somebody&amp;rsquo;s contribution then you should make reference to something specific that you believe they have done well so that they can continue doing it.</description>
    </item>
    
    <item>
      <title>Inheritance and Delegation</title>
      <link>https://mneedham.github.io/2006/09/02/inheritance-and-delegation/</link>
      <pubDate>Sat, 02 Sep 2006 01:31:40 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2006/09/02/inheritance-and-delegation/</guid>
      <description>One of the major learning points this week at TWU has been understanding when it is appropriate to use inheritance and when delegation is the better choice.
I had heard stories about how inheritance could be misused but I didn&amp;rsquo;t think I would be stupid enough to fall straight into that trap! We were taught the concept using &amp;lsquo;Measurement&amp;rsquo; as the problem domain. So to translate the previous sentence into English: The aim was to design classes which could handle old school measurement types such as Inches, Feet, Yards, and so on.</description>
    </item>
    
    <item>
      <title>Watching a master at work</title>
      <link>https://mneedham.github.io/2006/09/02/watching-a-master-at-work/</link>
      <pubDate>Sat, 02 Sep 2006 01:01:44 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2006/09/02/watching-a-master-at-work/</guid>
      <description>I&amp;rsquo;ve always found it fascinating watching people who really excel in their field going about business, be it footballers, tennis players, actors, whoever.
This week at TWU I&amp;rsquo;ve been playing around with some Ruby on Rails as I mentioned in the previous post, and yesterday I had the opportunity to watch one of the leading figures in the Ruby on Rails field at work. Take a bow Obie Fernandez, who gave several of the TWU attendees a demonstration of how to develop applications using Ruby on Rails.</description>
    </item>
    
  </channel>
</rss>