<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell Scripting 2 on Mark Needham</title>
    <link>http://mneedham.github.io/tag/shell-scripting-2/</link>
    <description>Recent content in Shell Scripting 2 on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2016 05:53:38 +0000</lastBuildDate>
    
	<atom:link href="http://mneedham.github.io/tag/shell-scripting-2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unix parallel: Populating all the USB sticks</title>
      <link>http://mneedham.github.io/2016/06/01/unix-parallel-populating-all-the-usb-sticks/</link>
      <pubDate>Wed, 01 Jun 2016 05:53:38 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2016/06/01/unix-parallel-populating-all-the-usb-sticks/</guid>
      <description>The day before Graph Connect Europe 2016 we needed to create a bunch of USB sticks containing Neo4j and the training materials and eventually iterated our way to a half decent approach which made use of the GNU parallel command which I&#39;ve always wanted to use!  But first I needed to get a USB hub so I could do lots of them at the same time. I bought the EasyAcc USB 3.</description>
    </item>
    
    <item>
      <title>SSHing onto machines via a jumpbox</title>
      <link>http://mneedham.github.io/2012/08/10/sshing-onto-machines-via-a-jumpbox/</link>
      <pubDate>Fri, 10 Aug 2012 00:58:46 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2012/08/10/sshing-onto-machines-via-a-jumpbox/</guid>
      <description>We wanted to be able to ssh into some machines which were behind a firewall so we set up a jumpbox which our firewall directed any traffic on port 22 towards.
Initially if we wanted to SSH onto a machine inside the network we&amp;rsquo;d have to do a two step process:
$ ssh jumpbox # now on the jumpbx $ ssh internal-network-machine  That got a bit annoying after a while so Sam showed us a neat way of proxying the second ssh command through the first one by making use of netcat.</description>
    </item>
    
    <item>
      <title>VCloud Guest Customization Script : [: postcustomization: unexpected operator</title>
      <link>http://mneedham.github.io/2012/08/06/vcloud-guest-customization-script-postcustomization-unexpected-operator/</link>
      <pubDate>Mon, 06 Aug 2012 21:50:07 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2012/08/06/vcloud-guest-customization-script-postcustomization-unexpected-operator/</guid>
      <description>We have been doing some work to automatically provision machines using the VCloud API via fog and one of the things we wanted to do was run a custom script the first time that a node powers on.
The following explains how customization scripts work:  In vCloud Director, when setting a customization script in a virtual machine, the script:  Is called only on initial customization and force recustomization. Is called with the precustomization command line parameter before out-of-box customization begins.</description>
    </item>
    
    <item>
      <title>Learning Unix find: Searching in/Excluding certain folders</title>
      <link>http://mneedham.github.io/2011/10/21/learning-unix-find-searching-inexcluding-certain-folders/</link>
      <pubDate>Fri, 21 Oct 2011 21:25:04 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2011/10/21/learning-unix-find-searching-inexcluding-certain-folders/</guid>
      <description>I love playing around with commands on the Unix shell but one of the ones that I&amp;rsquo;ve found the most difficult to learn beyond the very basics is find.
I think this is partially because I find the find man page quite difficult to read and partially because it&amp;rsquo;s usually quicker to work out how to solve my problem with a command I already know than to learn another one.</description>
    </item>
    
    <item>
      <title>mount_smbfs: mount error..File exists</title>
      <link>http://mneedham.github.io/2011/01/15/mount_smbfs-mount-error-file-exists/</link>
      <pubDate>Sat, 15 Jan 2011 18:31:07 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2011/01/15/mount_smbfs-mount-error-file-exists/</guid>
      <description>I&amp;rsquo;ve been playing around with mounting a Windows file share onto my machine via the terminal because I&amp;rsquo;m getting bored of constantly having to go to Finder and manually mounting it each time!
After a couple of times of mounting and unmounting the drive I ended up with this error:
&amp;gt; mount_smbfs //mneedham@punedc02/shared punedc02_shared/ mount_smbfs: mount error: /Volumes/punedc02_shared: File exists  I originally thought the &amp;lsquo;file exists&amp;rsquo; part of the message was suggesting that I&amp;rsquo;d already mounted a share on &amp;lsquo;punedc02_shared&amp;rsquo; but calling the &amp;lsquo;umount&amp;rsquo; command led to the following error:</description>
    </item>
    
    <item>
      <title>Sed: &#39;sed: 1: invalid command code R&#39; on Mac OS X</title>
      <link>http://mneedham.github.io/2011/01/14/sed-sed-1-invalid-command-code-r-on-mac-os-x/</link>
      <pubDate>Fri, 14 Jan 2011 14:15:19 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2011/01/14/sed-sed-1-invalid-command-code-r-on-mac-os-x/</guid>
      <description>A few days ago I wrote about how we&amp;rsquo;d been using Sed to edit multiple files and while those examples were derived from what we&amp;rsquo;d been using on Ubuntu I realised that they didn&amp;rsquo;t actually work on Mac OS X.
For example, the following command:
sed -i &#39;s/require/include/&#39; Rakefile  Throws this error:
sed: 1: &amp;quot;Rakefile&amp;quot;: invalid command code R  What I hadn&amp;rsquo;t realised is that on the Mac version of sed the &amp;lsquo;-i&amp;rsquo; flag has a mandatory suffix, as described in this post.</description>
    </item>
    
    <item>
      <title>Sed across multiple files</title>
      <link>http://mneedham.github.io/2011/01/11/sed-across-multiple-files/</link>
      <pubDate>Tue, 11 Jan 2011 16:43:53 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2011/01/11/sed-across-multiple-files/</guid>
      <description>Pankhuri and I needed to rename a method and change all the places where it was used and decided to see if we could work out how to do it using sed.
We needed to change a method call roughly like this:
home_link(current_user)  To instead read:
homepage_path  For which we need the following sed expression:
sed -i &#39;s/home_link([^)]*)/homepage_path/&#39; [file_name]  Which works pretty well if you know which file you want to change but we wanted to run it over the whole code base.</description>
    </item>
    
    <item>
      <title>A dirty hack to get around aliases not working in a shell script</title>
      <link>http://mneedham.github.io/2010/11/24/a-dirty-hack-to-get-around-aliases-not-working-in-a-shell-script/</link>
      <pubDate>Wed, 24 Nov 2010 18:48:25 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2010/11/24/a-dirty-hack-to-get-around-aliases-not-working-in-a-shell-script/</guid>
      <description>In another script I&amp;rsquo;ve been working on lately I wanted to call &amp;lsquo;mysql&amp;rsquo; but unfortunately on my machine it&amp;rsquo;s &amp;lsquo;mysql5&amp;rsquo; rather than &amp;lsquo;mysql&amp;rsquo;.
I have an alias defined in &amp;lsquo;~/.bash_profile&amp;rsquo; so I can call &amp;lsquo;mysql&amp;rsquo; from the terminal whenever I want to.
alias mysql=mysql5  Unfortunately shell scripts don&amp;rsquo;t seem to have access to this alias and the only suggestion I&amp;rsquo;ve come across while googling this is to source &amp;lsquo;~/.bash_profile&amp;rsquo; inside the script.</description>
    </item>
    
  </channel>
</rss>