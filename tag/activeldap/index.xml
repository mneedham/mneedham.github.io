<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Activeldap on Mark Needham</title>
    <link>https://mneedham.github.io/tag/activeldap/</link>
    <description>Recent content in Activeldap on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Oct 2008 16:29:32 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/tag/activeldap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby LDAP Options</title>
      <link>https://mneedham.github.io/2008/10/05/ruby-ldap-options/</link>
      <pubDate>Sun, 05 Oct 2008 16:29:32 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2008/10/05/ruby-ldap-options/</guid>
      <description>As I mentioned in an earlier post a colleague and I spent a few days looking at how to connect to an OpenDS LDAP server using Ruby.
We ended up analysing four different solutions for solving the problem.
Active LDAP This approach involved using the Active LDAP Ruby which &#34;provides an object oriented interface to LDAP. It maps LDAP entries to Ruby objects with LDAP attribute accessors based on your LDAP server&#39;s schema and each object&#39;s objectClasses&#34;</description>
    </item>
    
  </channel>
</rss>