<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javautildate on Mark Needham</title>
    <link>https://mneedham.github.io/tag/javautildate/</link>
    <description>Recent content in Javautildate on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Sep 2008 11:01:54 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/tag/javautildate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using java.util.Date safely</title>
      <link>https://mneedham.github.io/2008/09/18/using-javautildate-safely/</link>
      <pubDate>Thu, 18 Sep 2008 11:01:54 +0000</pubDate>
      
      <guid>https://mneedham.github.io/2008/09/18/using-javautildate-safely/</guid>
      <description>Assuming that you are unable to use Joda Time on your project, there are some simple ways that I have come across that allow you to not suffer at the hands of java.util.Date.
What&amp;rsquo;s wrong with java.util.date in the first place? First of all java.util.date is mutable. This means that if you create a java.util.date object its state can be modified after creation.
This means that you can do an operation like the following, for example:</description>
    </item>
    
  </channel>
</rss>