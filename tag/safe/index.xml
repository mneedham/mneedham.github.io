<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Safe on Mark Needham</title>
    <link>http://mneedham.github.io/tag/safe/</link>
    <description>Recent content in Safe on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jun 2009 00:02:45 +0000</lastBuildDate>
    
	<atom:link href="http://mneedham.github.io/tag/safe/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Safe refactoring: Removing object initializer, introducing builder</title>
      <link>http://mneedham.github.io/2009/06/26/safe-refactoring-removing-object-initializer-introducing-builder/</link>
      <pubDate>Fri, 26 Jun 2009 00:02:45 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2009/06/26/safe-refactoring-removing-object-initializer-introducing-builder/</guid>
      <description>I previously wrote about an approach we took to safely remove some duplication and I recently followed a similar mantra to replace an object initializer call which had around 40 properties being setup with a builder to try and make the code a bit easier to understand.
We did have tests checking the values being setup by the object initializer so I was already able to refactor with some degree of safety - it would probably have been possible to just create the builder and build the object from that and then delete the old code and replace it with the new but I&amp;rsquo;ve caused myself too many problems from doing that before that I decided to try a more incremental approach.</description>
    </item>
    
  </channel>
</rss>