<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asciidoc on Mark Needham</title>
    <link>http://mneedham.github.io/tag/asciidoc/</link>
    <description>Recent content in Asciidoc on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Mar 2018 21:57:14 +0000</lastBuildDate>
    
	<atom:link href="http://mneedham.github.io/tag/asciidoc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Running asciidoctor-pdf on TeamCity</title>
      <link>http://mneedham.github.io/2018/03/13/running-asciidoctor-pdf-teamcity/</link>
      <pubDate>Tue, 13 Mar 2018 21:57:14 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2018/03/13/running-asciidoctor-pdf-teamcity/</guid>
      <description>I&#39;ve been using asciidoctor-pdf to generate PDF and while I was initially running the tool locally I eventually decided to setup a build on TeamCity.  It was a bit trickier than I expected, mostly because I&#39;m not that familiar with deploying Ruby applications, but I thought I&#39;d capture what I&#39;ve done for future me.  I have the following Gemfile that installs asciidoctor-pdf and its dependencies: Gemfile
source &#39;https://rubygems.</description>
    </item>
    
    <item>
      <title>Asciidoctor: Creating a macro</title>
      <link>http://mneedham.github.io/2018/02/19/asciidoctor-creating-macro/</link>
      <pubDate>Mon, 19 Feb 2018 20:51:31 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2018/02/19/asciidoctor-creating-macro/</guid>
      <description>I&#39;ve been writing the TWIN4j blog for almost a year now and during that time I&#39;ve written a few different asciidoc macros to avoid repetition.  The most recent one I wrote does the formatting around the Featured Community Member of the Week. I call it like this from the asciidoc, passing in the name of the person and a link to an image: featured::https://s3.amazonaws.com/dev.assets.neo4j.com/wp-content/uploads/20180202004247/this-week-in-neo4j-3-february-2018.jpg[name=&amp;quot;Suellen Stringer-Hye&amp;quot;]   The code for the macro has two parts.</description>
    </item>
    
    <item>
      <title>Asciidoc to Asciidoc: Exploding includes</title>
      <link>http://mneedham.github.io/2018/01/23/asciidoc-asciidoc-exploding-includes/</link>
      <pubDate>Tue, 23 Jan 2018 21:11:49 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2018/01/23/asciidoc-asciidoc-exploding-includes/</guid>
      <description>One of my favourite features in AsciiDoc is the ability to include other files, but when using lots of includes is that it becomes difficult to read the whole document unless you convert it to one of the supported backends. $ asciidoctor --help Usage: asciidoctor [OPTION]... FILE... Translate the AsciiDoc source FILE or FILE(s) into the backend output format (e.g., HTML 5, DocBook 4.5, etc.) By default, the output is written to a file with the basename of the source file and the appropriate extension.</description>
    </item>
    
  </channel>
</rss>