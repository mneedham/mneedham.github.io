<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hibernate on Mark Needham</title>
    <link>http://mneedham.github.io/category/hibernate/</link>
    <description>Recent content in Hibernate on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Jun 2010 06:45:11 +0000</lastBuildDate>
    
	<atom:link href="http://mneedham.github.io/category/hibernate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NHibernate 2nd level cache: Doing it wrong?</title>
      <link>http://mneedham.github.io/2010/06/29/nhibernate-2nd-level-cache-doing-it-wrong/</link>
      <pubDate>Tue, 29 Jun 2010 06:45:11 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2010/06/29/nhibernate-2nd-level-cache-doing-it-wrong/</guid>
      <description>I wrote a couple of weeks ago about how we&amp;rsquo;d been trying to make use of the NHibernate 2nd level cache and we were able to cache our data by following the various posts that I listed.
Unfortunately when we ran some performance tests we found that the performance of the application was significantly worse than when we just wrote our own &amp;lsquo;cache&amp;rsquo; - an object which had a dictionary containing the reference data items we&amp;rsquo;d previously tried to lookup and the appropriate values.</description>
    </item>
    
    <item>
      <title>Fluent NHibernate and the 2nd level cache</title>
      <link>http://mneedham.github.io/2010/06/16/fluent-nhibernate-and-the-2nd-level-cache/</link>
      <pubDate>Wed, 16 Jun 2010 00:07:43 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2010/06/16/fluent-nhibernate-and-the-2nd-level-cache/</guid>
      <description>We&amp;rsquo;ve been trying to cache some objects using NHibernate&amp;rsquo;s second level cache which always proves to be a trickier task than I remember it being the previous time!
We&amp;rsquo;re storing some reference data in the database and then using LINQ to NHibernate to query for the specific row that we want based on some user entered criteria.
We can cache that query by calling &amp;lsquo;SetCacheable&amp;rsquo; on the &amp;lsquo;QueryOptions&amp;rsquo; property of our query:</description>
    </item>
    
    <item>
      <title>Fluent NHibernate: Seeing the mapping files generated</title>
      <link>http://mneedham.github.io/2010/06/15/fluent-nhibernate-seeing-the-mapping-files-generated/</link>
      <pubDate>Tue, 15 Jun 2010 23:15:30 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2010/06/15/fluent-nhibernate-seeing-the-mapping-files-generated/</guid>
      <description>We&amp;rsquo;ve been fiddling around with Fluent NHibernate a bit over the last couple of days and one of the things that we wanted to do was output the NHibernate mapping files being generated so we could see if they were as expected.
I couldn&amp;rsquo;t figure out how to do it but thanks to the help of James Gregory, Andrew Bullock and Matthew Erbs on twitter this is the code that you need in order to do that:</description>
    </item>
    
    <item>
      <title>Functional collectional parameters: Some thoughts</title>
      <link>http://mneedham.github.io/2010/01/20/functional-collectional-parameters-some-thoughts/</link>
      <pubDate>Wed, 20 Jan 2010 22:45:55 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2010/01/20/functional-collectional-parameters-some-thoughts/</guid>
      <description>I&amp;rsquo;ve been reading through a bit of Steve Freeman and Nat Pryce&amp;rsquo;s &amp;lsquo;Growing Object Oriented Software guided by tests&amp;rsquo; book and I found the following observation in chapter 7 quite interesting:
 When starting a new area of code, we might temporarily suspend our design judgment and just write code without attempting to impose much structure.  It&amp;rsquo;s interesting that they don&amp;rsquo;t try and write perfect code the first time around which is actually something I thought experienced developers did until I came across Uncle Bob&amp;rsquo;s Clean Code book where he suggested something similar.</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Setting up test data</title>
      <link>http://mneedham.github.io/2008/10/30/testing-hibernate-mappings-setting-up-test-data/</link>
      <pubDate>Thu, 30 Oct 2008 23:24:14 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2008/10/30/testing-hibernate-mappings-setting-up-test-data/</guid>
      <description>Continuing with my mini Hibernate mappings series, this post talks about the different ways of setting up the test data for our Hibernate tests.
 Where to test the mappings from? How to test for equality? How to setup the test data?  There are a couple of ways that we can setup data for Hibernate tests.
Insert Hibernate Object This approach involves creating a new object and saving it to the database using the save method on the Hibernate session.</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Testing Equality</title>
      <link>http://mneedham.github.io/2008/10/29/testing-hibernate-mappings-testing-equality/</link>
      <pubDate>Wed, 29 Oct 2008 18:03:36 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2008/10/29/testing-hibernate-mappings-testing-equality/</guid>
      <description>I started a mini Hibernate series with my last post where I spoke of there being three main areas to think about when it comes to testing:
 Where to test the mappings from? How to test for equality? How to setup the test data?  Once we have worked out where to test the mappings from, if we have decided to test them through either our repository tests or directly from the Hibernate session then we have some choices to make around how to test for equality.</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Where to test from?</title>
      <link>http://mneedham.github.io/2008/10/27/testing-hibernate-mappings-where-to-test-from/</link>
      <pubDate>Mon, 27 Oct 2008 22:55:15 +0000</pubDate>
      
      <guid>http://mneedham.github.io/2008/10/27/testing-hibernate-mappings-where-to-test-from/</guid>
      <description>I&amp;rsquo;ve had the opportunity to work with Hibernate and it&amp;rsquo;s .NET twin NHibernate on several of my projects and one of the more interesting decisions around its use is working out the best way to test the hibernate mappings that hook together our domain model and the database.
There are three decisions to make around how best to do this:
 Where to test the mappings from? How to test for equality?</description>
    </item>
    
  </channel>
</rss>