<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2008s on Mark Needham</title>
    <link>https://markhneedham.com/blog/2008/</link>
    <description>Recent content in 2008s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Dec 2008 09:04:00 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/2008/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Agile: Some misconceptions</title>
      <link>https://markhneedham.com/blog/2008/12/31/agile-some-misconceptions/</link>
      <pubDate>Wed, 31 Dec 2008 09:04:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/31/agile-some-misconceptions/</guid>
      <description>I came across an interesting article written for Visual Studio Magazineabout agile methodologies where the author makes what I consider to be some misconceptions.
The first is around the level of experience of people working on an agile team:
I wouldn&amp;rsquo;t say I have a high level of experience and I&amp;rsquo;ve been working on agile teams for the past two years, just one data point suggesting that this statement is not actually accurate.</description>
    </item>
    
    <item>
      <title>Oxite: Some Thoughts</title>
      <link>https://markhneedham.com/blog/2008/12/31/oxite-some-thoughts/</link>
      <pubDate>Wed, 31 Dec 2008 01:26:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/31/oxite-some-thoughts/</guid>
      <description>The recently released Oxitecode base has taken a bitofahammeringin the blogosphere for a variety of reasons - the general feeling being that it doesn&amp;rsquo;t really serve as a particularly good example of an ASP.NET MVC application.
I was intrigued to read the code though - you can always learn something by doing so and reading code is one of the ares that I want to improve in.
So in a style similar to that of a Technical Retrospectivethese are my thoughts.</description>
    </item>
    
    <item>
      <title>Talent is Overrated: Book Review</title>
      <link>https://markhneedham.com/blog/2008/12/29/talent-is-overrated-book-review/</link>
      <pubDate>Mon, 29 Dec 2008 20:52:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/29/talent-is-overrated-book-review/</guid>
      <description>Talent is Overratedby Geoff Colvin
I came across this book on Jason Yip&amp;rsquo;s Twitter feedwhile the idea of 10,000 hours to become an expert at any given skill was being discussed. I&amp;rsquo;m reading Outliersas well and the two books seem to complement each other quite well.
I&amp;rsquo;m interested in how we can apply deliberate practice in software development, perhaps using the medium of coding dojos, to become better developers in a more effective manner than just normal practice.</description>
    </item>
    
    <item>
      <title>Internal/External Domain Models</title>
      <link>https://markhneedham.com/blog/2008/12/28/internalexternal-domain-models/</link>
      <pubDate>Sun, 28 Dec 2008 00:19:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/28/internalexternal-domain-models/</guid>
      <description>One of the underlying characteristic of most of the projects I have worked on is that we have defined our own domain model.
On my current project due to the fact that most of the logic in the system is being handled through other services we decided to use WCFmessages as the domain model, meaning that our domain model is being defined externally by the team defining the message contracts.</description>
    </item>
    
    <item>
      <title>C# lambdas: How much context should you need?</title>
      <link>https://markhneedham.com/blog/2008/12/27/c-lambdas-how-much-context-should-you-need/</link>
      <pubDate>Sat, 27 Dec 2008 23:15:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/27/c-lambdas-how-much-context-should-you-need/</guid>
      <description>I had an interesting discussion with a colleague last week about the names that we give to variables inside lambda expressions which got me thinking about the context that we should need to hold when reading code like this.
The particular discussion was around an example like this:
public class Foo { private String bar; private String baz; public Foo(String bar, String baz) { this.bar = bar; this.baz = baz; } public override string ToString() { return string.</description>
    </item>
    
    <item>
      <title>TDD: Does it make you slower?</title>
      <link>https://markhneedham.com/blog/2008/12/25/tdd-does-it-make-you-slower/</link>
      <pubDate>Thu, 25 Dec 2008 09:41:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/25/tdd-does-it-make-you-slower/</guid>
      <description>There have been several times where we have been writing code in a test driven way and it has been suggested that we would be able to go much quicker if we stopped writing the tests and just wrote the code.
I feel this is a very short term way of looking at the problem and it does eventually come back to haunt you.
One of the problems seems to be that in many organisations only the first release of a piece of software is considered, and in this case then yes maybe it would be quicker to develop code in a non TDD fashion.</description>
    </item>
    
    <item>
      <title>Testing First vs Testing Last</title>
      <link>https://markhneedham.com/blog/2008/12/22/testing-first-vs-testing-last/</link>
      <pubDate>Mon, 22 Dec 2008 21:39:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/22/testing-first-vs-testing-last/</guid>
      <description>I recently posted about my experiences of testing lastwhere it became clear to me how important writing the test before the code is.
If we view the tests purely as a way of determining whether or not our code works correctly for a given set of examples then it doesn&amp;rsquo;t make much difference whether we test before or after we have written the code.
If on the other hand we want to get more value out of our testssuch as having them the tests act as documentation, drive the design of our APIs and generally prove useful reading to ourself and others in future then a test first approach is the way to go.</description>
    </item>
    
    <item>
      <title>Try it and see what happens</title>
      <link>https://markhneedham.com/blog/2008/12/21/try-it-and-see-what-happens/</link>
      <pubDate>Sun, 21 Dec 2008 17:43:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/21/try-it-and-see-what-happens/</guid>
      <description>Another of the ideas I have picked up from my leanreadingis that of trying things out without understanding exactly what is happening.
Or as The Toyota Way puts it&amp;hellip;
This is an approach which several colleagues I have worked with recently have been encouraging me to follow.
I am generally quite inquisitive and want to understand why something works as well as actually getting it to work, and while I wouldn&amp;rsquo;t want to encourage not reading the manual, taking this approach is sometimes less effective because it slows down our feedback cycle and, particularly when pairing, can be a less effective way of getting to a solution.</description>
    </item>
    
    <item>
      <title>Lean Software Development: Book Review</title>
      <link>https://markhneedham.com/blog/2008/12/20/lean-software-development-book-review/</link>
      <pubDate>Sat, 20 Dec 2008 17:29:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/20/lean-software-development-book-review/</guid>
      <description>Lean Software Developmentby Mary and Tom Poppendieck
I&amp;rsquo;m keen to learn how the ideas from The Toyota Waycan be applied to software development and as far as I know this is the first book which addressed this, hence the reason for me reading it.
I am keen to see how the authors suggest introducing some of these ideas in Implementing Lean Software Development.</description>
    </item>
    
    <item>
      <title>TDD: Mock expectations in Setup</title>
      <link>https://markhneedham.com/blog/2008/12/19/tdd-mock-expectations-in-setup/</link>
      <pubDate>Fri, 19 Dec 2008 20:57:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/19/tdd-mock-expectations-in-setup/</guid>
      <description>One of the ideas that I mentioned in a recent post about what I consider to be a good unit testwas the ideas that we shouldn&amp;rsquo;t necessarily consider the DRY(Don&amp;rsquo;t Repeat Yourself) principle to be our number one driver.
I consider putting mock expectations in the setup methods of our tests to be one of those occasions where we shouldn&amp;rsquo;t obey this principle and I thought this would be fairly unanimously agreed upon but putting the question to the Twittersphereled to mixedopinions.</description>
    </item>
    
    <item>
      <title>Testing: What is a defect?</title>
      <link>https://markhneedham.com/blog/2008/12/18/testing-what-is-a-defect/</link>
      <pubDate>Thu, 18 Dec 2008 22:34:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/18/testing-what-is-a-defect/</guid>
      <description>One of the key ideas that I have learnt from my readings of The Toyota Wayand Taaichi Ohno&amp;rsquo;s Workplace Managementis that we should strive not to pass defects through the system to the next process, which you should consider to be your customer.
As a developer the next process for each story is the testing phase where the testers will (amongst other things) run through the acceptance criteria and then do some exploratory testing for scenarios which weren&amp;rsquo;t explicitly part of the acceptance criteria.</description>
    </item>
    
    <item>
      <title>Functional Collection Parameters in C#</title>
      <link>https://markhneedham.com/blog/2008/12/17/functional-collection-parameters-in-c/</link>
      <pubDate>Wed, 17 Dec 2008 22:13:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/17/functional-collection-parameters-in-c/</guid>
      <description>While talking through my understanding of the Select method which can be applied to collections in C# with a colleague, it became clear that C# doesn&amp;rsquo;t seem to use the same names for these type of operations as are used in the world of functional programming.
Coincidentally on the same day I came across Bill Six&amp;rsquo;s post about using functional collection parameters in Ruby, so I thought I&amp;rsquo;d see what the equivalent operations are in C#.</description>
    </item>
    
    <item>
      <title>Pair Programming: What works for me</title>
      <link>https://markhneedham.com/blog/2008/12/17/pair-programming-what-works-for-me/</link>
      <pubDate>Wed, 17 Dec 2008 22:09:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/17/pair-programming-what-works-for-me/</guid>
      <description>My colleague Chris Johnston recently posted about his experiences with pair programming, eventually ending up asking for other people&amp;rsquo;s experiences in doing so.
Severalofmy colleagueshave replied citing some of their best practices and I have previously posted about what I think makes pair programming more effectiveso for this post I thought I&amp;rsquo;d try and also identify the approaches that make pair programming work for me.
Knowing your IDE and its&amp;rsquo; shortcuts, taking lots of small steps, using TDD, ensuring that both people get keyboard time, keeping a list of tiny tasks, and so on are all ways that we can work more effectively as a pair.</description>
    </item>
    
    <item>
      <title>C#&#39;s Lambda ForEach: Only on Lists?</title>
      <link>https://markhneedham.com/blog/2008/12/15/cs-lamba-foreach-only-on-lists/</link>
      <pubDate>Mon, 15 Dec 2008 23:52:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/15/cs-lamba-foreach-only-on-lists/</guid>
      <description>One of my favourite things introduced into C# recently is the new ForEachmethod which can be applied to (apparently only!) lists.
Last week we had a situation where we wanted to make use of the ForEach method on an IDictionary which we were using to store a collection of Seleniumclients.
IDictionary&amp;lt;string, ISelenium&amp;gt; seleniumClients = new Dictionary&amp;lt;string, ISelenium&amp;gt;(); We wanted to write a piece of code to exit all of the clients when our tests had completed.</description>
    </item>
    
    <item>
      <title>Environment matters a lot</title>
      <link>https://markhneedham.com/blog/2008/12/15/environment-matters-a-lot/</link>
      <pubDate>Mon, 15 Dec 2008 22:02:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/15/environment-matters-a-lot/</guid>
      <description>One of the discussions we had at the Alt.NETconference back in September was around how important the environment that you work in is to your self improvement as a software developer and it came up again in a discussion with some colleagues.
I posted previously about my software development journey so farbut to add to that one of the most important things for me about working at ThoughtWorks is the environment that it has provided me to improve myself as a software developer.</description>
    </item>
    
    <item>
      <title>JUnit Theories: First Thoughts</title>
      <link>https://markhneedham.com/blog/2008/12/12/junit-theories-first-thoughts/</link>
      <pubDate>Fri, 12 Dec 2008 00:34:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/12/junit-theories-first-thoughts/</guid>
      <description>One of my favourite additions to JUnit 4.4was the @Theory annotation which allows us to write parameterised tests rather than having to recreate the same test multiple times with different data values or creating one test and iterating through our own collection of data values.
Previously, as far as I&amp;rsquo;m aware, it was only possible to parameterise tests by using the TestNGlibrary which has some nice ideas around grouping tests but had horrible reporting the last time I used it.</description>
    </item>
    
    <item>
      <title>Code for positive data values not negative</title>
      <link>https://markhneedham.com/blog/2008/12/11/code-for-positive-data-values-not-negative/</link>
      <pubDate>Thu, 11 Dec 2008 06:48:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/11/code-for-positive-data-values-not-negative/</guid>
      <description>While reading Pat Kua&amp;rsquo;s latest post about how coding a certain way can help you avoid certain classes of bugsI was reminded of a technique taught to me by a colleague with regards to writing functions/methods.
The idea is that it is more effective to code for positive data values rather than trying to work out all the possible negative combinations, since there are likely to be cases which we hadn&amp;rsquo;t considered if we do the latter.</description>
    </item>
    
    <item>
      <title>TDD: One test at a time</title>
      <link>https://markhneedham.com/blog/2008/12/09/tdd-one-test-at-a-time/</link>
      <pubDate>Tue, 09 Dec 2008 22:07:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/09/tdd-one-test-at-a-time/</guid>
      <description>My colleague Sarah Taraporewalla has written a series of posts recently about her experienceswith TDDand introducing it at her current client.
While I agreed with the majority of the posts, one thing I found interesting was that in the conversation with a TDDerthere were two tests being worked on at the same time (at least as far as I understand from the example).
This means that there will be two tests failing if we run our test suite, something which I try to avoid wherever possible.</description>
    </item>
    
    <item>
      <title>Javascript: Creating quick feedback loops</title>
      <link>https://markhneedham.com/blog/2008/12/09/javascript-creating-quick-feedback-loops/</link>
      <pubDate>Tue, 09 Dec 2008 21:13:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/09/javascript-creating-quick-feedback-loops/</guid>
      <description>I&amp;rsquo;ve been working quite a lot with Javascript and in particular jQueryrecently and since I haven&amp;rsquo;t done much in this area before all the tips and tricks are new to me.
One thing which is always useful no matter the programming language is to use it in a way that you can get rapid feedback on what you are doing.
Fortunately there are quite a few tools that allow us to do this with Javascript:</description>
    </item>
    
    <item>
      <title>Taiichi Ohno&#39;s Workplace Management: Book Review</title>
      <link>https://markhneedham.com/blog/2008/12/09/taiichi-ohnos-workplace-management-book-review/</link>
      <pubDate>Tue, 09 Dec 2008 00:14:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/09/taiichi-ohnos-workplace-management-book-review/</guid>
      <description>Taiichi Ohno&amp;rsquo;s Workplace Managementby Taiichi Ohno
Having completed The Toyota Way a few weeks ago I was speaking with Jasonabout what books were good to read next - he recommended this one and The Toyota Way Fieldbook.
I struggled to see a connection to software development with a lot of what I read, but there were certainly words of wisdom that we can apply to continuously improve our ability to deliver projects.</description>
    </item>
    
    <item>
      <title>Twitter as a learning tool</title>
      <link>https://markhneedham.com/blog/2008/12/07/twitter-as-a-learning-tool/</link>
      <pubDate>Sun, 07 Dec 2008 22:30:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/07/twitter-as-a-learning-tool/</guid>
      <description>About 8 or 9 months ago I remember having a conversation with a colleague where I asked him where he had got his almost encyclopedic knowledge of all things software development.
His reply at the time was that he read a lot of blogs and that this was where he had picked up a lot of the information.
While subscribing to different blogs remains a useful way of learning about different aspects of software development, I think Twitteris now becoming a very useful complementary tool to use alongside the RSS reader.</description>
    </item>
    
    <item>
      <title>Learning cycles</title>
      <link>https://markhneedham.com/blog/2008/12/07/learning-cycles/</link>
      <pubDate>Sun, 07 Dec 2008 11:40:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/07/learning-cycles/</guid>
      <description>I&amp;rsquo;ve noticed a recurring trend in the way that I learn new concepts which doesn&amp;rsquo;t seem to fit exactly into any of the models of learning that I have come across so far.
It seems to me to be a learning cycle which goes something like this:
The two areas I have noticed this have both been related to concepts about writing clean code.
When I first started writing code I couldn&amp;rsquo;t tell the difference between testable and untestable code.</description>
    </item>
    
    <item>
      <title>Dave Thomas on Managing Lean and Agile In Large Software Development</title>
      <link>https://markhneedham.com/blog/2008/12/05/dave-thomas-on-managing-lean-and-agile-in-large-software-development/</link>
      <pubDate>Fri, 05 Dec 2008 00:00:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/05/dave-thomas-on-managing-lean-and-agile-in-large-software-development/</guid>
      <description>No coding dojo update this week as Dave Thomas was in the ThoughtWorks Sydney office to talk about Managing Lean and Agile in Large Software Development.
It was actually a talk to the Geek Girls Sydneygroup but I sneaked in to hear his other talk after listening to the cloud computing onelast week.
It was a much toned down presentation compared to the cloud computing one although still amusing in places.</description>
    </item>
    
    <item>
      <title>What makes a good unit test?</title>
      <link>https://markhneedham.com/blog/2008/12/04/what-make-a-good-unit-test/</link>
      <pubDate>Thu, 04 Dec 2008 00:31:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/04/what-make-a-good-unit-test/</guid>
      <description>Following on from my post around the definition of a unit test, a recent discussion on the Test Driven Development mailing listled me to question what my own approach is for writing unit tests.
To self quote from my previous post:
Quite simple in theory but as I have learnt (and am still learning) the hard way, much harder to do in practice. Breaking that down further what does it actually mean?</description>
    </item>
    
    <item>
      <title>jQuery Validation &amp; Firefox Refresh Behaviour</title>
      <link>https://markhneedham.com/blog/2008/12/02/jquery-validation-firefox-refresh-behaviour/</link>
      <pubDate>Tue, 02 Dec 2008 22:54:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/02/jquery-validation-firefox-refresh-behaviour/</guid>
      <description>We&amp;rsquo;ve been working quite a bit with jQueryand cross browser compatibility and one of the interesting differences we came across today was the behaviour of Firefox and Internet Explorer when it comes to refreshing a page.
When you press refresh in Internet Explorer the page gets refreshed to the state that it was in when you first loaded the URL, meaning that the state of the data in forms is returned to its original state.</description>
    </item>
    
    <item>
      <title>What are your personal practices?</title>
      <link>https://markhneedham.com/blog/2008/12/02/what-are-your-personal-practices/</link>
      <pubDate>Tue, 02 Dec 2008 21:18:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/02/what-are-your-personal-practices/</guid>
      <description>I&amp;rsquo;ve been reviewing Apprenticeship Patternsover the last week or so and one of the cool ideas I came across is that of creating a Personal Practices Map.
The idea is that you draw up a list of your 10 most important practices for coding and design and draw out any relationships between them.
This is mine as of now:
I wouldn&amp;rsquo;t say I follow all of these all the time, but they are the practices that I try to follow whenever possible.</description>
    </item>
    
    <item>
      <title>TDD: If it&#39;s hard to test reflect on your approach</title>
      <link>https://markhneedham.com/blog/2008/11/30/tdd-if-its-hard-to-test-reflect-on-your-approach/</link>
      <pubDate>Sun, 30 Nov 2008 18:42:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/30/tdd-if-its-hard-to-test-reflect-on-your-approach/</guid>
      <description>Chad Myers gets it spot on in his recent post about not testing private methods- private methods are private because they should be inaccessible from outside the class and their functionality should be tested via one of the public methods that calls them.
I&amp;rsquo;ve found that when a piece of code seems really difficult to test without exposing a private method then we&amp;rsquo;re probably trying to test that functionality from the wrong place.</description>
    </item>
    
    <item>
      <title>Coding Dojo #4: Roman Numerals</title>
      <link>https://markhneedham.com/blog/2008/11/30/coding-dojo-4-roman-numerals/</link>
      <pubDate>Sun, 30 Nov 2008 17:58:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/30/coding-dojo-4-roman-numerals/</guid>
      <description>We ran our 4th coding dojo on Thursday night, attempting to solve the Roman Numerals problemfrom the TDD Problems website.
We ran with the Randoriapproach again with between 4-6 participants taking part. We coded for about an hour and a half.
The pair coding were sat at the front of the room this time in an attempt to keep the focus on the code, a problem identified last week.</description>
    </item>
    
    <item>
      <title>Html.RadioButton setting all values to selected value workaround</title>
      <link>https://markhneedham.com/blog/2008/11/28/htmlradiobutton-setting-all-values-to-selected-value-workaround/</link>
      <pubDate>Fri, 28 Nov 2008 21:32:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/28/htmlradiobutton-setting-all-values-to-selected-value-workaround/</guid>
      <description>While working with the Html.RadioButton() UI helper for ASP.NET MVC we came across an interesting problem whereby when you submitted the form, all the values for that particular group of radio buttons was set to the value of the one that was selected.
For example, given a form like this:
&amp;lt;%= Html.RadioButton(&amp;#34;option1&amp;#34;, true) %&amp;gt;Yes &amp;lt;%= Html.RadioButton(&amp;#34;option2&amp;#34;, false)%&amp;gt;No When we first load the page, this is the HTML it generated:
&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;option1&amp;#34; value=&amp;#34;true&amp;#34; /&amp;gt;Yes &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;option1&amp;#34; value=&amp;#34;false&amp;#34; /&amp;gt;No When we post the form having selected the &amp;lsquo;Yes&amp;rsquo; option for example, this is what the HTML looks like now:</description>
    </item>
    
    <item>
      <title>TDD: Suffering from testing last</title>
      <link>https://markhneedham.com/blog/2008/11/28/tdd-suffering-from-testing-last/</link>
      <pubDate>Fri, 28 Nov 2008 00:34:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/28/tdd-suffering-from-testing-last/</guid>
      <description>I&amp;rsquo;ve always been a big proponent of writing tests before writing code, and I roll off the standard reasons to people who question this approach:
And so on. Despite knowing all this I recently took a non test driven approach to writing some bits of code - we were keen to get the system working end to end so it seemed a trade off worth making to prove that it was doable.</description>
    </item>
    
    <item>
      <title>Dave Thomas on Cloud Computing</title>
      <link>https://markhneedham.com/blog/2008/11/26/dave-thomas-on-cloud-computing/</link>
      <pubDate>Wed, 26 Nov 2008 20:46:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/26/dave-thomas-on-cloud-computing/</guid>
      <description>I went to see Object Mentor&amp;rsquo;s Dave Thomas give a talk about cloud computing on Tuesday evening in a combined meeting of the Sydney Alt.NETuser group and several others.
I&amp;rsquo;d not seen him speak before but several colleagues had seen him at JAOO earlier this year so he came highly recommended.
We started off with a plug for the JAOO Australia 2009conference which will again be in Brisbane and Sydney at the beginning of May.</description>
    </item>
    
    <item>
      <title>Agile/Lean: All or Nothing?</title>
      <link>https://markhneedham.com/blog/2008/11/26/agilelean-all-or-nothing/</link>
      <pubDate>Wed, 26 Nov 2008 06:29:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/26/agilelean-all-or-nothing/</guid>
      <description>While reading The Toyota Wayone of the ideas which stood out for me was the constant mentioning of organisations which picked bits of The Toyota Way, implemented them, achieved some short term gains but then eventually these improvements and went back to the way they were before.
I noticed a similar theme coming out in the seriesofpostsin the last week or so about the decline of agile.
I have worked on several projects over the last couple of years with varying levels of agile being applied.</description>
    </item>
    
    <item>
      <title>Lambda in C#: Conciseness v Readability</title>
      <link>https://markhneedham.com/blog/2008/11/24/c-new-language-features-conciseness-v-readability/</link>
      <pubDate>Mon, 24 Nov 2008 23:41:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/24/c-new-language-features-conciseness-v-readability/</guid>
      <description>One of the things I really disliked when I first came across C# 3.0 code was lambda functions.
At the time I remember speaking to my Tech Leadand expressing the opinion that they were making the code harder to understand and were valuing conciseness over readability.
After a week of reading about the new C# features and understanding how they worked the code was now more readable to me and a lot of the boiler plate code that I had come to expect was no longer necessary.</description>
    </item>
    
    <item>
      <title>Testing Test Code</title>
      <link>https://markhneedham.com/blog/2008/11/23/testing-test-code/</link>
      <pubDate>Sun, 23 Nov 2008 23:21:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/23/testing-test-code/</guid>
      <description>One of the interesting discussions that has come up on several projects I&amp;rsquo;ve worked on is whether or not we should test code that was written purely to help us test production code.
One of the main arguments used against testing test utility code is that it is not production code and therefore perhaps doesn&amp;rsquo;t need to be held to the same standards because it lacks the complexity of production code.</description>
    </item>
    
    <item>
      <title>Agile: A reminder of the benefits of colocation </title>
      <link>https://markhneedham.com/blog/2008/11/22/agile-a-reminder-of-the-benefits-of-colocation/</link>
      <pubDate>Sat, 22 Nov 2008 12:46:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/22/agile-a-reminder-of-the-benefits-of-colocation/</guid>
      <description>Sometimes it&amp;rsquo;s the seemingly small details of the agile/XP approach to software development that make it so much more effective than the traditional approach.
I was reminded of this last week with regards to having co-located teamswith the developers, BAs, QAs and the business people all sitting in close proximity.
I was working on the auto completion function for one of our screens and the QA on the team, who was sitting next to me, asked me if I could look through the acceptance criteria that he was working on.</description>
    </item>
    
    <item>
      <title>Coding Dojo #3: Krypton Factor</title>
      <link>https://markhneedham.com/blog/2008/11/22/coding-dojo-3-krypton-factor/</link>
      <pubDate>Sat, 22 Nov 2008 11:00:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/22/coding-dojo-3-krypton-factor/</guid>
      <description>We ran our 3rd coding dojo on Thursday night, attempting to solve the Krypton Factorproblem from the Online Judge website.
We ran with the Randoriapproach again, exactly the same as last weekbut this time we only had 4 participants for the majority of the coding session.</description>
    </item>
    
    <item>
      <title>Saff Squeeze: First Thoughts</title>
      <link>https://markhneedham.com/blog/2008/11/21/saff-squeeze-first-thoughts/</link>
      <pubDate>Fri, 21 Nov 2008 00:58:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/21/saff-squeeze-first-thoughts/</guid>
      <description>While practicing some coding by doing the Roman number conversionlast weekend I came across an article by Kent Beck which talked of a method he uses to remove the need to use the debuggerto narrow down problems.
He calls the method the &amp;lsquo;Saff Squeeze&amp;rsquo; and the basic idea as I understand it is to write the original failing test and then inline the pieces of code that it calls, adding assertions earlier on in the code until the actual point of failure is found.</description>
    </item>
    
    <item>
      <title>Debugging ASP.NET MVC source code</title>
      <link>https://markhneedham.com/blog/2008/11/19/debugging-aspnet-mvc-source-code/</link>
      <pubDate>Wed, 19 Nov 2008 21:30:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/19/debugging-aspnet-mvc-source-code/</guid>
      <description>We&amp;rsquo;ve been doing some work with the ASP.NET MVC framework this week and one of the things we wanted to be able to do is to debug through the source code to see how it works.
Our initial idea was to bin deploy the ASP.NET MVC assemblieswith the corresponding pdbs. Unfortunately this didn&amp;rsquo;t work and we got a conflict with the assemblies deployed in the GAC:
Compiler Error Message: CS0433: The type &amp;#39;System.</description>
    </item>
    
    <item>
      <title>The Toyota Way: Book Review</title>
      <link>https://markhneedham.com/blog/2008/11/19/the-toyota-way-book-review/</link>
      <pubDate>Wed, 19 Nov 2008 06:53:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/19/the-toyota-way-book-review/</guid>
      <description>The Toyota Wayby Jeffrey Liker
I was initially very skeptical about the value of lean in software development but became intrigued as to its potential value after listening to Jasonchampioning it. Since The Toyota Way is the book where many of the ideas originated from I thought it only made sense for this to be my first port of call to learn about lean.
I was worried that the book wouldn&amp;rsquo;t be that applicable to me as a software developer but I was able to see the parallels between how what we do and what is done in manufacturing have similarities.</description>
    </item>
    
    <item>
      <title>Standups: Pair stand together</title>
      <link>https://markhneedham.com/blog/2008/11/17/standups-pair-stand-together/</link>
      <pubDate>Mon, 17 Nov 2008 22:16:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/17/standups-pair-stand-together/</guid>
      <description>One of the common trends I have noticed in the stand upsof teams which practice pair programming is that very often the first person in the pair describes what they have been working on and what they will be doing today and then when it comes to the other person they say &amp;lsquo;ditto&amp;rsquo;.
After I dittoed one too many times on a project earlier this year it was pointed out to me that this was not a valuable way of contributing to the weekend and that I should describe my view of our progress as it may differ to my pair.</description>
    </item>
    
    <item>
      <title>Agile - Should everyone have to learn all the roles?</title>
      <link>https://markhneedham.com/blog/2008/11/17/agile-should-everyone-have-to-learn-all-the-roles/</link>
      <pubDate>Mon, 17 Nov 2008 00:14:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/17/agile-should-everyone-have-to-learn-all-the-roles/</guid>
      <description>In my final year of university a few years ago when I was applying for jobs I was really keen to join the (then) Reuters Graduate Technology program.
The thing that appealed to me the most was that over the 2 years you were on the graduate program you would have the opportunity to be placed in 4 different roles within the business.	The website gives some examples:
What I really liked about this idea was:</description>
    </item>
    
    <item>
      <title>Build: Red/Green for local build</title>
      <link>https://markhneedham.com/blog/2008/11/15/build-redgreen-for-local-build/</link>
      <pubDate>Sat, 15 Nov 2008 08:26:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/15/build-redgreen-for-local-build/</guid>
      <description>One thing I&amp;rsquo;m learning from reading The Toyota Wayis that visual indicators are a very important part of the Toyota Production System, and certainly my experience working in agile software development is that the same is true there.
We have certainly learnt this lesson with regards to continuous integration- the build is either red or green and it&amp;rsquo;s a very obvious visual indicator of the code base at any moment in time.</description>
    </item>
    
    <item>
      <title>Coding Dojo #2: Bowling Game &amp; Object Calisthenics Continued</title>
      <link>https://markhneedham.com/blog/2008/11/13/coding-dojo-2-bowling-game-object-calisthenics-continued/</link>
      <pubDate>Thu, 13 Nov 2008 22:39:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/13/coding-dojo-2-bowling-game-object-calisthenics-continued/</guid>
      <description>We ran another Coding Dojo on Wednesday night as part of ThoughtWorks Geek Night where we continued working on the Bowling Game problem from last week, keeping the Object Calisthenics approach broadly in mind but not sticking to it as strictly.
This time we followed the Randoriapproach, with a projector beaming the code onto the wall, 2 people pairing on the problem and everyone else watching.
We rotated one of the pair every 7 minutes using the MinutesOS X widget to keep track of time.</description>
    </item>
    
    <item>
      <title>Technical/Code Base Retrospective</title>
      <link>https://markhneedham.com/blog/2008/11/12/technicalcode-base-retrospective/</link>
      <pubDate>Wed, 12 Nov 2008 23:50:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/12/technicalcode-base-retrospective/</guid>
      <description>We decided to run a technical retrospective on our code base yesterday afternoon but apart from one blog poston the subject and a brief mention on Pat Kua&amp;rsquo;s blogI couldn&amp;rsquo;t find much information with regards to how to run one.
We therefore decided to take a fairly similar approach to our weekly retrospectivesin terms of having one column for &#39;Like&#39;and one for &#39;Dislike&#39;. In addition we had columns for &#39;Want To Know More About&#39;and &#39;Patterns&#39;.</description>
    </item>
    
    <item>
      <title>Agile: The Client/User dilemma</title>
      <link>https://markhneedham.com/blog/2008/11/12/agile-the-clientuser-dilemma/</link>
      <pubDate>Wed, 12 Nov 2008 07:22:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/12/agile-the-clientuser-dilemma/</guid>
      <description>While reading Marc&amp;rsquo;s post about the Customer or Clientnaming dilemma I was reminded of another situation I have noticed in software development - the Client/User dilemma.
From my experience of agile projects it tends to be much more likely that we can get easy access to our client than to the users of the system we are writing.
Alistair Cockburn mentions in Crystal Clearthat having an expert user sit with the team can be very useful, but it is not something that I have experienced on all the projects that I have worked on.</description>
    </item>
    
    <item>
      <title>Logging with Pico Container</title>
      <link>https://markhneedham.com/blog/2008/11/11/logging-with-pico-container/</link>
      <pubDate>Tue, 11 Nov 2008 00:08:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/11/logging-with-pico-container/</guid>
      <description>One thing that we&amp;rsquo;ve been working on recently is the logging for our current code base.
Nearly all the objects in our system are being created by Pico Containerso we decided that writing an interceptor that hooked into Pico Container would be the easiest way to intercept and log any exceptions throw from our code.
Our initial Googling led us to the AOP Style Interceptionpage on the Pico website which detailed how we could create a static proxy for a class that we put in the container.</description>
    </item>
    
    <item>
      <title>Agile: Putting the risk up front</title>
      <link>https://markhneedham.com/blog/2008/11/10/agile-putting-the-risk-up-front/</link>
      <pubDate>Mon, 10 Nov 2008 22:44:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/10/agile-putting-the-risk-up-front/</guid>
      <description>The last two projects that I&amp;rsquo;ve worked on I&amp;rsquo;ve been on the project from right near the start, and one thing that&amp;rsquo;s been consistent in both projects is that we&amp;rsquo;ve spent time early on in the project trying to reduce technical risk.
In my most recent project this has involved getting infrastructure in place early on, and in the previous one it involved working on technical spikes for several weeks to prove that what the client was asking for was actually technically possible.</description>
    </item>
    
    <item>
      <title>Debugging 3rd party libraries more effectively</title>
      <link>https://markhneedham.com/blog/2008/11/09/debugging-3rd-party-libraries-more-effectively/</link>
      <pubDate>Sun, 09 Nov 2008 21:55:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/09/debugging-3rd-party-libraries-more-effectively/</guid>
      <description>Debugging 3rd party library code quickly and effectively is one of the skills which most obviously separates Senior and Junior developers from my experience.
From observation over the last couple of years there are some patterns in the approaches which the best debuggers take.
Sometimes it&amp;rsquo;s difficult to understand exactly how to solve a problem without getting more information.
Verbose logging mode is available on the majority of libraries and provides the information showing how everything fits together which is normally enough information to work out how to solve the problem.</description>
    </item>
    
    <item>
      <title>Hamcrest Matchers - Make the error message clear</title>
      <link>https://markhneedham.com/blog/2008/11/08/hamcrest-matchers-make-the-error-message-clear/</link>
      <pubDate>Sat, 08 Nov 2008 02:46:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/08/hamcrest-matchers-make-the-error-message-clear/</guid>
      <description>We have been making good use of Hamcrestmatchers on my current project for making assertions, and have moved almost entirely away from the more traditional JUnit assertEquals approach.
There are several reasons why I find the Hamcrest matcher approach to be more productive - it&amp;rsquo;s more flexible, more expressive and when an assertion fails we have a much better idea about why it has failed than if we use a JUnit assertion for example.</description>
    </item>
    
    <item>
      <title>File system equivalent of commenting code</title>
      <link>https://markhneedham.com/blog/2008/11/06/file-system-equivalent-of-commenting-code/</link>
      <pubDate>Thu, 06 Nov 2008 21:51:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/06/file-system-equivalent-of-commenting-code/</guid>
      <description>Last week I came across what I have decided is the file system equivalent of commenting out code - not deleting directories when we are no longer using them.
The specific situation we ran into was while trying to make some Tomcat configuration changes but everything we changed was having no effect on what we were seeing on the web site.
Eventually we realised that we were actually changing the configuration in the wrong place - we actually had two Tomcat folder lying around.</description>
    </item>
    
    <item>
      <title>Object Calisthenics: First thoughts</title>
      <link>https://markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/</link>
      <pubDate>Thu, 06 Nov 2008 21:30:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/</guid>
      <description>We ran an Object Calisthenics variation of Coding Dojoon Wednesday night as part of ThoughtWorks Geek Night in Sydney.
Object Calisthenics is an idea suggest by Jeff Bay in The ThoughtWorks Anthology, and lists 9 rules to writing better Object Oriented code. For those who haven&amp;rsquo;t seen the book, the 9 rules are:
We decided to try and solve the Bowling Game Problemwhile applying these rules. We coded in Java as this was a language everyone in the room was comfortable with.</description>
    </item>
    
    <item>
      <title>Pair Programming: The Over Eager Driver</title>
      <link>https://markhneedham.com/blog/2008/11/05/pair-programming-the-over-eager-driver/</link>
      <pubDate>Wed, 05 Nov 2008 23:48:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/05/pair-programming-the-over-eager-driver/</guid>
      <description>One of the interesting situations that can arise when pair programming is that one person dominates the driving and their pair can hardly get a look in.
This is not necessarily because they are hogging the keyboard - it is often just the case that they are the stronger technically in the pair and the other person isn&amp;rsquo;t willing to ask for the keyboard.
A big part of the value in pair programming comes from having both people taking turns at driving and navigating from my experience and there are several ideas that I have come across for trying to encourage a more collaborative approach to pair programming.</description>
    </item>
    
    <item>
      <title>Crystal Clear: Book Review</title>
      <link>https://markhneedham.com/blog/2008/11/05/crystal-clear-book-review/</link>
      <pubDate>Wed, 05 Nov 2008 08:01:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/05/crystal-clear-book-review/</guid>
      <description>Crystal Clearby Alistair CockburnThis was a book which had been recommended to me by a colleague a few months ago as one of the best software development books to read, and after hearing Ian Cooperdescribe how his team was implementing some of the ideas at the Alt.NET conferenceI decided I&amp;rsquo;d give it a read.
I have been working in an Agile/XP environment at ThoughtWorks for the last two years so my context coming into the book was around understanding where the overlap with Crystal Clear was, what differences there are and how I can apply these on my projects</description>
    </item>
    
    <item>
      <title>Pair Programming: Benefits of the pair switch mid story</title>
      <link>https://markhneedham.com/blog/2008/11/04/pair-programming-benefits-of-the-pair-switch-mid-story/</link>
      <pubDate>Tue, 04 Nov 2008 00:00:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/04/pair-programming-benefits-of-the-pair-switch-mid-story/</guid>
      <description>On my current project we&amp;rsquo;ve been having some discussions around the frequency with which we rotate pairs, the feeling being that we probably keep the same pairs for a bit too long.
We discussed using techniques such as promiscuous pairing, which takes the idea of pair rotation to an extreme, but have settled on making our rotations more or less daily.
One interesting thing I noticed from some recent pair switching was the immediate benefit we can realise from the pair rotation.</description>
    </item>
    
    <item>
      <title>Pair Programming: Driving quickly</title>
      <link>https://markhneedham.com/blog/2008/11/02/pair-programming-driving-quickly/</link>
      <pubDate>Sun, 02 Nov 2008 22:13:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/02/pair-programming-driving-quickly/</guid>
      <description>In order to experience the full benefits of pair programming it is important to try and reduce the chance of the navigator getting bored and losing focus.
One of the main ways that we can do this is by ensuring that we have a quick turnaround between the driver and navigator, and this can be done by ensuring that when we are driving we are doing so as quickly as possible.</description>
    </item>
    
    <item>
      <title>CSS in Internet Explorer - Some lessons learned</title>
      <link>https://markhneedham.com/blog/2008/11/01/css-in-internet-explorer-some-lessons-learned/</link>
      <pubDate>Sat, 01 Nov 2008 01:24:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/01/css-in-internet-explorer-some-lessons-learned/</guid>
      <description>I&amp;rsquo;ve spent the last few days working with CSS, and in particular trying to make a layout which works perfectly fine in Firefox work properly in Internet Explorer 6.
I&amp;rsquo;m far from an expert when it comes to this but I&amp;rsquo;ve picked up a few lessons from our attempts to get identical layouts in both browsers.
Putting the following code in your style sheet will do this:
* {padding:0;margin:0} _margin: 0 0 2px 0; The other posts go into more detail, but the fix that worked for us involved forcing IE into layout modeby applying a small height to the element that was being hidden:</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Setting up test data</title>
      <link>https://markhneedham.com/blog/2008/10/30/testing-hibernate-mappings-setting-up-test-data/</link>
      <pubDate>Thu, 30 Oct 2008 23:24:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/30/testing-hibernate-mappings-setting-up-test-data/</guid>
      <description>Continuing with my mini Hibernate mappings series, this post talks about the different ways of setting up the test datafor our Hibernate tests.
There are a couple of ways that we can setup data for Hibernate tests.
The benefit of this approach is that our test is pretty clean. It looks like any old unit test where we create an object and then check that what we get back is the same object.</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Testing Equality</title>
      <link>https://markhneedham.com/blog/2008/10/29/testing-hibernate-mappings-testing-equality/</link>
      <pubDate>Wed, 29 Oct 2008 18:03:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/29/testing-hibernate-mappings-testing-equality/</guid>
      <description>I started a mini Hibernate series with my last postwhere I spoke of there being three main areas to think about when it comes to testing:
Once we have worked out where to test the mappings from, if we have decided to test them through either our repository tests or directly from the Hibernate session then we have some choices to make around how to test for equality.
I&amp;rsquo;ve seen this done in several ways:</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Where to test from?</title>
      <link>https://markhneedham.com/blog/2008/10/27/testing-hibernate-mappings-where-to-test-from/</link>
      <pubDate>Mon, 27 Oct 2008 22:55:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/27/testing-hibernate-mappings-where-to-test-from/</guid>
      <description>I&amp;rsquo;ve had the opportunity to work with Hibernateand it&amp;rsquo;s .NET twin NHibernateon several of my projects and one of the more interesting decisions around its use is working out the best way to test the hibernate mappings that hook together our domain model and the database.
There are three decisions to make around how best to do this:
This post will focus on the ways I have seen with regards to choosing where to test the mappings from.</description>
    </item>
    
    <item>
      <title>buildr - using another project&#39;s dependencies</title>
      <link>https://markhneedham.com/blog/2008/10/26/buildr-using-another-projects-dependencies/</link>
      <pubDate>Sun, 26 Oct 2008 20:54:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/26/buildr-using-another-projects-dependencies/</guid>
      <description>Through my continued use of buildron my current project one thing we wanted to do last week was to run our production code tests using some code from the test-utilities project along with its dependencies.
I thought this would be the default behaviour but it wasn&amp;rsquo;t. Looking at the documentationsuggested we could achieve this by calling &amp;lsquo;compile.dependencies&amp;rsquo; on the project, but from what I can tell you still need to explicitly state that you want to use the main test utilities code as well.</description>
    </item>
    
    <item>
      <title>Selenium - Selecting the original window</title>
      <link>https://markhneedham.com/blog/2008/10/25/selenium-selecting-the-original-window/</link>
      <pubDate>Sat, 25 Oct 2008 01:55:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/25/selenium-selecting-the-original-window/</guid>
      <description>I&amp;rsquo;ve not used Seleniummuch in my time - all of my previous projects have been client side applications or service layers - but I&amp;rsquo;ve spent a bit of time getting acquainted with it this week.
While activating some acceptance tests this week I noticed quite a strange error happening if the tests ran in a certain order:
com.thoughtworks.selenium.SeleniumException: ERROR: Current window or frame is closed! at com.thoughtworks.selenium.HttpCommandProcessor.doCommand(HttpCommandProcessor.java:73) at com.thoughtworks.selenium.HttpCommandProcessor.getString(HttpCommandProcessor.java:154) at com.</description>
    </item>
    
    <item>
      <title>Don&#39;t shave the yak, ask &#39;Why are we doing this?&#39;</title>
      <link>https://markhneedham.com/blog/2008/10/25/dont-shave-the-yak-ask-why-are-we-doing-this/</link>
      <pubDate>Sat, 25 Oct 2008 01:34:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/25/dont-shave-the-yak-ask-why-are-we-doing-this/</guid>
      <description>One of the very common pitfalls I make when working on things is to get so engrossed in the technical details of the problem that I completely forget the reason for doing it in the first place.
Over the last week or so I have noticed myself trying to solve some ridiculous problems without considering whether I am solving the right problem in the first place.
To give an example, I was working with Hibernate earlier in the week trying to setup a new mapping between two entities which involved creating a composite key on one of the entities, which led to us having to work out how to do that on the database, then editing our migration script, then trawling Google to work out why our mapping wasn&amp;rsquo;t working, before a colleague overheard our pain and pointed out that we had over complicated matters.</description>
    </item>
    
    <item>
      <title>Keep Java checked exceptions in a bounded context</title>
      <link>https://markhneedham.com/blog/2008/10/23/keep-java-checked-exceptions-in-a-bounded-context/</link>
      <pubDate>Thu, 23 Oct 2008 21:22:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/23/keep-java-checked-exceptions-in-a-bounded-context/</guid>
      <description>One of the features that I dislike in Java compared to C# is checked exceptions.
For me an exception is about a situation which is exceptional, and if we know that there is a possibility of it happening and even have that possibility defined in our code then it doesn&amp;rsquo;t seem all that exceptional to me.
Having said that they do at least provide information which you can&amp;rsquo;t help but notice about what can go wrong when you make a call to a particular method.</description>
    </item>
    
    <item>
      <title>Making experience matter</title>
      <link>https://markhneedham.com/blog/2008/10/23/making-experience-matter/</link>
      <pubDate>Thu, 23 Oct 2008 00:12:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/23/making-experience-matter/</guid>
      <description>I recently came across this postwhich speaks about the desire of recruiters to put candidates into technology specific boxes when it comes to describing their experience.
I guess this desire is backed by humans&amp;rsquo; need to see the patterns and similarities in data and having someone who doesn&amp;rsquo;t quite fit into a generalised box makes it more difficult.
I have worked on projects in Java, C# and a bit of Ruby so I do agree with most of the points with regards to language specialisation and as Jay Fields points out it is actually beneficial to diversify your experienceto improve yourself.</description>
    </item>
    
    <item>
      <title>Tomcat - No caching of RESTlet resources for Firefox</title>
      <link>https://markhneedham.com/blog/2008/10/22/tomcat-no-caching-of-pages-for-firefox/</link>
      <pubDate>Wed, 22 Oct 2008 22:00:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/22/tomcat-no-caching-of-pages-for-firefox/</guid>
      <description>One problem that we&amp;rsquo;ve been trying to solve today is how to make a RESTletresource non cacheable.
The reason for this is that when a user logs out of the system and then hits the back button they shouldn&amp;rsquo;t be able to see that page, but instead should see the login form.
After several hours of trawling Google and trying out various different suggestions we came across the ideaof setting &amp;lsquo;cache-control&amp;rsquo; with the value &amp;lsquo;no-store&amp;rsquo; in the response headers.</description>
    </item>
    
    <item>
      <title>Fearless Change: Book Review</title>
      <link>https://markhneedham.com/blog/2008/10/21/fearless-change-book-review/</link>
      <pubDate>Tue, 21 Oct 2008 23:34:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/21/fearless-change-book-review/</guid>
      <description>Fearless Changeby Mary Lyan Manns and Linda Rising
I came across this book while watching an interview with Linda Rising on InfoQ. She mentioned some ideas from Malcolm Gladwell&amp;rsquo;s The Tipping Pointwhich intrigued me and a strong recommendation from a colleagueensured this book made it onto my reading list.
I am not currently working on a project where I need to instigate a lot of change so I was going slightly against my own principle of only reading books when I need to, but I recalled several times previously when I have tried to introduce what I thought were good ideas and didn&amp;rsquo;t really get anywhere.</description>
    </item>
    
    <item>
      <title>If you use an &#39;if&#39; you deserve to suffer</title>
      <link>https://markhneedham.com/blog/2008/10/21/if-you-use-an-if-you-deserve-to-suffer/</link>
      <pubDate>Tue, 21 Oct 2008 07:19:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/21/if-you-use-an-if-you-deserve-to-suffer/</guid>
      <description>One of the things I dislike the most when coding is writing if statements. and while I don&amp;rsquo;t believe that if should be completely abolished from our toolkit, I think the anti if campaignstarted about a year ago is going along the right lines.
While there is certainly value in using an if statement as a guard blockit usually feels that we have missed an abstraction if we are using it elsewhere.</description>
    </item>
    
    <item>
      <title>Build: Checkout and Go </title>
      <link>https://markhneedham.com/blog/2008/10/19/build-checkout-and-go/</link>
      <pubDate>Sun, 19 Oct 2008 22:49:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/19/build-checkout-and-go/</guid>
      <description>On the previous project I was working on one of the pain points we were having was around setting up developer environments such that you could get the code up and running on a machine as quickly as possible.
I would go to a newly formatted machine ready to set it up for development and run into a cascading list of dependencies I hadn&amp;rsquo;t considered.
SVN wasn&amp;rsquo;t installed, then Ruby, then we had the wrong version of Java and all the while we were wasting time when this process could have been automated.</description>
    </item>
    
    <item>
      <title>Learnings from Code Kata #1</title>
      <link>https://markhneedham.com/blog/2008/10/18/learnings-from-code-kata-1/</link>
      <pubDate>Sat, 18 Oct 2008 19:47:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/18/learnings-from-code-kata-1/</guid>
      <description>I&amp;rsquo;ve been reading My Job Went To Indiaand one of the chapters midway through the second section talks about the value of practicing coding using code katas.
I&amp;rsquo;ve not tried doing these before but I thought it would be an interesting activity to try out.
Code Kata One - Supermarket PricingIt also gave me the chance to play around with git- I put the code I wrote on github- and re-commence my battle with buildr.</description>
    </item>
    
    <item>
      <title>Pair Programming: Pair Flow</title>
      <link>https://markhneedham.com/blog/2008/10/17/pair-programming-pair-flow/</link>
      <pubDate>Fri, 17 Oct 2008 00:18:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/17/pair-programming-pair-flow/</guid>
      <description>In an earlier post about Team ProductivityI stumbled upon the idea that while pair programming there could be such a concept as pair flow.
The term &amp;lsquo;flow&amp;rsquo; is used to describe a situation where you are totally immersed in the work you&amp;rsquo;re doing and where time seems to go by without you even noticing.
This can also happen when pair programming and I think there are some factors which can make it more likely.</description>
    </item>
    
    <item>
      <title>Browsing around the Unix shell more easily</title>
      <link>https://markhneedham.com/blog/2008/10/15/browsing-around-the-unix-shell-more-easily/</link>
      <pubDate>Wed, 15 Oct 2008 22:31:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/15/browsing-around-the-unix-shell-more-easily/</guid>
      <description>Following on from my post about getting the pwd to display on the bash prompt all the timeI have learnt a couple of other tricks to make the shell experience more productive.
Aliasesare the first new concept I came across and several members of my current team and I now have these setup.
We are primarily using them to provide a shortcut command to get to various locations in the file system.</description>
    </item>
    
    <item>
      <title>Java vs .NET: An Overview</title>
      <link>https://markhneedham.com/blog/2008/10/15/java-vs-net-an-overview/</link>
      <pubDate>Wed, 15 Oct 2008 00:09:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/15/java-vs-net-an-overview/</guid>
      <description>A couple of months ago my colleague Mark Thomas posted about working on a C# project after 10 years working in Java, and being someone who has worked on projects in both languages fairly consistently (3 Java projects, 2 .NET projects) over the last two years I thought it would be interesting to do a comparison between the two.
The standard ThoughtWorks joke is that you just need to remember to capitalise the first letter of method names in C# and then you&amp;rsquo;re good to go but I think there&amp;rsquo;s more to it than that.</description>
    </item>
    
    <item>
      <title>Context Driven Learning</title>
      <link>https://markhneedham.com/blog/2008/10/13/context-driven-learning/</link>
      <pubDate>Mon, 13 Oct 2008 20:44:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/13/context-driven-learning/</guid>
      <description>One pattern I&amp;rsquo;ve noticed over the last couple of years with regards to my own learning is that I find it very difficult to learn new things unless I can directly apply what I have learnt to a real life situation.
I feel this was part of the reason I found the way material is taught at universities so difficult to understand - nearly every course I studied was taught on its own without any reference to the others, and rarely did I get to use the ideas I learnt in a practical context.</description>
    </item>
    
    <item>
      <title>Using test guided techniques for spiking</title>
      <link>https://markhneedham.com/blog/2008/10/12/using-test-guided-techniques-for-spiking/</link>
      <pubDate>Sun, 12 Oct 2008 13:49:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/12/using-test-guided-techniques-for-spiking/</guid>
      <description>I think that out of all the Extreme Programming practicesTest Driven Development is the one which I like the best. I feel it provides a structure for development work and helps me to remain focused on what I am trying to achieve rather than writing code which may not necessarily be needed.
However, there are times when it&amp;rsquo;s difficult to use a TDD approach, and Pat Kua suggested earlier this year that if you&amp;rsquo;re using a TDD approach all the time you&amp;rsquo;re doing something wrong.</description>
    </item>
    
    <item>
      <title>What is a unit test?</title>
      <link>https://markhneedham.com/blog/2008/10/10/what-is-a-unit-test/</link>
      <pubDate>Fri, 10 Oct 2008 23:21:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/10/what-is-a-unit-test/</guid>
      <description>One of the questions which came up during the Sydney Alt.NET User Groupmeeting at the start of October was around what a unit test actually is.
I suppose the somewhat naive or simplistic definition is that it is just any test written using an xUnit framework such as NUnitor JUnit. However, integration or acceptance tests are often written using these frameworks so this definition doesn&amp;rsquo;t hold.
While discussing this last week a colleague came up with what I considered to be a very clear yet precise definition.</description>
    </item>
    
    <item>
      <title>Pair Programming: Why would I pair on this?</title>
      <link>https://markhneedham.com/blog/2008/10/09/pair-programming-why-would-i-pair-on-this/</link>
      <pubDate>Thu, 09 Oct 2008 00:38:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/09/pair-programming-why-would-i-pair-on-this/</guid>
      <description>In the comments of my previous post on pairingVivek made the following comment about when we should pair:
On previous projects I have worked on there have been several tasks where it has been suggested that there is little value in pairing. I decided to try and apply Vivek&amp;rsquo;s principle of knowing why we might pair on these tasks to see if there is actually any value in doing so.</description>
    </item>
    
    <item>
      <title>Test Driven Development By Example: Book Review</title>
      <link>https://markhneedham.com/blog/2008/10/07/test-driven-development-by-example-book-review/</link>
      <pubDate>Tue, 07 Oct 2008 23:17:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/07/test-driven-development-by-example-book-review/</guid>
      <description>Test Driven Development by Exampleby Kent BeckI know this book is quite old but I haven&amp;rsquo;t read it before - it&amp;rsquo;s been recommended to me several times but I never got round to reading it, possibly because of my somewhat misguided opinion that seeing as I do TDD nearly every day I shouldn&amp;rsquo;t need to read it.
More by chance than anything else, I was browsing through a friend&amp;rsquo;scopy of the book and came across several gems of information which persuaded me that I should take the time to read the rest of it.</description>
    </item>
    
    <item>
      <title>rspec - Invalid character &#39;\240&#39; in expression</title>
      <link>https://markhneedham.com/blog/2008/10/06/rspec-invalid-character-240-in-expression/</link>
      <pubDate>Mon, 06 Oct 2008 20:48:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/06/rspec-invalid-character-240-in-expression/</guid>
      <description>We have been using rspecon my project for the unit testing of our Ruby code and while running one of the specs last week I ended up getting this somewhat en-cryptic error message:
Invalid character &amp;#39;\240&amp;#39; in expression ... After convincing myself that this error wasn&amp;rsquo;t actually possible it turned out that I had somehow entered an &amp;lsquo;invisible to TextMate&amp;rsquo; character after one of the method definitions - on the editor it just looked like a space.</description>
    </item>
    
    <item>
      <title>Calling shell script from ruby script</title>
      <link>https://markhneedham.com/blog/2008/10/06/calling-shell-script-from-ruby-script/</link>
      <pubDate>Mon, 06 Oct 2008 20:12:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/06/calling-shell-script-from-ruby-script/</guid>
      <description>Damana and I previouslypostedabout our experiences with different Ruby LDAP solutions.
Having settled on Ruby-LDAP(although having read Ola and Steven&amp;rsquo;s comments we will now look at ruby-net-ldap) we then needed to put together the setup, installation and teardown into a ruby script file.
A quick bit of Googling revealed that we could use the Kernel.execmethod to do this.
For example, you could put the following in a ruby script file and it would execute and show you the current directory listing:</description>
    </item>
    
    <item>
      <title>Pragmatic Learning and Thinking: Book Review</title>
      <link>https://markhneedham.com/blog/2008/10/06/pragmatic-learning-and-thinking-book-review/</link>
      <pubDate>Mon, 06 Oct 2008 02:20:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/06/pragmatic-learning-and-thinking-book-review/</guid>
      <description>Pragmatic Learning and Thinkingby Andy HuntI came across this book when reading a post linking lean to the Dreyfus Modelon Dan North&amp;rsquo;s blog.
I have a keen interest in theories of learning and have completed an NLP Practitioner&amp;rsquo;s courseso the ideas described in the book summary immediately appealed to me.
After coming across the concept of Reading Deliberately in Chapter 6 of the book I decided I should give the SQ3Qapproach to reading books its first run out.</description>
    </item>
    
    <item>
      <title>Ruby LDAP Options</title>
      <link>https://markhneedham.com/blog/2008/10/05/ruby-ldap-options/</link>
      <pubDate>Sun, 05 Oct 2008 16:29:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/05/ruby-ldap-options/</guid>
      <description>As I mentioned in an earlier posta colleague and I spent a few days looking at how to connect to an OpenDSLDAP server using Ruby.
We ended up analysing four different solutions for solving the problem.
We had real problems trying to even connect to our OpenDS server using this library. We eventually found out that OpenDS is not actually listed as one of the supported interfaces.
The real benefit of this approach was that the library is written in Ruby meaning that getting permission to install it would be easier.</description>
    </item>
    
    <item>
      <title>Ruby: Ignore header line when parsing CSV file</title>
      <link>https://markhneedham.com/blog/2008/10/04/ruby-ignore-header-line-when-parsing-csv-file/</link>
      <pubDate>Sat, 04 Oct 2008 01:32:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/04/ruby-ignore-header-line-when-parsing-csv-file/</guid>
      <description>As my Ruby journey continues one of the things I wanted to do today was parse a CSV file.
This articleproved to be very useful for teaching the basics but it didn&amp;rsquo;t say how to ignore the header line that the CSV file contained.
The CSV file I was parsing was similar to this:
name, surname, location Mark, Needham, Sydney David, Smith, London I wanted to get the names of people originally to use them in my code.</description>
    </item>
    
    <item>
      <title>It&#39;s not all about the acceptance tests</title>
      <link>https://markhneedham.com/blog/2008/10/03/its-not-all-about-the-acceptance-tests/</link>
      <pubDate>Fri, 03 Oct 2008 01:26:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/03/its-not-all-about-the-acceptance-tests/</guid>
      <description>A fewofmy colleaguesrecently posted their opinions about acceptance tests which tied in nicely with a discussion about acceptance testingthat was had at the Alt.NET conference in London.
For the sake of argument I will assume that when we refer to acceptance tests we are talking about tests at the GUI level which are being automatically driven by a tool, usually Seleniumbut maybe something like Whiteif it is a client side application.</description>
    </item>
    
    <item>
      <title>Ignore file in Svn</title>
      <link>https://markhneedham.com/blog/2008/10/02/ignore-file-in-svn/</link>
      <pubDate>Thu, 02 Oct 2008 21:10:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/02/ignore-file-in-svn/</guid>
      <description>I spent a bit of time this afternoon marveling at the non intuitiveness of working out how to ignore files in Svn.
Normally I&amp;rsquo;d just use Tortoise SVNas it makes it so easy for you but I really wanted to know how to do it from the shell!
After a bit of Googling and conversation with a colleagueI think I have it figured out to some extent.
If you only have one pattern or file that you want to ignore then the following command should do the trick.</description>
    </item>
    
    <item>
      <title>Ruby: Unzipping a file using rubyzip</title>
      <link>https://markhneedham.com/blog/2008/10/02/ruby-unzipping-a-file-using-rubyzip/</link>
      <pubDate>Thu, 02 Oct 2008 00:04:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/02/ruby-unzipping-a-file-using-rubyzip/</guid>
      <description>In the world of Ruby I&amp;rsquo;ve been working on a script which needs to unzip a file and then run an installer which is only available after unpacking it.
We&amp;rsquo;ve been using the rubyzipgem to do so but so far it hasn&amp;rsquo;t felt intuitive to me coming from the Java/C# world.
ZipFileis the class we need to use and at first glance I had thought that it would be possible to just pass the zip file name to the &amp;lsquo;extract&amp;rsquo; method and have it do all the work for me!</description>
    </item>
    
    <item>
      <title>Alt.NET Sydney User Group Meeting #1</title>
      <link>https://markhneedham.com/blog/2008/10/01/altnet-sydney-user-group-meeting-1/</link>
      <pubDate>Wed, 01 Oct 2008 22:09:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/01/altnet-sydney-user-group-meeting-1/</guid>
      <description>James Crispand Richard Banksarranged the first Alt.NET Sydney User Groupmeeting held on Tuesday night at the ThoughtWorks office.
The first thing to say is thanks to James and Richard for getting this setup so quickly - it was less than a month ago that Richard suggested the idea of creating a group on the Alt.NET mailing list.
Richard and James have already written summariesofwhat went onbut I thought I&amp;rsquo;d give some of my thoughts as well.</description>
    </item>
    
    <item>
      <title>TDD without the design</title>
      <link>https://markhneedham.com/blog/2008/10/01/tdd-without-the-design/</link>
      <pubDate>Wed, 01 Oct 2008 00:32:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/01/tdd-without-the-design/</guid>
      <description>Roy Osheroveand severalothershave posted recently about introducing TDD to the &amp;lsquo;masses&amp;rsquo;
As I understand it Roy&amp;rsquo;s idea is to separate the learning of TDD from the learning of good design principles- good design principles in this case being the OOP principles described in Uncle Bob&amp;rsquo;s Agile Software Development Principles, Practices and Practicesor on the Object Mentor website.
I am usually in favour of an approach that breaks a skill down into chunks so that it is easier to learn but in this case I feel that some of the big gains in coding in a TDD way is the decoupled design it encourages, which in my experience is more likely to follow good design principles.</description>
    </item>
    
    <item>
      <title>Connecting to LDAP server using OpenDS in Java</title>
      <link>https://markhneedham.com/blog/2008/09/29/connecting-to-ldap-server-using-opends-in-java/</link>
      <pubDate>Mon, 29 Sep 2008 23:27:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/29/connecting-to-ldap-server-using-opends-in-java/</guid>
      <description>A colleague and I have spent the past couple of days spiking solutions for connecting to LDAP servers from Ruby.
We decided that the easiest way to do this is by using OpenDS, an open source directory service based on LDAP.
One option we came up with for doing this was to make use of the Java libraries for connecting to the LDAP server and then calling through to these from our Ruby code using the Ruby Java Bridge.</description>
    </item>
    
    <item>
      <title>Show pwd all the time</title>
      <link>https://markhneedham.com/blog/2008/09/28/show-pwd-all-the-time/</link>
      <pubDate>Sun, 28 Sep 2008 22:50:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/28/show-pwd-all-the-time/</guid>
      <description>Finally back in the world of the shell last week I was constantly typing &amp;lsquo;pwd&amp;rsquo; to work out where exactly I was in the file system until my colleague pointed out that you can adjust your settings to get this to show up automatically for you on the left hand side of the prompt.
To do this you need to create or edit your .bash_profile file by entering the following command:</description>
    </item>
    
    <item>
      <title>Pair Programming: What do we gain from it?</title>
      <link>https://markhneedham.com/blog/2008/09/28/pair-programming-what-do-we-gain-from-it/</link>
      <pubDate>Sun, 28 Sep 2008 22:19:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/28/pair-programming-what-do-we-gain-from-it/</guid>
      <description>My former colleague Vivek Vaid has an interesting post about parallel-paired programmingwhere he talks about introducing lean concepts into deciding when we should pair to get maximum productivity.
Midway through the post he mentions that the original reason that we starting pairing was for &amp;lsquo;collaborative design&amp;rsquo; which got me thinking whether there are reasons beyond this why we would want to pair.
I have often worked on clients where the value of pair programming has been questioned and it has been suggested that we should only adhere to this practice for tasks where it adds most value.</description>
    </item>
    
    <item>
      <title>Easily misused language features</title>
      <link>https://markhneedham.com/blog/2008/09/25/easily-misused-language-features/</link>
      <pubDate>Thu, 25 Sep 2008 23:18:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/25/easily-misused-language-features/</guid>
      <description>In the comments of my previous post about my bad experiences with Java&amp;rsquo;s import staticmy colleague Carlosand several others pointed out that it is actually a useful feature when used properly.
The code base where I initially came across the feature misused it quite severely but it got me thinking about other language features I have come across which can add great value when used effectively but lead to horrific problems when misused.</description>
    </item>
    
    <item>
      <title>My dislike of Java&#39;s static import</title>
      <link>https://markhneedham.com/blog/2008/09/24/my-dislike-of-javas-static-import/</link>
      <pubDate>Wed, 24 Sep 2008 23:59:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/my-dislike-of-javas-static-import/</guid>
      <description>While playing around with JBehaveI was reminded of my dislike of the import staticfeature which was introduced in Java 1.5.
Using import static allows us to access static members defined in another class without referencing the class name. For example suppose we want to use the following method in our code:
Math.max(1,2); Normally we would need to include the class name (Math) that the static function (max) belongs to. By using the import static we can reference max like so:</description>
    </item>
    
    <item>
      <title>Onshore or Offshore - The concepts are the same?</title>
      <link>https://markhneedham.com/blog/2008/09/24/onshore-or-offshore-the-concepts-are-the-same/</link>
      <pubDate>Wed, 24 Sep 2008 07:08:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/onshore-or-offshore-the-concepts-are-the-same/</guid>
      <description>I&amp;rsquo;ve never worked on a distributed or offshore project before, but intrigued having read about Jay Fields&amp;rsquo; experiencesI attended the &#39;OffShoring: The Current State of Play&#39;Quarterly Technology Briefing held this morning in Sydney to hear the other side of the argument.
The underlying message for me was that a lot of the concepts we apply for onshore projects are equally important for offshore projects.
Forrester&amp;rsquo;s Tim Sheedystarted off by providing some research data on the state of IT offshoring, some reasons he had identified around which type of work should be offshored before closing on some reasons that it might fail if not done correctly.</description>
    </item>
    
    <item>
      <title>Testing with Joda Time</title>
      <link>https://markhneedham.com/blog/2008/09/24/testing-with-joda-time/</link>
      <pubDate>Wed, 24 Sep 2008 05:11:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/testing-with-joda-time/</guid>
      <description>The alternative to dealing with java.util.Date which I wrote about in a previous postis to make use of the Joda Timelibrary. I&amp;rsquo;m led to believe that a lot of the ideas from Joda Time will in fact be in Java 7.
Nevertheless when testing with Joda Time there are times when it would be useful for us to have control over the time our code is using.
Given that, there are two approaches which I have seen to allow us to do this:</description>
    </item>
    
    <item>
      <title>Where are we now? Where do we want to be?</title>
      <link>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</link>
      <pubDate>Sat, 20 Sep 2008 17:32:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</guid>
      <description>Listening to Dan Northspeaking last week I was reminded of one of my favourite NLP[*]techniques for making improvements on projects.
The technique is the TOTE(Test, Operate, Test, Exit) and it is a technique designed to help us get from where we are now to where we want to be via short feedback loops.
On my previous project we had a situation where we needed to build and deploy our application in order to show it to the client in a show case.</description>
    </item>
    
    <item>
      <title>Similarities between Domain Driven Design &amp; Object Oriented Programming</title>
      <link>https://markhneedham.com/blog/2008/09/20/similarities-between-domain-driven-design-object-oriented-programming/</link>
      <pubDate>Sat, 20 Sep 2008 13:12:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/20/similarities-between-domain-driven-design-object-oriented-programming/</guid>
      <description>At the Alt.NET UK Conferencewhich I attendedover the weekend it occurred to me while listening to some of the discussions on Domain Driven Designthat a lot of the ideas in DDD are actually very similar to those being practiced in Object Oriented Programmingand related best practices.
There was quite a bit of discussion in the session about anaemic domain models.
An anaemic domain model is one where a lot of the objects are merely data holders and do not actually have any behaviour inside them.</description>
    </item>
    
    <item>
      <title>Should we always use Domain Model?</title>
      <link>https://markhneedham.com/blog/2008/09/19/should-we-always-use-domain-mode/</link>
      <pubDate>Fri, 19 Sep 2008 08:34:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/19/should-we-always-use-domain-mode/</guid>
      <description>During the discussionabout Domain Driven Design at the Alt.NETconference I felt like the idea of the Rich Domain Model was being represented as the only way to design software but I don&amp;rsquo;t feel that this is the case.
As always in software we never have a silver bulletand there are times when Domain Model is not necessarily the best choice, just as there are times when OOP is not necessarily the best choice.</description>
    </item>
    
    <item>
      <title>Using java.util.Date safely</title>
      <link>https://markhneedham.com/blog/2008/09/18/using-javautildate-safely/</link>
      <pubDate>Thu, 18 Sep 2008 11:01:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/18/using-javautildate-safely/</guid>
      <description>Assuming that you are unable to use Joda Timeon your project, there are some simple ways that I have come across that allow you to not suffer at the hands of java.util.Date.
This means that you can do an operation like the following, for example:
import java.util.Date; import java.util.Calendar; public class DateTest { public static void main(String[] args) { Date aDate = createDate(1, 0, 2008); System.out.println(aDate); aDate.setTime(createDate(1, 0, 2009).getTime()); System.out.println(aDate); } private static Date createDate(int date, int month, int year) { Calendar calendar = Calendar.</description>
    </item>
    
    <item>
      <title>Testing file system operations</title>
      <link>https://markhneedham.com/blog/2008/09/17/testing-file-system-operations/</link>
      <pubDate>Wed, 17 Sep 2008 15:48:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/17/testing-file-system-operations/</guid>
      <description>On my previous project one of the areas that we needed to work out how to test was around interaction with the file system.
The decision that we needed to make was whether we should unit test this type of functionality or whether it could just be covered by a functional test.
One of the patterns to use when unit testing things like this is the Gateway pattern. To quote Martin Fowler&amp;rsquo;s Patterns of Enterprise Application Architecture</description>
    </item>
    
    <item>
      <title>Team Productivity vs Individual Productivity</title>
      <link>https://markhneedham.com/blog/2008/09/16/team-productivity-vs-individual-productivity/</link>
      <pubDate>Tue, 16 Sep 2008 16:41:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/16/team-productivity-vs-individual-productivity/</guid>
      <description>I&amp;rsquo;ve been reading Neal Ford&amp;rsquo;s The Productive Programmer(my review) which is a book all about improving your productivity as an individual developer.
It got me thinking that there are also ways that we can make teams more productive so that they are actually teams and not just a group of individuals who happen to work with each other.
I&amp;rsquo;ve had the opportunity of working under some great TechLeadswho have helped create an environment where teams can perform to their maximum.</description>
    </item>
    
    <item>
      <title>What makes a good developer?</title>
      <link>https://markhneedham.com/blog/2008/09/16/what-make-a-good-developer/</link>
      <pubDate>Tue, 16 Sep 2008 10:07:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/16/what-make-a-good-developer/</guid>
      <description>Early last year I became very curious about what it was that made the best developers in the industry so good at what they do.
Jay Fields points out some things that he believes indicate that a developer is good at the end of this postbut a former colleague and I tried to come up with a list of areas that any Developer needed to be skilled in to justifiably consider themselves good.</description>
    </item>
    
    <item>
      <title>Clean Code: Book Review</title>
      <link>https://markhneedham.com/blog/2008/09/15/clean-code-book-review/</link>
      <pubDate>Mon, 15 Sep 2008 10:52:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/15/clean-code-book-review/</guid>
      <description>I first heard of Uncle Bob a couple of years ago in a conversation with Obie Fernandezand having previously read his Agile Principles, Patterns and Practices in C#book, when my colleague Alexandre Martinscame back from JAOO Sydneyraving about a talk on &amp;lsquo;Clean Code&amp;rsquo; he&amp;rsquo;d seen I knew I had to buy this book when it came out.
In a good trend which I&amp;rsquo;ve noticed in a lot of Martin Fowler books, Uncle Bob lays out in the opening chapter how he thinks the book can best be read.</description>
    </item>
    
    <item>
      <title>Alt.NET UK Conference 2.0</title>
      <link>https://markhneedham.com/blog/2008/09/14/altnet-uk-conference-20/</link>
      <pubDate>Sun, 14 Sep 2008 16:28:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/14/altnet-uk-conference-20/</guid>
      <description>I spent most of yesterday at the 2nd Alt.NET UKconference at Conway Hall in London.
First of all kudos to Ian Cooper, Alan Deanand Ben Hallfor arranging it. There seemed to be a lot more people around than for the one in February which no doubt took a lot of arranging.
It was again run using the open spacesformat and we started with an interesting discussion on what Alt.NET actually is.</description>
    </item>
    
    <item>
      <title>Configurable Builds: One configuration file per machine</title>
      <link>https://markhneedham.com/blog/2008/09/13/configurable-builds-one-configuration-file-per-machine/</link>
      <pubDate>Sat, 13 Sep 2008 03:54:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/13/configurable-builds-one-configuration-file-per-machine/</guid>
      <description>I&amp;rsquo;ve covered some of the ways that I&amp;rsquo;ve seen for making builds configurable in previous posts:
One which I haven&amp;rsquo;t covered which my colleagues Gil Peetersand Jim Barritthave pointed out is having a build with one configuration file for each machine.
Again the setup is fairly similar to one configuration per user or environment. Using Nant we would have the following near the top of the build file:
&amp;lt;property name=&amp;#34;machine.name&amp;#34; value=&amp;#34;${environment::get-machine-name()}&amp;#34; /&amp;gt; &amp;lt;include buildfile=&amp;#34;${trunk.</description>
    </item>
    
    <item>
      <title>The Productive Programmer: Book Review</title>
      <link>https://markhneedham.com/blog/2008/09/05/the-productive-programmer-book-review/</link>
      <pubDate>Fri, 05 Sep 2008 00:05:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/05/the-productive-programmer-book-review/</guid>
      <description>I first came across this book when I was browsing Andy Hunt&amp;rsquo;s Pragmatic Thinking and Learning: Refactor Your Wetwareon Amazon. It showed up as one of the related books.
I had expected it to be a more theoretical book than it actually is. It is full of really useful command line tips and ways to use system tools and IDEs more effectively. It only took until page 3 for me to learn something from this book - a short cut for navigating Firefox tabs which I now use all the time.</description>
    </item>
    
    <item>
      <title>BDD style unit test names</title>
      <link>https://markhneedham.com/blog/2008/09/04/bdd-style-unit-test-names/</link>
      <pubDate>Thu, 04 Sep 2008 00:05:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/04/bdd-style-unit-test-names/</guid>
      <description>A coupleofmy colleagues have been posting about how to name your unit tests based on this original postby Jay Fields.
I think that test names are useful, especially when written in a BDDstyle expressing what a test is supposed to be doing.
For example, in a C# NUnit test we might see the following as a test name:
[Test] public void ShouldDoSomething() { // Code testing that we&amp;#39;re doing something } I write all my tests like this and I&amp;rsquo;m often asked what the point of the &amp;lsquo;Should&amp;rsquo; is, why not just name it &amp;lsquo;DoSomething&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>The Wisdom of Crowds and groupthink in Agile Software Development</title>
      <link>https://markhneedham.com/blog/2008/09/03/the-wisdom-of-crowds-and-groupthink-in-agile-software-development/</link>
      <pubDate>Wed, 03 Sep 2008 15:17:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/03/the-wisdom-of-crowds-and-groupthink-in-agile-software-development/</guid>
      <description>Gojko Adzicposted a summaryof a talk James Surowiecki gave at Agile 2008and it got me thinking how we use the Wisdom of Crowdsin Agile projects.
One of the most interesting things I learnt from the book is that when you bring together a diverse group of people, their output will probably be better than any one expert. Gojko points out this example that was used at Agile 2008:
There are a couple of areas of agile where I have seen how The Wisdom of Crowds can become groupthinkif we&amp;rsquo;re not careful:</description>
    </item>
    
    <item>
      <title>Configurable Builds: Overriding properties</title>
      <link>https://markhneedham.com/blog/2008/09/02/configurable-builds-overriding-properties/</link>
      <pubDate>Tue, 02 Sep 2008 14:49:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/02/configurable-builds-overriding-properties/</guid>
      <description>Sometimes when configuring our build for flexibility we don&amp;rsquo;t need to spend the time required to create one build configuration per useror one build configuration per environment.
In these cases we can just override properties when we call Nant from the command line.
One recent example where I made use of this was where we had one configuration file with properties in but wanted to override a couple of them when we ran the continuous integration build.</description>
    </item>
    
    <item>
      <title>Configurable Builds: One configuration file per user</title>
      <link>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-user/</link>
      <pubDate>Tue, 02 Sep 2008 13:53:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-user/</guid>
      <description>Following on from my first postabout making builds configurable, the second way of doing this that I have seen is to have one configuration build file per user.
This approach is more useful where there are different configurations needed on each developer machine. For example, if the databases being used for development are on a remote server then each developer machine would be assigned a database with a different name.</description>
    </item>
    
    <item>
      <title>Configurable Builds: One configuration file per environment</title>
      <link>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-environment/</link>
      <pubDate>Tue, 02 Sep 2008 01:50:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-environment/</guid>
      <description>One of the most important things when coding build files is to try and make them as configurable as possible.
At the very least on an agile project there will be a need for two different configurations - one for developer machines and one for continuous integration.
On my last two .NET projects we have setup our Nantbuild to take in a parameter which indicates which build configuration should be used.</description>
    </item>
    
    <item>
      <title>My Software Development journey so far</title>
      <link>https://markhneedham.com/blog/2008/09/01/my-software-development-journey-so-far/</link>
      <pubDate>Mon, 01 Sep 2008 01:01:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/01/my-software-development-journey-so-far/</guid>
      <description>While reading some of the rough drafts of Apprenticeship Patternsonline I started thinking about the stages I have gone through on my Software Development journey so far.
I have worked in the industry for just over 3 years; 1 year at Reed Businessand 2 years at ThoughtWorks. Over that time my thoughts, opinions and ways of doing things have changed, and no doubt these will continue to evolve as I learn more and more.</description>
    </item>
    
    <item>
      <title>Perils of estimation</title>
      <link>https://markhneedham.com/blog/2008/08/31/perils-of-estimation/</link>
      <pubDate>Sun, 31 Aug 2008 00:24:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/31/perils-of-estimation/</guid>
      <description>I had my first opportunity to participate in release plan estimation over the last couple of weeks. I&amp;rsquo;ve done estimation before but never at such a high level.
When doing this it appeared clear that there were two situations that we were trying to avoid:
Under estimating is where we predict that the amount of time taken to complete a piece of work will be less than it actually is.</description>
    </item>
    
    <item>
      <title>scp Nant Task - &#39;scp&#39; failed to start. The system cannot find the file specified</title>
      <link>https://markhneedham.com/blog/2008/08/30/scp-nant-task-scp-failed-to-start-the-system-cannot-find-the-file-specified/</link>
      <pubDate>Sat, 30 Aug 2008 16:30:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/30/scp-nant-task-scp-failed-to-start-the-system-cannot-find-the-file-specified/</guid>
      <description>I was trying to make use of the Nant Contribscp taskearlier and was getting an error message which at the time seemed a bit strange (now of course having solve the problem it is obvious!)
This was the task I was running:
&amp;lt;scp file=&amp;#34;someFile.txt&amp;#34; server=&amp;#34;some.secure-server.com&amp;#34; /&amp;gt; This was the error:
&amp;#39;scp&amp;#39; failed to start. The system cannot find the file specified I ran it in debug mode to try and see what was going on and got this stack trace:</description>
    </item>
    
    <item>
      <title>Getting a strongly typed collection using LINQ to Xml</title>
      <link>https://markhneedham.com/blog/2008/08/30/getting-a-strongly-typed-collection-using-linq-to-xml/</link>
      <pubDate>Sat, 30 Aug 2008 03:03:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/30/getting-a-strongly-typed-collection-using-linq-to-xml/</guid>
      <description>I mentioned earlierthat I have been playing around with LINQ to Xml for parsing a Visual Studio csproj file.
While having namespace issues I decided to try and parse a simpler Xml file to try and work out what I was doing wrong.
Given this fragment of Xml:
&amp;lt;Node&amp;gt; &amp;lt;InnerNode&amp;gt;mark&amp;lt;/InnerNode&amp;gt; &amp;lt;InnerNode&amp;gt;needham&amp;lt;/InnerNode&amp;gt; &amp;lt;/Node&amp;gt; I wanted to get a collection(IEnumerable) of InnerNode values.
Unfortunately my over enthusiasm to use anonymous typesmeant that I caused myself more problems than I needed to.</description>
    </item>
    
    <item>
      <title>C# Thrift Examples</title>
      <link>https://markhneedham.com/blog/2008/08/29/c-thrift-examples/</link>
      <pubDate>Fri, 29 Aug 2008 01:39:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/29/c-thrift-examples/</guid>
      <description>As I mentioned in my earlier postI have been working with Facebook&amp;rsquo;s Thriftmessaging project.
Unfortunately there are not currently any C# examples of how to use the Data Transfer Objects the Thrift compiler generates for us on the official wiki.
We managed to figure out how to do it by following the Java instructionsand converting them into C# code. Before writing any code we need to import Thrift.dll into our Visual Studio project.</description>
    </item>
    
    <item>
      <title>Thrift as a message definition layer</title>
      <link>https://markhneedham.com/blog/2008/08/29/thrift-as-a-message-definition-layer/</link>
      <pubDate>Fri, 29 Aug 2008 00:42:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/29/thrift-as-a-message-definition-layer/</guid>
      <description>Thriftis a Facebook released open source project for cross language serialisation and RPC communication.
We made use of it for our message definition layer - when it comes to messaging I&amp;rsquo;m a fan of the event based approach so we left the RPC stuffwell alone.
The reason we used Thrift in the first place was because we had a requirement to get interoperability between a Java and .NET application across a message bus and it provided an easy way to do this.</description>
    </item>
    
    <item>
      <title>Querying Xml with LINQ - Don&#39;t forget the namespace</title>
      <link>https://markhneedham.com/blog/2008/08/28/querying-xml-with-linq-dont-forget-the-namespace/</link>
      <pubDate>Thu, 28 Aug 2008 10:15:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/28/querying-xml-with-linq-dont-forget-the-namespace/</guid>
      <description>I&amp;rsquo;ve been working with a colleague on parsing a Visual Studio project file using LINQto effectively create a DOM of the file.
The first thing we tried to do was get a list of all the references from the file. It seemed like a fairly easy problem to solve but for some reason nothing was getting returned:
XDocument projectFile = XDocument.Load(projectFilePath.Path); var references = from itemGroupElement in projectFile.Descendants(&amp;#34;ItemGroup&amp;#34;).First().Elements() select itemGroupElement.Attribute(&amp;#34;Include&amp;#34;).Value; We are selecting all the occurrences of &amp;lsquo;ItemGroup&amp;rsquo;, taking the first occurrence, getting all the elements inside it (i.</description>
    </item>
    
    <item>
      <title>Handling balances in systems</title>
      <link>https://markhneedham.com/blog/2008/08/27/handling-balances-in-systems/</link>
      <pubDate>Wed, 27 Aug 2008 21:47:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/27/handling-balances-in-systems/</guid>
      <description>On one of my previous projects one of the problems that we had to solve was how to handle balances - we were working on a cash service for a financial services company.
The main discussion often centres around how often the balance should be updated. From my experience there are two main ways that we can go about this:
This is perhaps the most obvious approach and the implementation is fairly simple.</description>
    </item>
    
    <item>
      <title>Resharper templates</title>
      <link>https://markhneedham.com/blog/2008/08/27/resharper-templates/</link>
      <pubDate>Wed, 27 Aug 2008 11:58:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/27/resharper-templates/</guid>
      <description>One of the first things that I do when I go onto a project is setup a ReSharpertemplatefor writing tests.
I generally set this up so that when I type &amp;lsquo;should&amp;rsquo; I can press tab and it will automatically create an outline of a test method for me.
Creating a template is as simple as going to &amp;lsquo;ReSharper &amp;gt; Live Templates&amp;rsquo; from Visual Studio.
I have attached several templates that I seem to end up writing over and over again.</description>
    </item>
    
    <item>
      <title>Agile - Should we track more than just development?</title>
      <link>https://markhneedham.com/blog/2008/08/26/agile-should-we-track-more-than-just-development/</link>
      <pubDate>Tue, 26 Aug 2008 23:57:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/26/agile-should-we-track-more-than-just-development/</guid>
      <description>I touched earlieron the transparency of agile and I&amp;rsquo;ve been thinking about some of the ways that we track/report information in agile projects.
In all the projects I&amp;rsquo;ve been involved in the data being tracked almost exclusively referred to development time. One of the advantages of having continuous analysis/development/testing is that we are able to reduce the time spent on the System Integration and User Acceptance Testing phases of the project.</description>
    </item>
    
    <item>
      <title>The transparency of Agile</title>
      <link>https://markhneedham.com/blog/2008/08/26/the-transparency-of-agile/</link>
      <pubDate>Tue, 26 Aug 2008 11:46:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/26/the-transparency-of-agile/</guid>
      <description>One of the key ideas behind agile software development is providing information as early as possible to allow the business to best make decisions.
There are a variety of ways that this is done including the use of burn up charts, estimates of scope and velocity for example. This data is compiled to try and give an accurate idea of how long a project is likely to take so that the business can work out early on whether the value it adds is worth the expected cost.</description>
    </item>
    
    <item>
      <title>NCover Nant Team City Integration</title>
      <link>https://markhneedham.com/blog/2008/08/25/ncover-nant-team-city-integration/</link>
      <pubDate>Mon, 25 Aug 2008 21:29:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/25/ncover-nant-team-city-integration/</guid>
      <description>I&amp;rsquo;ve been spending quite a bit of time setting up NCoverand then integrating it into Team City.
I&amp;rsquo;ve read some posts which cover parts of this process but nothing which covers the end to end process so hopefully my experience can help to fill that void.
&amp;lt;loadtasks assembly=&amp;#34;..\lib\NCoverExplorer.Extras\NCoverExplorer.NAntTasks.dll&amp;#34;/&amp;gt; &amp;lt;exec program=&amp;#34;regsvr32&amp;#34; workingdir=&amp;#34;..\lib\NCover-1.5.8&amp;#34; commandline=&amp;#34;/s coverlib.dll&amp;#34;/&amp;gt; I put this right at the top of the build but I expect it doesn&amp;rsquo;t matter where it goes as long as it&amp;rsquo;s called at some stage before NCover and NCover Explorer are called.</description>
    </item>
    
    <item>
      <title>Encapsulation in build scripts using nant</title>
      <link>https://markhneedham.com/blog/2008/08/21/encapsulation-in-build-scripts-using-nant/</link>
      <pubDate>Thu, 21 Aug 2008 00:40:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/21/encapsulation-in-build-scripts-using-nant/</guid>
      <description>When writing build scripts it&amp;rsquo;s very easy for it to descend into complete Xml hell when you&amp;rsquo;re using a tool like nant.
I wondered previouslywhether it was possible to TDD build files and while this is difficult given the dependency model most build tools follow. That doesn&amp;rsquo;t mean we can&amp;rsquo;t apply other good design principles from the coding world however.
Encapsulationis one of the key principles of OOP and it can be applied in build files too.</description>
    </item>
    
    <item>
      <title>Building in release mode with no pdbs with msbuild</title>
      <link>https://markhneedham.com/blog/2008/08/20/building-in-release-mode-with-no-pdbs-with-msbuild/</link>
      <pubDate>Wed, 20 Aug 2008 18:50:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/20/building-in-release-mode-with-no-pdbs-with-msbuild/</guid>
      <description>I&amp;rsquo;ve been having trouble trying to work out how to build our projects in msbuild in release mode without creating the customary pdbfiles that seem to be created by default.
I tried calling msbuild.exe with the &amp;lsquo;Release&amp;rsquo; configuration:
&amp;#39;C:\WINDOWS\Microsoft.NET\Framework\v3.5\MSBuild.Exe ( Proj.csproj /p:OutputPath=\output\path\ /p:Configuration=Release)&amp;#39; To no avail. It still created the pdb file. Next I tried setting the &amp;lsquo;DebugSymbols&amp;rsquo; property to false:
&amp;#39;C:\WINDOWS\Microsoft.NET\Framework\v3.5\MSBuild.Exe ( Proj.csproj /p:OutputPath=\output\path\ /p:Configuration=Release /p:DebugSymbols=false)&amp;#39; Still it created the file.</description>
    </item>
    
    <item>
      <title>The Information Wall</title>
      <link>https://markhneedham.com/blog/2008/08/20/the-information-wall/</link>
      <pubDate>Wed, 20 Aug 2008 00:22:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/20/the-information-wall/</guid>
      <description>Sometimes the simplest things can provide the greatest value to project teams. We often look for a technical solution to problems where something simpler would achieve the same aim.
The Information Wall is as its name may suggest a place where you can put information that people in the team need to know but which they have not (yet) committed to memory.
Examples of things that you could put on an information wall could be:</description>
    </item>
    
    <item>
      <title>NCover - Requested value &#39;/r&#39; was not found</title>
      <link>https://markhneedham.com/blog/2008/08/19/ncover-requested-value-r-was-not-found/</link>
      <pubDate>Tue, 19 Aug 2008 21:18:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/19/ncover-requested-value-r-was-not-found/</guid>
      <description>I&amp;rsquo;ve been trying to integrate NCoverinto our build and probably making life harder for myself than it needs to be.
The title refers to the error message that I was getting when trying to run the ncover nant taskon version 1.0.1 of NCover earlier today.
[ncover] Starting &amp;#39;C:\Program Files\NCover\ncover-console.exe (//r &amp;#34;\long\path\to\tmp392.tmp.ncoversettings&amp;#34; )&amp;#39; in &amp;#39;C:\my-project\trunk\src&amp;#39; [ncover] Unhandled Exception: System.ArgumentException: Requested value &amp;#39;/r&amp;#39; was not found. [ncover] at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase) [ncover] at NCover.</description>
    </item>
    
    <item>
      <title>From Prototype to Delivery</title>
      <link>https://markhneedham.com/blog/2008/08/18/from-prototype-to-delivery/</link>
      <pubDate>Mon, 18 Aug 2008 22:39:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/18/from-prototype-to-delivery/</guid>
      <description>Projects often reach the interesting point where the prototyping and development phases intersect and there are some interesting decisions to make.
From a development point of view the biggest decision is what to do with the code that has been developed.
When developing prototypesthe focus tends to be on getting something to work quick and dirty. Not a lot of time is put into considering edge cases or error conditions or any of the other niceties that are needed for software to be usable in an enterprise environment.</description>
    </item>
    
    <item>
      <title>Returning from methods</title>
      <link>https://markhneedham.com/blog/2008/08/17/returning-from-methods/</link>
      <pubDate>Sun, 17 Aug 2008 23:05:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/17/returning-from-methods/</guid>
      <description>When pair programmingthere are obviously times when you have different opinions about how things should be done.
One of these is the way that we should return from methods. There seem to be two approaches when it comes to this:
The Guard Blockis the best example of this. It is generally used at the start of methods to stop further execution of the method if the parameters are invalid for example:</description>
    </item>
    
    <item>
      <title>Naming the patterns we use in code</title>
      <link>https://markhneedham.com/blog/2008/08/16/naming-the-patterns-we-use-in-code/</link>
      <pubDate>Sat, 16 Aug 2008 23:58:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/16/naming-the-patterns-we-use-in-code/</guid>
      <description>I&amp;rsquo;ve been playing around with C#&amp;lsquo;s Xml libraries today and in particular the XmlWriterclass.
I wanted to use it to create an Xml document so I called the XmlWriter.Create() method. One of the overloads for this methods takes in a StringBuilder which I initially thought the XmlWriter used to create the Xml document.
In fact it actually writes the Xml Document into this StringBuilder. This is actually possible to deduct from the documentation provided on the Create method but I only glanced at the type needed initially and misunderstood how it worked.</description>
    </item>
    
    <item>
      <title>Null Handling Strategies</title>
      <link>https://markhneedham.com/blog/2008/08/16/null-handling-strategies/</link>
      <pubDate>Sat, 16 Aug 2008 01:03:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/16/null-handling-strategies/</guid>
      <description>I mentioned in an earlier postmy dislike of the passing of null around code, and since then there have been a coupleof postson the subject on the ThoughtWorks blogs.
I had always thought that was a silver bullet for the way that we can handle null objects in our code but it seems from reading other people&amp;rsquo;s opinions and from my own experience that this is not the case (surprise, surprise!</description>
    </item>
    
    <item>
      <title>Getting latest tagged revision in SVN from DOS/Batch script</title>
      <link>https://markhneedham.com/blog/2008/08/16/getting-latest-tagged-revision-in-svn-from-dosbatch-script/</link>
      <pubDate>Sat, 16 Aug 2008 00:10:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/16/getting-latest-tagged-revision-in-svn-from-dosbatch-script/</guid>
      <description>The way we have setup the build on our continuous integration server, Team Cityis configured to create a new tag every time the functional tests past successful on that machine.
We then have a QA and Showcase build that we can run to deploy all the artifacts necessary to launch the application on that machine.
Originally I had just written the batch script to take in the tag of the build which the user could find by looking through repo-browserfor the last tag created.</description>
    </item>
    
    <item>
      <title>First thoughts on using var in C# 3.0 with Resharper</title>
      <link>https://markhneedham.com/blog/2008/08/15/first-thoughts-on-using-var-in-c-30-with-resharper/</link>
      <pubDate>Fri, 15 Aug 2008 08:03:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/15/first-thoughts-on-using-var-in-c-30-with-resharper/</guid>
      <description>One of the first things I noticed when coming into the world of C# 3.0 was the use of the key word &amp;lsquo;var&amp;rsquo; all over our code base.
I had read about it previously and was under the impression that its main use would be when writing code around LINQ or when creating anonymous types.
On getting Resharperto tidy up my code I noticed that just about every variable type declaration had been removed and replaced with var.</description>
    </item>
    
    <item>
      <title>Macros in nant</title>
      <link>https://markhneedham.com/blog/2008/08/14/macros-in-nant/</link>
      <pubDate>Thu, 14 Aug 2008 21:49:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/14/macros-in-nant/</guid>
      <description>One of my favourite features of antis the ability to create macros where you can define common behaviour and then call it from the rest of your build script.
Unfortunately that task doesn&amp;rsquo;t come with nantand it&amp;rsquo;s not available on nant-contribeither.
We were using a very roundabout way to build the various projects in our solution.
Horrendous! Luckily I happened to be emailing back and forth with Bernardoabout Stormwindat the time and he mentioned that there was in facta task.</description>
    </item>
    
    <item>
      <title>msbuild - Use OutputPath instead of OutDir</title>
      <link>https://markhneedham.com/blog/2008/08/14/msbuild-use-outputpath-instead-of-outdir/</link>
      <pubDate>Thu, 14 Aug 2008 19:54:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/14/msbuild-use-outputpath-instead-of-outdir/</guid>
      <description>We&amp;rsquo;ve been using msbuild to build our project files on my current project and a colleagueand I noticed some strange behaviour when trying to set the directory that the output should be built to.
The problem was whenever we tried to set the output directory (using OutDir) to somewhere where there was a space in the directory name it would just fail catastrophically. We spent ages searching for the command line documentation before finding it here.</description>
    </item>
    
    <item>
      <title>Auto complete with tab in DOS</title>
      <link>https://markhneedham.com/blog/2008/08/13/auto-completion-with-tab-in-dos/</link>
      <pubDate>Wed, 13 Aug 2008 23:55:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/13/auto-completion-with-tab-in-dos/</guid>
      <description>It&amp;rsquo;s becoming quite a couple of weeks of learning for me around DOS and I have another tip that I just learnt today.
I always found it really frustrating when using the windows command prompt that I couldn&amp;rsquo;t get Unix style tab auto completion. To navigate my way to a directory I would do the following:
Little did I know that in fact I needed to be using the backslash. The above can now be done in one line using Unix style tabbing auto completion:</description>
    </item>
    
    <item>
      <title>Pair Programming: Junior/Junior pair</title>
      <link>https://markhneedham.com/blog/2008/08/13/pair-programming-juniorjunior-pair/</link>
      <pubDate>Wed, 13 Aug 2008 23:18:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/13/pair-programming-juniorjunior-pair/</guid>
      <description>When it comes to Pair Programming the Junior/Junior pairing is considered the most likely to lead to disaster. The old joke being that if you pair two Junior Developers together then you&amp;rsquo;d better hope you have a revert function on your repository. But is this fair?
Certainly pairing two Junior Developers together means that you automatically lose the value of the experience and mentoring skills that you would get if there was a Senior Developer as part of the pair.</description>
    </item>
    
    <item>
      <title>If Else statements in batch files</title>
      <link>https://markhneedham.com/blog/2008/08/13/if-else-statements-in-batch-files/</link>
      <pubDate>Wed, 13 Aug 2008 22:27:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/13/if-else-statements-in-batch-files/</guid>
      <description>I mentioned in a couple of earlierpoststhat I&amp;rsquo;ve been doing quite a bit of work with batch files and the windows command line, and today I wanted to do an If Else statement in one of my scripts.
I thought it would be relatively simple, but after various searches and having read articles that suggested that there wasn&amp;rsquo;t an ELSE construct in batch land I finally found a forum postwhich explained how to do it.</description>
    </item>
    
    <item>
      <title>Dependency Tasks</title>
      <link>https://markhneedham.com/blog/2008/08/12/dependency-tasks/</link>
      <pubDate>Tue, 12 Aug 2008 23:48:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/12/dependency-tasks/</guid>
      <description>I am a big fan of Pat Kua&amp;rsquo;s tiny tasksand to see my desk would be to believe that there had been an invasion of yellow stickies on the planet.
Pat explains the idea on his website but to summarise; the idea is that given a story, you break it down into the individual tasks that need to be done in order for it to be complete, write each tasks on a sticky and then when that task is finished throw the sticky away.</description>
    </item>
    
    <item>
      <title>Getting the current working directory from DOS or Batch file</title>
      <link>https://markhneedham.com/blog/2008/08/12/getting-the-current-working-directory-from-dos-or-batch-file/</link>
      <pubDate>Tue, 12 Aug 2008 22:37:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/12/getting-the-current-working-directory-from-dos-or-batch-file/</guid>
      <description>In the world of batch files I&amp;rsquo;ve been trying for ages to work out how to get the current/present working directory to make the batch script I&amp;rsquo;m working on a bit more flexible.
In Unix it&amp;rsquo;s easy, just call &amp;lsquo;pwd&amp;rsquo; and you have it. I wasn&amp;rsquo;t expecting something that simple in Windows but it is! A call to &amp;lsquo;cd&amp;rsquo; is all that&amp;rsquo;s needed. If you need to set it in a batch script the following line does the trick:</description>
    </item>
    
    <item>
      <title>Pair Programming: Pairing with a QA</title>
      <link>https://markhneedham.com/blog/2008/08/11/pair-programming-pairing-with-a-qa/</link>
      <pubDate>Mon, 11 Aug 2008 22:10:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/11/pair-programming-pairing-with-a-qa/</guid>
      <description>I&amp;rsquo;ve talked about pair programming in some of my previouspostsas I find the dynamic it creates quite intriguing.
One idea which was suggested around the time I wrote those posts by my project manager at the time was developers pairing with the QA or BA on certain tasks. I didn&amp;rsquo;t get to experience it on that particular project but over the last week I&amp;rsquo;ve been doing quick a bit of build work and for some of that I was pairing with our QA.</description>
    </item>
    
    <item>
      <title>Does generalising specialist mean you can&#39;t be the best?</title>
      <link>https://markhneedham.com/blog/2008/08/11/does-generalising-specialist-mean-you-cant-be-the-best/</link>
      <pubDate>Mon, 11 Aug 2008 05:31:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/11/does-generalising-specialist-mean-you-cant-be-the-best/</guid>
      <description>It&amp;rsquo;s often said that people who are really good at what they do are so good at it because they have narrowed their focus in their area of specialty until they are only doing the thing that they are good at.
To use a football analogy, Manchester United&amp;rsquo;s Cristiano Ronaldo - widely acknowledged as the best footballer in the world at the moment - is absolutely brilliant when he has the ball at his feet, taking on defenders, getting in shots around the opposition penalty area.</description>
    </item>
    
    <item>
      <title>Controlling window position with the win32 API</title>
      <link>https://markhneedham.com/blog/2008/08/10/controlling-window-position-with-the-win32-api/</link>
      <pubDate>Sun, 10 Aug 2008 03:02:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/10/controlling-window-position-with-the-win32-api/</guid>
      <description>We&amp;rsquo;ve been doing a bit of work around controlling the state of the windows of applications launched programmatically.
The problem we were trying to solve is to launch an arbitrary application, move it around the screen and then save its window position on the screen so that next time it&amp;rsquo;s launched it loads in the same position.
There are some win32 APIs designed to do just this, although it took a fair bit of searching and trial and error to work out exactly how to use them.</description>
    </item>
    
    <item>
      <title>Hiring Developers - not just about the code</title>
      <link>https://markhneedham.com/blog/2008/08/10/hiring-developers-not-just-about-the-code/</link>
      <pubDate>Sun, 10 Aug 2008 01:23:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/10/hiring-developers-not-just-about-the-code/</guid>
      <description>It seems programmers are taking a bit of a hammering this week!
Kris Kemper talks about the Net Negative Producing Programmerreferring to a paperlinked to by Jay Fields, concluding that the code submission is very important in helping to distinguish between good and bad candidates.
Now I probably haven&amp;rsquo;t done as many interviews at ThoughtWorks as Kris has but from what I&amp;rsquo;ve seen of the recruitment process it seems to be more focused on ensuring that potential hires culturally fit into the organisation rather than that they write the best code that anyone has ever seen.</description>
    </item>
    
    <item>
      <title>IntelliJ style item tracking in Visual Studio</title>
      <link>https://markhneedham.com/blog/2008/08/09/intellij-style-item-tracking-in-visual-studio/</link>
      <pubDate>Sat, 09 Aug 2008 14:51:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/09/intellij-style-item-tracking-in-visual-studio/</guid>
      <description>One of my favourite features of IntelliJis that it tracks the item that you currently have open on your Solution Explorer.
I thought this wasn&amp;rsquo;t possible in Visual Studio and had resigned myself to trying to remember which project each file was in. Luckily for me a colleague pointed out that it is in fact possible but is just turned off by default.
Tools &amp;gt; Options &amp;gt; Projects and Solutions &amp;gt; Check &amp;lsquo;Track Active Item in Solution Explorer&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Ruby: Parameterising with ActiveResource</title>
      <link>https://markhneedham.com/blog/2008/08/08/ruby-parameterising-with-activeresource/</link>
      <pubDate>Fri, 08 Aug 2008 22:16:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/ruby-parameterising-with-activeresource/</guid>
      <description>We&amp;rsquo;ve been using Ruby/Rails on my current project to create a RESTfulweb service. One of the problems we wanted to solve was making the data queried by this web service configurable from our build.
We started off with the following bit of code (which makes use of the recently added ActiveResourceclass):
Out of interest it has taken me ages to try and find a way to put the Ruby code on here in a readable format.</description>
    </item>
    
    <item>
      <title>Spaces in batch scripts</title>
      <link>https://markhneedham.com/blog/2008/08/08/spaces-in-batch-scripts/</link>
      <pubDate>Fri, 08 Aug 2008 20:10:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/spaces-in-batch-scripts/</guid>
      <description>Since reading The Pragmatic ProgrammerI&amp;rsquo;ve become a bit of an automation junkie and writing batch scripts falls right under that category.
Unfortunately, nearly every single time I write one I forget that Windows really hates it when you have spaces in variable assignments, and I forget how to print out a usage message if the right number of parameters are not passed in.
So as much for me as for everyone else, this is how you do it:</description>
    </item>
    
    <item>
      <title>TeamCity&#39;s strange default build location</title>
      <link>https://markhneedham.com/blog/2008/08/08/teamcitys-strange-default-build-location/</link>
      <pubDate>Fri, 08 Aug 2008 19:52:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/teamcitys-strange-default-build-location/</guid>
      <description>We&amp;rsquo;ve been using TeamCityon my current project and it&amp;rsquo;s proven to be fairly impressive in general.
We&amp;rsquo;re running quite a few different builds which have dependencies on each other and it&amp;rsquo;s been pretty much one click on the web admin tool to get that set up.
One thing that had me really confused is the default location it chooses to build from. The problem is that it seems to change arbitrarily, with the folder name it builds in being calculated from a VSC hash (not sure quite how that&amp;rsquo;s worked out but there we go).</description>
    </item>
    
    <item>
      <title>Keyboard shortcut for running tests with Resharper</title>
      <link>https://markhneedham.com/blog/2008/08/08/keyboard-shortcut-for-running-tests-with-resharper/</link>
      <pubDate>Fri, 08 Aug 2008 19:23:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/keyboard-shortcut-for-running-tests-with-resharper/</guid>
      <description>Having moved back into the world of C#/.NET development after a few months in the Java world I have had the joy of getting to use Resharperagain.
One annoyance that myself and my team have been having over the past few weeks is running unit tests. We always end up going to the Solution Explorer, right click the project and then click &amp;lsquo;Run Unit Tests&amp;rsquo;. There is another way&amp;hellip;
From Visual Studio:</description>
    </item>
    
    <item>
      <title>If they were that rubbish...</title>
      <link>https://markhneedham.com/blog/2008/08/08/if-they-were-that-rubbish/</link>
      <pubDate>Fri, 08 Aug 2008 19:15:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/if-they-were-that-rubbish/</guid>
      <description>Jay Fields certainly seemed to make some wavesin the blogosphere with his recent postabout 50% of the people in business software development needing to find a new profession.
As a consultant I often go onto projects where a significant amount of difficult to understand and often untested code is in place. At times it feels like the people who have written it really don&amp;rsquo;t care about the quality of their work which can be very disheartening.</description>
    </item>
    
    <item>
      <title>Do IDEs encourage bad code?</title>
      <link>https://markhneedham.com/blog/2008/07/27/do-ides-encourage-bad-code/</link>
      <pubDate>Sun, 27 Jul 2008 11:43:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/07/27/do-ides-encourage-bad-code/</guid>
      <description>Although modern day IDEs (Eclipse, IntelliJ, Resharper etc) undoubtedly provide a lot of benefits when writing code, I am starting to wonder if the ease at which they make things possible actually encourages bad habits.
Useful features such as creating and initialising member variables from the definition of a constructor are quickly nullified by the ease at which one is able to create getters/setters/properties for these same member variables. All hopes of encapsulation gone with a few clicks of the mouse.</description>
    </item>
    
    <item>
      <title>Null checks everywhere and airport security</title>
      <link>https://markhneedham.com/blog/2008/07/18/null-checks-everywhere-and-airport-security/</link>
      <pubDate>Fri, 18 Jul 2008 08:32:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/07/18/null-checks-everywhere-and-airport-security/</guid>
      <description>Having just flown half way across the world from Sydney to London I&amp;rsquo;ve been thinking about how airport security is done and noticed a somewhat interesting link to the use of null checks in code.
In Sydney and Dubai airports my baggage and I were scanned only once before I was able to get onto the plane. I wasn&amp;rsquo;t scanned again when I went to the departure gate nor when I got onto the aircraft.</description>
    </item>
    
    <item>
      <title>Pair Programming: The Non Driving Pair</title>
      <link>https://markhneedham.com/blog/2008/02/14/pair-programming-the-non-driving-pair/</link>
      <pubDate>Thu, 14 Feb 2008 01:27:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/14/pair-programming-the-non-driving-pair/</guid>
      <description>One of the intriguing aspects of pair programming for me is that of the non driving person in the pair – what are they supposed to do?!
Obviously there are fairly well known strategies for more interactive pairing, such as Ping Pongand Ball and Board (which is where one person controls the mouse and the other the keyboard), but neither of these strategies suggest what to do when you are not driving</description>
    </item>
    
    <item>
      <title>Feedback: Positive Reinforcement/Change yourself first</title>
      <link>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</link>
      <pubDate>Tue, 12 Feb 2008 00:01:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</guid>
      <description>One of the more interesting concepts used on the NLP coursethat I did last year was the idea of only giving positive feedback to people.
The thinking behind the theory (which I think comes from Robert Dilts, one of the early thinkers behind NLP) is that people know what they are doing wrong and already beat themselves up about it; therefore there is no point you mentioning it as well.</description>
    </item>
    
    <item>
      <title>Pair Programming: Introduction</title>
      <link>https://markhneedham.com/blog/2008/02/10/pair-programming-introduction/</link>
      <pubDate>Sun, 10 Feb 2008 01:47:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/10/pair-programming-introduction/</guid>
      <description>I’ve had the opportunity to have worked with many different people pair programmingwise over the last year or so, and having seen it done in several different ways thought it would be interesting to work through some of my thoughts about this Extreme Programming (XP) originated practice.
First of all it seems to me that pair programming is a technique that is used with a lot more frequency at ThoughtWorks than at any other IT organisation.</description>
    </item>
    
    <item>
      <title>Learning theory first</title>
      <link>https://markhneedham.com/blog/2008/02/09/learning-theory-first/</link>
      <pubDate>Sat, 09 Feb 2008 13:15:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/09/learning-theory-first/</guid>
      <description>I’ve always been the type of person who only gets the motivation to do something if there is some useful practical reason for doing so. It therefore probably doesn’t come as much of a surprise that I hated the majority of my mostly theoretical computer science degree.
I was talking to one of my colleagues last week and came out of the conversation convinced that the desire to know the theory behind concepts is amplified when you actually get to see it in action in a real life system.</description>
    </item>
    
  </channel>
</rss>