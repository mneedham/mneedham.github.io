+++
draft = false
date="2011-11-24 22:25:04"
title="XP Day: Cynefin & Agile (Joseph Pelrine/Steve Freeman)"
tag=['xpday']
category=['XP Day']
+++

Another session that I attended at XP Day was one facilitated by <a href="http://twitter.com/#!/sf105">Steve Freeman</a> and <a href="http://twitter.com/#!/josephpelrine">Joseph Pelrine</a> where we discussed the <a href="http://en.wikipedia.org/wiki/Cynefin">Cynefin model</a>, something that I <a href="http://www.markhneedham.com/blog/2011/05/19/xp-2011-how-complex-is-software/">first came across earlier in the year at XP 2011</a>.

<div style="float:right;">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2011/11/607px-Cynefin_framework_Feb_2011.jpeg" alt="607px Cynefin framework Feb 2011" title="607px-Cynefin_framework_Feb_2011.jpeg" border="0" width="300" height="296" />
</div>

We spent the first part of the session drawing out the model and coming up with some software examples which might fit into each domain.

<ul>
<li><strong>Simple</strong> - when you're going to checkin run the build</li>
<li><strong>Complicated</strong> - certain types of architectural decisions</li>
<li><strong>Complex</strong> - task estimation</li>
<li><strong>Chaos</strong> - startup explosion</li>
</ul>

Steve pointed out that with simple/complicated the important thing to remember is that things on the right hand side are <strong>repeatable</strong> whereas on the other side we could do the same thing again and get a completely different result.

The most interesting part of the discussion for me was when <a href="http://twitter.com/#!/PapaChrisMatts">Chris Matts</a> joined in and suggested that in his experience people generally preferred to be in one of the quadrants more than the others.

He used <a href="http://twitter.com/tastapod">Dan North</a> as his example, suggesting that Dan prefers to be in chaotic situations. 

I think I like being in the complex domain when you don't really know what's going to happen. I find it quite boring when things are predictable.

Traditional project managers would probably prefer to be in the simple/complicated domains because things are a bit more certain over that size.

<a href="http://twitter.com/lizdouglass">Liz</a> and I were discussing afterwards whether that tendency is what tends to lead to people becoming generalists rather than specialists. 

If you were to become a specialist in a subject then it would suggest to me that <strong>a lot of your time would be spent in the complicated domain</strong> honing your skills.

<div style="float:right;">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2011/11/cynefin.gif" alt="Cynefin" title="cynefin.gif" border="0" width="314" height="364" />
</div>


Another discussion was around the desire when building systems to try and move the building of that system, which originally starts off being complex, into the complicated and finally into the simple domain.

<a href="http://twitter.com/#!/natpryce">Nat Pryce</a> pointed out that we can often end up pushing a system back into chaos if we try and force it into the simple domain. 

Pushing something into simple would suggest that anyone would be able to make changes to it without having any specialist/expert skills.

Someone else in the group pointed out that <strong>it's often been thought that we can make the programming of systems something so simple that anyone can do it</strong> but that so far that theory has been proved false.

Overall this was an interesting session for me and it makes it a bit easier to understand some of the things that I see in the projects that I work on. 

<h4>Recommended reading from the session</h4>
<ul>
<li><a href="http://www.amazon.co.uk/Sense-Respond-Journey-Customer-Purpose/dp/140394573X/ref=sr_1_1?ie=UTF8&qid=1322173200&sr=8-1">Sense and Respond</a> by Stephen Parry</li>
<li>Joseph Perline on <a href="http://www.metaprog.com/csot/">Social Complexity & Coaching Self Organising Teams</a></li>
</ul>
