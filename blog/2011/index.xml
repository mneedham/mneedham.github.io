<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2011s on Mark Needham</title>
    <link>https://markhneedham.com/blog/2011/</link>
    <description>Recent content in 2011s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Dec 2011 17:47:47 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/2011/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clojure: Casting to a Java class...or not!</title>
      <link>https://markhneedham.com/blog/2011/12/31/clojure-casting-to-a-java-class-or-not/</link>
      <pubDate>Sat, 31 Dec 2011 17:47:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/31/clojure-casting-to-a-java-class-or-not/</guid>
      <description>I have a bit of Java code for working out the final destination of a URLassuming that there might be one redirect which looks like this:
private String resolveUrl(String url) { try { HttpURLConnection con = (HttpURLConnection) (new URL(url).openConnection()); con.setInstanceFollowRedirects(false); con.connect(); int responseCode = con.getResponseCode(); if (String.valueOf(responseCode).startsWith(&amp;#34;3&amp;#34;)) { return con.getHeaderField(&amp;#34;Location&amp;#34;); } } catch (IOException e) { return url; } return url; } I need to cast to HttpURLConnectionon the first line so that I can make the call to setInstanceFollowRedirectswhich isn&amp;rsquo;t available on URLConnection.</description>
    </item>
    
    <item>
      <title>Yak Shaving: Tracking the yak stack</title>
      <link>https://markhneedham.com/blog/2011/12/31/yak-shaving-tracking-the-yak-stack/</link>
      <pubDate>Sat, 31 Dec 2011 03:54:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/31/yak-shaving-tracking-the-yak-stack/</guid>
      <description>While I&amp;rsquo;ve been learning how to write an android applicationthere&amp;rsquo;s been plenty of opportunities for me to go off shaving yaks, it&amp;rsquo;s pretty much Yakville Central.
Typically I&amp;rsquo;d end up spending hours trying to work out some obscure thing which I didn&amp;rsquo;t really need to know so I wanted to try and avoid that this time.
I started keeping a track of the &amp;lsquo;yak stack&amp;rsquo; which I was currently following and mentally noting exactly where I was up to.</description>
    </item>
    
    <item>
      <title>The Language of Risk</title>
      <link>https://markhneedham.com/blog/2011/12/30/the-language-of-risk/</link>
      <pubDate>Fri, 30 Dec 2011 03:38:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/30/the-language-of-risk/</guid>
      <description>A few weeks ago Chris Matts wrote an interesting blog post &amp;lsquo;the language of risk&amp;rsquo; in which he describes an approach he used to explain the processes his team uses to an auditor.
Because I explained everything we did in terms of risk. When they asked for a “process”, I explained the risk the process was meant to address. I then explained how our different process addressed the risk more effectively.</description>
    </item>
    
    <item>
      <title>Learning Android: Sharing with Twitter/the &#39;share via&#39; dialog</title>
      <link>https://markhneedham.com/blog/2011/12/29/learning-android-sharing-with-twitterthe-share-via-dialog/</link>
      <pubDate>Thu, 29 Dec 2011 22:40:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/29/learning-android-sharing-with-twitterthe-share-via-dialog/</guid>
      <description>One thing I wanted to do in the little application I&amp;rsquo;m working on was send data to other apps on my phone using the &amp;lsquo;share via&amp;rsquo; dialog which I&amp;rsquo;ve seen used on the Twitter app.
In this case I wanted to send a link and its title to twitter and came across a StackOverflow post which explained how to do so.
To keep it simple I added a button to the view and then shared the data via the on click event on that button:</description>
    </item>
    
    <item>
      <title>Reading Code: Know what you&#39;re looking for</title>
      <link>https://markhneedham.com/blog/2011/12/29/reading-code-know-what-youre-looking-for/</link>
      <pubDate>Thu, 29 Dec 2011 02:43:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/29/reading-code-know-what-youre-looking-for/</guid>
      <description>In the last week or so before Christmas I got the chance to spend some time pairing with my colleague Alex Harinwhile trying to understand how an existing application which we were investigating was written.
We knew from watching a demo of the application that the user was able to send some processing off to be done in the background and that they would be emailed once that had happened.</description>
    </item>
    
    <item>
      <title>Learning Android: WebView character encoding</title>
      <link>https://markhneedham.com/blog/2011/12/27/learning-android-webview-character-encoding/</link>
      <pubDate>Tue, 27 Dec 2011 23:53:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/27/learning-android-webview-character-encoding/</guid>
      <description>In my continued attempts to learn how to write an Android application I came across a problem with character encoding when trying to load some text into a WebView.
I was initially trying to write the text to the WebView like this:
WebView webview = new WebView(collection.getContext()); webview.loadData(textWithQuotesIn, &amp;#34;text/html&amp;#34;, &amp;#34;UTF-8&amp;#34;); But ended up with the output in the picture on the left hand side. I tried playing around with the encoding and debugged the application all the way through until it hit the WebView but there didn&amp;rsquo;t seem to be any problem with the text.</description>
    </item>
    
    <item>
      <title>Leiningen: Using goose via a local Maven repository</title>
      <link>https://markhneedham.com/blog/2011/12/27/leiningen-using-goose-via-a-local-maven-repository/</link>
      <pubDate>Tue, 27 Dec 2011 12:48:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/27/leiningen-using-goose-via-a-local-maven-repository/</guid>
      <description>I&amp;rsquo;ve been playing around a little bit with goose- a HTML content/article extractor - originally in Java but later in clojure where I needed to work out how to include goose and all its dependencies via Leiningen.
goose isn&amp;rsquo;t included in a Maven repository so I needed to create a local repository, something which I&amp;rsquo;ve got stuck on in the past.
Luckily Paul Gross has written a cool blog postexplaining how his team got past this problem.</description>
    </item>
    
    <item>
      <title>Learning Android: Deploying application to phone from Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/12/23/learning-android-deploying-application-to-phone-from-mac-os-x/</link>
      <pubDate>Fri, 23 Dec 2011 22:55:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/23/learning-android-deploying-application-to-phone-from-mac-os-x/</guid>
      <description>I&amp;rsquo;ve been playing around a little bit today with writing an Android application and while for the majority of the time I&amp;rsquo;ve been deploying to an emulator I wanted to see what it&amp;rsquo;d look like on my phone.
The developer guide contains all the instructionson how to do this but unfortunately I&amp;rsquo;m blessed with the ability to skim over instructions which meant that my phone wasn&amp;rsquo;t getting picked up by the Android Debug Bridge.</description>
    </item>
    
    <item>
      <title>The supposed black box</title>
      <link>https://markhneedham.com/blog/2011/12/20/the-supposed-black-box/</link>
      <pubDate>Tue, 20 Dec 2011 23:57:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/20/the-supposed-black-box/</guid>
      <description>On a reasonable number of the systems that I&amp;rsquo;ve worked on over the past few years there&amp;rsquo;s been a &amp;lsquo;black box&amp;rsquo; component which the team I&amp;rsquo;ve been on has needed to integrate with.
I&amp;rsquo;ve always found it a little strange that you wouldn&amp;rsquo;t need to/want to know how that part of the system worked or that you could actually believe that it was truly a black box.
If it doesn&amp;rsquo;t work then you have no way of diagnosing the problem - did you do something wrong, was there something wrong inside the black box or was it something else.</description>
    </item>
    
    <item>
      <title>The Lean Startup: Book Review</title>
      <link>https://markhneedham.com/blog/2011/12/18/the-lean-startup-book-review/</link>
      <pubDate>Sun, 18 Dec 2011 21:00:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/18/the-lean-startup-book-review/</guid>
      <description>I&amp;rsquo;d heard about The Lean Startupfor a long time before I actually read it, mainly from following the &amp;lsquo;Startup Lessons Learned&amp;rsquo; blog, but I didn&amp;rsquo;t get the book until a colleague suggested a meetup to discuss how we might apply the ideas on our projects.
My general learning from the book is that we need to take the idea of creating tight feedback loops, which we&amp;rsquo;ve learnt in the agile/lean worlds, and apply it to product development.</description>
    </item>
    
    <item>
      <title>WebDriver: Getting it to play nicely with Xvfb</title>
      <link>https://markhneedham.com/blog/2011/12/15/webdriver-getting-it-to-play-nicely-with-xvfb/</link>
      <pubDate>Thu, 15 Dec 2011 23:19:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/15/webdriver-getting-it-to-play-nicely-with-xvfb/</guid>
      <description>Another thing we&amp;rsquo;ve been doing with WebDriver is having it run with the FirefoxDriver while redirecting the display output into the Xvfb framebufferso that we can run it on our continuous integration agents which don&amp;rsquo;t have a display attached.
The first thing we needed to do was set the environment property &amp;lsquo;webdriver.firefox.bin&amp;rsquo; to our own script which would point the display to Xvfb before starting Firefox:
import java.lang.System._ lazy val firefoxDriver: FirefoxDriver = { setProperty(&amp;#34;webdriver.</description>
    </item>
    
    <item>
      <title>WebDriver: Getting it to play nicely with jQuery ColorBox</title>
      <link>https://markhneedham.com/blog/2011/12/13/webdriver-getting-it-to-play-nicely-with-jquery-colorbox/</link>
      <pubDate>Tue, 13 Dec 2011 23:31:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/13/webdriver-getting-it-to-play-nicely-with-jquery-colorbox/</guid>
      <description>As I mentioned in an earlier post about removing manual test scenarioswe&amp;rsquo;ve been trying to automate some parts of our application where a user action leads to a jQuery ColorBoxpowered overlay appearing.
With this type of feature there tends to be some sort of animation which accompanies the overlay so we have to wait for an element inside the overlay to become visible on the screen before trying to do any assertions on the overlay.</description>
    </item>
    
    <item>
      <title>The 5 Whys/Root cause analysis - Douglas Squirrel</title>
      <link>https://markhneedham.com/blog/2011/12/10/the-5-whysroot-cause-analysis-douglas-squirrel/</link>
      <pubDate>Sat, 10 Dec 2011 14:11:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/10/the-5-whysroot-cause-analysis-douglas-squirrel/</guid>
      <description>At XP Day I was chatting to Benjamin Mitchellabout the 5 whysexercisesthat we&amp;rsquo;d tried on my team and I suggested that beyond Eric Ries&amp;rsquo; post on the subjectI hadn&amp;rsquo;t come across an article/video which explained how to do it.
Benjamin mentioned that Douglas Squirrel had recently done a talk on this very subject at Skillsmatter and as with most Skillsmatter talks there&amp;rsquo;s a video of the presentation online.
Gojko wrote a post summarising the talk at the timebut I was interested in seeing how a 5 whys facilitated by Douglas would compare to the ones that we&amp;rsquo;d done.</description>
    </item>
    
    <item>
      <title>Continuous Delivery: Removing manual scenarios</title>
      <link>https://markhneedham.com/blog/2011/12/05/continuous-delivery-removing-manual-scenarios/</link>
      <pubDate>Mon, 05 Dec 2011 23:13:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/05/continuous-delivery-removing-manual-scenarios/</guid>
      <description>On the project that I&amp;rsquo;m currently working on we&amp;rsquo;re trying to move to the stage where we&amp;rsquo;d be able to deploy multiple times a week while still having a reasonable degree of confidence that the application still works.
One of the (perhaps obvious) things that we&amp;rsquo;ve had to do as a result of wanting to do this is reduce the number of manual scenariosthat our QAs need to run through.</description>
    </item>
    
    <item>
      <title>XP Day: Visualizing what&#39;s happening on our project</title>
      <link>https://markhneedham.com/blog/2011/11/30/xp-day-visualizing-whats-happening-on-our-project/</link>
      <pubDate>Wed, 30 Nov 2011 02:25:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/30/xp-day-visualizing-whats-happening-on-our-project/</guid>
      <description>Another presentation that I gave at XP Day was one covering some visualisations Liz, Udayand I have created from various data we have about our project, gathered from Git, Go and Mingle.
These were some of the things that I learned from doing the presentation:
As a result it was necessary to scroll up and down/side to side when demonstrating each visualisationso that people could actually see them.
Either I need to work out how to get the resolution of the projector higher or be able to shrink the images to the right size so they&amp;rsquo;d fit more naturally.</description>
    </item>
    
    <item>
      <title>Scala: Our Retrospective of the benefits/drawbacks</title>
      <link>https://markhneedham.com/blog/2011/11/28/scala-our-retrospective-of-the-benefitsdrawbacks/</link>
      <pubDate>Mon, 28 Nov 2011 00:15:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/28/scala-our-retrospective-of-the-benefitsdrawbacks/</guid>
      <description>As the closing part of a Scala Experience ReportLizand I gave at XP Day we detailed a retrospective that we&amp;rsquo;d carried out on the project after 3 months where the team outlined the positives/negatives of working with Scala.
The team members who were there right at the beginning of the project 3 months earlier had come up with what they thought the proposed benefits/drawbacks would be so it was quite interesting to look at our thoughts at both times.</description>
    </item>
    
    <item>
      <title>XP Day: Scala: An Experience Report (Liz Douglass and me)</title>
      <link>https://markhneedham.com/blog/2011/11/24/xp-day-scala-an-experience-report-liz-douglass-and-me/</link>
      <pubDate>Thu, 24 Nov 2011 23:52:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/24/xp-day-scala-an-experience-report-liz-douglass-and-me/</guid>
      <description>At XP Day my colleague Liz Douglassand I presented the following experience report on our last 6 months working together on our project.
We wanted to focus on answering the following questions with our talk:
We covered the testing approach we&amp;rsquo;ve taken, our transition from using Mustacheas our templating language to using Jadeand the different features of the language and how we&amp;rsquo;ve been using/abusing them.
The approach we used while presenting was to cover each topic in chronological ordersuch that we showed how the code had evolved from June until November and the things we&amp;rsquo;d learned over that time.</description>
    </item>
    
    <item>
      <title>XP Day: Cynefin &amp; Agile (Joseph Pelrine/Steve Freeman)</title>
      <link>https://markhneedham.com/blog/2011/11/24/xp-day-cynefin-agile-joseph-pelrinesteve-freeman/</link>
      <pubDate>Thu, 24 Nov 2011 22:25:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/24/xp-day-cynefin-agile-joseph-pelrinesteve-freeman/</guid>
      <description>Another session that I attended at XP Day was one facilitated by Steve Freemanand Joseph Pelrinewhere we discussed the Cynefin model, something that I first came across earlier in the year at XP 2011.
We spent the first part of the session drawing out the model and coming up with some software examples which might fit into each domain.
Steve pointed out that with simple/complicated the important thing to remember is that things on the right hand side are repeatablewhereas on the other side we could do the same thing again and get a completely different result.</description>
    </item>
    
    <item>
      <title>XP Day: Refactoring to functional style (Julian Kelsey/Andrew Parker)</title>
      <link>https://markhneedham.com/blog/2011/11/22/xp-day-refactoring-to-functional-style-julian-kelseyandrew-parker/</link>
      <pubDate>Tue, 22 Nov 2011 00:13:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/22/xp-day-refactoring-to-functional-style-julian-kelseyandrew-parker/</guid>
      <description>I&amp;rsquo;m attending XP Daythis year and the first talk I attended was one by Julian Kelseyand Andrew Parkertitled &amp;lsquo;Refactoring to functional style&amp;rsquo;.
I&amp;rsquo;ve worked on a Scala project for the last 6 months and previously given a coupleof talksabout adopting a functional style of programming in C# so this is a subject area that I find quite interesting.
The talk focused on 5 refactorings that the presenters have identified to help move imperative code to a more functional style:</description>
    </item>
    
    <item>
      <title>Java/Scala: Runtime.exec hanging/in &#39;pipe_w&#39; state</title>
      <link>https://markhneedham.com/blog/2011/11/20/javascala-runtime-exec-hangingin-pipe_w-state/</link>
      <pubDate>Sun, 20 Nov 2011 20:20:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/20/javascala-runtime-exec-hangingin-pipe_w-state/</guid>
      <description>On the system that I&amp;rsquo;m currently working on we have a data ingestion process which needs to take zip files, unzip them and then import their contents into the database.
As a result we delegate from Scala code to the system unzip command like so:
def extract { var command = &amp;#34;unzip %s -d %s&amp;#34; format(&amp;#34;/file/to/unzip.zip&amp;#34;, &amp;#34;/place/to/unzip/to&amp;#34;) var process: Process = null try { process = Runtime.getRuntime.exec(command) val exitCode = process.</description>
    </item>
    
    <item>
      <title>Dr Nic&#39;s &#39;How to stop killing people with your public speeches&#39;</title>
      <link>https://markhneedham.com/blog/2011/11/16/dr-nics-how-to-stop-killing-people-with-your-public-speeches/</link>
      <pubDate>Wed, 16 Nov 2011 22:56:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/16/dr-nics-how-to-stop-killing-people-with-your-public-speeches/</guid>
      <description>I recently came across a really cool blog post by Dr Nic titled &amp;lsquo;How to stop killing people with your public speeches&amp;rsquo; where he talks about the importance of practicing our presentations so that they actually make an impact on our audience.
Towards the end of the post he suggests joining Toastmastersas a useful first step for getting used to speaking to a group of people and as an added bonus you get feedback after each speech you give.</description>
    </item>
    
    <item>
      <title>Scala: scala.xml.SpecialNode: StackOverFlowError</title>
      <link>https://markhneedham.com/blog/2011/11/15/scala-scala-xml-specialnode-stackoverflowerror/</link>
      <pubDate>Tue, 15 Nov 2011 00:26:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/15/scala-scala-xml-specialnode-stackoverflowerror/</guid>
      <description>We have some code in our application where we parse reasonably complex XML structures and then sometimes choose to get rid of certain elements from the structure.
When we wanted to get rid of an element we replaced that element with a SpecialNode:
val emptyNode = new scala.xml.SpecialNode() { def buildString(sb:StringBuilder) = new StringBuilder() def label = null } Unfortunately when you call #text on the node it results in the following exception which we only found out today:</description>
    </item>
    
    <item>
      <title>The 5 whys: Another attempt</title>
      <link>https://markhneedham.com/blog/2011/11/13/the-5-whys-another-attempt/</link>
      <pubDate>Sun, 13 Nov 2011 23:08:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/13/the-5-whys-another-attempt/</guid>
      <description>Towards the end of the week before last and the beginning of last week we&amp;rsquo;d been having quite a few problems with our QA environment to the point where we were unable to deploy anything to it for 3 days.
A few weeks ago I wrote about a 5 whys exercise that we did in a retrospectiveand in our weekly code review we decided to give it a go and see what we could learn.</description>
    </item>
    
    <item>
      <title>fgrep: Searching for a list of identifiers</title>
      <link>https://markhneedham.com/blog/2011/11/10/fgrep-searching-for-a-list-of-identifiers/</link>
      <pubDate>Thu, 10 Nov 2011 23:37:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/10/fgrep-searching-for-a-list-of-identifiers/</guid>
      <description>We had a problem to solve earlier in the week where we wanted to try and find out which files we had ingested into our database based on a unique identifier.
We had a few hundred thousand files to search through to try and find the ones where around 50,000 identifiers were mentioned so that we could re-ingest them.
Running a normal grep for each identifier individually took a ridiculously long time so we needed to find a way to search for all of the identifiers at the same time to speed up the process.</description>
    </item>
    
    <item>
      <title>Scala: Setting default argument for function parameter</title>
      <link>https://markhneedham.com/blog/2011/11/08/scala-setting-default-argument-for-function-parameter/</link>
      <pubDate>Tue, 08 Nov 2011 22:46:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/08/scala-setting-default-argument-for-function-parameter/</guid>
      <description>Yesterday I wrote about a problem we&amp;rsquo;ve been having with trying to work out how to default a function parameter that we have in one of our methods.
Our current version of the code defines the function parameter as implicit which means that if it isn&amp;rsquo;t passed in it defaults to Predef.conforms():
def foo[T](bar: String)(implicit blah:(String =&amp;gt; T)) = { println(blah(bar)); bar } It&amp;rsquo;s not entirely clear just from reading the code where the implicit value is coming from so we want to try and make the code a bit more expressive.</description>
    </item>
    
    <item>
      <title>Scala: Which implicit conversion is being used?</title>
      <link>https://markhneedham.com/blog/2011/11/06/scala-which-implicit-conversion-is-being-used/</link>
      <pubDate>Sun, 06 Nov 2011 21:25:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/06/scala-which-implicit-conversion-is-being-used/</guid>
      <description>Last week my colleague Patcreated a method which had a parameter which he wanted to make optional so that consumers of the API wouldn&amp;rsquo;t have to provide it if they didn&amp;rsquo;t want to.
We ended up making the method take in an implicit value such that the method signature looked a bit like this:
def foo[T](implicit blah:(String =&amp;gt; T)) = { println(blah(&amp;#34;mark&amp;#34;)) &amp;#34;foo&amp;#34; } We can call foo with or without an argument:</description>
    </item>
    
    <item>
      <title>Scala: Option.isDefined as the new null check</title>
      <link>https://markhneedham.com/blog/2011/11/01/scala-option-isdefined-as-the-new-null-check/</link>
      <pubDate>Tue, 01 Nov 2011 00:58:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/01/scala-option-isdefined-as-the-new-null-check/</guid>
      <description>One cool thing about using Scala on my current project is that we don&amp;rsquo;t have nulls anywhere in our code, instead when something may or may not be there we make use of the Option type.
Unfortunately what we&amp;rsquo;ve (heavily contributed by me) ended up with in our code base is repeated use of the isDefinedmethod whenever we want to make a decision depending on whether or not the option is populated.</description>
    </item>
    
    <item>
      <title>Working with external identifiers</title>
      <link>https://markhneedham.com/blog/2011/10/31/working-with-external-identifiers/</link>
      <pubDate>Mon, 31 Oct 2011 22:58:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/31/working-with-external-identifiers/</guid>
      <description>As part of the ingestion process for our application we import XML documents and corresponding PDFs into a database and onto the file system respectively.
Since the user needs to be able to search for documents by the userFacingIdwe reference it by that identifier in the database and the web application.
Each document also has an external identifier and we use this to identify the PDFs on the file system.</description>
    </item>
    
    <item>
      <title>Canonical Identifiers</title>
      <link>https://markhneedham.com/blog/2011/10/30/canonical-identifiers/</link>
      <pubDate>Sun, 30 Oct 2011 22:32:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/30/canonical-identifiers/</guid>
      <description>Duncanand I had an interesting problem recently where we had to make it possible to search within an &amp;lsquo;item&amp;rsquo; to find possible sub items that exist inside it.
The URIfor the item was something like this:
/items/234 Let&amp;rsquo;s say Item 234 contains the following sub items:
We have a search box on the page which allows us to type in the name of a sub item and go the sub item&amp;rsquo;s page if it exists or see an error message if it doesn&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>Gaming the system: Some project examples</title>
      <link>https://markhneedham.com/blog/2011/10/26/gaming-the-system-some-project-examples/</link>
      <pubDate>Wed, 26 Oct 2011 23:55:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/26/gaming-the-system-some-project-examples/</guid>
      <description>Earlier this year Liz Keoghgave a talk at QCon London titled &amp;lsquo;Learning and Perverse Incentives: The Evil Hat&amp;rsquo; where she eventually encouraged people to try and game the systems that they take part in.
Over the last month or so we&amp;rsquo;ve had two different metrics visibly on show and are therefore prime targets for being gamed.
The first metric is one we included on our build radiator which shows how many commits to the git repository each person has for that day.</description>
    </item>
    
    <item>
      <title>Scala: Adding logging around a repository</title>
      <link>https://markhneedham.com/blog/2011/10/25/scala-adding-logging-around-a-repository/</link>
      <pubDate>Tue, 25 Oct 2011 21:19:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/25/scala-adding-logging-around-a-repository/</guid>
      <description>We wanted to add some logging around one of our repositories to track how many times users were trying to do various things on the application and came across a cool blog post explaining how we might be able to do this.
We ended up with the following code:
class BarRepository { def all: Seq[Bar] = Seq() def find(barId:String) : Bar = Bar(&amp;#34;myBar&amp;#34;) } class TrackService(barRepository:BarRepository) { def all : Seq[Bar] = { var bars = barRepository.</description>
    </item>
    
    <item>
      <title>Scala: Creating an Xml element with an optional attribute</title>
      <link>https://markhneedham.com/blog/2011/10/25/scala-creating-an-xml-element-with-an-optional-attribute/</link>
      <pubDate>Tue, 25 Oct 2011 20:38:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/25/scala-creating-an-xml-element-with-an-optional-attribute/</guid>
      <description>We have a lot of Xml in our application and one of the things that we need to do reasonably frequently in our test code is create elements which have optional attributes on them.
Our simple first approach looked like this:
def createElement(attribute: Option[String]) = if(attribute.isDefined) &amp;lt;p bar={attribute.get} /&amp;gt; else &amp;lt;p /&amp;gt; That works but it always seemed like we should be able to do it in a simpler way.</description>
    </item>
    
    <item>
      <title>Retrospective: The 5 whys</title>
      <link>https://markhneedham.com/blog/2011/10/24/retrospective-the-5-whys/</link>
      <pubDate>Mon, 24 Oct 2011 22:53:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/24/retrospective-the-5-whys/</guid>
      <description>Last week my colleague Pat Fornasierran our team&amp;rsquo;s fortnightly retrospective and one of the exercises we did was &amp;lsquo;the 5 whys&amp;rsquo;.
I&amp;rsquo;ve always wanted to see how the 5 why&amp;rsquo;s would pan out but could never see how you could fit it into a normal retrospective.
Pat was able to do this by using the data gathered by an earlier timeline exercise where the team had to plot the main events that had happened over the last 6 months.</description>
    </item>
    
    <item>
      <title>Learning Unix find: Searching in/Excluding certain folders</title>
      <link>https://markhneedham.com/blog/2011/10/21/learning-unix-find-searching-inexcluding-certain-folders/</link>
      <pubDate>Fri, 21 Oct 2011 21:25:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/21/learning-unix-find-searching-inexcluding-certain-folders/</guid>
      <description>I love playing around with commands on the Unix shell but one of the ones that I&amp;rsquo;ve found the most difficult to learn beyond the very basics is find.
I think this is partially because I find the find man page quite difficult to read and partially because it&amp;rsquo;s usually quicker to work out how to solve my problem with a command I already know than to learn another one.</description>
    </item>
    
    <item>
      <title>Getting stuck and agile software teams</title>
      <link>https://markhneedham.com/blog/2011/10/20/getting-stuck-and-agile-software-teams/</link>
      <pubDate>Thu, 20 Oct 2011 22:09:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/20/getting-stuck-and-agile-software-teams/</guid>
      <description>I came across an interesting set of posts by Jeff Wofford where he talks about programmers gettingstuckand it made me think that, despite its faults, agile software development does have some useful practices for stopping us getting stuck for too long.
Many of the examples that Jeff describes sound like yak shavingto me which is part of what makes programming fun but doesn&amp;rsquo;t always correlate to adding value to the product that you&amp;rsquo;re building.</description>
    </item>
    
    <item>
      <title>git: Only pushing some changes from local repository</title>
      <link>https://markhneedham.com/blog/2011/10/20/git-only-pushing-some-changes-from-local-repository/</link>
      <pubDate>Thu, 20 Oct 2011 06:50:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/20/git-only-pushing-some-changes-from-local-repository/</guid>
      <description>Something that we want to do reasonable frequently on my current project is to push some changes which have been committed to our local repository to master but not all of them.
For example we might end up with 3 changes we haven&amp;rsquo;t pushed:
&amp;gt;&amp;gt; ~/github/local$ git status # On branch master # Your branch is ahead of &amp;#39;origin/master&amp;#39; by 3 commits. # nothing to commit (working directory clean) &amp;gt;&amp;gt; ~/github/local$ git hist * bb7b139 Thu, 20 Oct 2011 07:37:11 +0100 | mark: one last time (HEAD, master) [Mark Needham] * 1cef99a Thu, 20 Oct 2011 07:36:35 +0100 | mark:another new line [Mark Needham] * 850e105 Thu, 20 Oct 2011 07:36:01 +0100 | mark: new line [Mark Needham] * 2b25622 Thu, 20 Oct 2011 07:32:43 +0100 | mark: adding file for first time (origin/master) [Mark Needham] And we only want to push the commit with hash 850e105for example.</description>
    </item>
    
    <item>
      <title>Unix: Some useful tools</title>
      <link>https://markhneedham.com/blog/2011/10/17/unix-some-useful-tools/</link>
      <pubDate>Mon, 17 Oct 2011 22:58:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/17/unix-some-useful-tools/</guid>
      <description>On my current project we regularly use a few Unix tools which aren&amp;rsquo;t on the standard installation so I thought I&amp;rsquo;d collate them here so I don&amp;rsquo;t forget about them in the future.
We suspected we&amp;rsquo;d ended up with some rogue characters in a file that we weren&amp;rsquo;t able to detect in our normal text editor recently and wanted to view the byte by byte representation of the file to check it out.</description>
    </item>
    
    <item>
      <title>Bash: Reusing previous commands</title>
      <link>https://markhneedham.com/blog/2011/10/13/bash-reusing-previous-commands/</link>
      <pubDate>Thu, 13 Oct 2011 19:46:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/13/bash-reusing-previous-commands/</guid>
      <description>A lot of the time when I&amp;rsquo;m using the bash shell I want to re-use commands that I&amp;rsquo;ve previously entered and I&amp;rsquo;ve recently learnt some neat ways to do this from my colleagues Tomand Kief.
If we want to list the history of all the commands we&amp;rsquo;ve entered in a shell session then the following command does the trick:
&amp;gt; history ... 761 sudo port search pdfinfo 762 to_ipad andersen-phd-thesis.pdf 763 vi ~/.</description>
    </item>
    
    <item>
      <title>Unix: Getting the page count of a linearized PDF</title>
      <link>https://markhneedham.com/blog/2011/10/09/unix-getting-the-page-count-of-a-linearized-pdf/</link>
      <pubDate>Sun, 09 Oct 2011 11:34:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/09/unix-getting-the-page-count-of-a-linearized-pdf/</guid>
      <description>We were doing some work last week to rasterize a PDF document into a sequence of images and wanted to get a rough idea of how many pages we&amp;rsquo;d be dealing with if we created an image per page.
The PDFs we&amp;rsquo;re dealing with are linearizedsince they&amp;rsquo;re available for viewing on the web:
The ﬁle is valid PDF in all respects, and is compatible with all existing viewers and other PDF applications.</description>
    </item>
    
    <item>
      <title>Git: Getting the history of a deleted file</title>
      <link>https://markhneedham.com/blog/2011/10/04/git-getting-the-history-of-a-deleted-file/</link>
      <pubDate>Tue, 04 Oct 2011 22:33:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/04/git-getting-the-history-of-a-deleted-file/</guid>
      <description>We recently wanted to get the Git history of a file which we knew existed but had now been deleted so we could find out what had happened to it.
Using a simple git logdidn&amp;rsquo;t work:
git log deletedFile.txt fatal: ambiguous argument &amp;#39;deletedFile.txt&amp;#39;: unknown revision or path not in the working tree. We eventually came across Francois Marier&amp;rsquo;s blog postwhich points out that you need to use the following command instead:</description>
    </item>
    
    <item>
      <title>Scala: Replacing a trait with a fake one for testing</title>
      <link>https://markhneedham.com/blog/2011/09/25/scala-replacing-a-trait-with-a-fake-one-for-testing/</link>
      <pubDate>Sun, 25 Sep 2011 10:24:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/25/scala-replacing-a-trait-with-a-fake-one-for-testing/</guid>
      <description>We recently wanted to replace a trait mixed into one of our classes with a fake version to make it easier to test but forgot how exactly to do that!
The class is roughly like this:
trait Foo { def foo : String = &amp;#34;real foo&amp;#34; } class Mark extends Foo {} We originally tried to replace it like this:
trait BrokenFakeFoo { def foo : String = &amp;#34;broken fake foo&amp;#34; } val m = new Mark with BrokenFakeFoo error: overriding method foo in trait Foo of type =&amp;gt; String; method foo in trait BrokenFakeFoo of type =&amp;gt; String needs `override&amp;#39; modifier val m = new Mark with BrokenFakeFoo If mcompiled it would have two versions of foobut it wouldn&amp;rsquo;t know which one to use, hence the error message.</description>
    </item>
    
    <item>
      <title>jQuery: Collecting the results from a collection of asynchronous requests</title>
      <link>https://markhneedham.com/blog/2011/09/25/jquery-collecting-the-results-from-a-collection-of-asynchronous-requests/</link>
      <pubDate>Sun, 25 Sep 2011 09:26:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/25/jquery-collecting-the-results-from-a-collection-of-asynchronous-requests/</guid>
      <description>Lizand I recently spent some time building a pair stair to show how long ago people had paired with each other and one of the things we had to do was make AJAX requests to get the pairing data for each person and then collate it all to build the stair.
The original attempt to do this looked a bit like this:
var people = [&amp;#34;Marc&amp;#34;, &amp;#34;Liz&amp;#34;, &amp;#34;Ken&amp;#34;, &amp;#34;Duncan&amp;#34;, &amp;#34;Uday&amp;#34;, &amp;#34;Mark&amp;#34;, &amp;#34;Charles&amp;#34;]; var grid = []; $.</description>
    </item>
    
    <item>
      <title>Retrospectives: Getting overly focused on actions</title>
      <link>https://markhneedham.com/blog/2011/09/24/retrospectives-getting-overly-focused-on-actions/</link>
      <pubDate>Sat, 24 Sep 2011 06:56:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/24/retrospectives-getting-overly-focused-on-actions/</guid>
      <description>I&amp;rsquo;ve attended a lot of different retrospectives over the last few years and one thing that seems to happen quite frequently is that a problem will be raised and there will become a massive urgency to find an action to match with that problem.
As a result of this we don&amp;rsquo;t tend to go very deeply into working out why that problem happened in the first place and how we can stop it happening in the first place.</description>
    </item>
    
    <item>
      <title>node.js: child_process.exec not returning all results</title>
      <link>https://markhneedham.com/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</link>
      <pubDate>Thu, 22 Sep 2011 19:55:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</guid>
      <description>I&amp;rsquo;ve been playing around with some node.js code to get each of the commits from our git repository but noticed that it didn&amp;rsquo;t seem to be returning me all the results.
I had the following code:
var exec = require(&amp;#39;child_process&amp;#39;).exec; var gitRepository = &amp;#39;/some/local/path&amp;#39;; exec(&amp;#39;cd &amp;#39; + gitRepository + &amp;#39; &amp;amp;&amp;amp; git log --pretty=format:&amp;#34;%H | %ad | %s%d&amp;#34; --date=raw &amp;#39;, function(error, stdout, stderror) { var commits = stdout.split(&amp;#34;\n&amp;#34;); // do some stuff with commits }); We have around 2000 commits in the repository but I was only getting back 1600 of them when I checked the lengthof commits.</description>
    </item>
    
    <item>
      <title>The &#39;window fixing&#39; wall</title>
      <link>https://markhneedham.com/blog/2011/09/20/the-window-fixing-wall/</link>
      <pubDate>Tue, 20 Sep 2011 06:49:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/20/the-window-fixing-wall/</guid>
      <description>On my current project we have a wall where we keep track of &amp;lsquo;window fixing&amp;rsquo; tasks - things that people want to fix in the code base but chose to defer until a later date.
Every now and then we take what&amp;rsquo;s on the wall and prioritise it according to Fabio Pereira&amp;rsquo;s effort/pain matrixso that we know which clean up tasks will provide the greatest value to the team.
While I think it&amp;rsquo;s a nice way of getting a team understanding of technical debt I think it can lead to a couple of problems which come with most attempts at group responsibility for something.</description>
    </item>
    
    <item>
      <title>Scala: for comprehensions with Options</title>
      <link>https://markhneedham.com/blog/2011/09/15/scala-for-comprehensions-with-options/</link>
      <pubDate>Thu, 15 Sep 2011 22:21:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/15/scala-for-comprehensions-with-options/</guid>
      <description>I&amp;rsquo;ve generally avoided using for expressions in Scala because the keyword reminds me of for loops in Java/C# and I want to learn to program in a less imperative way.
After working with my colleague MushtaqI realised that in some cases using for comprehensions can lead to much more readable code.
An interesting use case where this is the case is when we want to create an object from a bunch of parameters that may or may not be set.</description>
    </item>
    
    <item>
      <title>Javascript: Internet Explorer 8 - trim() leads to &#39;Object doesn&#39;t support this property or method&#39; error</title>
      <link>https://markhneedham.com/blog/2011/09/13/javascript-internet-explorer-8-trim-leads-to-object-doesnt-support-this-property-or-method-error/</link>
      <pubDate>Tue, 13 Sep 2011 13:33:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/13/javascript-internet-explorer-8-trim-leads-to-object-doesnt-support-this-property-or-method-error/</guid>
      <description>We make use of the Javascript trim()function in our application but didn&amp;rsquo;t realise that it isn&amp;rsquo;t implemented by Internet Explorer until version 9.
This led to the following error on IE8 when we used it:
There&amp;rsquo;s a stackoverflow threadsuggesting some different ways of implementing your own &amp;lsquo;trim()&amp;rsquo; method but since we&amp;rsquo;re using jQuery already we decided to just use the &amp;lsquo;$.trim()&amp;rsquo; function from there.
Therefore:
var cleaned = ourString.trim(); becomes:</description>
    </item>
    
    <item>
      <title>gawk: Getting story numbers from git commit messages</title>
      <link>https://markhneedham.com/blog/2011/09/12/gawk-getting-story-numbers-from-git-commit-messages/</link>
      <pubDate>Mon, 12 Sep 2011 07:05:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/12/gawk-getting-story-numbers-from-git-commit-messages/</guid>
      <description>As I mentioned in my previous post I&amp;rsquo;ve been writing a little application to create graphs based on our git repository history and in one of them we wanted to try and create a graph showing which people had been working on which stories.
I needed a way to extract a story number from the git commit message and then store them all in a text file.
A typical commit with a story number in might look like this:</description>
    </item>
    
    <item>
      <title>Learning node.js: Step</title>
      <link>https://markhneedham.com/blog/2011/09/11/learning-node-js-step/</link>
      <pubDate>Sun, 11 Sep 2011 22:37:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/11/learning-node-js-step/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js to generate some graphs from our git repository which effectively meant chaining together a bunch of shell commands to give me the repository data in the format I wanted.
I was able to do this by making use of child_processwhich comes with the core library.
The first version looked like this:
var exec = require(&amp;#39;child_process&amp;#39;).exec, _ = require(&amp;#34;underscore&amp;#34;); ... function parseCommitsFromRepository(fn) { var gitRepository = &amp;#34;/tmp/core&amp;#34;; var gitPlayArea = &amp;#34;/tmp/&amp;#34; + new Date().</description>
    </item>
    
    <item>
      <title>Learning Regular Expressions: Non capturing match</title>
      <link>https://markhneedham.com/blog/2011/09/07/learning-regular-expressions-non-capturing-match/</link>
      <pubDate>Wed, 07 Sep 2011 20:47:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/07/learning-regular-expressions-non-capturing-match/</guid>
      <description>I&amp;rsquo;ve been working my way slowly through the O&amp;rsquo;Reilly &amp;lsquo;Mastering Regular Expressions&amp;rsquo; book and recently read about the non capturing match operator which came in useful for some Git log parsing I&amp;rsquo;ve been doing.
On the project I&amp;rsquo;m working on we all commit as the same user and then put our names at the beginning of the commit message.
We wanted to try and find out the statistics of who&amp;rsquo;d been pairing with each other and therefore needed to extract the pairs from commits.</description>
    </item>
    
    <item>
      <title>Pair Programming: The disadvantages of 100% pairing</title>
      <link>https://markhneedham.com/blog/2011/09/06/pair-programming-the-disadvantages-of-100-pairing/</link>
      <pubDate>Tue, 06 Sep 2011 23:34:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/06/pair-programming-the-disadvantages-of-100-pairing/</guid>
      <description>I&amp;rsquo;ve written a lot of blog posts in the past about pair programming and the advantages that I&amp;rsquo;ve seen from using this techniquebut lately I find myself increasingly frustrated at the need to pair 100% of the time which happens on most teams I work on.
From my experience it&amp;rsquo;s certainly useful as a coaching tool, as I&amp;rsquo;ve mentioned before I think it&amp;rsquo;s a very useful for increasing the amount of collaboration between team membersand an excellent way for ensuring that knowledge of the code base is spread across the team.</description>
    </item>
    
    <item>
      <title>Parsing XML from the unix terminal/shell</title>
      <link>https://markhneedham.com/blog/2011/09/03/parsing-xml-from-the-unix-terminalshell/</link>
      <pubDate>Sat, 03 Sep 2011 23:42:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/03/parsing-xml-from-the-unix-terminalshell/</guid>
      <description>I spent a bit of time today trying to put together a quick script which would allow me to grab story numbers from the commits in our Git repository and then work out which functional areas those stories were in by querying mingle.
Therefore I wanted to make a curlrequest to the mingle and then pipe that result somewhere and run an xpath expression to get my element.
I didn&amp;rsquo;t want to have to write code in another script file and then reference that file from the shell and in my search to achieve that I came across XMLStarleton stackoverflow.</description>
    </item>
    
    <item>
      <title>Coding: The value in finding the generic abstraction</title>
      <link>https://markhneedham.com/blog/2011/08/31/coding-the-value-in-finding-the-generic-abstraction/</link>
      <pubDate>Wed, 31 Aug 2011 06:49:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/31/coding-the-value-in-finding-the-generic-abstraction/</guid>
      <description>I recently worked on adding the meta data section for each of the different document types that it serves which involved showing 15-20 pieces of data for each document type.
There are around 4-5 document types and although the meta data for each document type is similar it&amp;rsquo;s not exactly the same!
When we got to the second document type it wasn&amp;rsquo;t obvious where the abstraction was so we went for the copy/paste approach to see if it would be any easier to see the commonality if we put the two templates side by side.</description>
    </item>
    
    <item>
      <title>The read-only database</title>
      <link>https://markhneedham.com/blog/2011/08/29/the-read-only-database/</link>
      <pubDate>Mon, 29 Aug 2011 23:32:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/29/the-read-only-database/</guid>
      <description>The last couple of applications I&amp;rsquo;ve worked on have had almost completely read only databases where we had to populate the database in an offline process and then provide various ways for users to access the data.
This creates an interesting situation with respect to how we should setup our development environment.
Our normal setup would probably have an individual version of that database on every development machine and we would populate and then truncate the database during various test scenarios.</description>
    </item>
    
    <item>
      <title>Pain Driven Development</title>
      <link>https://markhneedham.com/blog/2011/08/21/pain-driven-development/</link>
      <pubDate>Sun, 21 Aug 2011 17:33:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/21/pain-driven-development/</guid>
      <description>My colleague Pat Fornasierhas been using an interesting spin on the idea of making decisions at the last responsible moment by encouraging our team to &amp;lsquo;feel the pain&amp;rsquo; before introducing any constraint in our application.
These are some of the decisions which we&amp;rsquo;ve been delaying/are still delaying:
We decided to just create a trait where we wired up the dependencies ourself and then inject that trait into the entry point of our application.</description>
    </item>
    
    <item>
      <title>node.js: Building a graph of build times using the Go API</title>
      <link>https://markhneedham.com/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</link>
      <pubDate>Sat, 13 Aug 2011 14:52:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js again and one thing that I wanted to do was take a CSV file generated by the Go APIand extract the build times so that we could display it on a graph.
Since I don&amp;rsquo;t have a Go instance on my machine I created a URL in my node application which would mimic the API and return a CSV file.
I&amp;rsquo;m using the express web frameworkto take care of some of the plumbing:</description>
    </item>
    
    <item>
      <title>Scala: Do modifiers on functions really matter?</title>
      <link>https://markhneedham.com/blog/2011/08/13/scala-do-modifiers-on-functions-really-matter/</link>
      <pubDate>Sat, 13 Aug 2011 02:10:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/13/scala-do-modifiers-on-functions-really-matter/</guid>
      <description>A couple of colleagues and I were having an interesting discussion this afternoon about the visibility of functions which are mixed into an object from a trait.
The trait in question looks like this:
trait Formatting { def formatBytes(bytes: Long): Long = { math.round(bytes.toDouble / 1024) } } And is mixed into various objects which need to display the size of a file in kB like this:
class SomeObject extends Formatting { } By mixing that function into SomeObjectany of the clients of SomeObjectwould now to be able to call that function and transform a bytes value of their own!</description>
    </item>
    
    <item>
      <title>Scala, WebDriver and the Page Object Pattern</title>
      <link>https://markhneedham.com/blog/2011/08/09/scala-webdriver-and-the-page-object-pattern/</link>
      <pubDate>Tue, 09 Aug 2011 00:54:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/09/scala-webdriver-and-the-page-object-pattern/</guid>
      <description>We&amp;rsquo;re using WebDriver on my project to automate our functional tests and as a result are using the Page Object patternto encapsulate each page of the application in our tests.
We&amp;rsquo;ve been trying to work out how to effectively reuse code since some of the pages have parts of them which work exactly the same as another page.
For example we had a test similar to this&amp;hellip;
class FooPageTests extends Spec with ShouldMatchers with FooPageSteps { it(&amp;#34;is my dummy test&amp;#34;) { .</description>
    </item>
    
    <item>
      <title>Clojure: Getting caught out by lazy collections</title>
      <link>https://markhneedham.com/blog/2011/07/31/clojure-getting-caught-out-by-lazy-collections/</link>
      <pubDate>Sun, 31 Jul 2011 21:40:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/31/clojure-getting-caught-out-by-lazy-collections/</guid>
      <description>Most of the work that I&amp;rsquo;ve done with Clojure has involved running a bunch of functions directly in the REPL or through Leiningen&amp;rsquo;s runtarget which led to me getting caught out when I created a JAR and tried to run that.
As I mentioned a few weeks agoI&amp;rsquo;ve been rewriting part of our system in Clojure to see how the design would differ and a couple of levels down the Clojure version comprises of applying a map function over a collection of documents.</description>
    </item>
    
    <item>
      <title>Performance tuning our data import: Gather precise data</title>
      <link>https://markhneedham.com/blog/2011/07/29/performance-tuning-our-data-import-gather-precise-data/</link>
      <pubDate>Fri, 29 Jul 2011 01:34:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/29/performance-tuning-our-data-import-gather-precise-data/</guid>
      <description>One of the interesting problems that we have to solve on my current project is working out how to import a few million XML documents into our database in a reasonable amount of time.
The stages of the import process are as follows:
We&amp;rsquo;ve been working on this quite a bit recently and one of the main things we&amp;rsquo;ve learnt is the value of gathering detailing information about what&amp;rsquo;s actually happening in the code.</description>
    </item>
    
    <item>
      <title>Unix: Summing the total time from a log file</title>
      <link>https://markhneedham.com/blog/2011/07/27/unix-summing-the-total-time-from-a-log-file/</link>
      <pubDate>Wed, 27 Jul 2011 23:02:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/27/unix-summing-the-total-time-from-a-log-file/</guid>
      <description>As I mentioned in my last postwe&amp;rsquo;ve been doing some profiling of a data ingestion job and as a result have been putting some logging into our code to try and work out where we need to work on.
We end up with a log file peppered with different statements which looks a bit like the following:
18:50:08.086 [akka:event-driven:dispatcher:global-5] DEBUG - Imported document. /Users/mneedham/foo.xml in: 1298 18:50:09.064 [akka:event-driven:dispatcher:global-1] DEBUG - Imported document.</description>
    </item>
    
    <item>
      <title>A crude way of telling if a remote machine is a VM</title>
      <link>https://markhneedham.com/blog/2011/07/27/a-crude-way-of-telling-if-a-remote-machine-is-a-vm/</link>
      <pubDate>Wed, 27 Jul 2011 22:31:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/27/a-crude-way-of-telling-if-a-remote-machine-is-a-vm/</guid>
      <description>We were doing a bit of profiling of a data importing process we&amp;rsquo;ve been running across various environments and wanted to check whether or not one of the environments was a physical machine or a VM.
A bit of googling first led me to the following sitewhere you can fill a MAC address and it will tell you which vendor it belongs to.
macvendorlookup.comis even better though because it&amp;rsquo;s more easily scriptable!</description>
    </item>
    
    <item>
      <title>Scala: Prettifying test builders with package object</title>
      <link>https://markhneedham.com/blog/2011/07/26/scala-prettifying-test-builders-with-package-object/</link>
      <pubDate>Tue, 26 Jul 2011 22:31:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/26/scala-prettifying-test-builders-with-package-object/</guid>
      <description>We have several different test buildersin our code base which look roughly like this:
case class FooBuilder(bar : String, baz : String) { def build = new Foo(bar, baz) } In our tests we originally used them like this:
class FooPageTest extends Specs with ShouldMatchers { it(&amp;#34;should let us load a foo&amp;#34;) { when(databaseHas(FooBuilder(bar = &amp;#34;Bar&amp;#34;, baz = &amp;#34;Bazz&amp;#34;))) // and so on... 	} } This works well but we wanted our tests to only contain domain language and no implementation details.</description>
    </item>
    
    <item>
      <title>Retrospectives: The 4 L&#39;s Retrospective</title>
      <link>https://markhneedham.com/blog/2011/07/25/retrospectives-the-4-ls-retrospective/</link>
      <pubDate>Mon, 25 Jul 2011 21:00:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/25/retrospectives-the-4-ls-retrospective/</guid>
      <description>I facilitated the latest retrospective my team had last week and decided to try The 4 L&amp;rsquo;s techniquewhich I&amp;rsquo;d come across while browsing the &amp;lsquo;retrospectives&amp;rsquo; tag on del.icio.us.
We had 4 posters around the room representing each of the L&amp;rsquo;s:
I&amp;rsquo;m not really a fan of the majority of a retrospective being dominated by a full group discussion as many people aren&amp;rsquo;t comfortable giving their opinions to that many peopleand therefore end up not participating at all.</description>
    </item>
    
    <item>
      <title>Scala: Making it easier to abstract code</title>
      <link>https://markhneedham.com/blog/2011/07/23/scala-making-it-easier-to-abstract-code/</link>
      <pubDate>Sat, 23 Jul 2011 12:05:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/23/scala-making-it-easier-to-abstract-code/</guid>
      <description>A couple of months ago I attended Michael Feathers&amp;rsquo; &amp;lsquo;Brutal Refactoring&amp;rsquo; workshopat XP 2011 where he opined that developers generally do the easiest thing when it comes to code bases.
More often than not this means adding to an existing method or existing class rather than finding the correct place to put the behaviour that they want to add.
Something interesting that I&amp;rsquo;ve noticed so far on the project I&amp;rsquo;m working on is that so far we haven&amp;rsquo;t been seeing the same trend.</description>
    </item>
    
    <item>
      <title>Scala: Companion Objects</title>
      <link>https://markhneedham.com/blog/2011/07/23/scala-companion-objects/</link>
      <pubDate>Sat, 23 Jul 2011 11:57:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/23/scala-companion-objects/</guid>
      <description>One of the language features available to us in Scala which I think is having a big impact in helping us to make our code base easier to follow is the companion object.
We&amp;rsquo;ve been using companion objects quite liberally in our code base to define factory methods for our classes.
As I mentioned in a previous post a lot of our objects are acting as wrappers around XML documentsand we&amp;rsquo;ve been pushing some of the data extraction from the XML into companion objects so that our classes can take in non XML values.</description>
    </item>
    
    <item>
      <title>Clojure: Creating XML document with namespaces</title>
      <link>https://markhneedham.com/blog/2011/07/20/clojure-creating-xml-document-with-namespaces/</link>
      <pubDate>Wed, 20 Jul 2011 20:28:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/20/clojure-creating-xml-document-with-namespaces/</guid>
      <description>As I mentioned in an earlier post we&amp;rsquo;ve been parsing XML documents with the Clojure zip-filter APIand the next thing we needed to do was create a new XML document containing elements which needed to be inside a namespace.
We wanted to end up with a document which looked something like this:
&amp;lt;root&amp;gt; &amp;lt;mynamespace:foo xmlns:mynamespace=&amp;#34;http://www.magicalurlfornamespace.com&amp;#34;&amp;gt; &amp;lt;mynamespace:bar&amp;gt;baz&amp;lt;/mynamespace:bar&amp;gt; &amp;lt;/mynamespace:foo&amp;gt; &amp;lt;/root&amp;gt; We can make use of lazy-xml/emitto output an XML string from some sort of input?</description>
    </item>
    
    <item>
      <title>Scala: Rolling with implicit</title>
      <link>https://markhneedham.com/blog/2011/07/19/scala-rolling-with-implicit/</link>
      <pubDate>Tue, 19 Jul 2011 06:39:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/19/scala-rolling-with-implicit/</guid>
      <description>We&amp;rsquo;ve been coding in Scala on my project for around 6 weeks now and are getting to the stage where we&amp;rsquo;re probably becoming a big dangerous with our desire to try out some of the language features.
One that we&amp;rsquo;re trying out at the moment is the implicitkey word which allows you to pass arguments to objects and methods without explicitly defining them in the parameter list.
The website we&amp;rsquo;re working on needs to be accessible in multiple languages and therefore we need to be able to translate some words before they get displayed on the page.</description>
    </item>
    
    <item>
      <title>Emacs: Re-mapping the Control and Meta Keys on Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/07/17/emacs-re-mapping-the-control-and-meta-keys-on-mac-os-x/</link>
      <pubDate>Sun, 17 Jul 2011 10:24:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/17/emacs-re-mapping-the-control-and-meta-keys-on-mac-os-x/</guid>
      <description>Since I&amp;rsquo;ve started playing around with Clojure again I thought it&amp;rsquo;d make sense to use emacs as my editor and therefore needed to work out how to remap the Ctrl and Meta to keys which are more accessible on the MBP&amp;rsquo;s keyboard.
I&amp;rsquo;ve found that I like using the Caps Lock for Ctrl and that&amp;rsquo;s reasonably easy to change by navigating to &amp;lsquo;System Preferences &amp;gt; Keyboard &amp;gt; Modifier Keys&amp;rsquo;:
The Meta key is Escape by default and I wanted to map it to the right Command key as that&amp;rsquo;s much easier for me to get to.</description>
    </item>
    
    <item>
      <title>Clojure: Extracting child elements from an XML document with zip-filter</title>
      <link>https://markhneedham.com/blog/2011/07/16/clojure-extracting-child-elements-from-an-xml-document-with-zip-filter/</link>
      <pubDate>Sat, 16 Jul 2011 22:19:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/16/clojure-extracting-child-elements-from-an-xml-document-with-zip-filter/</guid>
      <description>I&amp;rsquo;ve been following Nurullah Akkaya&amp;rsquo;s blog postabout navigating XML documents using the Clojure zip-filterAPI and I came across an interesting problem in a document I&amp;rsquo;m parsing which goes beyond what&amp;rsquo;s covered in his post.
Nurullah provides a neat zip-strfunction which we can use to convert an XML string into a zipper object:
(require &amp;#39;[clojure.zip :as zip] &amp;#39;[clojure.xml :as xml]) (use &amp;#39;[clojure.contrib.zip-filter.xml]) (defn zip-str [s] (zip/xml-zip (xml/parse (java.io.ByteArrayInputStream. (.getBytes s))))) The fragment of the document I&amp;rsquo;m parsing looks like this:</description>
    </item>
    
    <item>
      <title>Scala: An attempt to eradicate the if</title>
      <link>https://markhneedham.com/blog/2011/07/12/scala-an-attempt-to-eradicate-the-if/</link>
      <pubDate>Tue, 12 Jul 2011 22:50:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/12/scala-an-attempt-to-eradicate-the-if/</guid>
      <description>In a previous postI included a code sample where we were formatting a page range differently depending on whether the start page and end pages were the same.
The code looked like this:
trait PageAware { def startPage:String def endPage:String def pageRange = if(firstPage == lastPage) &amp;#34;page %s&amp;#34;.format(firstPage) else &amp;#34;pages %s-%s&amp;#34;.format(firstPage, lastPage) } Looking at the if statement on the last line we were curious whether it would be possible to get rid of it and replace it with something else.</description>
    </item>
    
    <item>
      <title>Scala: Pattern matching a pair inside map/filter</title>
      <link>https://markhneedham.com/blog/2011/07/12/scala-pattern-matching-a-pair-inside-mapfilter/</link>
      <pubDate>Tue, 12 Jul 2011 22:42:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/12/scala-pattern-matching-a-pair-inside-mapfilter/</guid>
      <description>More than a few times recently we&amp;rsquo;ve wanted to use pattern matching on a collection of pairs/tuples and have run into trouble doing so.
It&amp;rsquo;s easy enough if you don&amp;rsquo;t try and pattern match:
&amp;gt; List((&amp;#34;Mark&amp;#34;, 4), (&amp;#34;Charles&amp;#34;, 5)).filter(pair =&amp;gt; pair._2 == 4) res6: List[(java.lang.String, Int)] = List((Mark,4)) But if we try to use pattern matching:
List((&amp;#34;Mark&amp;#34;, 4), (&amp;#34;Charles&amp;#34;, 5)).filter(case(name, number) =&amp;gt; number == 4) We end up with this error:</description>
    </item>
    
    <item>
      <title>Clojure: Language as thought shaper</title>
      <link>https://markhneedham.com/blog/2011/07/10/clojure-language-as-thought-shaper/</link>
      <pubDate>Sun, 10 Jul 2011 22:21:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/10/clojure-language-as-thought-shaper/</guid>
      <description>I recently read an interesting article by Tom Van Cutsemwhere he describes some of the goals that influence the design of programming languages and one which stood out to me is that of viewing &amp;lsquo;language as a thought shaper&amp;rsquo;:
The goal of a thought shaper language is to change the way a programmer thinks about structuring his or her program.
I&amp;rsquo;ve been rewriting part of the current system that I&amp;rsquo;m working on in Clojure in my spare time to see how the design would differ and it&amp;rsquo;s interesting to see that it&amp;rsquo;s quite different.</description>
    </item>
    
    <item>
      <title>Scala: Traits galore</title>
      <link>https://markhneedham.com/blog/2011/07/09/scala-traits-galore/</link>
      <pubDate>Sat, 09 Jul 2011 19:54:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/09/scala-traits-galore/</guid>
      <description>We recently came across a problem where we had some logic that we wanted to be used by two classes.
Our original thought was to pull it up into an abstract class which ended up looking like this:
abstract class SomeArbitraryClass(root:xml.Node) { def unrelatedField1:String def unrelatedField2:String def startPage:String def endPage:String def pageRange = if(firstPage == lastPage) &amp;#34;page %s&amp;#34;.format(firstPage) else &amp;#34;pages %s-%s&amp;#34;.format(firstPage, lastPage) } Writing a test link to scala test for the page logic helped us to see more clearly that the design was a bit awkward:</description>
    </item>
    
    <item>
      <title>Scala: Martin Odersky&#39;s Object-oriented meets functional: An exploration of Scala</title>
      <link>https://markhneedham.com/blog/2011/07/05/scala-martin-oderskys-object-oriented-meets-functional-an-exploration-of-scala/</link>
      <pubDate>Tue, 05 Jul 2011 05:02:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/05/scala-martin-oderskys-object-oriented-meets-functional-an-exploration-of-scala/</guid>
      <description>My colleague Charlesand I attended Martin Odersky&amp;rsquo;s &amp;lsquo;Object-oriented meets functional: An exploration of Scala&amp;rsquo; two day Scala workshop hosted by Skills Matter at the end of last week.
It was run by Iulian Dragos who wrote his Phd thesis on how to improve the performance of the Scala compiler.
The course was a bit adapted from the original in that it came at Scala more from an application developer&amp;rsquo;s point of view rather than that of a language geek.</description>
    </item>
    
    <item>
      <title>Clojure: Equivalent to Scala&#39;s flatMap/C#&#39;s SelectMany</title>
      <link>https://markhneedham.com/blog/2011/07/03/clojure-equivalent-to-scalas-flatmapcs-selectmany/</link>
      <pubDate>Sun, 03 Jul 2011 22:50:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/03/clojure-equivalent-to-scalas-flatmapcs-selectmany/</guid>
      <description>I&amp;rsquo;ve been playing around with Clojure a bit over the weekend and one thing I got stuck with was working out how to achieve the functionality provided by Scala&amp;rsquo;s flatMapor C#&amp;lsquo;s SelectManymethods on collections.
I had a collection of zip files and wanted to transform that into a collection of all the file entries in those files.
If we just use mapthen we&amp;rsquo;ll end up with a collection of collections which is more difficult to deal with going forward.</description>
    </item>
    
    <item>
      <title>Git: Deleting a remote branch on a gitolite configured repository</title>
      <link>https://markhneedham.com/blog/2011/06/28/git-deleting-a-remote-branch-on-a-gitolite-configured-repository/</link>
      <pubDate>Tue, 28 Jun 2011 22:09:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/28/git-deleting-a-remote-branch-on-a-gitolite-configured-repository/</guid>
      <description>We&amp;rsquo;ve had an xsbtbranch on our gitolitepowered repository for the last couple of weeks while we worked out how to move our build from sbt 0.7 to sbt 0.10 but having finally done that we needed to delete it.
I originally tried running the following command from one of our developer workstations:
git push origin :xsbt But ended up with the following error:
! [remote rejected] xsbt (deletion prohibited)
A bit of googling led me to this stackoverflow threadwhich suggested that you needed to be an administrator in order to delete a remote branch.</description>
    </item>
    
    <item>
      <title>Scala: Self type annotations and structured types</title>
      <link>https://markhneedham.com/blog/2011/06/27/scala-self-type-annotations-and-structured-types/</link>
      <pubDate>Mon, 27 Jun 2011 23:21:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/27/scala-self-type-annotations-and-structured-types/</guid>
      <description>A few days ago I tweeted that I didn&amp;rsquo;t really see the point in structured types in Scala&amp;hellip;
&amp;hellip;but today my colleague Uday came up with a cool way of combining self type annotationswith structured types inside a trait we defined.
We had some code duplicated across two classes which looked roughly like this:
class OnePageType { lazy val peopleNodes = root \\ &amp;#34;SomeNode&amp;#34; \ &amp;#34;SomeSubNode&amp;#34; \ &amp;#34;People&amp;#34; \ &amp;#34;Person&amp;#34; private def fullName(personName: Node): String = // code to build person&amp;#39;s name  lazy val people: String = peopleNodes.</description>
    </item>
    
    <item>
      <title>Bounded Rationality</title>
      <link>https://markhneedham.com/blog/2011/06/26/bounded-rationality/</link>
      <pubDate>Sun, 26 Jun 2011 17:05:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/26/bounded-rationality/</guid>
      <description>In &amp;lsquo;Thinking In Systems: A Primer&amp;rsquo; one of the most interesting ideas that Donella Meadows describes is what Herbert Simon coined &amp;lsquo;bounded rationality&amp;rsquo;:
Later on in the chapter the following idea is suggested:
This helps explains something that I&amp;rsquo;ve noticed happen quite frequently.
Someone who was previously non management gets pulled into a management position and &amp;lsquo;mysteriously&amp;rsquo; starts acting exactly like all the others in that type of role rather than having a holistic view.</description>
    </item>
    
    <item>
      <title>Coding: Light weight wrapper vs serialisation/deserialisation</title>
      <link>https://markhneedham.com/blog/2011/06/26/coding-light-weight-wrapper-vs-serialisationdeserialisation/</link>
      <pubDate>Sun, 26 Jun 2011 13:58:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/26/coding-light-weight-wrapper-vs-serialisationdeserialisation/</guid>
      <description>As I&amp;rsquo;ve mentionedbefore, we&amp;rsquo;re making use of a MarkLogic database on the project I&amp;rsquo;m working on which means that we&amp;rsquo;re getting quite big XML data structures coming into our application whenever we execute a query.
The normal way that I&amp;rsquo;ve seen for dealing with external systems would be to create an anti corruption layerwhere we initialise objects in our system with the required data from the external system.
In this case we&amp;rsquo;ve decided that approach doesn&amp;rsquo;t seem to make as much sense because we don&amp;rsquo;t need to do that much with the data that we get back.</description>
    </item>
    
    <item>
      <title>Tech Leading: Keeping the passion</title>
      <link>https://markhneedham.com/blog/2011/06/22/tech-leading-keeping-the-passion/</link>
      <pubDate>Wed, 22 Jun 2011 23:48:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/22/tech-leading-keeping-the-passion/</guid>
      <description>As I mentioned a couple of months ago, while I was in India I was acting as the Tech Lead on the project the TWU grads were working on and one thing I learnt from doing that is the importance of trying to keep the passion of the developers on the team.
When we started off I was more focused on trying to encourage the team to try and develop as many of the stories as possible.</description>
    </item>
    
    <item>
      <title>Scala: val, lazy val and def</title>
      <link>https://markhneedham.com/blog/2011/06/22/scala-val-lazy-val-and-def/</link>
      <pubDate>Wed, 22 Jun 2011 23:04:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/22/scala-val-lazy-val-and-def/</guid>
      <description>We have a variety of val, lazy valand defdefinitions across our code base but have been led to believe that idiomatic Scala would have us using lazy valas frequently as possible.
As far as I understand so far this is what the different things do:
In Java, C# or Ruby I would definitely favour the 3rd option because it reduces the amount of state that an object has to hold.</description>
    </item>
    
    <item>
      <title>Scala/Mustache: Creating a comma separated list</title>
      <link>https://markhneedham.com/blog/2011/06/22/scalamustache-creating-a-comma-separated-list/</link>
      <pubDate>Wed, 22 Jun 2011 21:24:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/22/scalamustache-creating-a-comma-separated-list/</guid>
      <description>We&amp;rsquo;re using the Mustachetemplating engine on my project at the moment and one thing that we wanted to do was build a comma separated list.
Mustache is designed so that you pretty much can&amp;rsquo;t do any logic in the template which made it really difficult to do what we wanted.
It&amp;rsquo;s easy enough to get a comma after each item in a list with something like the following code:
{{#people}}&amp;lt;a href=&amp;#34;/link/to/{{toString}}&amp;#34;&amp;gt;{{toString}}&amp;lt;/a&amp;gt;{{/people}} where peopleis passed to the template as a collection of strings.</description>
    </item>
    
    <item>
      <title>MarkLogic: Customising a result set</title>
      <link>https://markhneedham.com/blog/2011/06/20/marklogic-customising-a-result-set/</link>
      <pubDate>Mon, 20 Jun 2011 22:36:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/20/marklogic-customising-a-result-set/</guid>
      <description>One of the stories we worked on last week had us needing to be able to customise the output of a MarkLogic search query to include some elements which aren&amp;rsquo;t included in the default view.
We started off with this:
search.xqy
xquery version &amp;#34;1.0-ml&amp;#34;; import module namespace search = &amp;#34;http://marklogic.com/appservices/search&amp;#34; at &amp;#34;/MarkLogic/appservices/search/search.xqy&amp;#34;; declare variable $term as xs:string := xdmp:get-request-field(&amp;#34;query&amp;#34;, &amp;#34;&amp;#34;); search:search($term) Which gives us back a list of results showing where in the documents the search term appeared.</description>
    </item>
    
    <item>
      <title>Chef, Fedora and &#39;ArgumentError: Attribute domain is not defined!&#39;</title>
      <link>https://markhneedham.com/blog/2011/06/18/chef-fedora-and-argumenterror-attribute-domain-is-not-defined/</link>
      <pubDate>Sat, 18 Jun 2011 18:45:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/18/chef-fedora-and-argumenterror-attribute-domain-is-not-defined/</guid>
      <description>I&amp;rsquo;ve been playing around with Chef Soloon Fedora and executing the following:
sudo chef-solo -c config/solo.rb -j config/node.json (where node.jsonjust contains the example code from the resolver example on the Chef documentation pageand the cookbooks folder contains all the opscode cookbooks.)
leads to the following error:
... ERROR: Running exception handlers ERROR: Exception handlers complete FATAL: Stacktrace dumped to /home/mark/chef-solo/chef-stacktrace.out FATAL: ArgumentError: Attribute domain is not defined! A bit of googling led me to believe that this error is happening because the machine doesn&amp;rsquo;t have a fully qualified domain name (fqdn) definedwhich can be seen by calling the following command:</description>
    </item>
    
    <item>
      <title>MarkLogic: Deleting all the documents in a database</title>
      <link>https://markhneedham.com/blog/2011/06/18/marklogic-deleting-all-the-documents-in-a-database/</link>
      <pubDate>Sat, 18 Jun 2011 16:08:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/18/marklogic-deleting-all-the-documents-in-a-database/</guid>
      <description>We&amp;rsquo;re using the MarkLogicdatabase on my current project and something that we wanted to do recently was delete all the documents as part of a deployment script.
Getting all of the documents is reasonably easy - we just need to make a call to the doc()function.
We can then iterate through the documents like so:
for $doc in doc() return $doc We wanted to make use of the xdmp:document-deletefunction to tear down all of the modules but that needs a uri representing the location of the document in the database which isn&amp;rsquo;t available in $doc:</description>
    </item>
    
    <item>
      <title>Fedora: Recovering from the IntelliJ &#39;Ctrl-Alt-F7&#39;</title>
      <link>https://markhneedham.com/blog/2011/06/16/fedora-recovering-from-the-intellij-ctrl-alt-f7/</link>
      <pubDate>Thu, 16 Jun 2011 07:27:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/16/fedora-recovering-from-the-intellij-ctrl-alt-f7/</guid>
      <description>We&amp;rsquo;re using Fedora on our local developer work stations and some of the default key bindings of the operating system seem to conflict with ones provided by IntelliJ IDEA.
One particular amusing one is &amp;lsquo;Ctrl-Alt-F7&amp;rsquo; which you use in IntelliJ to see the usages of a piece of code.
In Fedora that seems to switch into a different X Server session and you just see a blank screen with seemingly no way out!</description>
    </item>
    
    <item>
      <title>Parkinson&#39;s Law and Iteration Zero</title>
      <link>https://markhneedham.com/blog/2011/06/13/parkinsons-law-and-iteration-zero/</link>
      <pubDate>Mon, 13 Jun 2011 23:02:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/13/parkinsons-law-and-iteration-zero/</guid>
      <description>I&amp;rsquo;ve been thinking a bit about Parkinson&amp;rsquo;s Lawrecently and its&amp;rsquo; applicability in software development.
Parkinson&amp;rsquo;s law is defined as follows:
“Work expands so as to fill the time available for its completion”
My colleagues quite frequently reference this law with respect to stories taking the amount of time that reflects the story point estimate assigned to them.
I haven&amp;rsquo;t noticed this so much but I think we&amp;rsquo;re more susceptible to the law when what we&amp;rsquo;re working on doesn&amp;rsquo;t have a clear goal or doesn&amp;rsquo;t have a fast feedback loop.</description>
    </item>
    
    <item>
      <title>Scala: Setting a default value</title>
      <link>https://markhneedham.com/blog/2011/06/12/scala-setting-a-default-value/</link>
      <pubDate>Sun, 12 Jun 2011 16:03:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/12/scala-setting-a-default-value/</guid>
      <description>We wanted to try and generate a build label to use for the name of the artifacts archive that gets generated each time we run the build but wanted to default it to a hard coded value if the system property representing the build label wasn&amp;rsquo;t available.
In Ruby we would be able to do something like this:
buildLabel = ENV[&amp;#34;GO_PIPELINE_LABEL&amp;#34;] || &amp;#34;LOCAL&amp;#34; There isn&amp;rsquo;t a function in Scala that does that so we initially ended up with this:</description>
    </item>
    
    <item>
      <title>Sbt: Rolling with continuous/incremental compilation and Jetty</title>
      <link>https://markhneedham.com/blog/2011/06/10/sbt-rolling-with-continuousincremental-compilation-and-jetty/</link>
      <pubDate>Fri, 10 Jun 2011 00:16:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/10/sbt-rolling-with-continuousincremental-compilation-and-jetty/</guid>
      <description>As I mentioned in an earlier postwe&amp;rsquo;re using SBT on our project and one of it&amp;rsquo;s cool features is that it will listen to the source directory and then automatically recompile the code when it detects file changes.
We&amp;rsquo;ve also installed the sbt-jetty-embedplugin which allows us to create a war which has Jetty embedded so that we can keep our application containerless.
That plugin adds an action called &amp;lsquo;jetty&amp;rsquo; to sbt so we (foolishly in hindsight) thought that we would be able to launch the application in triggered execution mode by making use of a ~ in front of that:</description>
    </item>
    
    <item>
      <title>IntelliJ: Adding resources with unusual extensions onto the classpath</title>
      <link>https://markhneedham.com/blog/2011/06/09/intellij-adding-resources-with-unusual-extensions-onto-the-classpath/</link>
      <pubDate>Thu, 09 Jun 2011 23:10:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/09/intellij-adding-resources-with-unusual-extensions-onto-the-classpath/</guid>
      <description>We&amp;rsquo;re making use of MarkLogicand therefore xqueryon the project I&amp;rsquo;m currently working on and recently wanted to add our xquery setup files onto the classpath so they could be used in a test.
We added them into &amp;lsquo;src/main/resources&amp;rsquo; and set that as a source path in IntelliJ assuming that was all we needed to do.
Despite doing that our test kept failing because it couldn&amp;rsquo;t locate the files on the classpath.</description>
    </item>
    
    <item>
      <title>Sbt: Zipping files without their directory structure</title>
      <link>https://markhneedham.com/blog/2011/06/04/sbt-zipping-files-without-their-directory-structure/</link>
      <pubDate>Sat, 04 Jun 2011 17:24:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/04/sbt-zipping-files-without-their-directory-structure/</guid>
      <description>We&amp;rsquo;re using SBTon our project and Patand I have been trying to work out how to zip together some artifacts so that they&amp;rsquo;re all available from the top level of the zip file i.e. we don&amp;rsquo;t want to copy the directory structure where the files come from.
I&amp;rsquo;ve been playing around with this in the Scala REPL which we can launch with our project&amp;rsquo;s dependencies loaded with the following command:</description>
    </item>
    
    <item>
      <title>Developer Experience (#devexp) and the 5 minute experience</title>
      <link>https://markhneedham.com/blog/2011/05/31/developer-experience-devexp-and-the-5-minute-experience/</link>
      <pubDate>Tue, 31 May 2011 21:29:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/31/developer-experience-devexp-and-the-5-minute-experience/</guid>
      <description>My former colleague Ade Oshineye recently linked me to a post he&amp;rsquo;s written about Developer Experience (#devexp)which is described as:
I think it&amp;rsquo;s quite an interesting idea and I particularly like two of the ideas suggested:
The idea here is that if you provide a library, developers should be able to go from downloading to &amp;ldquo;Hello World&amp;rdquo; in 5 minutes.
For instance if your users struggle with getting OAuth working then create abstractions that handle it for them rather than documenting the 6 most common problems or writing up the &amp;lsquo;simple 12 step process&amp;rsquo; for getting it working.</description>
    </item>
    
    <item>
      <title>XP 2011: How complex is software?</title>
      <link>https://markhneedham.com/blog/2011/05/19/xp-2011-how-complex-is-software/</link>
      <pubDate>Thu, 19 May 2011 09:44:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/19/xp-2011-how-complex-is-software/</guid>
      <description>The last session I attended at XP 2011 was a workshop run by John Mcfadyenwhere he introduced us to Dave Snowden&amp;rsquo;sCynefinmodel, which is a model used to describe problems, situations and systems.
I&amp;rsquo;d come across the model previously and it had been all over my twitter stream a couple of weeks ago as a result of Dave Snowden giving a key note at the Lean Systems and Software conference.
These are some of the things I learnt from the workshop:</description>
    </item>
    
    <item>
      <title>&#34;In what world does that make sense&#34;</title>
      <link>https://markhneedham.com/blog/2011/05/14/in-what-world-does-that-make-sense/</link>
      <pubDate>Sat, 14 May 2011 21:12:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/14/in-what-world-does-that-make-sense/</guid>
      <description>In her keynote at XP 2011Esther Derbyencouraged us to ask the question &amp;ldquo;in what world does that make sense?&amp;rdquo; whenever we encounter something which we consider to be stupid or ridiculous.
I didn&amp;rsquo;t think much of it at the time but my colleague Pat Kuahas been asking me the question whenever I&amp;rsquo;ve been describing something that I find confusing to him.
After about the third time I noticed that its quite a nice tool for getting us to reflect on the systems and feedback loops that may be encouraging the behaviour witnessed.</description>
    </item>
    
    <item>
      <title>System Traps: Rule Beating</title>
      <link>https://markhneedham.com/blog/2011/05/14/system-traps-rule-beating/</link>
      <pubDate>Sat, 14 May 2011 21:02:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/14/system-traps-rule-beating/</guid>
      <description>In &amp;lsquo;Thinking In Systems&amp;rsquo; section five focuses on systems which produce &amp;ldquo;truly problematic behaviour&amp;rdquo; and one of these so called system traps is known as &amp;lsquo;rule beating&amp;rsquo;.
Rule beating occurs when the agents in a system take evasive action to get around the intent of rules in a system:
A common system where we see this in organisations is around training budgets.
Each individual will be given a certain amount of money to spend each year and if they don&amp;rsquo;t spend it then they lose it.</description>
    </item>
    
    <item>
      <title>XP 2011: Esther Derby - Still no silver bullets</title>
      <link>https://markhneedham.com/blog/2011/05/13/xp-2011-esther-derby-still-no-silver-bullets/</link>
      <pubDate>Fri, 13 May 2011 12:26:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/13/xp-2011-esther-derby-still-no-silver-bullets/</guid>
      <description>The first keynote at XP 2011 was one given by Esther Derbytitled &amp;lsquo;Still no silver bullets&amp;rsquo; where she talked about some of the reasons why agile adoption seems to work in the small but often fails in the large.
Esther quoted Donella Meadows, the author of &amp;lsquo;Thinking in Systems&amp;rsquo;, a few times which was an interesting coincidence for me as I&amp;rsquo;m currently reading her book.
One of the first quotes from that book was the following:</description>
    </item>
    
    <item>
      <title>XP 2011: Michael Feathers - Brutal Refactoring</title>
      <link>https://markhneedham.com/blog/2011/05/11/xp-2011-michael-feathers-brutal-refactoring/</link>
      <pubDate>Wed, 11 May 2011 13:35:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/11/xp-2011-michael-feathers-brutal-refactoring/</guid>
      <description>The second session that I attended at XP 2011 was Michael Feathers&amp;rsquo; tutorial &amp;lsquo;Brutal Refactoring&amp;rsquo; where he talked through some of the things that he&amp;rsquo;s learned since he finished writing &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
I&amp;rsquo;ve found some of Michael&amp;rsquo;s recent blog posts about analysing the data in our code repositoriesquite interesting to read and part of this tutorial was based on the research he&amp;rsquo;s done in that area.
The session started off discussing the difference between clean codeand understandable code.</description>
    </item>
    
    <item>
      <title>Feedback: In public</title>
      <link>https://markhneedham.com/blog/2011/05/11/feedback-in-public/</link>
      <pubDate>Wed, 11 May 2011 12:12:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/11/feedback-in-public/</guid>
      <description>One of the areas that I covered during a session I ran at XP 2011on making feedback work in teams was the idea of giving feedback in public.
The general consensus seems to be that giving feedback in public isn&amp;rsquo;t a good idea and it&amp;rsquo;d much more effective to give that feedback privately.
I think this is a good rule of thumb and my observations are that feedback given in public tends to not be given in a very constructive manner and therefore leads to a defensive response from the recipient.</description>
    </item>
    
    <item>
      <title>XP 2011: J.B. Rainsberger - A Simple Approach to Modular Design</title>
      <link>https://markhneedham.com/blog/2011/05/11/xp-2011-j-b-rainsberger-a-simple-approach-to-modular-design/</link>
      <pubDate>Wed, 11 May 2011 12:11:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/11/xp-2011-j-b-rainsberger-a-simple-approach-to-modular-design/</guid>
      <description>After finishing my own session at XP 2011 I attended the second half of J.B. Rainsberger&amp;rsquo;stutorial on modular design.
For most of the time that I was there he drove out the design for a point of sale system in Java while showing how architectural patterns can emerge in the code just by focusing on improving names and removing duplication.
The second half of the session was much more interesting to watch as this was when J.</description>
    </item>
    
    <item>
      <title>Discussing the Undiscussable: Book Review</title>
      <link>https://markhneedham.com/blog/2011/05/07/discussing-the-undiscussable-book-review/</link>
      <pubDate>Sat, 07 May 2011 00:45:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/07/discussing-the-undiscussable-book-review/</guid>
      <description>I came across the work of Chris Argyris at the start of the yearand in a twitter conversation with Benjamin Mitchellhe suggested that Bill Noonan&amp;rsquo;s &amp;lsquo;Discussing the Undiscussable&amp;rsquo; was the most accessible text for someone new to the subject.
In the book Noonan runs through a series of different tools that Chris Argyrisoriginally came up with for helping people to handle difficult conversational situations more effectively.
I really like the way the book is written.</description>
    </item>
    
    <item>
      <title>Feedback Loops: Human Decisions</title>
      <link>https://markhneedham.com/blog/2011/05/05/feedback-loops-human-decisions/</link>
      <pubDate>Thu, 05 May 2011 18:04:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/05/feedback-loops-human-decisions/</guid>
      <description>I&amp;rsquo;ve been reading Donella Meadows&amp;rsquo; &amp;lsquo;Thinking In Systems: A Primer&amp;rsquo;, an introductory text on systems thinking, and after 30 pages or so the author poses the following challenge:
Meadows has quite a nice way of guiding us to thinking about systems by referring to &amp;lsquo;stocks&amp;rsquo; and &amp;lsquo;flows&amp;rsquo;.
For example the following diagram represents the flows into and out from a water reservoir:
The &amp;lsquo;water in reservoir&amp;rsquo; is the stock in this system while rain/river inflow act as the in flows and evaporation/discharge are the out flows.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Retrospective Coherence</title>
      <link>https://markhneedham.com/blog/2011/05/01/thoughtworks-university-retrospective-coherence/</link>
      <pubDate>Sun, 01 May 2011 11:25:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/01/thoughtworks-university-retrospective-coherence/</guid>
      <description>I recently came across Joseph Pelrine&amp;rsquo;s blog postwhere he describes the way that you might go about organising a great party.
He describes a party that a friend of his hosted and all the things which contributed to it being great, such as the people you invite, the music that is played, the food and drink that are served and the conversations that are had.
If you then wanted to replicate a &amp;lsquo;great party&amp;rsquo; you might think that you could just replay his friend&amp;rsquo;s party, with the same guests, same music, a script of the conversations had and so on.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: v2.0 vs v1.0</title>
      <link>https://markhneedham.com/blog/2011/04/27/thoughtworks-university-v2-0-vs-v1-0/</link>
      <pubDate>Wed, 27 Apr 2011 12:33:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/27/thoughtworks-university-v2-0-vs-v1-0/</guid>
      <description>Since we finished the most recent ThoughtWorks University session last week a few people have been asking me how the experience was and I&amp;rsquo;ve found myself comparing this experience to my own as an attendee in August 2006.
Back then ThoughtWorks University was much different. We had 5 weeks of workshop style sessions and then spent the last week working on an internal application.
This time we spent 1 week doing the workshop style sessions, 1 week working together on a story and then 4 weeks working on the application.</description>
    </item>
    
    <item>
      <title>The ladder of inference</title>
      <link>https://markhneedham.com/blog/2011/04/24/the-ladder-of-inference/</link>
      <pubDate>Sun, 24 Apr 2011 14:11:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/24/the-ladder-of-inference/</guid>
      <description>In Discussing the UndiscussableWilliam Noonan describes the ladder of inference, a tool which can be used to help us achieve double loop learning with respect to our interactions with other people.
It also helps people understand how they interpret that information and how they apply their interpretation to the issue or problem at hand.
Essentially, the Ladder of Inference is a metaphorical tool designed to help people understand and describe their use of inductive reasoning.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Things people found difficult</title>
      <link>https://markhneedham.com/blog/2011/04/23/thoughtworks-university-things-people-found-difficult/</link>
      <pubDate>Sat, 23 Apr 2011 19:47:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/23/thoughtworks-university-things-people-found-difficult/</guid>
      <description>After six weeks ThoughtWorks University #21 finished on Thursday so I thought it&amp;rsquo;d be interesting to summarise some of the things that people seemed to find difficult over the course of TWU.
These were most frequently related to incorrect wiring of Spring components but there were other reasons too.
People seemed to find these stack traces quite difficult to understand, particularly when one stack trace was nested inside another, and often just started guessing why the code wasn&amp;rsquo;t working.</description>
    </item>
    
    <item>
      <title>The sunk cost fallacy</title>
      <link>https://markhneedham.com/blog/2011/04/17/the-sunk-cost-fallacy/</link>
      <pubDate>Sun, 17 Apr 2011 12:05:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/17/the-sunk-cost-fallacy/</guid>
      <description>I recently came across David McRaney&amp;rsquo;s post about the sunk cost fallacy with reference to Farmville, a fallacy that is very applicable to software.
David starts off with the following statements which describe the fallacy pretty well:
The Truth: Your decisions are tainted by the emotional investments you accumulate, and the more you invest in something the harder it becomes to abandon it.
I think this is very true in a lot of IT organisations in particular when they&amp;rsquo;ve made a big investment on some sort of middleware, usually an ESB.</description>
    </item>
    
    <item>
      <title>Tech Leading: Initial Thoughts</title>
      <link>https://markhneedham.com/blog/2011/04/17/tech-leading-initial-thoughts/</link>
      <pubDate>Sun, 17 Apr 2011 11:27:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/17/tech-leading-initial-thoughts/</guid>
      <description>As I mentioned in an earlier post I&amp;rsquo;ve been playing the role of tech lead on the project that we&amp;rsquo;ve been doing at ThoughtWorks University so I thought it&amp;rsquo;d be interesting to note down some of my observations so far.
Out of the tech leads that I&amp;rsquo;ve had I liked the style of Dave Cameronthe best.
He viewed himself more as a technical facilitator rather than as a person who should make every single decision about how a system got built which meant that others also got a chance to take some responsibility.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: &#34;It&#39;s your project&#34;</title>
      <link>https://markhneedham.com/blog/2011/04/13/thoughtworks-university-its-your-project/</link>
      <pubDate>Wed, 13 Apr 2011 20:28:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/13/thoughtworks-university-its-your-project/</guid>
      <description>One of the things that we&amp;rsquo;ve struggled with at ThoughtWorks University is giving the attendees the opportunity to run the project that we&amp;rsquo;ve been working on.
The first few weeks were the most frustrating both for the trainers and for the attendees because we spent a lot of time telling the attendees that it was their project but then didn&amp;rsquo;t display behaviour consistent with that message.
From my observations this happened because the role of the trainers was defined as &amp;lsquo;senior team member&amp;rsquo; which meant that if a trainer saw something going wrong they&amp;rsquo;d try and fix it since that&amp;rsquo;s what they&amp;rsquo;d do in a normal team.</description>
    </item>
    
    <item>
      <title>Feedback: Easing in</title>
      <link>https://markhneedham.com/blog/2011/04/13/feedback-easing-in/</link>
      <pubDate>Wed, 13 Apr 2011 02:33:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/13/feedback-easing-in/</guid>
      <description>One of the most common techniques of feedback which I&amp;rsquo;ve come across is one that William Noonan describes in &amp;lsquo;Discussing the Undiscussable&amp;rsquo; as easing in.
From the book:
From my experience we&amp;rsquo;ll try to do this because giving our point of view could lead to an awkward conversation so we&amp;rsquo;d rather they express our opinion for us instead.
Amusingly I managed to create an example of easing in while showing a colleague (colleague 1) the chapter about easing in!</description>
    </item>
    
    <item>
      <title>HTML encoding/escaping with StringTemplate and Spring MVC</title>
      <link>https://markhneedham.com/blog/2011/04/09/html-encodingescaping-with-stringtemplate-and-spring-mvc/</link>
      <pubDate>Sat, 09 Apr 2011 10:54:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/09/html-encodingescaping-with-stringtemplate-and-spring-mvc/</guid>
      <description>Last week my colleague T.C. and I had to work out how to HTML encode the values entered by the user when redisplaying those onto the page to prevent a cross site scripting attack on the website.
I wrote a blog post a couple of years ago describing how to do this in ASP.NET MVCand the general idea is that we need to have a custom renderer which HTML encodes any strings that pass through it.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Similarities with &#39;Discussing the Undiscussable&#39;</title>
      <link>https://markhneedham.com/blog/2011/04/09/thoughtworks-university-similarities-with-discussing-the-undiscussable/</link>
      <pubDate>Sat, 09 Apr 2011 10:38:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/09/thoughtworks-university-similarities-with-discussing-the-undiscussable/</guid>
      <description>I&amp;rsquo;m currently reading the final chapter of William Noonan&amp;rsquo;s Discussing the Undiscussabletitled &amp;lsquo;Helping Those Who Teach, Learn&amp;rsquo; and a couple of the ideas that he describes seem quite applicable to what we&amp;rsquo;re doing at ThoughtWorks University.
I think this is the same with teaching/facilitating the learning of ThoughtWorks University and it seems to centre around the espoused theory and theory in action.
The espoused theory describes our theory of what we think we do in a situation whereas the theory in action describes what we actually do.</description>
    </item>
    
    <item>
      <title>Unix: Getting the sound from &#39;say&#39; as a wav file</title>
      <link>https://markhneedham.com/blog/2011/04/07/unix-getting-the-sound-from-say-as-a-wav-file/</link>
      <pubDate>Thu, 07 Apr 2011 19:18:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/07/unix-getting-the-sound-from-say-as-a-wav-file/</guid>
      <description>I spent a bit of time yesterday afternoon working out how to get the output from the Unix command &amp;lsquo;say&amp;rsquo; to be played whenever our build breaks.
We&amp;rsquo;re using cctrayon a Windows box for that purpose which means that we need to have the file in the &amp;lsquo;wav&amp;rsquo; format.
Unfortunately &amp;lsquo;say&amp;rsquo; doesn&amp;rsquo;t seem to be able to output a file in that format:
&amp;gt; say &amp;#34;WARNING! Drainage has occurred, please fix it.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Letting people explore</title>
      <link>https://markhneedham.com/blog/2011/04/06/thoughtworks-university-letting-people-explore/</link>
      <pubDate>Wed, 06 Apr 2011 01:34:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/06/thoughtworks-university-letting-people-explore/</guid>
      <description>I&amp;rsquo;ve been acting as the tech lead on the project that we&amp;rsquo;re working on at ThoughtWorks University and as a result I sometimes find myself being dragged away from my pair to help someone else.
An interesting thing which I&amp;rsquo;ve noticed on more than one occasion is that when I&amp;rsquo;ve come back from helping - maybe 15 or 20 minutes later - my pair has actually got much further than I expected them to.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: The coaching/training conflict</title>
      <link>https://markhneedham.com/blog/2011/04/03/thoughtworks-university-the-coachingtraining-conflict/</link>
      <pubDate>Sun, 03 Apr 2011 17:11:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/03/thoughtworks-university-the-coachingtraining-conflict/</guid>
      <description>As I mentioned in an earlier postSumeet has been encouraging us to act more as coaches rather than trainers during ThoughtWorks University but it&amp;rsquo;s not quite as easy as it seems.
I&amp;rsquo;ve noticed that there are a few things that contribute to this difficulty.
The biggest obstacle is that by the end of TWU the trainers are required to send a review about each of the grads to the respective Resource Managers describing each person&amp;rsquo;s current level of skill in various categories.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: The use of games</title>
      <link>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-the-use-of-games/</link>
      <pubDate>Wed, 30 Mar 2011 20:34:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-the-use-of-games/</guid>
      <description>When I attended ThoughtWorks University in August 2006 we spent quite a bit of time playing games which had been designed to help us to achieve various learning objectives.
At the time I didn&amp;rsquo;t think much about it but now being on the other side as a trainer I&amp;rsquo;ve started to doubt whether these types of sessions are as useful as I originally thought.
I recently came across a blog post Sumeet wrote last year where he talks about effective e-learning environmentsand I think his point still applies here:</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: A double loop learning example</title>
      <link>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-a-double-loop-learning-example/</link>
      <pubDate>Wed, 30 Mar 2011 19:17:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-a-double-loop-learning-example/</guid>
      <description>One of the most interesting things that I&amp;rsquo;ve been reading about recently is the idea of single and double loop learning which were defined by Chris Argyris and Donald Schon in their book &amp;lsquo;Organizational Learning: A theory of action perspective&amp;rsquo; in 1978.
I quite like the definitions that Mark Smith gives for these types of learning in his article about Chris Argyris:
Single Loop LearningAny reflection is directed toward making the strategy more effective.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Pulling the &#39;pearls&#39;</title>
      <link>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-pulling-the-pearls/</link>
      <pubDate>Tue, 29 Mar 2011 18:32:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-pulling-the-pearls/</guid>
      <description>I recently wrote about the coding dojo style week that we ran at ThoughtWorks University last weekand I briefly mentioned that we used break out sessions to cover topics (&amp;lsquo;the pearls&amp;rsquo;) that people didn&amp;rsquo;t totally understand.
To describe that in more detail what we did to start with was write the name of each of the 90/180 minute sessions on a card and put it on the wall under a &amp;lsquo;To Do&amp;rsquo; heading:</description>
    </item>
    
    <item>
      <title>The working long hours culture</title>
      <link>https://markhneedham.com/blog/2011/03/29/the-working-long-hours-culture/</link>
      <pubDate>Tue, 29 Mar 2011 17:25:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/29/the-working-long-hours-culture/</guid>
      <description>One of the aspects of software development that I&amp;rsquo;ve thankfully seen relatively infrequently over the last few years is that of some people in teams working long hours on a consistent basis.
I have seen it happen on a few occasions and I think it can have a detrimental effect on a team rather than the good which is presumably intended.
The biggest disadvantage is that it makes other people in the team feel guilty that they aren&amp;rsquo;t working long hours and they may feel peer pressured into matching the hours of their colleagues.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Coding Dojo Style</title>
      <link>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-coding-dojo-style/</link>
      <pubDate>Tue, 29 Mar 2011 17:15:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-coding-dojo-style/</guid>
      <description>One of the things that Sumeethas been encouraging at ThoughtWorks University is the idea that the &amp;lsquo;trainers&amp;rsquo; should be in a coaching role rather than a training one.
As a result of this suggestion one of the things we&amp;rsquo;ve done is to change the style of the second weekso that it wasn&amp;rsquo;t full of sessions/workshops but instead involved working on code as a group.
Jimcame up with the idea of the &amp;lsquo;exploded story&amp;rsquo; whereby we spent the whole of last week as a group working on one story for Sukrupawhile spending quite a bit of time exploring the different activities that playing a story end to end would involve.</description>
    </item>
    
    <item>
      <title>Java: Faking System.in</title>
      <link>https://markhneedham.com/blog/2011/03/24/java-faking-system-in/</link>
      <pubDate>Thu, 24 Mar 2011 21:58:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/24/java-faking-system-in/</guid>
      <description>We ran a refactoring dojoa couple of days ago at ThoughtWorks University and in preparation I wrote some system level tests around the coding problemthat we were going to use during the session.
It&amp;rsquo;s a command line application which is called through the main method of &amp;lsquo;Program&amp;rsquo; and since there&amp;rsquo;s no dependency injection we need to be able to set System.in and System.out in order to do any testing.
My initial thinking was that it should be possible to fake System.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Brain dumping</title>
      <link>https://markhneedham.com/blog/2011/03/23/twu-brain-dumping/</link>
      <pubDate>Wed, 23 Mar 2011 18:45:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/23/twu-brain-dumping/</guid>
      <description>One of the things that I&amp;rsquo;m learning while working at ThoughtWorks University is to bite my tongue a bit to allow people to learn in their own way.
I noticed this particularly yesterday in a refactoring session we were doing.
For about 10-15 minutes in the middle of the session we&amp;rsquo;d managed to get the code into a state where it didn&amp;rsquo;t compile and we couldn&amp;rsquo;t run the tests.
The &amp;lsquo;natural&amp;rsquo; inclination in that situation for me would be to step in and impart some &amp;lsquo;wisdom&amp;rsquo; about the importance of taking small steps while refactoring.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: A refactoring dojo</title>
      <link>https://markhneedham.com/blog/2011/03/22/thoughtworks-university-a-refactoring-dojo/</link>
      <pubDate>Tue, 22 Mar 2011 19:10:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/22/thoughtworks-university-a-refactoring-dojo/</guid>
      <description>I facilitated a refactoring session today at ThoughtWorks University where we spent the morning refactoring our way through one of the problems the grads had to work on as part of the pre coursework.
The previous version of this session has been more structured, whereby one of the trainers worked solo at the keyboard and took suggestions from the group about which refactoring to cover next.
There are a certain number of refactorings that the session aims to introduce and the trainer would have practiced beforehand so they could make these fairly flawlessly.</description>
    </item>
    
    <item>
      <title>Retrospectives: Mini Group Discussions</title>
      <link>https://markhneedham.com/blog/2011/03/20/retrospectives-mini-group-discussions/</link>
      <pubDate>Sun, 20 Mar 2011 18:36:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/20/retrospectives-mini-group-discussions/</guid>
      <description>One of the approaches that I like the best in retrospectives is when the facilitator splits the team into smaller groups during the brainstorming part of the retrospective.
I decided to try this out in a retrospective we ran after one week of ThoughtWorks University, using The Retrospective Starfishto provide a framework in which people could frame their thoughts.
Usually what I&amp;rsquo;ve seen happen in these mini groups is that everyone will write down their own ideas on stickies and then discuss them as a group but still put up all the stickies even if the group didn&amp;rsquo;t agree with everything.</description>
    </item>
    
    <item>
      <title>Confirmation Bias and Loss of Autonomy</title>
      <link>https://markhneedham.com/blog/2011/03/20/confirmation-bias-and-loss-of-autonomy/</link>
      <pubDate>Sun, 20 Mar 2011 18:08:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/20/confirmation-bias-and-loss-of-autonomy/</guid>
      <description>I&amp;rsquo;ve mentioned confirmation bias ina fewof my previous blog postsbut I hadn&amp;rsquo;t realised quite how widespread it can be in organisations until quite recently.
Confirmation biasAs a result, people gather evidence and recall information from memory selectively, and interpret it in a biased way.
The biases appear in particular for emotionally significant issues and for established beliefs.
I&amp;rsquo;ve noticed that it is particularly prevalent in organisations when people feel that they are being told what to do i.</description>
    </item>
    
    <item>
      <title>Pair Presenting</title>
      <link>https://markhneedham.com/blog/2011/03/17/pair-presenting/</link>
      <pubDate>Thu, 17 Mar 2011 06:52:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/17/pair-presenting/</guid>
      <description>Over the last year or so I&amp;rsquo;ve had some opportunities to pair with a few different people on sessions/presentations that we&amp;rsquo;ve been giving.
I much prefer doing this than presenting something by myself mainly because it&amp;rsquo;s much more fun and seems to encourage more participation than when I do something alone.
I feel that it&amp;rsquo;s probably easier to pair present if you both have similar opinions on the subject matter and are comfortable with a similar style of delivery.</description>
    </item>
    
    <item>
      <title>TWU: Fishbowl</title>
      <link>https://markhneedham.com/blog/2011/03/15/twu-fishbowl/</link>
      <pubDate>Tue, 15 Mar 2011 01:11:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/15/twu-fishbowl/</guid>
      <description>As part of a session on ThoughtWorks valuesat ThoughtWorks Univesity we held a fishbowlto discuss the trade offs we often have to make between the values when confronted with real life situations.
Four to five chairs are arranged in an inner circle. This is the fishbowl. The remaining chairs are arranged outside the fishbowl. A few participants are selected to fill the fishbowl, while the rest of the group sit on the chairs outside the fishbowl.</description>
    </item>
    
    <item>
      <title>Use of language: Intuitive</title>
      <link>https://markhneedham.com/blog/2011/03/13/use-of-language-intuitive/</link>
      <pubDate>Sun, 13 Mar 2011 13:39:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/13/use-of-language-intuitive/</guid>
      <description>Sumeetand I were recently discussing the difference between the use of Google Groups for internal communication compared to the Jive platformwhich we&amp;rsquo;re now moving to and I suggested that I found the former more intuitive to use.
Sumeet suggested that the word &amp;lsquo;intuitive&amp;rsquo; is quite overloaded and later pointed me to an article on the Moodle websitewhich advocates the same thing:
It is generally accepted that a large part of usability is based on familiarity and experience.</description>
    </item>
    
    <item>
      <title>&#34;Everything I know everyone else knows&#34;</title>
      <link>https://markhneedham.com/blog/2011/03/13/everything-i-know-everyone-else-knows/</link>
      <pubDate>Sun, 13 Mar 2011 12:03:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/13/everything-i-know-everyone-else-knows/</guid>
      <description>For as long as I can remember I&amp;rsquo;ve had the belief that, at least as far as software is concerned, everything I know how to do everyone else also knows how to do.
I carried that assumption for quite a while and only realised relatively recently how harmful it can be.
The most observable outcome I noticed is that I either didn&amp;rsquo;t give my opinion in group situations or just didn&amp;rsquo;t take part in them because I assumed that what I wanted to say would eventually be contributed by someone else anyway.</description>
    </item>
    
    <item>
      <title>TWU: Session Preparation - Limited WIP</title>
      <link>https://markhneedham.com/blog/2011/03/09/twu-session-preparation-limited-wip/</link>
      <pubDate>Wed, 09 Mar 2011 14:42:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/09/twu-session-preparation-limited-wip/</guid>
      <description>I&amp;rsquo;ve spent a fair percentage of the last couple of weeks preparing sessions for ThoughtWorks University and one thing Frankiehas been trying to encourage is only preparing one at a time i.e. limited work in progress
Normally I&amp;rsquo;d be completely in favour of that approach but it doesn&amp;rsquo;t seem to work at all for me with this type of work.
There seem to be a few parts to creating a session, including:</description>
    </item>
    
    <item>
      <title>Kano Model: Some ThoughtWorks examples</title>
      <link>https://markhneedham.com/blog/2011/03/06/kano-model-some-thoughtworks-examples/</link>
      <pubDate>Sun, 06 Mar 2011 08:37:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/06/kano-model-some-thoughtworks-examples/</guid>
      <description>My colleague Jason Yip recently linkedto the Kano Modeland although it&amp;rsquo;s a theory about product development the definition of what counts as a product seems like it can be quite broad.
The best explanation of the model that I&amp;rsquo;ve come across so far is a post by Jean Claude Grosjeanwhich Frankielinked me to.
Grosjean describes the three types of requirements like so:
This is the happy surprise that can make a difference but if they are not there then there won&amp;rsquo;t be any dissatisfaction or frustration because they’re not expected.</description>
    </item>
    
    <item>
      <title>Coding: Reflection vs Action mode</title>
      <link>https://markhneedham.com/blog/2011/03/06/coding-reflection-vs-action-mode/</link>
      <pubDate>Sun, 06 Mar 2011 04:19:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/06/coding-reflection-vs-action-mode/</guid>
      <description>It recently struck me while preparing some ThoughtWorks University sessions that there appear to be two modes that I spend my time switching between while coding:
I spent the majority of 2008 and 2009 in reflective mode on the systems I was working on which can be seen by scanning through a lot of the blog posts that I wrote during that time.
I&amp;rsquo;m sure would have been times when I was action mode but I was far more interested in how something was being built and whether that could be done more successfully.</description>
    </item>
    
    <item>
      <title>TWU: Session Design - Measurable goals</title>
      <link>https://markhneedham.com/blog/2011/03/04/twu-session-design-measurable-goals/</link>
      <pubDate>Fri, 04 Mar 2011 02:49:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/04/twu-session-design-measurable-goals/</guid>
      <description>We&amp;rsquo;ve been spending our time recently preparing the sessions for the next ThoughtWorks University batch and one thing Sumeethas encouraged us to do is ensure that we have a measurable goal for each session.
In our case that means that we need to design our sessions with the intention of the grads being able to do something rather than understand something after the session.
It&amp;rsquo;s very difficult to measure whether someone understands something and from what I&amp;rsquo;ve noticed having a goal of someone understanding something can encourage you to put in more than is strictly necessary.</description>
    </item>
    
    <item>
      <title>Ruby: Refactoring from hash to object</title>
      <link>https://markhneedham.com/blog/2011/02/27/ruby-refactoring-from-hash-to-object/</link>
      <pubDate>Sun, 27 Feb 2011 20:10:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/27/ruby-refactoring-from-hash-to-object/</guid>
      <description>Something I&amp;rsquo;ve noticed when I play around with Ruby in my own time is that I nearly always end up with the situation where I&amp;rsquo;m passing hashes all over my code and to start with it&amp;rsquo;s not a big deal.
Unfortunately I eventually get to the stage where I&amp;rsquo;m effectively modelling an object inside a hash and it all gets very difficult to understand.
I&amp;rsquo;ve written a few times before about incrementally refactoringcode so this seemed like a pretty good chance for me to try that out.</description>
    </item>
    
    <item>
      <title>Pair Programming: Doodling</title>
      <link>https://markhneedham.com/blog/2011/02/26/pair-programming-doodling/</link>
      <pubDate>Sat, 26 Feb 2011 05:20:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/26/pair-programming-doodling/</guid>
      <description>Another interesting pair programming &amp;lsquo;technique&amp;rsquo; which I rediscovered while pairing with Priyankis that of doodling or drawing various parts of the solution when your pair is writing code. I find that this helps to stop my brain wondering off and lets me reflect on what we&amp;rsquo;re doing from a higher level.
As an added bonus it also seems to allow me to listen more effectivelyto my pair.
From what I&amp;rsquo;ve noticed it works most effectively when the other person is reasonably comfortable with the code base and language which was certainly the case when I was pairing with Priyank.</description>
    </item>
    
    <item>
      <title>Pecha Kucha: My first attempt</title>
      <link>https://markhneedham.com/blog/2011/02/26/pecha-kucha-my-first-attempt/</link>
      <pubDate>Sat, 26 Feb 2011 04:39:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/26/pecha-kucha-my-first-attempt/</guid>
      <description>The first time I came across the Pecha Kuchastyle of presenting was at the XP 2010 conference during the Agile Suitcasesession where Pat Kuaand some others talked about the practices, principles and values they most favoured.
I&amp;rsquo;ve never done one before but as part of the preparation work for ThoughtWorks Universityeach of the trainers had to prepare one which we then presented to each other yesterday.
Despite the format being different than a normal presentation I still think the general idea of presenting any information applies - if you can tell it as a story then you have a much greater chance of keeping people&amp;rsquo;s attention.</description>
    </item>
    
    <item>
      <title>Books: Know why you&#39;re reading it </title>
      <link>https://markhneedham.com/blog/2011/02/26/books-know-why-youre-reading-it/</link>
      <pubDate>Sat, 26 Feb 2011 03:06:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/26/books-know-why-youre-reading-it/</guid>
      <description>Something which I frequently forget while reading books is that it&amp;rsquo;s actually quite useful to know exactly why you&amp;rsquo;re reading it i.e. what knowledge are you trying to gain by doing so.
I noticed this again recently while reading The Agile Samurai- it&amp;rsquo;s one of the books we ask ThoughtWorks Universityparticipants to read before they come to India.
Implicitly I knew that I just wanted to get a rough idea of what sort of things it&amp;rsquo;s telling people but I somewhat foolishly just started reading it cover to cover.</description>
    </item>
    
    <item>
      <title>Pair Programming: &#34;What are you trying to learn?&#34;</title>
      <link>https://markhneedham.com/blog/2011/02/23/pair-programming-what-are-you-trying-to-learn/</link>
      <pubDate>Wed, 23 Feb 2011 02:58:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/23/pair-programming-what-are-you-trying-to-learn/</guid>
      <description>I&amp;rsquo;ve noticed recently that while pairing with various different people that I frequently ask my pair what they&amp;rsquo;re trying to learn through the approach that they&amp;rsquo;re about to take.
I tend to use it when I don&amp;rsquo;t really understand what my pair is doing and want to find out so that I can stay engaged.
It seems to be a more effective and less confrontational way of finding out than saying &amp;ldquo;What are you doing?</description>
    </item>
    
    <item>
      <title>Espoused theory, theory in action &amp; hypocrisy </title>
      <link>https://markhneedham.com/blog/2011/02/23/espoused-theory-theory-in-action-hypocrisy/</link>
      <pubDate>Wed, 23 Feb 2011 01:34:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/23/espoused-theory-theory-in-action-hypocrisy/</guid>
      <description>Earlier in the year I wrote about Chris Argyris&amp;rsquo; espoused theory and theory in actionand one of the interesting aspects to it which I hadn&amp;rsquo;t previously considered is how we treat people when their espoused theory and theory in action don&amp;rsquo;t match.
My tendency is to think that these people are hypocrites but Benjamin Mitchellpointed out in a conversation on twitter that it&amp;rsquo;s not really helpful to think that way:</description>
    </item>
    
    <item>
      <title>Pomodoro: Observations from giving it a go</title>
      <link>https://markhneedham.com/blog/2011/02/20/pomodoro-observations-from-giving-it-a-go/</link>
      <pubDate>Sun, 20 Feb 2011 19:26:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/20/pomodoro-observations-from-giving-it-a-go/</guid>
      <description>I learnt about the pomodoro techniquea couple of years ago and while I did try it out sporadically back then, it&amp;rsquo;s only recently that I thought I&amp;rsquo;d properly give it a try when managing my spare time.
My approach without the pomodoro technique is to have a long list of things that I could do and then not really doing any of them because I feel bad about not doing one of the other things instead.</description>
    </item>
    
    <item>
      <title>Communication: Listening</title>
      <link>https://markhneedham.com/blog/2011/02/20/communication-listening/</link>
      <pubDate>Sun, 20 Feb 2011 18:43:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/20/communication-listening/</guid>
      <description>I realised a couple of weeks ago while pairing with a colleague that I&amp;rsquo;ve become quite bad at interrupting people while they&amp;rsquo;re speaking.
I did have an inkling that I&amp;rsquo;d let my ability to properly listen to someone drift a bit but I hadn&amp;rsquo;t seen any evidenceuntil my colleague pointed it out.
Somewhat ironically I actually wrote a post about active listeningwhen I first started working at ThoughtWorks in 2006 and reading back over the listening barriers that I listed I realise that there are a few that I tend to break:</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Balancing helping and learning</title>
      <link>https://markhneedham.com/blog/2011/02/19/thoughtworks-university-balancing-helping-and-learning/</link>
      <pubDate>Sat, 19 Feb 2011 15:15:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/19/thoughtworks-university-balancing-helping-and-learning/</guid>
      <description>6 months after my first attempt to train one of the ThoughtWorks Universitybatches was cut short I&amp;rsquo;m back in Bangalore again and spent the first few days of this week pairing with the grads.
It&amp;rsquo;s been interesting for me trying to balance how much I help and suggest ideas while still allowing them to learn at the same time.
At the moment I think I&amp;rsquo;m leaning too far towards helping and not realising until later on that my colleague hadn&amp;rsquo;t quite understood why I&amp;rsquo;d suggested what I did and therefore hadn&amp;rsquo;t learnt anything from my suggestion.</description>
    </item>
    
    <item>
      <title>Increasing team sizes: Collective unresponsibility</title>
      <link>https://markhneedham.com/blog/2011/02/16/increasing-team-sizes-collective-unresponsibility/</link>
      <pubDate>Wed, 16 Feb 2011 18:00:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/16/increasing-team-sizes-collective-unresponsibility/</guid>
      <description>After a few recent conversations with colleagues as well as my observations of several projects I&amp;rsquo;m coming to the conclusion that the way that people react in situations often differs significantly depending on whether they&amp;rsquo;re working in a large or small team.
One of the most obvious ways that this manifests itself is when there comes a need for someone to volunteer to take care of something - be it a particular functional area, communication with the onshore team or something else.</description>
    </item>
    
    <item>
      <title>Vim: Copying to and retrieving from the clipboard</title>
      <link>https://markhneedham.com/blog/2011/02/14/vim-copying-to-and-retrieving-from-the-clipboard/</link>
      <pubDate>Mon, 14 Feb 2011 14:13:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/14/vim-copying-to-and-retrieving-from-the-clipboard/</guid>
      <description>My memory when it comes to remembering how to get text to and from Vim via the clipboard is pretty bad so I thought I&amp;rsquo;d try summarising what I know and see if that works out any better.
We can access the system clipboard via the &amp;lsquo;+&amp;rsquo; buffer so the commands revolve around that.
To copy the whole file to the clipboard we can use this command:
:%y+ Or if we want to get the data between lines 4 and 10 then we could do:</description>
    </item>
    
    <item>
      <title>CouchDB: Join like behaviour with link functions</title>
      <link>https://markhneedham.com/blog/2011/02/13/couchdb-join-like-behaviour-with-link-functions/</link>
      <pubDate>Sun, 13 Feb 2011 17:58:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/13/couchdb-join-like-behaviour-with-link-functions/</guid>
      <description>I&amp;rsquo;ve been playing around with the Twitter streaming APIa bit lately to see which links are being posted most frequently by the people I follow and then storing the appropriate tweets in CouchDB.
I recently came across a problem which I struggled to solve for quite a while.
Based on the following map function:
{ &amp;#34;_id&amp;#34; : &amp;#34;_design/query&amp;#34;, &amp;#34;views&amp;#34; : { &amp;#34;by_link&amp;#34; : { &amp;#34;map&amp;#34; : &amp;#34;function(doc){ emit(doc.actual_link, { user : doc.</description>
    </item>
    
    <item>
      <title>CouchDB: &#39;badmatch&#39; when executing view</title>
      <link>https://markhneedham.com/blog/2011/02/12/couchdb-badmatch-when-executing-view/</link>
      <pubDate>Sat, 12 Feb 2011 18:03:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/12/couchdb-badmatch-when-executing-view/</guid>
      <description>I&amp;rsquo;ve been playing around with CouchDBagain in my annual attempt to capture the links appearing on my twitter stream and I managed to create the following error for myself:
$ curl http://127.0.0.1:5984/twitter_links/_design/cleanup/_view/find_broken_links {&amp;#34;error&amp;#34;:&amp;#34;badmatch&amp;#34;,&amp;#34;reason&amp;#34;:&amp;#34;{\n \&amp;#34;find_broken_links\&amp;#34;: {\n \&amp;#34;map\&amp;#34;: \&amp;#34;function(doc) { \nvar prefix = doc.actual_link.match(/.*/); \n if(true) { emit(doc.actual_link, null); } }\&amp;#34;\n }\n}&amp;#34;} It turns out this error is because I&amp;rsquo;ve managed to create new line characters in the view while editing it inside CouchDBX.</description>
    </item>
    
    <item>
      <title>Sed: Extended regular expressions</title>
      <link>https://markhneedham.com/blog/2011/02/11/sed-extended-regular-expressions/</link>
      <pubDate>Fri, 11 Feb 2011 20:34:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/11/sed-extended-regular-expressions/</guid>
      <description>Irfanand I were looking at how to do some text substitution in a text file this afternoon and turned to sed to help us in our quest.
He had originally used grep to find what he wanted to replace on each line, using a grep regular expression to match one or more numbers:
cat the_file.txt | grep &amp;#34;[0-9]\+&amp;#34; That works pretty well but since I knew how to do the substitution in sed we needed to convert the regular expression to work with sed.</description>
    </item>
    
    <item>
      <title>University coding</title>
      <link>https://markhneedham.com/blog/2011/02/06/university-coding/</link>
      <pubDate>Sun, 06 Feb 2011 16:57:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/06/university-coding/</guid>
      <description>We went to do some university recruitment recently and pairing with some of the students reminded me of some things that I&amp;rsquo;ve started doing better since I started working professionally.
I wanted to note them down so that I&amp;rsquo;m more aware that these might be common areas to improve on for university graduates that I work with in the future.
It seemed the same for the students I paired with and I therefore found it quite difficult to understand some of the code that they&amp;rsquo;d written.</description>
    </item>
    
    <item>
      <title>Feedback: Making the request specific</title>
      <link>https://markhneedham.com/blog/2011/02/06/feedback-making-the-request-specific/</link>
      <pubDate>Sun, 06 Feb 2011 15:47:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/06/feedback-making-the-request-specific/</guid>
      <description>My colleagues in Pune have been collecting feedback over the past week as part of the quarterly feedback cycle and it&amp;rsquo;s got me thinking about the way that people ask for the feedback.
The most popular way is to ask for general feedback which answers questions like this:
The problem I have with this is that it&amp;rsquo;s extremely generic and it&amp;rsquo;s much easier to drift towards giving evaluative feedbackwhere you judge the person against some perception of what they &amp;lsquo;should&amp;rsquo; be doing.</description>
    </item>
    
    <item>
      <title>Ruby: Where to define the method?</title>
      <link>https://markhneedham.com/blog/2011/02/03/ruby-where-to-define-the-method/</link>
      <pubDate>Thu, 03 Feb 2011 19:37:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/03/ruby-where-to-define-the-method/</guid>
      <description>In our application we deal with items which can be put into a shopping cart.
An item is defined like so:
class Item &amp;lt; ActiveRecord::Base end One problem that we had to solve recently was working out how to display a message to the user if the item they wanted to buy was out of stock.
We can find out if items are out of stock by making a call to an external service:</description>
    </item>
    
    <item>
      <title>&#39;Why&#39; often unhelpful</title>
      <link>https://markhneedham.com/blog/2011/02/03/why-often-unhelpful/</link>
      <pubDate>Thu, 03 Feb 2011 18:51:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/03/why-often-unhelpful/</guid>
      <description>Something which I&amp;rsquo;ve noticed recently in particular when interviewing people but also in some other situations is that frequently posing a question which begins with &amp;lsquo;why&amp;rsquo; results in quite a defensive response.
While discussing this with Priyankhe pointed out that asking a question in this way can often be construed as a criticism of the idea being questioned.
Admittedly it is often the case that I&amp;rsquo;m questioning something which has been done differently than what I might have done but I&amp;rsquo;m still curious as to the reasoning behind it.</description>
    </item>
    
    <item>
      <title>Increasing team sizes: Boredom</title>
      <link>https://markhneedham.com/blog/2011/01/27/increasing-team-sizes-boredom/</link>
      <pubDate>Thu, 27 Jan 2011 22:59:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/27/increasing-team-sizes-boredom/</guid>
      <description>Although the majority of the teams that I&amp;rsquo;ve worked on over the past few years have been relatively small in size I have worked on a few where the team size has been pretty big and perhaps inevitably the productivity has felt much lower.
I think this is somewhat inevitable since although the overall throughput of these teams may be higher than on smaller teams, due to problems such as having difficulty parallelising work, not every pair is working at maximum productivity.</description>
    </item>
    
    <item>
      <title>The Five Orders of Ignorance - Phillip G. Armour</title>
      <link>https://markhneedham.com/blog/2011/01/26/the-five-orders-of-ignorance-phillip-g-armour/</link>
      <pubDate>Wed, 26 Jan 2011 18:08:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/26/the-five-orders-of-ignorance-phillip-g-armour/</guid>
      <description>While trawling the comments of Dan North&amp;rsquo;s &amp;lsquo;Deliberate Discovery&amp;rsquo; post I came across an interesting article written by Phillip G. Armour titled &amp;lsquo;The Five Orders of Ignorance&amp;rsquo;.
The main thing I took from the article is that the author uses the metaphor of software as a &amp;lsquo;knowledge acquisition activity&#39;for which he then defines five orders of ignorance that we can have in our attempts to acquire that knowledge.
These are as follows:</description>
    </item>
    
    <item>
      <title>Deliberate Discovery: The stuff I don&#39;t know list</title>
      <link>https://markhneedham.com/blog/2011/01/26/deliberate-discovery-the-stuff-i-dont-know-list/</link>
      <pubDate>Wed, 26 Jan 2011 18:07:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/26/deliberate-discovery-the-stuff-i-dont-know-list/</guid>
      <description>Towards the end of Dan North&amp;rsquo;s post on Deliberate Discoveryhe makes the following suggestion:
This reminded me a lot of what I used to do when I came across things that I didn&amp;rsquo;t know how to do a few years ago.
I would write down the thing that I didn&amp;rsquo;t know and then make sure that I looked up the things on my list at the end of the day and then discuss what I&amp;rsquo;d read/learnt with a colleague the next day.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Stories -  Negotiable</title>
      <link>https://markhneedham.com/blog/2011/01/24/distributed-agile-stories-negotiable/</link>
      <pubDate>Mon, 24 Jan 2011 03:34:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/24/distributed-agile-stories-negotiable/</guid>
      <description>I was recently reading an article about how to write meaningful user storiesand towards the end of it the author mentioned the INVEST acronym which suggests that stories should be:
From what I&amp;rsquo;ve seen the most difficult one to achieve in a distributed context is that stories should be &amp;lsquo;negotiable&amp;rsquo;, in particular when it comes to negotiating the way that the UX of a bit of functionality should work.
On most of the projects that I&amp;rsquo;ve worked on the people designing the UX tend to work slightly detached from the development team and then send their designs over as wire frames.</description>
    </item>
    
    <item>
      <title>While in India: Osmotic communication</title>
      <link>https://markhneedham.com/blog/2011/01/24/while-in-india-osmotic-communication/</link>
      <pubDate>Mon, 24 Jan 2011 03:33:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/24/while-in-india-osmotic-communication/</guid>
      <description>One of the things that has been puzzling me during my time in India is the amount of time that is spent in meetings pushing information to people rather than them pulling it.
In previous projects that I&amp;rsquo;ve worked on a lot of the knowledge was moved between around as a result of osmotic communicationThis is normally accomplished by seating them in the same room.
Then, when one person asks a question, others in the room can either tune in or tune out, contributing to the discussion or continuing with their work.</description>
    </item>
    
    <item>
      <title>Listening to feedback mechanisms</title>
      <link>https://markhneedham.com/blog/2011/01/21/listening-to-feedback-mechanisms/</link>
      <pubDate>Fri, 21 Jan 2011 03:46:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/21/listening-to-feedback-mechanisms/</guid>
      <description>In Growing Object Oriented Softwarethe authors talk about the value of listening to our tests to understand potential problems with our code and I&amp;rsquo;ve started to notice recently that there are implicit feedback mechanisms dotted around at a higher level which we can also listen to.
A couple of examples come to mind:
I&amp;rsquo;ve worked on a couple of projects where we&amp;rsquo;ve got to the end of the iteration and realised that we don&amp;rsquo;t actually have anything tangible to show the product owner.</description>
    </item>
    
    <item>
      <title>Coding: Spike Driven Development</title>
      <link>https://markhneedham.com/blog/2011/01/19/coding-spike-driven-development/</link>
      <pubDate>Wed, 19 Jan 2011 17:46:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/19/coding-spike-driven-development/</guid>
      <description>While reading Dan North&amp;rsquo;s second post about software craftsmanshipI was able to resonate quite a lot with a point he made in the &amp;lsquo;On value&amp;rsquo; section:
I&amp;rsquo;ve been finding that quite frequently with some of the problems I&amp;rsquo;ve worked on recently that we haven&amp;rsquo;t known exactly how to solve it when we started and ended up hacking/spiking the code quite a bit at that stage until we figured out what we needed to do.</description>
    </item>
    
    <item>
      <title>MySQL: The used command is not allowed with this MySQL version</title>
      <link>https://markhneedham.com/blog/2011/01/18/mysql-the-used-command-is-not-allowed-with-this-mysql-version/</link>
      <pubDate>Tue, 18 Jan 2011 18:58:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/18/mysql-the-used-command-is-not-allowed-with-this-mysql-version/</guid>
      <description>For my own reference more than anything else, on my version of MySQL on Mac OS X, which is:
When I try to use the &amp;lsquo;LOAD DATA LOCAL&amp;rsquo; option to load data into tables I get the following error message:
ERROR 1148 (42000) at line 4: The used command is not allowed with this MySQL version Which we can get around by using the following flag as described in the comments of the documentation:</description>
    </item>
    
    <item>
      <title>Installing git-svn on Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/01/15/installing-git-svn-on-mac-os-x/</link>
      <pubDate>Sat, 15 Jan 2011 19:05:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/15/installing-git-svn-on-mac-os-x/</guid>
      <description>I somehow managed to uninstall git-svn on my machine and Emmanuel Bernard&amp;rsquo;s blog postsuggested it could be installed using ports:
sudo port install git-core +svn I tried that and was ending up with the following error:
---&amp;gt; Computing dependencies for git-core ---&amp;gt; Dependencies to be installed: p5-svn-simple subversion-perlbindings apr-util db46 cyrus-sasl2 neon serf subversion p5-term-readkey ---&amp;gt; Verifying checksum(s) for db46 Error: Checksum (md5) mismatch for patch.4.6.21.1 Error: Checksum (md5) mismatch for patch.</description>
    </item>
    
    <item>
      <title>mount_smbfs: mount error..File exists</title>
      <link>https://markhneedham.com/blog/2011/01/15/mount_smbfs-mount-error-file-exists/</link>
      <pubDate>Sat, 15 Jan 2011 18:31:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/15/mount_smbfs-mount-error-file-exists/</guid>
      <description>I&amp;rsquo;ve been playing around with mounting a Windows file share onto my machine via the terminal because I&amp;rsquo;m getting bored of constantly having to go to Finder and manually mounting it each time!
After a couple of times of mounting and unmounting the drive I ended up with this error:
&amp;gt; mount_smbfs //mneedham@punedc02/shared punedc02_shared/ mount_smbfs: mount error: /Volumes/punedc02_shared: File exists I originally thought the &amp;lsquo;file exists&amp;rsquo; part of the message was suggesting that I&amp;rsquo;d already mounted a share on &amp;lsquo;punedc02_shared&amp;rsquo; but calling the &amp;lsquo;umount&amp;rsquo; command led to the following error:</description>
    </item>
    
    <item>
      <title>Sed: &#39;sed: 1: invalid command code R&#39; on Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/01/14/sed-sed-1-invalid-command-code-r-on-mac-os-x/</link>
      <pubDate>Fri, 14 Jan 2011 14:15:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/14/sed-sed-1-invalid-command-code-r-on-mac-os-x/</guid>
      <description>A few days ago I wrote about how we&amp;rsquo;d been using Sed to edit multiple filesand while those examples were derived from what we&amp;rsquo;d been using on Ubuntu I realised that they didn&amp;rsquo;t actually work on Mac OS X.
For example, the following command:
sed -i &amp;#39;s/require/include/&amp;#39; Rakefile Throws this error:
sed: 1: &amp;#34;Rakefile&amp;#34;: invalid command code R What I hadn&amp;rsquo;t realised is that on the Mac version of sed the &amp;lsquo;-i&amp;rsquo; flag has a mandatory suffix, as described in this post.</description>
    </item>
    
    <item>
      <title>Chris Argyris: Espoused Theory vs Theory in Action</title>
      <link>https://markhneedham.com/blog/2011/01/13/chris-argyris-espoused-theory-vs-theory-in-action/</link>
      <pubDate>Thu, 13 Jan 2011 20:02:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/13/chris-argyris-espoused-theory-vs-theory-in-action/</guid>
      <description>Via some combination of Christian Blunden, Pat Kua, David Joyceand Benjamin MitchellI&amp;rsquo;ve been spending some time lately reading about the work of Chris Argyris.
I&amp;rsquo;ve previously come across his name while reading The Fifth Disciplinebut I didn&amp;rsquo;t realise how interesting his work actually is.
One of the interesting concepts I&amp;rsquo;ve come across so far is the difference between espoused theory and theory in use:
Espoused theory
Theory-in-use
There are two areas that really stood out for me when I read these definitions.</description>
    </item>
    
    <item>
      <title>Rails: Using helpers inside a controller</title>
      <link>https://markhneedham.com/blog/2011/01/11/rails-using-helpers-inside-a-controller/</link>
      <pubDate>Tue, 11 Jan 2011 17:09:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/11/rails-using-helpers-inside-a-controller/</guid>
      <description>For about an hour or so this afternoon we were following the somewhat evil practice of using a method defined in a helper inside a controller.
The method was defined in the ApplicationHelper module:
module ApplicationHelper def foo # do something end end So we initially assumed that we&amp;rsquo;d just be able to reference that method inside any of our controllers since they all derive from ApplicationController.
That wasn&amp;rsquo;t the case so our next attempt was to try and add it as a helper:</description>
    </item>
    
    <item>
      <title>Sed across multiple files</title>
      <link>https://markhneedham.com/blog/2011/01/11/sed-across-multiple-files/</link>
      <pubDate>Tue, 11 Jan 2011 16:43:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/11/sed-across-multiple-files/</guid>
      <description>Pankhuriand I needed to rename a method and change all the places where it was used and decided to see if we could work out how to do it using sed.
We needed to change a method call roughly like this:
home_link(current_user) To instead read:
homepage_path For which we need the following sed expression:
sed -i &amp;#39;s/home_link([^)]*)/homepage_path/&amp;#39; [file_name] Which works pretty well if you know which file you want to change but we wanted to run it over the whole code base.</description>
    </item>
    
    <item>
      <title>Jet Airways: Lacking conceptual integrity and the power of twitter</title>
      <link>https://markhneedham.com/blog/2011/01/10/jet-airways-lacking-conceptual-integrity-and-the-power-of-twitter/</link>
      <pubDate>Mon, 10 Jan 2011 18:08:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/10/jet-airways-lacking-conceptual-integrity-and-the-power-of-twitter/</guid>
      <description>I recently travelled to London and back for Christmas using Jet Airways and the whole journey got off to an &amp;lsquo;interesting&amp;rsquo; start.
I originally booked two Jet Airways flights - one from Pune to Delhi and another from Delhi to London.
A couple of weeks later I was sent an email cancelling my Pune to Delhi flight and informing me that I should contact their customer support centre.
I quickly browsed their website to check what had happened to my flight and found out that it had actually changed from being a Jet Airways flight and was now in fact a Jet Lite flight - their sister airline.</description>
    </item>
    
    <item>
      <title>Failure of integration point doesn&#39;t have to stop the user: A real life example</title>
      <link>https://markhneedham.com/blog/2011/01/10/failure-of-integration-point-doesnt-have-to-stop-the-user-a-real-life-example/</link>
      <pubDate>Mon, 10 Jan 2011 15:28:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/10/failure-of-integration-point-doesnt-have-to-stop-the-user-a-real-life-example/</guid>
      <description>Ashwinand I were recently discussing integration points in software systems and in particular how many systems are designed in such a way that they will stop the user from going any further if one of those integration points is down.
The main point in favour of designing systems in this way is that it&amp;rsquo;s logically very simple - all operations are synchronous and we don&amp;rsquo;t have to worry about any offline processing.</description>
    </item>
    
    <item>
      <title>Ruby: Sorting by boolean fields</title>
      <link>https://markhneedham.com/blog/2011/01/08/ruby-sorting-by-boolean-fields/</link>
      <pubDate>Sat, 08 Jan 2011 13:15:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/08/ruby-sorting-by-boolean-fields/</guid>
      <description>We were doing a bit of work on RapidFTRin the ThoughtWorks Pune office today and one problem my pair and I were trying to solve was how to sort a collection of objects by a boolean field.
Therefore given the following array of values:
form_sections = [FormSection.new(:enabled =&amp;gt; false, :name =&amp;gt; &amp;#34;a&amp;#34;, :order =&amp;gt; 1), FormSection.new(:enabled =&amp;gt; true, :name =&amp;gt; &amp;#34;b&amp;#34;, :order =&amp;gt; 2)] We wanted to display those form sections which were disabled at the bottom of the page.</description>
    </item>
    
  </channel>
</rss>