<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2017s on Mark Needham</title>
    <link>https://markhneedham.com/blog/2017/</link>
    <description>Recent content in 2017s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Dec 2017 17:35:03 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/2017/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leaflet: Fit polyline in view</title>
      <link>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</link>
      <pubDate>Sun, 31 Dec 2017 17:35:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</guid>
      <description>&amp;lt;div id=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34;/&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css&amp;#34;/&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;); L.tileLayer(&amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, {maxZoom: 18,}).addTo(map); var rawPoints = [ { &amp;#34;latitude&amp;#34;: 51.357874010145395, &amp;#34;longitude&amp;#34;: -0.198045110923591 }, { &amp;#34;latitude&amp;#34;: 51.3573858289394, &amp;#34;longitude&amp;#34;: -0.19787754933584795 }, { &amp;#34;latitude&amp;#34;: 51.35632791810057, &amp;#34;longitude&amp;#34;: -0.19750254941422557 }, { &amp;#34;latitude&amp;#34;: 51.35553240304241, &amp;#34;longitude&amp;#34;: -0.197232163894512 }, { &amp;#34;latitude&amp;#34;: 51.35496267279901, &amp;#34;longitude&amp;#34;: -0.1970247338143316 }, { &amp;#34;latitude&amp;#34;: 51.35388700570004, &amp;#34;longitude&amp;#34;: -0.19666483094752069 }, { &amp;#34;latitude&amp;#34;: 51.</description>
    </item>
    
    <item>
      <title>Ethereum Hello World Example using solc and web3</title>
      <link>https://markhneedham.com/blog/2017/12/28/ethereum-hello-world-example-using-solc-and-web3/</link>
      <pubDate>Thu, 28 Dec 2017 11:03:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/28/ethereum-hello-world-example-using-solc-and-web3/</guid>
      <description>npm install web3 npm install abi-decoder npm install ethereumjs-testrpc pragma solidity ^0.4.0; contract Token { mapping (address =&amp;gt; uint) public balances; function Token() { balances[msg.sender] = 1000000; } function transfer(address _to, uint _amount) { if (balances[msg.sender] &amp;lt; _amount) { throw; } balances[msg.sender] -= _amount; balances[_to] += _amount; } } $ ./node_modules/.bin/testrpc --gasPrice 20000 EthereumJS TestRPC v6.0.3 (ganache-core: 2.0.2) Listening on localhost:8545 const fs = require(&amp;#34;fs&amp;#34;), abiDecoder = require(&amp;#39;abi-decoder&amp;#39;), Web3 = require(&amp;#39;web3&amp;#39;), solc = require(&amp;#39;solc&amp;#39;); const input = fs.</description>
    </item>
    
    <item>
      <title>Morning Pages: What should I write about?</title>
      <link>https://markhneedham.com/blog/2017/12/27/morning-pages-write/</link>
      <pubDate>Wed, 27 Dec 2017 23:28:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/27/morning-pages-write/</guid>
      <description></description>
    </item>
    
    <item>
      <title>scikit-learn: Using GridSearch to tune the hyper-parameters of VotingClassifier</title>
      <link>https://markhneedham.com/blog/2017/12/10/scikit-learn-using-gridsearch-tune-hyper-parameters-votingclassifier/</link>
      <pubDate>Sun, 10 Dec 2017 07:55:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/10/scikit-learn-using-gridsearch-tune-hyper-parameters-votingclassifier/</guid>
      <description>import pandas as pd from sklearn import linear_model from sklearn.ensemble import VotingClassifier from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline Y_COLUMN = &amp;#34;author&amp;#34; TEXT_COLUMN = &amp;#34;text&amp;#34; unigram_log_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer()), (&amp;#39;logreg&amp;#39;, linear_model.LogisticRegression()) ]) ngram_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(ngram_range=(1, 2))), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) tfidf_pipe = Pipeline([ (&amp;#39;tfidf&amp;#39;, TfidfVectorizer(min_df=3, max_features=None, strip_accents=&amp;#39;unicode&amp;#39;, analyzer=&amp;#39;word&amp;#39;, token_pattern=r&amp;#39;\w{1,}&amp;#39;, ngram_range=(1, 3), use_idf=1, smooth_idf=1, sublinear_tf=1, stop_words=&amp;#39;english&amp;#39;)), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) classifiers = [ (&amp;#34;ngram&amp;#34;, ngram_pipe), (&amp;#34;unigram&amp;#34;, unigram_log_pipe), (&amp;#34;tfidf&amp;#34;, tfidf_pipe), ] mixed_pipe = Pipeline([ (&amp;#34;voting&amp;#34;, VotingClassifier(classifiers, voting=&amp;#34;soft&amp;#34;)) ]) from sklearn.</description>
    </item>
    
    <item>
      <title>scikit-learn: Building a multi class classification ensemble</title>
      <link>https://markhneedham.com/blog/2017/12/05/scikit-learn-building-multi-class-classification-ensemble/</link>
      <pubDate>Tue, 05 Dec 2017 22:19:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/05/scikit-learn-building-multi-class-classification-ensemble/</guid>
      <description>from sklearn import linear_model from sklearn.ensemble import VotingClassifier from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline ngram_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(ngram_range=(1, 2))), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) unigram_log_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer()), (&amp;#39;logreg&amp;#39;, linear_model.LogisticRegression()) ]) classifiers = [ (&amp;#34;ngram&amp;#34;, ngram_pipe), (&amp;#34;unigram&amp;#34;, unigram_log_pipe), ] mixed_pipe = Pipeline([ (&amp;#34;voting&amp;#34;, VotingClassifier(classifiers, voting=&amp;#34;soft&amp;#34;)) ]) import pandas as pd import numpy as np from sklearn.model_selection import StratifiedKFold from sklearn import metrics Y_COLUMN = &amp;#34;author&amp;#34; TEXT_COLUMN = &amp;#34;text&amp;#34; def test_pipeline(df, nlp_pipeline): y = df[Y_COLUMN].</description>
    </item>
    
    <item>
      <title>Python: Combinations of values on and off</title>
      <link>https://markhneedham.com/blog/2017/12/03/python-combinations-values-off/</link>
      <pubDate>Sun, 03 Dec 2017 17:23:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/03/python-combinations-values-off/</guid>
      <description>0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 1 1 1 1 1 &amp;gt;&amp;gt;&amp;gt; &amp;#34;{0:0b}&amp;#34;.format(1).zfill(3) &amp;#39;001&amp;#39; &amp;gt;&amp;gt;&amp;gt; &amp;#34;{0:0b}&amp;#34;.format(5).zfill(3) &amp;#39;101&amp;#39; &amp;gt;&amp;gt;&amp;gt; &amp;#34;{0:0b}&amp;#34;.format(6).zfill(3) &amp;#39;110&amp;#39; &amp;gt;&amp;gt;&amp;gt; [int(x) for x in list(&amp;#34;{0:0b}&amp;#34;.format(1).zfill(3))] [0, 0, 1] def combinations_on_off(num_classifiers): return [[int(x) for x in list(&amp;#34;{0:0b}&amp;#34;.format(i).zfill(num_classifiers))] for i in range(1, 2 ** num_classifiers)] &amp;gt;&amp;gt;&amp;gt; for combination in combinations_on_off(3): print(combination) [0, 0, 1] [0, 1, 0] [0, 1, 1] [1, 0, 0] [1, 0, 1] [1, 1, 0] [1, 1, 1] &amp;gt;&amp;gt;&amp;gt; for combination in combinations_on_off(4): print(combination) [0, 0, 0, 1] [0, 0, 1, 0] [0, 0, 1, 1] [0, 1, 0, 0] [0, 1, 0, 1] [0, 1, 1, 0] [0, 1, 1, 1] [1, 0, 0, 0] [1, 0, 0, 1] [1, 0, 1, 0] [1, 0, 1, 1] [1, 1, 0, 0] [1, 1, 0, 1] [1, 1, 1, 0] [1, 1, 1, 1] </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Property values can only be of primitive types or arrays thereof.</title>
      <link>https://markhneedham.com/blog/2017/12/01/neo4j-cypher-property-values-can-primitive-types-arrays-thereof/</link>
      <pubDate>Fri, 01 Dec 2017 22:09:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/01/neo4j-cypher-property-values-can-primitive-types-arrays-thereof/</guid>
      <description>CREATE (:Person {id: [1, &amp;quot;mark&amp;quot;, 2.0]}) Neo.ClientError.Statement.TypeError Property values can only be of primitive types or arrays thereof. CREATE (:Person {id: [value in [1, &amp;quot;mark&amp;quot;, 2.0] | toString(value)]}) Added 1 label, created 1 node, set 1 property, completed after 4 ms. </description>
    </item>
    
    <item>
      <title>Python: Learning about defaultdict&#39;s handling of missing keys</title>
      <link>https://markhneedham.com/blog/2017/12/01/python-learning-defaultdicts-handling-missing-keys/</link>
      <pubDate>Fri, 01 Dec 2017 15:26:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/01/python-learning-defaultdicts-handling-missing-keys/</guid>
      <description>vocabulary = defaultdict() vocabulary.default_factory = vocabulary.__len__ &amp;gt;&amp;gt;&amp;gt; from collections import defaultdict &amp;gt;&amp;gt;&amp;gt; vocabulary = defaultdict() &amp;gt;&amp;gt;&amp;gt; vocabulary.default_factory = vocabulary.__len__ &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;foo&amp;#34;] 0 &amp;gt;&amp;gt;&amp;gt; vocabulary.items() dict_items([(&amp;#39;foo&amp;#39;, 0)]) &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;bar&amp;#34;] 1 &amp;gt;&amp;gt;&amp;gt; vocabulary.items() dict_items([(&amp;#39;foo&amp;#39;, 0), (&amp;#39;bar&amp;#39;, 1)]) &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;baz&amp;#34;] = &amp;#34;Mark &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;baz&amp;#34;] &amp;#39;Mark&amp;#39; &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;python&amp;#34;] 3 &amp;gt;&amp;gt;&amp;gt; vocabulary.items() dict_items([(&amp;#39;foo&amp;#39;, 0), (&amp;#39;bar&amp;#39;, 1), (&amp;#39;baz&amp;#39;, &amp;#39;Mark&amp;#39;), (&amp;#39;python&amp;#39;, 3)]) &amp;#34;&amp;#34;&amp;#34; __missing__(key) # Called by __getitem__ for missing key; pseudo-code: if self.default_factory is None: raise KeyError((key,)) self[key] = value = self.</description>
    </item>
    
    <item>
      <title>scikit-learn: Creating a matrix of named entity counts</title>
      <link>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</link>
      <pubDate>Wed, 29 Nov 2017 23:01:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; from polyglot.text import Text &amp;gt;&amp;gt;&amp;gt; doc = &amp;#34;My name is David Beckham. Hello from London, England&amp;#34; &amp;gt;&amp;gt;&amp;gt; Text(doc, hint_language_code=&amp;#34;en&amp;#34;).entities [I-PER([&amp;#39;David&amp;#39;, &amp;#39;Beckham&amp;#39;]), I-LOC([&amp;#39;London&amp;#39;]), I-LOC([&amp;#39;England&amp;#39;])] &amp;gt;&amp;gt;&amp;gt; [&amp;#34;_&amp;#34;.join(entity) for entity in Text(doc, hint_language_code=&amp;#34;en&amp;#34;).entities] [&amp;#39;David_Beckham&amp;#39;, &amp;#39;London&amp;#39;, &amp;#39;England&amp;#39;] from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline nlp_pipeline = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) ... # Train and Test the model ... entities = {} def analyze(doc): if doc not in entities: entities[doc] = [&amp;#34;_&amp;#34;.</description>
    </item>
    
    <item>
      <title>Python: polyglot - ModuleNotFoundError: No module named &#39;icu&#39;</title>
      <link>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</link>
      <pubDate>Tue, 28 Nov 2017 19:52:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</guid>
      <description>$ pip install polyglot ImportError: No module named &amp;#39;icu&amp;#39; brew install icu4c export ICU_VERSION=58 export PYICU_INCLUDES=/usr/local/Cellar/icu4c/58.2/include export PYICU_LFLAGS=-L/usr/local/Cellar/icu4c/58.2/lib pip install pyicu $ ls -lh /usr/local/Cellar/icu4c/ total 0 drwxr-xr-x 12 markneedham admin 408B 28 Nov 06:12 58.2 pip install pycld2 pip install morfessor polyglot download embeddings2.de polyglot download ner2.de polyglot download embeddings2.en polyglot download ner2.en </description>
    </item>
    
    <item>
      <title>Python 3: TypeError: unsupported format string passed to numpy.ndarray.__format__</title>
      <link>https://markhneedham.com/blog/2017/11/19/python-3-typeerror-unsupported-format-string-passed-to-numpy-ndarray-__format__/</link>
      <pubDate>Sun, 19 Nov 2017 07:16:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/19/python-3-typeerror-unsupported-format-string-passed-to-numpy-ndarray-__format__/</guid>
      <description>Iteration Training set observations Testing set observations --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &amp;lt;ipython-input-28-007cbab507e3&amp;gt; in &amp;lt;module&amp;gt;() 6 print(&amp;#39;{} {:^61} {}&amp;#39;.format(&amp;#39;Iteration&amp;#39;, &amp;#39;Training set observations&amp;#39;, &amp;#39;Testing set observations&amp;#39;)) 7 for iteration, data in enumerate(kf, start=1): ----&amp;gt; 8 print(&amp;#39;{0:^9} {1} {2:^25}&amp;#39;.format(iteration, data[0], data[1])) TypeError: unsupported format string passed to numpy.ndarray.__format__ &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; &amp;#34;{:9}&amp;#34;.format(np.array([1,2,3])) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; TypeError: unsupported format string passed to numpy.</description>
    </item>
    
    <item>
      <title>Kubernetes: Copy a dataset to a StatefulSet&#39;s PersistentVolume</title>
      <link>https://markhneedham.com/blog/2017/11/18/kubernetes-copy-a-dataset-to-a-statefulsets-persistentvolume/</link>
      <pubDate>Sat, 18 Nov 2017 12:44:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/18/kubernetes-copy-a-dataset-to-a-statefulsets-persistentvolume/</guid>
      <description>$ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE datadir-neo-helm-neo4j-core-0 Bound pvc-043efa91-cc54-11e7-bfa5-080027ab9eac 10Gi RWO standard 45s datadir-neo-helm-neo4j-core-1 Bound pvc-1737755a-cc54-11e7-bfa5-080027ab9eac 10Gi RWO standard 13s datadir-neo-helm-neo4j-core-2 Bound pvc-18696bfd-cc54-11e7-bfa5-080027ab9eac 10Gi RWO standard 11s $ kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pvc-043efa91-cc54-11e7-bfa5-080027ab9eac 10Gi RWO Delete Bound default/datadir-neo-helm-neo4j-core-0 standard 41m pvc-1737755a-cc54-11e7-bfa5-080027ab9eac 10Gi RWO Delete Bound default/datadir-neo-helm-neo4j-core-1 standard 40m pvc-18696bfd-cc54-11e7-bfa5-080027ab9eac 10Gi RWO Delete Bound default/datadir-neo-helm-neo4j-core-2 standard 40m #!</description>
    </item>
    
    <item>
      <title>Kubernetes 1.8: Using Cronjobs to take Neo4j backups</title>
      <link>https://markhneedham.com/blog/2017/11/17/kubernetes-1-8-using-cronjobs-take-neo4j-backups/</link>
      <pubDate>Fri, 17 Nov 2017 18:10:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/17/kubernetes-1-8-using-cronjobs-take-neo4j-backups/</guid>
      <description>minikube start --memory 8192 helm init &amp;amp;&amp;amp; kubectl rollout status -w deployment/tiller-deploy --namespace=kube-system helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/ helm install incubator/neo4j --name neo-helm --wait --set authEnabled=false,core.extraVars.NEO4J_dbms_backup_address=0.0.0.0:6362 kubectl exec neo-helm-neo4j-core-0 \  -- bin/cypher-shell --format verbose \  &amp;#34;CALL dbms.cluster.overview() YIELD id, role RETURN id, role&amp;#34; +-----------------------------------------------------+ | id | role | +-----------------------------------------------------+ | &amp;#34;0b3bfe6c-6a68-4af5-9dd2-e96b564df6e5&amp;#34; | &amp;#34;LEADER&amp;#34; | | &amp;#34;09e9bee8-bdc5-4e95-926c-16ea8213e6e7&amp;#34; | &amp;#34;FOLLOWER&amp;#34; | | &amp;#34;859b9b56-9bfc-42ae-90c3-02cedacfe720&amp;#34; | &amp;#34;FOLLOWER&amp;#34; | +-----------------------------------------------------+ kubectl exec neo-helm-neo4j-core-0 \  -- bin/cypher-shell --format verbose \  &amp;#34;UNWIND range(0,1000) AS id CREATE (:Person {id: id})&amp;#34; 0 rows available after 653 ms, consumed after another 0 ms Added 1001 nodes, Set 1001 properties, Added 1001 labels kind: PersistentVolumeClaim apiVersion: v1 metadata: name: backupdir-neo4j labels: app: neo4j-backup spec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi --- apiVersion: batch/v1beta1 kind: CronJob metadata: name: neo4j-backup spec: schedule: &amp;#34;*/1 * * * *&amp;#34; jobTemplate: spec: template: spec: volumes: - name: backupdir-neo4j persistentVolumeClaim: claimName: backupdir-neo4j containers: - name: neo4j-backup image: neo4j:3.</description>
    </item>
    
    <item>
      <title>Neo4j Browser: Expected entity id to be an integral value</title>
      <link>https://markhneedham.com/blog/2017/11/06/neo4j-browser-expected-entity-id-integral-value/</link>
      <pubDate>Mon, 06 Nov 2017 16:17:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/06/neo4j-browser-expected-entity-id-integral-value/</guid>
      <description>unwind range(0,1000) AS id create (:Person {id: id}) :param ids: [0] match (p:Person) where p.id in {ids} return p ╒════════╕ │&amp;quot;p&amp;quot; │ ╞════════╡ │{&amp;quot;id&amp;quot;:0}│ └────────┘ match (p:Person) where id(p) in {ids} return p Neo.ClientError.Statement.TypeError Expected entity id to be an integral value match (p:Person) where id(p) in [id in {ids} | toInteger(id)] return p ╒════════╕ │&amp;quot;p&amp;quot; │ ╞════════╡ │{&amp;quot;id&amp;quot;:0}│ └────────┘ </description>
    </item>
    
    <item>
      <title>Neo4j: Traversal query timeout</title>
      <link>https://markhneedham.com/blog/2017/10/31/neo4j-traversal-query-timeout/</link>
      <pubDate>Tue, 31 Oct 2017 21:43:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/31/neo4j-traversal-query-timeout/</guid>
      <description>StandardExpander orderedExpander = new OrderedByTypeExpander() .add( RelationshipType.withName( &amp;#34;CONNECTS&amp;#34; ), Direction.BOTH ); PathFinder&amp;lt;Path&amp;gt; shortestPathFinder = GraphAlgoFactory.shortestPath( expander, 250 ); ... public class TimeConstrainedExpander implements PathExpander { private final StandardExpander expander; private final long startTime; private final Clock clock; private int pathsExpanded = 0; private long timeLimitInMillis; public TimeConstrainedExpander( StandardExpander expander, Clock clock, long timeLimitInMillis ) { this.expander = expander; this.clock = clock; this.startTime = clock.instant().toEpochMilli(); this.timeLimitInMillis = timeLimitInMillis; } @Override public Iterable&amp;lt;Relationship&amp;gt; expand( Path path, BranchState state ) { long timeSoFar = clock.</description>
    </item>
    
    <item>
      <title>Kubernetes: Simple example of pod running</title>
      <link>https://markhneedham.com/blog/2017/10/21/kubernetes-simple-example-pod-running/</link>
      <pubDate>Sat, 21 Oct 2017 10:06:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/21/kubernetes-simple-example-pod-running/</guid>
      <description>kind: Pod apiVersion: v1 metadata: name: marks-dummy-pod spec: containers: - name: marks-dummy-pod image: ubuntu restartPolicy: Never $ kubectl apply -f pod_no_while.yaml pod &amp;#34;marks-dummy-pod&amp;#34; created $ kubectl get pods No resources found, use --show-all to see completed objects. $ kubectl get pods --show-all NAME READY STATUS RESTARTS AGE marks-dummy-pod 0/1 Completed 0 1m kind: Pod apiVersion: v1 metadata: name: marks-dummy-pod spec: containers: - name: marks-dummy-pod image: ubuntu command: [&amp;#34;/bin/bash&amp;#34;, &amp;#34;-ec&amp;#34;, &amp;#34;while :; do echo &amp;#39;.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Deleting duplicate nodes</title>
      <link>https://markhneedham.com/blog/2017/10/06/neo4j-cypher-deleting-duplicate-nodes/</link>
      <pubDate>Fri, 06 Oct 2017 16:13:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/06/neo4j-cypher-deleting-duplicate-nodes/</guid>
      <description>UNWIND range(0, 100) AS id CREATE (p1:Person {id: toInteger(rand() * id)}) MERGE (p2:Person {id: toInteger(rand() * id)}) MERGE (p3:Person {id: toInteger(rand() * id)}) MERGE (p4:Person {id: toInteger(rand() * id)}) CREATE (p1)-[:KNOWS]-&amp;gt;(p2) CREATE (p1)-[:KNOWS]-&amp;gt;(p3) CREATE (p1)-[:KNOWS]-&amp;gt;(p4) Added 173 labels, created 173 nodes, set 173 properties, created 5829 relationships, completed after 408 ms. MATCH (p:Person) WITH p.id as id, collect(p) AS nodes WHERE size(nodes) &amp;gt; 1 RETURN [ n in nodes | n.</description>
    </item>
    
    <item>
      <title>AWS: Spinning up a Neo4j instance with APOC installed</title>
      <link>https://markhneedham.com/blog/2017/09/30/aws-spinning-up-a-neo4j-instance-with-apoc-installed/</link>
      <pubDate>Sat, 30 Sep 2017 21:23:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/30/aws-spinning-up-a-neo4j-instance-with-apoc-installed/</guid>
      <description>#!/bin/bash curl -L https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/3.2.0.3/apoc-3.2.0.3-all.jar -O sudo cp apoc-3.2.0.3-all.jar /var/lib/neo4j/plugins/ $ node neo4j-with-apoc.js Creating a Neo4j server Key pair created. Save this to a file - you&amp;#39;ll need to use it if you want to ssh into the Neo4j server -----BEGIN RSA PRIVATE KEY----- &amp;lt;Private key details&amp;gt; -----END RSA PRIVATE KEY----- Created Group Id:&amp;lt;Group Id&amp;gt; Opened Neo4j ports Instance Id: &amp;lt;Instance Id&amp;gt; Your Neo4j server is now ready! You&amp;#39;ll need to login to the server and change the default password: https://ec2-ip-address.</description>
    </item>
    
    <item>
      <title>Serverless: Building a mini producer/consumer data pipeline with AWS SNS</title>
      <link>https://markhneedham.com/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</link>
      <pubDate>Sat, 30 Sep 2017 07:51:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</guid>
      <description>service: marks-blog frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 iamRoleStatements: - Effect: &amp;#39;Allow&amp;#39; Action: - &amp;#34;sns:Publish&amp;#34; Resource: - ${self:custom.BlogTopic} custom: BlogTopic: Fn::Join: - &amp;#34;:&amp;#34; - - arn - aws - sns - Ref: AWS::Region - Ref: AWS::AccountId - marks-blog-topic functions: message-consumer: name: MessageConsumer handler: handler.consumer events: - sns: topicName: marks-blog-topic displayName: Topic to process events message-producer: name: MessageProducer handler: handler.producer events: - schedule: rate(1 day) import boto3 import json import datetime from datetime import timezone def producer(event, context): sns = boto3.</description>
    </item>
    
    <item>
      <title>Serverless: S3 - S3BucketPermissions - Action does not apply to any resource(s) in statement</title>
      <link>https://markhneedham.com/blog/2017/09/29/serverless-s3-s3bucketpermissions-action-does-not-apply-to-any-resources-in-statement/</link>
      <pubDate>Fri, 29 Sep 2017 06:09:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/29/serverless-s3-s3bucketpermissions-action-does-not-apply-to-any-resources-in-statement/</guid>
      <description>const AWS = require(&amp;#34;aws-sdk&amp;#34;); let regionParams = { &amp;#39;region&amp;#39;: &amp;#39;us-east-1&amp;#39; } let s3 = new AWS.S3(regionParams); let s3BucketName = &amp;#34;marks-blog-bucket&amp;#34;; console.log(&amp;#34;Creating bucket: &amp;#34; + s3BucketName); let bucketParams = { Bucket: s3BucketName, ACL: &amp;#34;public-read&amp;#34; }; s3.createBucket(bucketParams).promise() .then(console.log) .catch(console.error); var putObjectParams = { Body: &amp;#34;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello blog!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;, Bucket: s3BucketName, Key: &amp;#34;blog.html&amp;#34; }; s3.putObject(putObjectParams).promise() .then(console.log) .catch(console.error); $ curl --head --silent https://s3.amazonaws.com/marks-blog-bucket/blog.html HTTP/1.1 403 Forbidden x-amz-request-id: 512FE36798C0BE4D x-amz-id-2: O1ELGMJ0jjs11WCrNiVNF2z2ssRgtO4+M4H2QQB5025HjIpC54VId0eKZryYeBYN8Pvb8GsolTQ= Content-Type: application/xml Transfer-Encoding: chunked Date: Fri, 29 Sep 2017 05:42:03 GMT Server: AmazonS3 service: marks-blog frameworkVersion: &amp;#34;&amp;gt;=1.</description>
    </item>
    
    <item>
      <title>Python 3: Create sparklines using matplotlib</title>
      <link>https://markhneedham.com/blog/2017/09/23/python-3-create-sparklines-using-matplotlib/</link>
      <pubDate>Sat, 23 Sep 2017 06:51:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/23/python-3-create-sparklines-using-matplotlib/</guid>
      <description>import matplotlib matplotlib.use(&amp;#34;Agg&amp;#34;) import matplotlib.pyplot as plt import base64 from io import BytesIO def sparkline(data, figsize=(4, 0.25), **kwags): &amp;#34;&amp;#34;&amp;#34; Returns a HTML image tag containing a base64 encoded sparkline style plot &amp;#34;&amp;#34;&amp;#34; data = list(data) fig, ax = plt.subplots(1, 1, figsize=figsize, **kwags) ax.plot(data) for k,v in ax.spines.items(): v.set_visible(False) ax.set_xticks([]) ax.set_yticks([]) plt.plot(len(data) - 1, data[len(data) - 1], &amp;#39;r.&amp;#39;) ax.fill_between(range(len(data)), data, len(data)*[min(data)], alpha=0.1) img = BytesIO() plt.savefig(img, transparent=True, bbox_inches=&amp;#39;tight&amp;#39;) img.seek(0) plt.close() return base64.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Create Cypher map with dynamic keys</title>
      <link>https://markhneedham.com/blog/2017/09/19/neo4j-cypher-create-cypher-map-with-dynamic-keys/</link>
      <pubDate>Tue, 19 Sep 2017 19:30:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/19/neo4j-cypher-create-cypher-map-with-dynamic-keys/</guid>
      <description>WITH &amp;quot;a&amp;quot; as dynamicKey, &amp;quot;b&amp;quot; as dynamicValue RETURN { dynamicKey: dynamicValue } AS map ╒══════════════════╕ │&amp;quot;map&amp;quot; │ ╞══════════════════╡ │{&amp;quot;dynamicKey&amp;quot;:&amp;quot;b&amp;quot;}│ └──────────────────┘ CALL dbms.functions() yield name, description WHERE name STARTS WITH &amp;quot;apoc.map.from&amp;quot; RETURN name, description ╒═════════════════════╤═════════════════════════════════════════════════════╕ │&amp;quot;name&amp;quot; │&amp;quot;description&amp;quot; │ ╞═════════════════════╪═════════════════════════════════════════════════════╡ │&amp;quot;apoc.map.fromLists&amp;quot; │&amp;quot;apoc.map.fromLists([keys],[values])&amp;quot; │ ├─────────────────────┼─────────────────────────────────────────────────────┤ │&amp;quot;apoc.map.fromNodes&amp;quot; │&amp;quot;apoc.map.fromNodes(label, property)&amp;quot; │ ├─────────────────────┼─────────────────────────────────────────────────────┤ │&amp;quot;apoc.map.fromPairs&amp;quot; │&amp;quot;apoc.map.fromPairs([[key,value],[key2,value2],...])&amp;quot;│ ├─────────────────────┼─────────────────────────────────────────────────────┤ │&amp;quot;apoc.map.fromValues&amp;quot;│&amp;quot;apoc.map.fromValues([key1,value1,key2,value2,...])&amp;quot; │ └─────────────────────┴─────────────────────────────────────────────────────┘ WITH &amp;quot;a&amp;quot; as dynamicKey, &amp;quot;b&amp;quot; as dynamicValue RETURN apoc.map.fromValues([dynamicKey, dynamicValue]) AS map ╒═════════╕ │&amp;quot;map&amp;quot; │ ╞═════════╡ │{&amp;quot;a&amp;quot;:&amp;quot;b&amp;quot;}│ └─────────┘ WITH &amp;quot;a&amp;quot; as dynamicKey, &amp;quot;b&amp;quot; as dynamicValue RETURN apoc.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Rounding of floating point numbers/BigDecimals</title>
      <link>https://markhneedham.com/blog/2017/08/13/neo4j-cypher-rounding-of-floating-point-numbersbigdecimals/</link>
      <pubDate>Sun, 13 Aug 2017 07:23:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/13/neo4j-cypher-rounding-of-floating-point-numbersbigdecimals/</guid>
      <description>with &amp;quot;8.37&amp;quot; as rawNumeric RETURN toFloat(rawNumeric) * 1000000 AS numeric ╒═════════════════╕ │&amp;quot;numeric&amp;quot; │ ╞═════════════════╡ │8369999.999999999│ └─────────────────┘ $ ls -lh plugins/ total 3664 -rw-r--r--@ 1 markneedham staff 1.8M 9 Aug 09:14 apoc-3.2.0.4-all.jar $ docker run -v $PWD/plugins:/plugins \  -p 7474:7474 \  -p 7687:7687 \  -e NEO4J_AUTH=&amp;#34;none&amp;#34; \  neo4j:3.2.3 with &amp;quot;8.37&amp;quot; as rawNumeric RETURN apoc.number.exact.mul(rawNumeric,&amp;quot;1000000&amp;quot;) AS apocConversion ╒════════════════╕ │&amp;quot;apocConversion&amp;quot;│ ╞════════════════╡ │&amp;quot;8370000.00&amp;quot; │ └────────────────┘ with &amp;quot;8.37&amp;quot; as rawNumeric RETURN toFloat(apoc.</description>
    </item>
    
    <item>
      <title>Serverless: AWS HTTP Gateway - 502 Bad Gateway</title>
      <link>https://markhneedham.com/blog/2017/08/11/serverless-aws-http-gateway-502-bad-gateway/</link>
      <pubDate>Fri, 11 Aug 2017 16:01:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/11/serverless-aws-http-gateway-502-bad-gateway/</guid>
      <description>service: http-gateway frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 functions: no-op: name: NoOp handler: handler.noop events: - http: POST noOp def noop(event, context): return &amp;#34;hello&amp;#34; $ serverless deploy Serverless: Packaging service... Serverless: Excluding development dependencies... Serverless: Uploading CloudFormation file to S3... Serverless: Uploading artifacts... Serverless: Uploading service .zip file to S3 (179 B)... Serverless: Validating template... Serverless: Updating Stack... Serverless: Checking Stack update progress... .............. Serverless: Stack update finished.</description>
    </item>
    
    <item>
      <title>Serverless: Python - virtualenv - { &#34;errorMessage&#34;: &#34;Unable to import module &#39;handler&#39;&#34; }</title>
      <link>https://markhneedham.com/blog/2017/08/06/serverless-python-virtualenv-errormessage-unable-import-module-handler/</link>
      <pubDate>Sun, 06 Aug 2017 19:03:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/06/serverless-python-virtualenv-errormessage-unable-import-module-handler/</guid>
      <description>$ npm install serverless $ virtualenv -p python3 a $ . a/bin/activate service: python-starter-template frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 functions: starter-function: name: Starter handler: handler.starter import requests def starter(event, context): print(&amp;#34;event:&amp;#34;, event, &amp;#34;context:&amp;#34;, context) r = requests.get(&amp;#34;http://www.google.com&amp;#34;) print(r.status_code) $ pip install requests $ ./node_modules/serverless/bin/serverless invoke local --function starter-function event: {} context: &amp;lt;__main__.FakeLambdaContext object at 0x10bea9a20&amp;gt; 200 null $ ./node_modules/serverless/bin/serverless deploy Serverless: Packaging service... Serverless: Excluding development dependencies.</description>
    </item>
    
    <item>
      <title>AWS Lambda: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory&#39;</title>
      <link>https://markhneedham.com/blog/2017/08/03/aws-lambda-libld-linux-2-bad-elf-interpreter-no-file-directory/</link>
      <pubDate>Thu, 03 Aug 2017 17:24:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/03/aws-lambda-libld-linux-2-bad-elf-interpreter-no-file-directory/</guid>
      <description>b&amp;#39;/bin/sh: ./binary/wkhtmltopdf: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory\n&amp;#39;: Exception Traceback (most recent call last): File &amp;#34;/var/task/handler.py&amp;#34;, line 33, in generate_certificate wkhtmltopdf(local_html_file_name, local_pdf_file_name) File &amp;#34;/var/task/lib/wkhtmltopdf.py&amp;#34;, line 64, in wkhtmltopdf wkhp.render() File &amp;#34;/var/task/lib/wkhtmltopdf.py&amp;#34;, line 56, in render raise Exception(stderr) Exception: b&amp;#39;/bin/sh: ./binary/wkhtmltopdf: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory\n&amp;#39; </description>
    </item>
    
    <item>
      <title>PHP vs Python: Generating a HMAC</title>
      <link>https://markhneedham.com/blog/2017/08/02/php-vs-python-generating-a-hmac/</link>
      <pubDate>Wed, 02 Aug 2017 06:09:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/02/php-vs-python-generating-a-hmac/</guid>
      <description>I&amp;rsquo;ve been writing a bit of code to integrate with a ClassMarker webhook, and you&amp;rsquo;re required to check that an incoming request actually came from ClassMarker by checking the value of a base64 hash using HMAC SHA256.
The example in the documentation is written in PHP which I haven&amp;rsquo;t done for about 10 years so I had to figure out how to do the same thing in Python.
$ php -a php &amp;gt; echo base64_encode(hash_hmac(&amp;#34;sha256&amp;#34;, &amp;#34;my data&amp;#34;, &amp;#34;my_secret&amp;#34;, true)); vyniKpNSlxu4AfTgSJImt+j+pRx7v6m+YBobfKsoGhE= import hmac import hashlib import base64 data = &amp;#34;my data&amp;#34;.</description>
    </item>
    
    <item>
      <title>Docker: Building custom Neo4j images on Mac OS X</title>
      <link>https://markhneedham.com/blog/2017/07/26/docker-building-custom-neo4j-images-on-mac-os-x/</link>
      <pubDate>Wed, 26 Jul 2017 22:20:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/26/docker-building-custom-neo4j-images-on-mac-os-x/</guid>
      <description>I sometimes needs to create custom Neo4j Docker images to try things out and wanted to share my work flow, mostly for future Mark but also in case it&amp;rsquo;s useful to someone else.
There&amp;rsquo;s already a docker-neo4j repository so we&amp;rsquo;ll just tweak the files in there to achieve what we want.
$ git clone git@github.com:neo4j/docker-neo4j.git $ cd docker-neo4j If we want to build a Docker image for Neo4j Enterprise Edition we can run the following build target:</description>
    </item>
    
    <item>
      <title>Pandas: ValueError: The truth value of a Series is ambiguous.</title>
      <link>https://markhneedham.com/blog/2017/07/26/pandas-valueerror-the-truth-value-of-a-series-is-ambiguous/</link>
      <pubDate>Wed, 26 Jul 2017 21:41:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/26/pandas-valueerror-the-truth-value-of-a-series-is-ambiguous/</guid>
      <description>import pandas as pd &amp;gt;&amp;gt;&amp;gt; df = pd.DataFrame({&amp;#34;a&amp;#34;: [1,2,3,4,5], &amp;#34;b&amp;#34;: [2,3,4,5,6]}) &amp;gt;&amp;gt;&amp;gt; df a b 0 5 2 1 6 6 2 0 8 3 3 2 4 1 6 &amp;gt;&amp;gt;&amp;gt; divmod(df[&amp;#34;a&amp;#34;], 2)[1] &amp;gt; 0 0 True 1 False 2 True 3 False 4 True Name: a, dtype: bool &amp;gt;&amp;gt;&amp;gt; divmod(df[&amp;#34;b&amp;#34;], 2)[1] &amp;gt; 0 0 False 1 True 2 False 3 True 4 False Name: b, dtype: bool &amp;gt;&amp;gt;&amp;gt; df[&amp;#34;anyOdd&amp;#34;] = (divmod(df[&amp;#34;a&amp;#34;], 2)[1] &amp;gt; 0) or (divmod(df[&amp;#34;b&amp;#34;], 2)[1] &amp;gt; 0) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/Users/markneedham/projects/kaggle/house-prices/a/lib/python3.</description>
    </item>
    
    <item>
      <title>Pandas/scikit-learn: get_dummies test/train sets - ValueError: shapes not aligned</title>
      <link>https://markhneedham.com/blog/2017/07/05/pandasscikit-learn-get_dummies-testtrain-sets-valueerror-shapes-not-aligned/</link>
      <pubDate>Wed, 05 Jul 2017 15:42:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/05/pandasscikit-learn-get_dummies-testtrain-sets-valueerror-shapes-not-aligned/</guid>
      <description>import pandas as pd import numpy as np from sklearn import linear_model train = pd.DataFrame({&amp;#34;letter&amp;#34;:[&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;], &amp;#34;value&amp;#34;: [1, 2, 3, 4]}) X_train = train.drop([&amp;#34;value&amp;#34;], axis=1) X_train = pd.get_dummies(X_train) y_train = train[&amp;#34;value&amp;#34;]~~~ &amp;lt;h3&amp;gt;Test set&amp;lt;/h3&amp;gt; ~~~python test = pd.DataFrame({&amp;#34;letter&amp;#34;:[&amp;#34;D&amp;#34;, &amp;#34;D&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;E&amp;#34;], &amp;#34;value&amp;#34;: [4, 5, 7, 19]}) X_test = test.drop([&amp;#34;value&amp;#34;], axis=1) X_test = pd.get_dummies(X_test) y_test = test[&amp;#34;value&amp;#34;] lr = linear_model.LinearRegression() model = lr.fit(X_train, y_train) model.score(X_test, y_test) ValueError: shapes (4,3) and (4,) not aligned: 3 (dim 1) !</description>
    </item>
    
    <item>
      <title>Pandas: Find rows where column/field is null</title>
      <link>https://markhneedham.com/blog/2017/07/05/pandas-find-rows-where-columnfield-is-null/</link>
      <pubDate>Wed, 05 Jul 2017 14:31:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/05/pandas-find-rows-where-columnfield-is-null/</guid>
      <description>import pandas as pd train = pd.read_csv(&amp;#34;train.csv&amp;#34;) null_columns=train.columns[train.isnull().any()] train[null_columns].isnull().sum() LotFrontage 259 Alley 1369 MasVnrType 8 MasVnrArea 8 BsmtQual 37 BsmtCond 37 BsmtExposure 38 BsmtFinType1 37 BsmtFinType2 38 Electrical 1 FireplaceQu 690 GarageType 81 GarageYrBlt 81 GarageFinish 81 GarageQual 81 GarageCond 81 PoolQC 1453 Fence 1179 MiscFeature 1406 dtype: int64 print(train[train[&amp;#34;Electrical&amp;#34;].isnull()][null_columns]) LotFrontage Alley MasVnrType MasVnrArea BsmtQual BsmtCond BsmtExposure \ 1379 73.0 NaN None 0.0 Gd TA No BsmtFinType1 BsmtFinType2 Electrical FireplaceQu GarageType GarageYrBlt \ 1379 Unf Unf NaN NaN BuiltIn 2007.</description>
    </item>
    
    <item>
      <title>Shell: Create a comma separated string</title>
      <link>https://markhneedham.com/blog/2017/06/23/shell-create-comma-separated-string/</link>
      <pubDate>Fri, 23 Jun 2017 12:26:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/23/shell-create-comma-separated-string/</guid>
      <description>foo-0,foo-1,foo-2 n=3 for i in $(seq 0 $(($n &amp;gt; 0? $n-1: 0))); do echo &amp;#34;foo-$i&amp;#34; done foo-0 foo-1 foo-2 n=3 combined=&amp;#34;&amp;#34; for i in $(seq 0 $(($n &amp;gt; 0? $n-1: 0))); do token=&amp;#34;foo-$i&amp;#34; combined=&amp;#34;${combined}${combined:+,}$token&amp;#34; done echo $combined foo-0,foo-1,foo-2 n=3 combined=&amp;#34;&amp;#34; for i in $(seq 0 $(($n &amp;gt; 0 ? $n-1: 0))); do token=&amp;#34;foo-$i&amp;#34; combined=&amp;#34;${combined}${combined:+,}$token&amp;#34; echo $combined done foo-0 foo-0,foo-1 foo-0,foo-1,foo-2 </description>
    </item>
    
    <item>
      <title>scikit-learn: Random forests - Feature Importance</title>
      <link>https://markhneedham.com/blog/2017/06/16/scikit-learn-random-forests-feature-importance/</link>
      <pubDate>Fri, 16 Jun 2017 05:55:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/16/scikit-learn-random-forests-feature-importance/</guid>
      <description>import numpy as np import pandas as pd from sklearn.ensemble import RandomForestRegressor from sklearn.model_selection import train_test_split # We&amp;#39;ll use this library to make the display pretty from tabulate import tabulate train = pd.read_csv(&amp;#39;train.csv&amp;#39;) # the model can only handle numeric values so filter out the rest data = train.select_dtypes(include=[np.number]).interpolate().dropna() y = train.SalePrice X = data.drop([&amp;#34;SalePrice&amp;#34;, &amp;#34;Id&amp;#34;], axis=1) X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=.33) clf = RandomForestRegressor(n_jobs=2, n_estimators=1000) model = clf.</description>
    </item>
    
    <item>
      <title>Kubernetes: Which node is a pod on?</title>
      <link>https://markhneedham.com/blog/2017/06/14/kubernetes-node-pod/</link>
      <pubDate>Wed, 14 Jun 2017 08:49:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/14/kubernetes-node-pod/</guid>
      <description>$ kubectl get pod NAME READY STATUS RESTARTS AGE neo4j-core-0 1/1 Running 0 6m neo4j-core-1 1/1 Running 0 6m neo4j-core-2 1/1 Running 0 2m $ kubectl get pod -o wide NAME READY STATUS RESTARTS AGE IP NODE neo4j-core-0 1/1 Running 0 6m 10.32.3.6 gke-neo4j-cluster-default-pool-ded394fa-0kpw neo4j-core-1 1/1 Running 0 6m 10.32.3.7 gke-neo4j-cluster-default-pool-ded394fa-0kpw neo4j-core-2 1/1 Running 0 2m 10.32.0.10 gke-neo4j-cluster-default-pool-ded394fa-kp68 </description>
    </item>
    
    <item>
      <title>Kaggle: House Prices: Advanced Regression Techniques - Trying to fill in missing values</title>
      <link>https://markhneedham.com/blog/2017/06/04/kaggle-house-prices-advanced-regression-techniques-trying-fill-missing-values/</link>
      <pubDate>Sun, 04 Jun 2017 09:22:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/04/kaggle-house-prices-advanced-regression-techniques-trying-fill-missing-values/</guid>
      <description>import pandas as pd train = pd.read_csv(&amp;#39;train.csv&amp;#39;) null_columns=train.columns[train.isnull().any()] &amp;gt;&amp;gt;&amp;gt; print(train[null_columns].isnull().sum()) LotFrontage 259 Alley 1369 MasVnrType 8 MasVnrArea 8 BsmtQual 37 BsmtCond 37 BsmtExposure 38 BsmtFinType1 37 BsmtFinType2 38 Electrical 1 FireplaceQu 690 GarageType 81 GarageYrBlt 81 GarageFinish 81 GarageQual 81 GarageCond 81 PoolQC 1453 Fence 1179 MiscFeature 1406 dtype: int64 cols = [col for col in train.columns if col.startswith(&amp;#34;Lot&amp;#34;)] missing_frontage = train[cols][train[&amp;#34;LotFrontage&amp;#34;].isnull()] &amp;gt;&amp;gt;&amp;gt; print(missing_frontage.head()) LotFrontage LotArea LotShape LotConfig 7 NaN 10382 IR1 Corner 12 NaN 12968 IR2 Inside 14 NaN 10920 IR1 Corner 16 NaN 11241 IR1 CulDSac 24 NaN 8246 IR1 Inside sub_train = train[train.</description>
    </item>
    
    <item>
      <title>GraphQL-Europe: A trip to Berlin</title>
      <link>https://markhneedham.com/blog/2017/05/27/graphql-europe-trip-berlin/</link>
      <pubDate>Sat, 27 May 2017 11:31:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/27/graphql-europe-trip-berlin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PostgreSQL: ERROR:  argument of WHERE must not return a set</title>
      <link>https://markhneedham.com/blog/2017/05/01/postgresql-error-argument-must-not-return-set/</link>
      <pubDate>Mon, 01 May 2017 20:42:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/01/postgresql-error-argument-must-not-return-set/</guid>
      <description>SELECT id, data-&amp;gt;&amp;#39;start_date&amp;#39; AS startDate, data-&amp;gt;&amp;#39;average_speed&amp;#39; AS averageSpeed FROM runs WHERE jsonb_array_elements(data-&amp;gt;&amp;#39;segment_efforts&amp;#39;)-&amp;gt;&amp;#39;segment&amp;#39;-&amp;gt;&amp;gt;&amp;#39;id&amp;#39; = &amp;#39;6818475&amp;#39; ERROR: argument of WHERE must not return a set LINE 3: WHERE jsonb_array_elements(data-&amp;gt;&amp;#39;segment_efforts&amp;#39;)-&amp;gt;&amp;#39;segmen... SELECT id, data-&amp;gt;&amp;#39;start_date&amp;#39; AS startDate, data-&amp;gt;&amp;#39;average_speed&amp;#39; AS averageSpeed FROM runs r, LATERAL jsonb_array_elements(r.data-&amp;gt;&amp;#39;segment_efforts&amp;#39;) segment WHERE segment -&amp;gt;&amp;#39;segment&amp;#39;-&amp;gt;&amp;gt;&amp;#39;id&amp;#39; = &amp;#39;6818475&amp;#39; id | startdate | averagespeed -----------+------------------------+--------------  455461182 | &amp;#34;2015-12-24T11:20:26Z&amp;#34; | 2.841 440088621 | &amp;#34;2015-11-27T06:10:42Z&amp;#34; | 2.975 407930503 | &amp;#34;2015-10-07T05:18:34Z&amp;#34; | 2.985 317170464 | &amp;#34;2015-06-03T04:44:59Z&amp;#34; | 2.</description>
    </item>
    
    <item>
      <title>Loading and analysing Strava runs using PostgreSQL JSON data type</title>
      <link>https://markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/</link>
      <pubDate>Mon, 01 May 2017 19:11:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/</guid>
      <description>create database strava; \connect strava; CREATE TABLE runs ( id INTEGER NOT NULL, data jsonb ); ALTER TABLE runs ADD PRIMARY KEY(id); import requests import os import json import psycopg2 token = os.environ[&amp;#34;TOKEN&amp;#34;] headers = {&amp;#39;Authorization&amp;#39;: &amp;#34;Bearer {0}&amp;#34;.format(token)} with psycopg2.connect(&amp;#34;dbname=strava user=markneedham&amp;#34;) as conn: with conn.cursor() as cur: page = 1 while True: r = requests.get(&amp;#34;https://www.strava.com/api/v3/athlete/activities?page={0}&amp;#34;.format(page), headers = headers) response = r.json() if len(response) == 0: break else: for activity in response: r = requests.</description>
    </item>
    
    <item>
      <title>Leaflet: Mapping Strava runs/polylines on Open Street Map</title>
      <link>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</link>
      <pubDate>Sat, 29 Apr 2017 15:36:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</guid>
      <description>&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Mapping my runs&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34; /&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;).setView([55.609818, 13.003286], 13); L.tileLayer( &amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18, }).addTo(map); var encodedRoutes = [ &amp;#34;{zkrIm`inANPD?BDXGPKLATHNRBRFtAR~AFjAHl@D|ALtATj@HHJBL?`@EZ?NQ\\Y^MZURGJKR]RMXYh@QdAWf@[~@aAFGb@?j@YJKBU@m@FKZ[NSPKTCRJD?`@Wf@Wb@g@HCp@Qh@]z@SRMRE^EHJZnDHbBGPHb@NfBTxBN|DVbCBdA^lBFl@Lz@HbBDl@Lr@Bb@ApCAp@Ez@g@bEMl@g@`B_AvAq@l@ QF]Rs@Nq@CmAVKCK?_@Nw@h@UJIHOZa@xA]~@UfASn@U`@_@~@[d@Sn@s@rAs@dAGN?NVhAB\\Ox@@b@S|A?Tl@jBZpAt@vBJhATfGJn@b@fARp@H^Hx@ARGNSTIFWHe@AGBOTAP@^\\zBMpACjEWlEIrCKl@i@nAk@}@}@yBOWSg@kAgBUk@Mu@[mC?QLIEUAuAS_E?uCKyCA{BH{DDgF`AaEr@uAb@oA~@{AE}AKw@ g@qAU[_@w@[gAYm@]qAEa@FOXg@JGJ@j@o@bAy@NW?Qe@oCCc@SaBEOIIEQGaAe@kC_@{De@cE?KD[H[P]NcAJ_@DGd@Gh@UHI@Ua@}Bg@yBa@uDSo@i@UIICQUkCi@sCKe@]aAa@oBG{@G[CMOIKMQe@IIM@KB]Tg@Nw@^QL]NMPMn@@\\Lb@P~@XT&amp;#34;, &amp;#34;u}krIq_inA_@y@My@Yu@OqAUsA]mAQc@CS@o@FSHSp@e@n@Wl@]ZCFEBK?OC_@Qw@?m@CSK[]]EMBeAA_@m@qEAg@UoCAaAMs@IkBMoACq@SwAGOYa@IYIyA_@kEMkC]{DEaAScC@yEHkGA_ALsCBiA@mCD{CCuAZcANOH@HDZl@Z`@RFh@\\TDT@ZVJBPMVGLM\\Mz@c@NCPMXERO|@a@^Ut@s@p@KJAJ Bd@EHEXi@f@a@\\g@b@[HUD_B@uADg@DQLCLD~@l@`@J^TF?JANQ\\UbAyABEZIFG`@o@RAJEl@_@ZENDDIA[Ki@BURQZaARODKVs@LSdAiAz@G`BU^A^GT@PRp@zARXRn@`BlDHt@ZlAFh@^`BX|@HHHEf@i@FAHHp@bBd@v@DRAVMl@i@v@SROXm@tBILOTOLs@NON_@t@KX]h@Un@k@\\c@h@Ud@]ZGNKp@Sj@KJo@ b@W`@UPOX]XWd@UF]b@WPOAIBSf@QVi@j@_@V[b@Uj@YtAEFCCELARBn@`@lBjAzD^vB^hB?LENURkAv@[Ze@Xg@Py@p@QHONMA[HGAWE_@Em@Hg@AMCG@QHq@Cm@M[Jy@?UJIA{@Ae@KI@GFKNIX[QGAcAT[JK?OVMFK@IAIUKAYJI?QKUCGFIZCXDtAHl@@p@LjBCZS^ERAn@Fj@Br@Hn@HzAHh@RfD?j@TnCTlA NjANb@\\z@TtARr@P`AFnAGfBG`@CFE?&amp;#34; ] for (let encoded of encodedRoutes) { var coordinates = L.Polyline.fromEncoded(encoded).getLatLngs(); L.polyline( coordinates, { color: &amp;#39;blue&amp;#39;, weight: 2, opacity: .7, lineJoin: &amp;#39;round&amp;#39; } ).addTo(map); } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python -m http.</description>
    </item>
    
    <item>
      <title>Python: Flask - Generating a static HTML page</title>
      <link>https://markhneedham.com/blog/2017/04/27/python-flask-generating-a-static-html-page/</link>
      <pubDate>Thu, 27 Apr 2017 20:59:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/27/python-flask-generating-a-static-html-page/</guid>
      <description>from flask import render_template import flask app = flask.Flask(&amp;#39;my app&amp;#39;) if __name__ == &amp;#34;__main__&amp;#34;: with app.app_context(): rendered = render_template(&amp;#39;blog.html&amp;#39;, \ title = &amp;#34;My Generated Page&amp;#34;, \ people = [{&amp;#34;name&amp;#34;: &amp;#34;Mark&amp;#34;}, {&amp;#34;name&amp;#34;: &amp;#34;Michael&amp;#34;}]) print(rendered) &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;{{ title }}&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;{{ title }}&amp;lt;/h1&amp;gt; &amp;lt;ul&amp;gt; {% for person in people %} &amp;lt;li&amp;gt;{{ person.name }}&amp;lt;/li&amp;gt; {% endfor %} &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python blog.py &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;My Generated Page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;My Generated Page&amp;lt;/h1&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;Mark&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Michael&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python blog.</description>
    </item>
    
    <item>
      <title>AWS Lambda: Programmatically scheduling a CloudWatchEvent</title>
      <link>https://markhneedham.com/blog/2017/04/05/aws-lambda-programatically-scheduling-a-cloudwatchevent/</link>
      <pubDate>Wed, 05 Apr 2017 23:49:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/05/aws-lambda-programatically-scheduling-a-cloudwatchevent/</guid>
      <description>import boto3 lambda_client = boto3.client(&amp;#39;lambda&amp;#39;) events_client = boto3.client(&amp;#39;events&amp;#39;) fn_name = &amp;#34;HelloWorld&amp;#34; fn_role = &amp;#39;arn:aws:iam::[your-aws-id]:role/lambda_basic_execution&amp;#39; fn_response = lambda_client.create_function( FunctionName=fn_name, Runtime=&amp;#39;python2.7&amp;#39;, Role=fn_role, Handler=&amp;#34;{0}.lambda_handler&amp;#34;.format(fn_name), Code={&amp;#39;ZipFile&amp;#39;: open(&amp;#34;{0}.zip&amp;#34;.format(fn_name), &amp;#39;rb&amp;#39;).read(), }, ) fn_arn = fn_response[&amp;#39;FunctionArn&amp;#39;] frequency = &amp;#34;rate(1 hour)&amp;#34; name = &amp;#34;{0}-Trigger&amp;#34;.format(fn_name) rule_response = events_client.put_rule( Name=name, ScheduleExpression=frequency, State=&amp;#39;ENABLED&amp;#39;, ) lambda_client.add_permission( FunctionName=fn_name, StatementId=&amp;#34;{0}-Event&amp;#34;.format(name), Action=&amp;#39;lambda:InvokeFunction&amp;#39;, Principal=&amp;#39;events.amazonaws.com&amp;#39;, SourceArn=rule_response[&amp;#39;RuleArn&amp;#39;], ) events_client.put_targets( Rule=name, Targets=[ { &amp;#39;Id&amp;#39;: &amp;#34;1&amp;#34;, &amp;#39;Arn&amp;#39;: fn_arn, }, ] ) $ aws events list-rules --query &amp;#34;Rules[?Name==&amp;#39;HelloWorld-Trigger&amp;#39;]&amp;#34; [ { &amp;#34;State&amp;#34;: &amp;#34;ENABLED&amp;#34;, &amp;#34;ScheduleExpression&amp;#34;: &amp;#34;rate(1 hour)&amp;#34;, &amp;#34;Name&amp;#34;: &amp;#34;HelloWorld-Trigger&amp;#34;, &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:events:us-east-1:[your-aws-id]:rule/HelloWorld-Trigger&amp;#34; } ] $ aws events list-targets-by-rule --rule HelloWorld-Trigger { &amp;#34;Targets&amp;#34;: [ { &amp;#34;Id&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:lambda:us-east-1:[your-aws-id]:function:HelloWorld&amp;#34; } ] } $ aws lambda get-policy --function-name HelloWorld { &amp;#34;Policy&amp;#34;: &amp;#34;{\&amp;#34;Version\&amp;#34;:\&amp;#34;2012-10-17\&amp;#34;,\&amp;#34;Id\&amp;#34;:\&amp;#34;default\&amp;#34;,\&amp;#34;Statement\&amp;#34;:[{\&amp;#34;Sid\&amp;#34;:\&amp;#34;HelloWorld-Trigger-Event\&amp;#34;,\&amp;#34;Effect\&amp;#34;:\&amp;#34;Allow\&amp;#34;,\&amp;#34;Principal\&amp;#34;:{\&amp;#34;Service\&amp;#34;:\&amp;#34;events.</description>
    </item>
    
    <item>
      <title>AWS Lambda: Encrypted environment variables</title>
      <link>https://markhneedham.com/blog/2017/04/03/aws-lambda-encrypted-environment-variables/</link>
      <pubDate>Mon, 03 Apr 2017 05:49:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/03/aws-lambda-encrypted-environment-variables/</guid>
      <description>import boto3 import os from base64 import b64decode def lambda_handler(event, context): encrypted = os.environ[&amp;#39;ENCRYPTED_VALUE&amp;#39;] decrypted = boto3.client(&amp;#39;kms&amp;#39;).decrypt(CiphertextBlob=b64decode(encrypted))[&amp;#39;Plaintext&amp;#39;] # Don&amp;#39;t print out your decrypted value in a real function! This is just to show how it works. print(&amp;#34;Decrypted value:&amp;#34;, decrypted) plain_text = os.environ[&amp;#34;PLAIN_TEXT_VALUE&amp;#34;] print(&amp;#34;Plain text:&amp;#34;, plain_text) zip HelloWorldEncrypted.zip HelloWorldEncrypted.py import boto3 from base64 import b64encode fn_name = &amp;#34;HelloWorldEncrypted&amp;#34; kms_key = &amp;#34;arn:aws:kms:[aws-zone]:[your-aws-id]:key/[your-kms-key-id]&amp;#34; fn_role = &amp;#39;arn:aws:iam::[your-aws-id]:role/lambda_basic_execution&amp;#39; lambda_client = boto3.client(&amp;#39;lambda&amp;#39;) kms_client = boto3.client(&amp;#39;kms&amp;#39;) encrypt_me = &amp;#34;abcdefg&amp;#34; encrypted = b64encode(kms_client.</description>
    </item>
    
    <item>
      <title>AWS Lambda: Programatically create a Python &#39;Hello World&#39; function</title>
      <link>https://markhneedham.com/blog/2017/04/02/aws-lambda-programatically-create-a-python-hello-world-function/</link>
      <pubDate>Sun, 02 Apr 2017 22:11:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/02/aws-lambda-programatically-create-a-python-hello-world-function/</guid>
      <description>def lambda_handler(event, context): print(&amp;#34;Hello world&amp;#34;) $ zip HelloWorld.zip HelloWorld.py $ unzip -l HelloWorld.zip Archive: HelloWorld.zip Length Date Time Name -------- ---- ---- ---- 61 04-02-17 22:04 HelloWorld.py -------- ------- 61 1 file import boto3 lambda_client = boto3.client(&amp;#39;lambda&amp;#39;) fn_name = &amp;#34;HelloWorld&amp;#34; fn_role = &amp;#39;arn:aws:iam::[your-aws-id]:role/lambda_basic_execution&amp;#39; lambda_client.create_function( FunctionName=fn_name, Runtime=&amp;#39;python2.7&amp;#39;, Role=fn_role, Handler=&amp;#34;{0}.lambda_handler&amp;#34;.format(fn_name), Code={&amp;#39;ZipFile&amp;#39;: open(&amp;#34;{0}.zip&amp;#34;.format(fn_name), &amp;#39;rb&amp;#39;).read(), }, ) $ aws ec2 describe-security-groups --query &amp;#39;SecurityGroups[0].OwnerId&amp;#39; --output text 123456789012 $ python CreateHelloWorld.py </description>
    </item>
    
    <item>
      <title>My top 10 technology podcasts</title>
      <link>https://markhneedham.com/blog/2017/03/30/top-10-technology-podcasts/</link>
      <pubDate>Thu, 30 Mar 2017 22:38:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/30/top-10-technology-podcasts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Luigi: Defining dynamic requirements (on output files)</title>
      <link>https://markhneedham.com/blog/2017/03/28/luigi-defining-dynamic-requirements-on-output-files/</link>
      <pubDate>Tue, 28 Mar 2017 05:39:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/28/luigi-defining-dynamic-requirements-on-output-files/</guid>
      <description>class MembersToCSV(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def requires(self): yield GroupsToJSON(self.key, self.lat, self.lon) class MembersToCSV(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def run(self): outputs = [] for input in self.input(): with input.open(&amp;#39;r&amp;#39;) as group_file: groups_json = json.load(group_file) groups = [str(group[&amp;#39;id&amp;#39;]) for group in groups_json] for group_id in groups: members = MembersToJSON(group_id, self.key) outputs.append(members.output().path) yield members def requires(self): yield GroupsToJSON(self.key, self.lat, self.lon) class MembersToJSON(luigi.Task): group_id = luigi.</description>
    </item>
    
    <item>
      <title>Luigi: An ExternalProgramTask example - Converting JSON to CSV</title>
      <link>https://markhneedham.com/blog/2017/03/25/luigi-externalprogramtask-example-converting-json-csv/</link>
      <pubDate>Sat, 25 Mar 2017 14:09:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/25/luigi-externalprogramtask-example-converting-json-csv/</guid>
      <description>import luigi import requests import json from collections import Counter class GroupsToJSON(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def run(self): seed_topic = &amp;#34;nosql&amp;#34; uri = &amp;#34;https://api.meetup.com/2/groups?&amp;amp;topic={0}&amp;amp;lat={1}&amp;amp;lon={2}&amp;amp;key={3}&amp;#34;.format(seed_topic, self.lat, self.lon, self.key) r = requests.get(uri) all_topics = [topic[&amp;#34;urlkey&amp;#34;] for result in r.json()[&amp;#34;results&amp;#34;] for topic in result[&amp;#34;topics&amp;#34;]] c = Counter(all_topics) topics = [entry[0] for entry in c.most_common(10)] groups = {} for topic in topics: uri = &amp;#34;https://api.meetup.com/2/groups?&amp;amp;topic={0}&amp;amp;lat={1}&amp;amp;lon={2}&amp;amp;key={3}&amp;#34;.format(topic, self.lat, self.lon, self.key) r = requests.</description>
    </item>
    
    <item>
      <title>Python 3: TypeError: Object of type &#39;dict_values&#39; is not JSON serializable</title>
      <link>https://markhneedham.com/blog/2017/03/19/python-3-typeerror-object-type-dict_values-not-json-serializable/</link>
      <pubDate>Sun, 19 Mar 2017 16:40:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/19/python-3-typeerror-object-type-dict_values-not-json-serializable/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; import json &amp;gt;&amp;gt;&amp;gt; x = {&amp;#34;mark&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;Mark&amp;#34;}, &amp;#34;michael&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;Michael&amp;#34;} } &amp;gt;&amp;gt;&amp;gt; json.dumps(x.values()) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py&amp;#34;, line 231, in dumps return _default_encoder.encode(obj) File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py&amp;#34;, line 199, in encode chunks = self.iterencode(o, _one_shot=True) File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py&amp;#34;, line 257, in iterencode return _iterencode(o, 0) File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py&amp;#34;, line 180, in default o.__class__.__name__) TypeError: Object of type &amp;#39;dict_values&amp;#39; is not JSON serializable &amp;gt;&amp;gt;&amp;gt; json.</description>
    </item>
    
    <item>
      <title>Neo4j: apoc.date.parse - java.lang.IllegalArgumentException: Illegal pattern character &#39;T&#39; / java.text.ParseException: Unparseable date: &#34;2012-11-12T08:46:15Z&#34;</title>
      <link>https://markhneedham.com/blog/2017/03/06/neo4j-apoc-date-parse-java-lang-illegalargumentexception-illegal-pattern-character-t-java-text-parseexception-unparseable-date-2012-11-12t084615z/</link>
      <pubDate>Mon, 06 Mar 2017 20:52:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/06/neo4j-apoc-date-parse-java-lang-illegalargumentexception-illegal-pattern-character-t-java-text-parseexception-unparseable-date-2012-11-12t084615z/</guid>
      <description>return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;) AS ts Failed to invoke function `apoc.date.parse`: Caused by: java.lang.IllegalArgumentException: java.text.ParseException: Unparseable date: &amp;quot;2012-11-12T08:46:15Z&amp;quot; return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-ddTHH:mm:ssZ&amp;quot;) AS ts Failed to invoke function `apoc.date.parse`: Caused by: java.lang.IllegalArgumentException: Illegal pattern character &#39;T&#39; return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ&amp;quot;) AS ts Failed to invoke function `apoc.date.parse`: Caused by: java.lang.IllegalArgumentException: java.text.ParseException: Unparseable date: &amp;quot;2012-11-12T08:46:15Z&amp;quot; return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;&amp;quot;) AS ts ╒══════════╕ │&amp;quot;ts&amp;quot; │ ╞══════════╡ │1352709975│ └──────────┘ return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&amp;quot;) AS ts ╒══════════╕ │&amp;quot;ts&amp;quot; │ ╞══════════╡ │1352709975│ └──────────┘ </description>
    </item>
    
    <item>
      <title>Neo4j: Graphing the &#39;My name is...I work&#39; Twitter meme</title>
      <link>https://markhneedham.com/blog/2017/02/28/neo4j-graphing-name-work-twitter-meme/</link>
      <pubDate>Tue, 28 Feb 2017 15:50:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/28/neo4j-graphing-name-work-twitter-meme/</guid>
      <description>:param bearer: &#39;&amp;lt;your-bearer-token-goes-here&amp;gt;&#39; WITH &#39;https://api.twitter.com/1.1/search/tweets.json?count=100&amp;amp;result_type=recent&amp;amp;lang=en&amp;amp;q=&#39; as url, {bearer} as bearer CALL apoc.load.jsonParams(url + &amp;quot;%22my%20name%22%20is%22%20%22I%20work%22&amp;quot;,{Authorization:&amp;quot;Bearer &amp;quot;+bearer},null) yield value UNWIND value.statuses as status WITH status, status.user as u, status.entities as e WHERE status.quoted_status_id is not null // create a node for the original tweet MERGE (t:Tweet {id:status.id}) ON CREATE SET t.text=status.text,t.created_at=status.created_at,t.retweet_count=status.retweet_count, t.favorite_count=status.favorite_count // create a node for the author + a POSTED relationship from the author to the tweet MERGE (p:User {name:u.screen_name}) MERGE (p)-[:POSTED]-&amp;gt;(t) // create a MENTIONED relationship from the tweet to any users mentioned in the tweet FOREACH (m IN e.</description>
    </item>
    
    <item>
      <title>Neo4j: How do null values even work?</title>
      <link>https://markhneedham.com/blog/2017/02/22/neo4j-null-values-even-work/</link>
      <pubDate>Wed, 22 Feb 2017 23:28:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/22/neo4j-null-values-even-work/</guid>
      <description>WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value = null RETURN value (no changes, no records) WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value &amp;lt;&amp;gt; null RETURN value (no changes, no records) WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value RETURN value = null AS outcome ╒═══════╤═════════╕ │&amp;quot;value&amp;quot;│&amp;quot;outcome&amp;quot;│ ╞═══════╪═════════╡ │null │null │ ├───────┼─────────┤ │&amp;quot;null&amp;quot; │null │ ├───────┼─────────┤ │&amp;quot;&amp;quot; │null │ ├───────┼─────────┤ │&amp;quot;Mark&amp;quot; │null │ └───────┴─────────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value RETURN value = &amp;quot;Mark&amp;quot; AS outcome ╒═══════╤═════════╕ │&amp;quot;value&amp;quot;│&amp;quot;outcome&amp;quot;│ ╞═══════╪═════════╡ │null │null │ ├───────┼─────────┤ │&amp;quot;null&amp;quot; │false │ ├───────┼─────────┤ │&amp;quot;&amp;quot; │false │ ├───────┼─────────┤ │&amp;quot;Mark&amp;quot; │true │ └───────┴─────────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value is null RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │null │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value is not null RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │&amp;quot;null&amp;quot; │ ├───────┤ │&amp;quot;&amp;quot; │ ├───────┤ │&amp;quot;Mark&amp;quot; │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value &amp;lt;&amp;gt; &amp;quot;&amp;quot; RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │&amp;quot;null&amp;quot; │ ├───────┤ │&amp;quot;Mark&amp;quot; │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value = &amp;quot;&amp;quot; RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │&amp;quot;&amp;quot; │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value RETURN value, value = &amp;quot;&amp;quot; AS isEmpty, value &amp;lt;&amp;gt; &amp;quot;&amp;quot; AS isNotEmpty ╒═══════╤═════════╤════════════╕ │&amp;quot;value&amp;quot;│&amp;quot;isEmpty&amp;quot;│&amp;quot;isNotEmpty&amp;quot;│ ╞═══════╪═════════╪════════════╡ │null │null │null │ ├───────┼─────────┼────────────┤ │&amp;quot;null&amp;quot; │false │true │ ├───────┼─────────┼────────────┤ │&amp;quot;&amp;quot; │true │false │ ├───────┼─────────┼────────────┤ │&amp;quot;Mark&amp;quot; │false │true │ └───────┴─────────┴────────────┘ $ cat nulls.</description>
    </item>
    
    <item>
      <title>Neo4j: Analysing a CSV file using LOAD CSV and Cypher</title>
      <link>https://markhneedham.com/blog/2017/02/19/neo4j-analysing-csv-file-using-load-csv-cypher/</link>
      <pubDate>Sun, 19 Feb 2017 22:39:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/19/neo4j-analysing-csv-file-using-load-csv-cypher/</guid>
      <description>$ cat ~/Downloads/youtube_stats_pW9boJoUxO0.csv Video IDs:, pW9boJoUxO0, Start time:, Wed Feb 15 08:57:55 2017, End time:, Wed Feb 15 10:03:10 2017 Playbacks, Peak concurrent viewers, Total view time (hours), Average session length (minutes) 348, 112, 97.125, 16.7456896552, Country code, AR, AT, BE, BR, BY, CA, CH, CL, CR, CZ, DE, DK, EC, EE, ES, FI, FR, GB, HU, IE, IL, IN, IT, LB, LU, LV, MY, NL, NO, NZ, PK, PL, QA, RO, RS, RU, SE, TR, US, VN, ZA Playbacks, 2, 2, 1, 14, 1, 10, 2, 1, 1, 1, 27, 1, 1, 1, 3, 1, 25, 54, 1, 4, 6, 8, 1, 1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 2, 6, 22, 1, 114, 1, 1 Peak concurrent viewers, 2, 1, 1, 4, 1, 5, 1, 1, 0, 0, 11, 1, 1, 1, 2, 1, 6, 25, 1, 3, 3, 2, 1, 1, 1, 1, 1, 9, 1, 1, 0, 1, 0, 1, 1, 3, 7, 0, 44, 1, 0 Total view time (hours), 1.</description>
    </item>
    
    <item>
      <title>ReactJS/Material-UI: Cannot resolve module &#39;material-ui/lib/&#39;</title>
      <link>https://markhneedham.com/blog/2017/02/12/reactjsmaterial-ui-cannot-resolve-module-material-uilib/</link>
      <pubDate>Sun, 12 Feb 2017 22:43:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/12/reactjsmaterial-ui-cannot-resolve-module-material-uilib/</guid>
      <description>ERROR in ./src/app/modules/Foo.js Module not found: Error: Cannot resolve module &amp;#39;material-ui/lib/Subheader&amp;#39; in /Users/markneedham/neo/reactjs-test/src/app/modules @ ./src/app/modules/Foo.js 13:17-53 webpack: Failed to compile. import React from &amp;#39;react&amp;#39; import Subheader from &amp;#39;material-ui/lib/Subheader&amp;#39; export default React.createClass({ render() { return &amp;lt;div&amp;gt; &amp;lt;Subheader&amp;gt;Some Text&amp;lt;/Subheader&amp;gt; &amp;lt;/div&amp;gt; } }) import Foo from &amp;#39;./modules/Foo&amp;#39; render(Foo, document.getElementById(&amp;#34;app&amp;#34;)) import React from &amp;#39;react&amp;#39; import Subheader from &amp;#39;material-ui/Subheader&amp;#39; export default React.createClass({ render() { return &amp;lt;div&amp;gt; &amp;lt;Subheader&amp;gt;Some Text&amp;lt;/Subheader&amp;gt; &amp;lt;/div&amp;gt; } }) </description>
    </item>
    
    <item>
      <title>Go: Multi-threaded writing to a CSV file</title>
      <link>https://markhneedham.com/blog/2017/01/31/go-multi-threaded-writing-csv-file/</link>
      <pubDate>Tue, 31 Jan 2017 05:57:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/01/31/go-multi-threaded-writing-csv-file/</guid>
      <description>As part of a Go script I&amp;rsquo;ve been working on I wanted to write to a CSV file from multiple Go routines, but realised that the built in CSV Writer isn&amp;rsquo;t thread safe.
My first attempt at writing to the CSV file looked like this:
package main import ( &amp;#34;encoding/csv&amp;#34; &amp;#34;os&amp;#34; &amp;#34;log&amp;#34; &amp;#34;strconv&amp;#34; ) func main() { csvFile, err := os.Create(&amp;#34;/tmp/foo.csv&amp;#34;) if err != nil { log.Panic(err) } w := csv.</description>
    </item>
    
    <item>
      <title>Go vs Python: Parsing a JSON response from a HTTP API</title>
      <link>https://markhneedham.com/blog/2017/01/21/go-vs-python-parsing-a-json-response-from-a-http-api/</link>
      <pubDate>Sat, 21 Jan 2017 10:49:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/01/21/go-vs-python-parsing-a-json-response-from-a-http-api/</guid>
      <description>As part of a recommendations with Neo4j talkthat I&amp;rsquo;ve presented a few times over the last year I have a set of scripts that download some data from the meetup.com API.
They&amp;rsquo;re all written in Python but I thought it&amp;rsquo;d be a fun exercise to see what they&amp;rsquo;d look like in Go. My eventual goal is to try and parallelise the API calls.
This is the Python version of the script:</description>
    </item>
    
  </channel>
</rss>