+++
draft = false
date="2017-05-01 20:42:07"
title="PostgreSQL: ERROR:  argument of WHERE must not return a set"
tag=['postgresql']
category=['PostgreSQL']
+++

<p>
In my last post I showed how to <a href="http://www.markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/">load and query data from the Strava API in PostgreSQL</a> and after executing some simple queries my next task was to query more complex part of the JSON structure.
</p>


<div style="float:right">


<img src="http://www.markhneedham.com/blog/wp-content/uploads/2017/05/2017-05-01_21-22-55.png" alt="2017 05 01 21 22 55" title="2017-05-01_21-22-55.png" border="0" width="187" height="153" /></div>

<p>
Strava allows users to create <a href="https://support.strava.com/hc/en-us/articles/216918167-What-are-Segments-">segments</a>, which are edited portions of road or trail where athletes can compete for time.
</p>


<p>
I wanted to write a query to find all the times that I'd run a particular segment. e.g. the <a href="https://www.strava.com/segments/6818475">Akerman Road</a> segment covers a road running North to South in Kennington/Stockwell in South London.
</p>


<p>
This segment has the id <cite>'6818475'</cite> so we'll need to look inside <cite>segment_efforts</cite> and then compare the value <cite>segment.id</cite> against this id. 
</p>


<p>
I initially wrote this query to try and find the times I'd run this segment:
</p>



~~~sql

SELECT id, data->'start_date' AS startDate, data->'average_speed' AS averageSpeed
FROM runs
WHERE jsonb_array_elements(data->'segment_efforts')->'segment'->>'id' = '6818475'

ERROR:  argument of WHERE must not return a set
LINE 3: WHERE jsonb_array_elements(data->'segment_efforts')->'segmen...
~~~

<p>
This doesn't work since <cite><a href="https://www.postgresql.org/docs/9.5/static/functions-json.html#FUNCTIONS-JSON-PROCESSING-TABLE">jsonb_array_elements</a></cite> returns a set of boolean values, as <a href="http://stackoverflow.com/questions/21675174/querying-data-within-json-array-data-field/21677486#21677486">Craig Ringer points out on Stack Overflow</a>.
</p>


<p>
Instead we can use a <a href="https://www.postgresql.org/docs/9.4/static/queries-table-expressions.html#QUERIES-LATERAL">LATERAL subquery</a> to achieve our goal:
</p>



~~~sql

SELECT id, data->'start_date' AS startDate, data->'average_speed' AS averageSpeed
FROM runs r,
LATERAL jsonb_array_elements(r.data->'segment_efforts') segment
WHERE segment ->'segment'->>'id' = '6818475'

    id     |       startdate        | averagespeed 
-----------+------------------------+--------------
 455461182 | "2015-12-24T11:20:26Z" | 2.841
 440088621 | "2015-11-27T06:10:42Z" | 2.975
 407930503 | "2015-10-07T05:18:34Z" | 2.985
 317170464 | "2015-06-03T04:44:59Z" | 2.842
 312629236 | "2015-05-27T04:46:33Z" | 2.857
 277786711 | "2015-04-02T05:25:59Z" | 2.408
 226351235 | "2014-12-05T07:59:15Z" | 2.803
 225073326 | "2014-12-01T06:15:21Z" | 2.929
 224287690 | "2014-11-29T09:02:46Z" | 3.087
 223964715 | "2014-11-28T06:18:29Z" | 2.844
(10 rows)
~~~

<p>
Perfect!
</p>

