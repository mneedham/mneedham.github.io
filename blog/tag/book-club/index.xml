<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>book-club on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/book-club/</link>
    <description>Recent content in book-club on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2010 19:13:22 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/book-club/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Book Club: Growing Object Oriented Software - Chapter 7 (Steve Freeman &amp; Nat Pryce)</title>
      <link>https://markhneedham.com/blog/2010/01/28/book-club-growing-object-oriented-software-chapter-7-steve-freeman-nat-pryce/</link>
      <pubDate>Thu, 28 Jan 2010 19:13:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/28/book-club-growing-object-oriented-software-chapter-7-steve-freeman-nat-pryce/</guid>
      <description>My colleague David Santorohas started up a technical book club at the client we&amp;rsquo;re working at in Wales and the book choice for the first session was Chapter 7 - Achieving Object Oriented Design - of Growing Object Oriented Software, guided by tests written by Steve Freeman and Nat Pryce.
In this chapter they cover various approaches for driving towards object oriented code including techniques to find new objects and a detailed description of TDD and how we can approach this in a way that allows us to drive out new behaviour effectively.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 12 &amp; 13 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/12/20/book-club-working-effectively-with-legacy-code-chapters-12-13-michael-feathers/</link>
      <pubDate>Sun, 20 Dec 2009 03:52:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/20/book-club-working-effectively-with-legacy-code-chapters-12-13-michael-feathers/</guid>
      <description>In the last Sydney book club that I attended before I moved back to the UK we discussed Chapters 12 and 13 of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;
Lizhas taken over the summarising of the book clubnow that I&amp;rsquo;m not there so if you want to keep on reading about the book club Liz&amp;rsquo;s blog is the place to go!
One of the ideas suggested in this chapter is that when writing tests we should try and write these as close to the change point as possible.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 11 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/12/03/book-club-working-effectively-with-legacy-code-chapter-11-michael-feathers/</link>
      <pubDate>Thu, 03 Dec 2009 16:27:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/03/book-club-working-effectively-with-legacy-code-chapter-11-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 11 - &amp;lsquo;I Need to Make a Change. What Methods Should I Test?&amp;rsquo; - of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
In this chapter Feathers covers some techniques which allow us to work out which parts of the code we need to write tests around when we make changes.
These are some of my thoughts and our discussion of the chapter:</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 10 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/11/24/book-club-working-effectively-with-legacy-code-chapter-10-michael-feathers/</link>
      <pubDate>Tue, 24 Nov 2009 23:31:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/24/book-club-working-effectively-with-legacy-code-chapter-10-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 10 - &amp;lsquo;I Can&amp;rsquo;t Run This Method in a Test Harness&amp;rsquo; - of Michael Feather&amp;rsquo;s &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
In this chapter Feathers outlines some of the problems we might have getting methods under test and then suggests some ways to get around those problems.
These are some of my thoughts and our discussion of the chapter:
Tomspoke of &amp;lsquo;value fetishism&amp;rsquo; whereby we get so caught up trying to add &amp;lsquo;business value&amp;rsquo; that we forget to keep the code in good stead for future work.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 9 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/11/18/book-club-working-effectively-with-legacy-code-chapter-9-michael-feathers/</link>
      <pubDate>Wed, 18 Nov 2009 17:25:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/18/book-club-working-effectively-with-legacy-code-chapter-9-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 9 - &amp;lsquo;I Can&amp;rsquo;t Get This Class Into A Test Harness&amp;rsquo; - of Michael Feather&amp;rsquo;s &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
This chapter goes through various problems that we might have getting a class under test and then suggests different techniques to get around those problems.
These are some of my thoughts and our discussion of the chapter:
While I think this is a useful strategy it&amp;rsquo;s useful to keep in mind that the need to do this is often an indication that the class is doing too much and we probably need to look at breaking that class out into two smaller ones.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 8 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/11/03/book-club-working-effectively-with-legacy-code-chapter-8-michael-feathers/</link>
      <pubDate>Tue, 03 Nov 2009 00:16:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/03/book-club-working-effectively-with-legacy-code-chapter-8-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 8 - &amp;lsquo;How do I add a feature?&amp;rsquo; - of Michael Feather&amp;rsquo;s &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
This chapter covers Test Driven Development and a technique I hadn&amp;rsquo;t come across before called Programming By Difference.
These are some of my thoughts and our discussion of the chapter:
I&amp;rsquo;ve noticed a few times recently that delaying our desire to remove duplication until we can properly see where the duplication lies might be a better strategy than prematurely removing duplication and creating a meaningless abstraction which can be difficult to remove.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 6 &amp; 7 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/10/26/book-club-working-effectively-with-legacy-code-chapters-6-7-michael-feathers/</link>
      <pubDate>Mon, 26 Oct 2009 23:10:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/26/book-club-working-effectively-with-legacy-code-chapters-6-7-michael-feathers/</guid>
      <description>In our latest technical book club we covered chapters 6 &amp;amp; 7 - &amp;lsquo;I Don&amp;rsquo;t Have Much Time And I Have To Change It&amp;rsquo; and &amp;lsquo;It Takes Forever To Make A Change&amp;rsquo; - of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
The first chapter discusses various different techniques that we can use to add in new code to a legacy code base. These include:
The second chapter discusses some common problems we may experience while trying to make changes.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 3,4 &amp; 5 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/10/20/book-club-working-effectively-with-legacy-code-chapters-34-5-michael-feathers/</link>
      <pubDate>Tue, 20 Oct 2009 07:01:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/20/book-club-working-effectively-with-legacy-code-chapters-34-5-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapters 3,4 and 5 of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; - &amp;lsquo;Sensing and Separation&amp;rsquo;, &amp;lsquo;The Seam Model&amp;rsquo; and &amp;lsquo;Tools&amp;rsquo;.
These are some of my thoughts from our discussion of these chapters:
In my time coding professionally I have experienced difficulties with the former than the latter. I have certainly written code which is bordering impossible to test but it seems like maybe writing code which is difficult to sense against is less problematic than code which we struggle to get into a test harness.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 1 &amp; 2 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/10/14/book-club-working-effectively-with-legacy-code-chapters-1-2-michael-feathers/</link>
      <pubDate>Wed, 14 Oct 2009 23:21:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/14/book-club-working-effectively-with-legacy-code-chapters-1-2-michael-feathers/</guid>
      <description>We&amp;rsquo;ve decided to go back to reading a book in our technical book club after a few months of discussing different papers and the chosen book is Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
We started off by reading the first two chapters titled &amp;lsquo;Changing Software&amp;rsquo; and &amp;lsquo;Working with Feedback&amp;rsquo; and these are some of my thoughts and our discussion of the chapters:
Tomsuggested that if we have good enough tests then we shouldn&amp;rsquo;t be fearful of making changes at any time.</description>
    </item>
    
    <item>
      <title>Book Club: Integration tests are a scam (J.B. Rainsberger)</title>
      <link>https://markhneedham.com/blog/2009/10/06/book-club-integration-tests-are-a-scam-j-b-rainsberger/</link>
      <pubDate>Tue, 06 Oct 2009 23:37:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/06/book-club-integration-tests-are-a-scam-j-b-rainsberger/</guid>
      <description>In our latest book club we discussed J.B. Rainsberger&amp;rsquo;s presentation from Agile 2009 titled &amp;lsquo;Integration tests are a scam&amp;rsquo;.
These are some of my thoughts and our discussion of the video:
I&amp;rsquo;m intrigued as to how repositories and factories would fit into this picture as I&amp;rsquo;m not sure whether they count as services, entities or value types. I&amp;rsquo;ve worked on code bases where we&amp;rsquo;ve created interfaces for them but I don&amp;rsquo;t know if that means they would be services or that we did something wrong.</description>
    </item>
    
    <item>
      <title>Book Club: Design Sense (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/09/30/book-club-design-sense-michael-feathers/</link>
      <pubDate>Wed, 30 Sep 2009 00:42:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/30/book-club-design-sense-michael-feathers/</guid>
      <description>In our latest technical book club we discussed a presentation given at the Norwegian Developers Conferenceby Michael Feathers titled &amp;lsquo;Design Sense&amp;rsquo;.
In this presentation he presents quite a number of different ideas that he has learned from his experiences in software development over the years.
These are some of my thoughts and our discussion:
Davesuggested that perhaps this is related to Benford&amp;rsquo;s Lawwhich describes exponential growth processes.
I wonder whether this observation is somehow linked to the broken window theory whereby if a method is large then it is likley to increase in size since it probably already has some problems so it doesn&amp;rsquo;t seem so bad to throw some more code into the method.</description>
    </item>
    
    <item>
      <title>Book Club: Versioning your database (K. Scott Allen)</title>
      <link>https://markhneedham.com/blog/2009/09/24/book-club-versioning-your-database-k-scott-allen/</link>
      <pubDate>Thu, 24 Sep 2009 07:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/24/book-club-versioning-your-database-k-scott-allen/</guid>
      <description>In our latest technical book club we discussed a series of posts written by K. Scott Allen about getting your database under version control.
These are some of my thoughts and our discussion:
Several colleagues pointed out that this approach can lead to us having quite a lot of fine grained change scripts - each maybe adding or altering one column - and that an approach they had used with some success was to allow changes to be made up until a change script had been applied in an environment outside of the team&amp;rsquo;s control, typically UAT.</description>
    </item>
    
    <item>
      <title>Book Club: SOLID Principles (Uncle Bob Martin)</title>
      <link>https://markhneedham.com/blog/2009/09/16/book-club-solid-principles-uncle-bob-martin/</link>
      <pubDate>Wed, 16 Sep 2009 01:11:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/16/book-club-solid-principles-uncle-bob-martin/</guid>
      <description>In our latest technical book club we discussed Uncle Bob Martin&amp;rsquo;s presentation to the Norwegian Developers Conferenceon &amp;lsquo;SOLID Design&amp;rsquo;.
These principles of object oriented design are also written up on Uncle Bob&amp;rsquo;s websiteand are also in his book &amp;lsquo;Agile Principles, Patterns and Practices&amp;rsquo;.
I read most of the book a couple of years ago but I don&amp;rsquo;t always remember all of the principles when I&amp;rsquo;m coding so it was good to revisit them again.</description>
    </item>
    
    <item>
      <title>Book Club: Promiscuous Pairing &amp; Beginner&#39;s Mind (Arlo Belshee)</title>
      <link>https://markhneedham.com/blog/2009/09/05/book-club-promiscuous-pairing-beginners-mind-arlo-belkshee/</link>
      <pubDate>Sat, 05 Sep 2009 16:12:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/05/book-club-promiscuous-pairing-beginners-mind-arlo-belkshee/</guid>
      <description>In this weeks book club we discussed Arlo Belshee&amp;rsquo;s paper &amp;lsquo;Promiscuous Pairing and Beginner&amp;rsquo;s Mind&amp;rsquo; where he presents the idea of rotating pairs more frequently than we might usually, suggesting that the optimal rotation time is 90 minutes.
I remember coming across the idea of promiscuous pairing a couple of years ago but I hadn&amp;rsquo;t read the paper all the way through and so far haven&amp;rsquo;t worked on a team where we&amp;rsquo;ve really tried out his ideas.</description>
    </item>
    
    <item>
      <title>Book Club: Unshackle your domain (Greg Young)</title>
      <link>https://markhneedham.com/blog/2009/08/29/book-club-unshackle-your-domain-greg-young/</link>
      <pubDate>Sat, 29 Aug 2009 09:54:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/29/book-club-unshackle-your-domain-greg-young/</guid>
      <description>In this week&amp;rsquo;s book club we continued with the idea of discussing videos, this week&amp;rsquo;s selection being Greg Young&amp;rsquo;s &amp;lsquo;Unshackle your Domain&amp;rsquo; presentation from QCon San Francisco in November 2008. He also did a version of this talk in the February European Alt.NET meeting.
In this presentation Greg talks about Command Query Separationat the architecture level and explicit state transitions amongst other things.
Jonathan Oliver has created a useful resource pageof the material that&amp;rsquo;s been written about some of these ideas as well.</description>
    </item>
    
    <item>
      <title>Book Club: What I&#39;ve learned about DDD since the book (Eric Evans)</title>
      <link>https://markhneedham.com/blog/2009/08/24/book-club-what-ive-learned-about-ddd-since-the-book-eric-evans/</link>
      <pubDate>Mon, 24 Aug 2009 18:20:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/24/book-club-what-ive-learned-about-ddd-since-the-book-eric-evans/</guid>
      <description>This week book club became video club as we discussed Eric Evans&amp;rsquo; QCon London presentation &amp;lsquo;What I&amp;rsquo;ve learned about DDD since the book&amp;rsquo;.
I was lucky enough to be able to attend this presentation liveand we previously ran a book club where I briefly summarised what I&amp;rsquo;d learnt but this gave everyone else an opportunity to see it first hand.
There are some of my thoughts and our discussion of the presentation:</description>
    </item>
    
    <item>
      <title>Book Club: Object Role Stereotypes (Jeremy Miller)</title>
      <link>https://markhneedham.com/blog/2009/08/08/book-club-object-role-stereotypes-jeremy-miller/</link>
      <pubDate>Sat, 08 Aug 2009 00:49:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/08/book-club-object-role-stereotypes-jeremy-miller/</guid>
      <description>In last week&amp;rsquo;s book club we discussed an article written by Jeremy Millerfor MSDN Magazine titled &amp;lsquo;Object Role Stereotypes&amp;rsquo; which discusses part of Rebecca Wirfs Brock&amp;rsquo;s book &amp;lsquo;Object Design&amp;rsquo;.
I&amp;rsquo;ve been trying to read Object Design for about a year since coming across the book while reading through the slides from JAOO Sydney 2008but I&amp;rsquo;ve often found the reading to be quite abstract and have struggled to work out how to apply the ideas to the coding I do day to day.</description>
    </item>
    
    <item>
      <title>Book Club: Hexagonal Architecture (Alistair Cockburn)</title>
      <link>https://markhneedham.com/blog/2009/07/30/book-club-hexagonal-architecture-alistair-cockburn/</link>
      <pubDate>Thu, 30 Jul 2009 00:59:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/30/book-club-hexagonal-architecture-alistair-cockburn/</guid>
      <description>In our latest book club we discussed Alistair Cockburn&amp;rsquo;s Hexagonal Architecturewhich I first heard about around a year agoand was another of Dave Cameron&#39;s recommendations.
As I understand it, the article describes an architecture for our systems where the domain sits in the centre and other parts of the system depend on the domain while the domain doesn&amp;rsquo;t depend on anything concrete but is interacted with by various adapters.
These are some of my thoughts and our discussion of the article:</description>
    </item>
    
    <item>
      <title>Book Club: An agile approach to a legacy system (Chris Stevenson and Andy Pols)</title>
      <link>https://markhneedham.com/blog/2009/07/15/book-club-an-agile-approach-to-a-legacy-system-chris-stevenson-and-andy-pols/</link>
      <pubDate>Wed, 15 Jul 2009 00:53:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/15/book-club-an-agile-approach-to-a-legacy-system-chris-stevenson-and-andy-pols/</guid>
      <description>Our latest book club session was a discussion on a paper written by my colleague Chris Stevenson and Andy Pols titled &amp;lsquo;An Agile Approach to a Legacy System&amp;rsquo; which I think was written in 2004. This paper was suggested by Dave Cameron.
These are some of my thoughts and our discussion of the paper:
Although this paper is relatively short it&amp;rsquo;s probably been the most interesting one that we&amp;rsquo;ve looked at so far.</description>
    </item>
    
    <item>
      <title>Book Club: Why noone uses functional languages (Philip Wadler)</title>
      <link>https://markhneedham.com/blog/2009/07/08/book-club-why-noone-uses-functional-languages-philip-wadler/</link>
      <pubDate>Wed, 08 Jul 2009 00:29:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/08/book-club-why-noone-uses-functional-languages-philip-wadler/</guid>
      <description>Our latest technical book club discussion was based around Philip Wadler&amp;rsquo;s paper &amp;lsquo;Why noone uses functional langauges&amp;rsquo; which he wrote in 1998. I came across this paper when reading some of the F# goals in the FAQson the Microsoft website.
These are some of my thoughts and our discussion of the paper:
I&amp;rsquo;m intrigued as to whether this will change as more people use functional languages or whether this is just something we will need to get used to.</description>
    </item>
    
    <item>
      <title>Book Club: Logging - Release It (Michael Nygaard)</title>
      <link>https://markhneedham.com/blog/2009/07/02/book-club-logging-release-it-michael-nygaard/</link>
      <pubDate>Thu, 02 Jul 2009 12:04:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/02/book-club-logging-release-it-michael-nygaard/</guid>
      <description>Our latest technical book club session was a discussion of the logging section in Michael Nygard&amp;rsquo;s Release It.
I recently listened to an interview with Michael Nygard on Software Engineering Radioso I was interested in reading more of his stuff and Camsuggested that the logging chapter would be an interesting one to look at as it&amp;rsquo;s often something which we don&amp;rsquo;t spend a lot of time thinking about on software development teams.</description>
    </item>
    
  </channel>
</rss>