<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>foreach on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/foreach/</link>
    <description>Recent content in foreach on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Dec 2008 23:52:17 +0000</lastBuildDate>
    
	<atom:link href="https://www.markhneedham.com/blog/tag/foreach/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C#&#39;s Lambda ForEach: Only on Lists?</title>
      <link>https://www.markhneedham.com/blog/2008/12/15/cs-lamba-foreach-only-on-lists/</link>
      <pubDate>Mon, 15 Dec 2008 23:52:17 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2008/12/15/cs-lamba-foreach-only-on-lists/</guid>
      <description>One of my favourite things introduced into C# recently is the new ForEach method which can be applied to (apparently only!) lists.
 Last week we had a situation where we wanted to make use of the ForEach method on an IDictionary which we were using to store a collection of Selenium clients.
 IDictionary&amp;lt;string, ISelenium&amp;gt; seleniumClients = new Dictionary&amp;lt;string, ISelenium&amp;gt;();   We wanted to write a piece of code to exit all of the clients when our tests had completed.</description>
    </item>
    
  </channel>
</rss>