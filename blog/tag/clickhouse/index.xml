<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clickhouse on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/clickhouse/</link>
    <description>Recent content in clickhouse on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Nov 2023 00:44:37 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/clickhouse/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ClickHouse: Convert date or datetime to epoch</title>
      <link>https://www.markhneedham.com/blog/2023/11/06/clickhouse-date-to-epoch/</link>
      <pubDate>Mon, 06 Nov 2023 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/11/06/clickhouse-date-to-epoch/</guid>
      <description>I’ve been working with dates in ClickHouse today and I wanted to convert some values into epoch seconds/milliseconds to use with another tool. We’re going to document how to do that in this blog post, for future me if no one else.
Let’s start an instance of ClickHouse Local:
clickhouse local -m And now we’ll write a query that returns the current date/time:
SELECT now() AS time; Output ┌────────────────time─┐ │ 2023-11-06 14:58:19 │ └─────────────────────┘ If we want to convert this value to epoch seconds, we can use the toUnixTimestamp function.</description>
    </item>
    
    <item>
      <title>ClickHouse: Code: 60. DB::Exception: Table does not exist</title>
      <link>https://www.markhneedham.com/blog/2023/10/16/clickhouse-local-table-does-not-exist/</link>
      <pubDate>Mon, 16 Oct 2023 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/10/16/clickhouse-local-table-does-not-exist/</guid>
      <description>I’ve been playing with clickhouse-local again this week and ran into an interesting issue when persisting a table that I thought I’d document for future Mark.
You can install ClickHouse on your machine by running the following command:
curl https://clickhouse.com/ | sh Or you could use HomeBrew if you’re working on a Mac:
brew install clickhouse We can then launch clickhouse-local, which lets you run ClickHouse in what I think of as an embedded mode.</description>
    </item>
    
    <item>
      <title>ClickHouse: How to unpack or unnest an array</title>
      <link>https://www.markhneedham.com/blog/2023/07/03/clickhouse-unpack-unnest-array/</link>
      <pubDate>Mon, 03 Jul 2023 04:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/07/03/clickhouse-unpack-unnest-array/</guid>
      <description>I recently came across clickhouse-local via this article in the MotherDuck monthly newsletter and I wanted to give it a try on my expected goals dataset. One of the first things that I wanted to do was unpack an array and in this blog post, we’ll learn how to do that.
I installed Clickhouse by running the following command:
curl https://clickhouse.com/ | sh And then launched the clickhouse-local CLI like this:</description>
    </item>
    
  </channel>
</rss>
