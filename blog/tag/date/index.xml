<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>date on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/date/</link>
    <description>Recent content in date on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Jul 2018 18:21:00 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/date/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing with Joda Time</title>
      <link>https://markhneedham.com/blog/2008/09/24/testing-with-joda-time/</link>
      <pubDate>Wed, 24 Sep 2008 05:11:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/testing-with-joda-time/</guid>
      <description>The alternative to dealing with java.util.Date which I wrote about in a previous postis to make use of the Joda Timelibrary. I&amp;rsquo;m led to believe that a lot of the ideas from Joda Time will in fact be in Java 7.
Nevertheless when testing with Joda Time there are times when it would be useful for us to have control over the time our code is using.
Given that, there are two approaches which I have seen to allow us to do this:</description>
    </item>
    
    <item>
      <title>Using java.util.Date safely</title>
      <link>https://markhneedham.com/blog/2008/09/18/using-javautildate-safely/</link>
      <pubDate>Thu, 18 Sep 2008 11:01:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/18/using-javautildate-safely/</guid>
      <description>Assuming that you are unable to use Joda Timeon your project, there are some simple ways that I have come across that allow you to not suffer at the hands of java.util.Date.
This means that you can do an operation like the following, for example:
import java.util.Date; import java.util.Calendar; public class DateTest { public static void main(String[] args) { Date aDate = createDate(1, 0, 2008); System.out.println(aDate); aDate.setTime(createDate(1, 0, 2009).getTime()); System.out.println(aDate); } private static Date createDate(int date, int month, int year) { Calendar calendar = Calendar.</description>
    </item>
    
  </channel>
</rss>