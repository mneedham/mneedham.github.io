<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sns on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/sns/</link>
    <description>Recent content in sns on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Sep 2017 07:51:29 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/sns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless: Building a mini producer/consumer data pipeline with AWS SNS</title>
      <link>https://markhneedham.com/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</link>
      <pubDate>Sat, 30 Sep 2017 07:51:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</guid>
      <description>service: marks-blog frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 iamRoleStatements: - Effect: &amp;#39;Allow&amp;#39; Action: - &amp;#34;sns:Publish&amp;#34; Resource: - ${self:custom.BlogTopic} custom: BlogTopic: Fn::Join: - &amp;#34;:&amp;#34; - - arn - aws - sns - Ref: AWS::Region - Ref: AWS::AccountId - marks-blog-topic functions: message-consumer: name: MessageConsumer handler: handler.consumer events: - sns: topicName: marks-blog-topic displayName: Topic to process events message-producer: name: MessageProducer handler: handler.producer events: - schedule: rate(1 day) import boto3 import json import datetime from datetime import timezone def producer(event, context): sns = boto3.</description>
    </item>
    
  </channel>
</rss>