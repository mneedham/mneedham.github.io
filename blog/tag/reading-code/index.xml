<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reading-code on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/reading-code/</link>
    <description>Recent content in reading-code on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Feb 2013 23:12:49 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/reading-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reading Code: Assume it doesn&#39;t work</title>
      <link>https://markhneedham.com/blog/2013/02/27/reading-code-assume-it-doesnt-work/</link>
      <pubDate>Wed, 27 Feb 2013 23:12:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/27/reading-code-assume-it-doesnt-work/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Reading Code: boilerpipe</title>
      <link>https://markhneedham.com/blog/2012/02/13/reading-code-boilerpipe/</link>
      <pubDate>Mon, 13 Feb 2012 21:16:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/13/reading-code-boilerpipe/</guid>
      <description>I&amp;rsquo;m a big fan of the iPad application Flipboard, especially it&amp;rsquo;s ability to filter out the non important content on web pages and just show me the main content so I&amp;rsquo;ve been looking around at open source libraries which provide that facility.
I came across a quora page where someone had asked how this was doneand the suggested libraries were readability, Gooseand boilerpipe.
boilerpipe was written by Christian Kohlsch√ºtter and has a corresponding paperand videoas well.</description>
    </item>
    
    <item>
      <title>Reading Code: Know what you&#39;re looking for</title>
      <link>https://markhneedham.com/blog/2011/12/29/reading-code-know-what-youre-looking-for/</link>
      <pubDate>Thu, 29 Dec 2011 02:43:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/29/reading-code-know-what-youre-looking-for/</guid>
      <description>In the last week or so before Christmas I got the chance to spend some time pairing with my colleague Alex Harinwhile trying to understand how an existing application which we were investigating was written.
We knew from watching a demo of the application that the user was able to send some processing off to be done in the background and that they would be emailed once that had happened.</description>
    </item>
    
    <item>
      <title>Reading Code: underscore.js</title>
      <link>https://markhneedham.com/blog/2010/03/28/reading-code-underscore-js/</link>
      <pubDate>Sun, 28 Mar 2010 20:02:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/28/reading-code-underscore-js/</guid>
      <description>I&amp;rsquo;ve been spending a bit of time reading through the source code of underscore.js, a JavaScript library that provides lots of functional programming support which my colleague Dave Yeung pointed out to me after reading my post about building a small application with node.js.
I&amp;rsquo;m still getting used to the way that JavaScript libraries are written but these were some of the interesting things that I got from reading the code:</description>
    </item>
    
    <item>
      <title>Reading Code: Unity</title>
      <link>https://markhneedham.com/blog/2009/11/04/reading-code-unity/</link>
      <pubDate>Wed, 04 Nov 2009 01:22:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/04/reading-code-unity/</guid>
      <description>I spent a bit of time reading some of the Unitycode base recently and I decided to try out a variation of Michael Feathers &amp;lsquo;Effect Sketching&amp;rsquo; which my colleague Dave Cameronshowed me.
&amp;lsquo;Effect Sketching&amp;rsquo; is a technique Feathers describes in &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; and the idea is that we sketch a diagram showing the interactions between the fields and methods in a specific class while browsing through the code.</description>
    </item>
    
    <item>
      <title>Reading Code: Rhino Mocks</title>
      <link>https://markhneedham.com/blog/2009/07/28/reading-code-rhino-mocks/</link>
      <pubDate>Tue, 28 Jul 2009 00:05:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/28/reading-code-rhino-mocks/</guid>
      <description>I spent a bit of time recently reading through some of the Rhino Mocksto get a basic understanding of how some features work under the hood.
As well as just getting some practice at reading unfamiliar code I also wanted to know the following:
These are some of the things I learnt from my exploration:
I decided to try out MonoDevelopto see if I could keep on reading the code outside my VM.</description>
    </item>
    
  </channel>
</rss>