<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Null Handling on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/null-handling/</link>
    <description>Recent content in Null Handling on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Jan 2009 22:35:31 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/null-handling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>F# Option Types</title>
      <link>https://mneedham.github.io/blog/2009/01/02/f-option-types/</link>
      <pubDate>Fri, 02 Jan 2009 22:35:31 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2009/01/02/f-option-types/</guid>
      <description>I&amp;rsquo;ve been spending a bit of time working through the Real World Functional Programming book to learn a bit about F# and one of the cool features I came across today (while reading Chris Smith&amp;rsquo;s post on F# lists) is the Option type.
I first came across this idea a few months ago when discussing null handling strategies with a colleague who pointed out that you could get around this problem in Scala by using the Option class.</description>
    </item>
    
  </channel>
</rss>