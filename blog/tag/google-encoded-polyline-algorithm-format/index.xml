<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>google-encoded-polyline-algorithm-format on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/google-encoded-polyline-algorithm-format/</link>
    <description>Recent content in google-encoded-polyline-algorithm-format on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jan 2018 23:35:25 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/google-encoded-polyline-algorithm-format/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Strava: Calculating the similarity of two runs</title>
      <link>https://markhneedham.com/blog/2018/01/18/strava-calculating-similarity-two-runs/</link>
      <pubDate>Thu, 18 Jan 2018 23:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/01/18/strava-calculating-similarity-two-runs/</guid>
      <description>import polyline polyline.decode(&amp;#39;u{~vFvyys@fS]&amp;#39;) [(40.63179, -8.65708), (40.62855, -8.65693)] The sequences are &amp;ldquo;warped&amp;rdquo; non-linearly in the time dimension to determine a measure of their similarity independent of certain non-linear variations in the time dimension.
import os import polyline import requests from fastdtw import fastdtw token = os.environ[&amp;#34;TOKEN&amp;#34;] headers = {&amp;#39;Authorization&amp;#39;: &amp;#34;Bearer {0}&amp;#34;.format(token)} def find_points(activity_id): r = requests.get(&amp;#34;https://www.strava.com/api/v3/activities/{0}&amp;#34;.format(activity_id), headers=headers) response = r.json() line = response[&amp;#34;map&amp;#34;][&amp;#34;polyline&amp;#34;] return polyline.decode(line) from scipy.spatial.distance import euclidean activity1_id = 1361109741 activity2_id = 1346460542 distance, path = fastdtw(find_points(activity1_id), find_points(activity2_id), dist=euclidean) &amp;gt;&amp;gt;&amp;gt; print(distance) 2.</description>
    </item>
    
  </channel>
</rss>