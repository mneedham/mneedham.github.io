<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>automapper on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/automapper/</link>
    <description>Recent content in automapper on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Jan 2010 07:57:22 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/automapper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automapper: Don&#39;t forget Mapper.Reset() at the start</title>
      <link>https://markhneedham.com/blog/2010/01/27/automapper-dont-forget-mapper-reset-at-the-start/</link>
      <pubDate>Wed, 27 Jan 2010 07:57:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/27/automapper-dont-forget-mapper-reset-at-the-start/</guid>
      <description>I wrote about my first thoughts using Automapperlast week and although I realised that it makes use of the static gateway pattern we ran into a problem where two consecutive calls to a method using AutoMapper always returned the same value for one of the mappings.
The code was roughly like this:
public Bar CreateNewBar(Bar originalBar, string someNewValue) { Mapper.CreateMap&amp;lt;Baz, Baz&amp;gt;() .ForMember(x =&amp;gt; x.Id, opts =&amp;gt; opts.Ignore()) .ForMember(x =&amp;gt; x.SomeProperty, opts =&amp;gt; opts.</description>
    </item>
    
    <item>
      <title>Automapper: First thoughts</title>
      <link>https://markhneedham.com/blog/2010/01/22/automapper-first-thoughts/</link>
      <pubDate>Fri, 22 Jan 2010 23:21:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/22/automapper-first-thoughts/</guid>
      <description>I came across Jimmy Bogard&amp;rsquo;s Automapperlibrary a while ago but hadn&amp;rsquo;t had the opportunity to try it out on a project until this week.
The problem we wanted to solve was relatively simple.
We had a domain object and we wanted to create a copy of that with one of the fields changed and all of the ids cleared from the object and any objects contained within it so that we could persist the new web of objects to the database.</description>
    </item>
    
  </channel>
</rss>