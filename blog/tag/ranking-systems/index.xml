<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ranking Systems on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/ranking-systems/</link>
    <description>Recent content in Ranking Systems on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Sep 2013 20:26:35 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/ranking-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Elo Rating System: Ranking Champions League teams using Clojure Part 2</title>
      <link>https://mneedham.github.io/blog/2013/09/30/elo-rating-system-ranking-champions-league-teams-using-clojure-part-2/</link>
      <pubDate>Mon, 30 Sep 2013 20:26:35 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2013/09/30/elo-rating-system-ranking-champions-league-teams-using-clojure-part-2/</guid>
      <description>A few weeks ago I wrote about ranking Champions League teams using the Elo Rating algorithm, and since I wrote that post I&#39;ve collated data for 10 years worth of matches so I thought an update was in order.
After extracting the details of all those matches I saved them to a JSON file so that I wouldn&#39;t have to parse the HTML pages every time I tweaked the algorithm. This should also make it easier for other people to play with the data.</description>
    </item>
    
    <item>
      <title>Elo Rating System: Ranking Champions League teams using Clojure</title>
      <link>https://mneedham.github.io/blog/2013/08/31/elo-rating-system-ranking-champions-league-teams-using-clojure/</link>
      <pubDate>Sat, 31 Aug 2013 13:01:16 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2013/08/31/elo-rating-system-ranking-champions-league-teams-using-clojure/</guid>
      <description>As I mentioned in an earlier blog post I&#39;ve been learning about ranking systems and one of the first ones I came across was the Elo rating system which is most famously used to rank chess players.
The Elo rating system uses the following formula to work out a player/team&#39;s ranking after they&#39;ve participated in a match:
 R&#39; = R + K * (S - E)  R&#39; is the new rating R is the old rating K is a maximum value for increase or decrease of rating (16 or 32 for ELO) S is the score for a game E is the expected score for a game  I converted that formula into the following Clojure functions:</description>
    </item>
    
    <item>
      <title>Ranking Systems: What I&#39;ve learnt so far</title>
      <link>https://mneedham.github.io/blog/2013/08/24/ranking-systems-what-ive-learnt-so-far/</link>
      <pubDate>Sat, 24 Aug 2013 11:05:58 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2013/08/24/ranking-systems-what-ive-learnt-so-far/</guid>
      <description>I often go off on massive tangents reading all about a new topic but don&#39;t record what I&#39;ve read so if I go back to the topic again in the future I have to start from scratch which is quite frustrating.
In this instance after playing around with calculating the eigenvector centrality of a sub graph I learnt that this algorithm can also be used in ranking systems.
I started off by reading a paper written by James Keener about the Perron-Frobenius Theorem and the ranking of American football teams.</description>
    </item>
    
  </channel>
</rss>