<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphql on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/graphql/</link>
    <description>Recent content in graphql on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Mar 2018 15:49:48 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/graphql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitHub: Getting the download count for a release</title>
      <link>https://markhneedham.com/blog/2018/03/23/github-release-download-count/</link>
      <pubDate>Fri, 23 Mar 2018 15:49:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/23/github-release-download-count/</guid>
      <description>At Neo4j we distribute several of our Developer Relations projects via GitHub Releases so I was curious whether there was a way to see how many people had downloaded them.
 I found an article explaining how to do it on v3 of the GitHub API, but I&amp;#8217;ve got used to the v4 GraphQL API and I&amp;#8217;m not going back! Thankfully it&amp;#8217;s not too difficult to figure out.
 GitHub let you explore the API via the GitHub GraphQL Explorer and the following query gets us the information we require:</description>
    </item>
    
    <item>
      <title>GraphQL-Europe: A trip to Berlin</title>
      <link>https://markhneedham.com/blog/2017/05/27/graphql-europe-trip-berlin/</link>
      <pubDate>Sat, 27 May 2017 11:31:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/27/graphql-europe-trip-berlin/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>