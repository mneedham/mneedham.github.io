<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sortedcontainers on Mark Needham</title>
    <link>http://localhost:8000/blog/tag/sortedcontainers/</link>
    <description>Recent content in sortedcontainers on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Dec 2022 02:44:37 +0000</lastBuildDate><atom:link href="http://localhost:8000/blog/tag/sortedcontainers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python: Sorting lists of dictionaries with sortedcontainers</title>
      <link>http://localhost:8000/blog/2022/12/02/python-sorting-lists-dictionaries-sortedcontainers/</link>
      <pubDate>Fri, 02 Dec 2022 02:44:37 +0000</pubDate>
      
      <guid>http://localhost:8000/blog/2022/12/02/python-sorting-lists-dictionaries-sortedcontainers/</guid>
      <description>I was recently working on a Kafka streams data generator, where I only wanted to publish events once the time on those events had been reached. To solve this problem I needed a sorted list and in this blog post we’re going to explore how I went about doing this.
Note I’ve created a video showing how to do this on my YouTube channel, Learn Data with Mark, so if you prefer to consume content through that medium, I’ve embedded it below:</description>
    </item>
    
  </channel>
</rss>
