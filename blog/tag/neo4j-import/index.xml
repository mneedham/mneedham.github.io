<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>neo4j-import on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/neo4j-import/</link>
    <description>Recent content in neo4j-import on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Mar 2019 06:42:00 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/neo4j-import/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Neo4j: From Graph Model to Neo4j Import</title>
      <link>https://www.markhneedham.com/blog/2019/03/27/from-graph-model-to-neo4j-import/</link>
      <pubDate>Wed, 27 Mar 2019 06:42:00 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2019/03/27/from-graph-model-to-neo4j-import/</guid>
      <description>In this post we’re going to learn how to import the DBLP citation network into Neo4j using the Neo4j Import Tool.
In case you haven’t come across this dataset before, Tomaz Bratanic has a great blog post explaining it.
The tl;dr is that we have articles, authors, and venues. Authors can write articles, articles can reference other articles, and articles are presented at a venue. Below is the graph model for this dataset:</description>
    </item>
    
    <item>
      <title>Neo4j: Using the Neo4j Import Tool with the Neo4j Desktop</title>
      <link>https://www.markhneedham.com/blog/2018/03/19/neo4j-using-neo4j-import-tool-with-neo4j-desktop/</link>
      <pubDate>Mon, 19 Mar 2018 21:38:13 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2018/03/19/neo4j-using-neo4j-import-tool-with-neo4j-desktop/</guid>
      <description>Last week as part of a modelling and import webinar I showed how to use the Neo4j Import Tool to create a graph of the Yelp Open Dataset:
Afterwards I realised that I didn’t show how to use the tool if you already have an existing database in place so this post will show how to do that.
Imagine we have a Neo4j Desktop project that looks like this:</description>
    </item>
    
    <item>
      <title>Neo4j Import: java.lang.IllegalStateException: Mixing specified and unspecified group belongings in a single import isn&#39;t supported</title>
      <link>https://www.markhneedham.com/blog/2018/03/07/neo4j-import-java-lang-illegalstateexception-mixing-specified-unspecified-group-belongings-single-import-isnt-supported/</link>
      <pubDate>Wed, 07 Mar 2018 03:11:12 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2018/03/07/neo4j-import-java-lang-illegalstateexception-mixing-specified-unspecified-group-belongings-single-import-isnt-supported/</guid>
      <description>I’ve been working with the Neo4j Import Tool recently after a bit of a break and ran into an interesting error message that I initially didn’t understand.
I had some CSV files containing nodes that I wanted to import into Neo4j. Their contents look like this:
$ cat people_header.csv name:ID(Person) $ cat people.csv &amp;#34;Mark&amp;#34; &amp;#34;Michael&amp;#34; &amp;#34;Ryan&amp;#34; &amp;#34;Will&amp;#34; &amp;#34;Jennifer&amp;#34; &amp;#34;Karin&amp;#34; $ cat companies_header.csv name:ID(Company) $ cat companies.csv &amp;#34;Neo4j&amp;#34; I find it easier to use separate header files because I often make typos with my column names and it’s easier to update a single line file than to open a multi-million line file and change the first line.</description>
    </item>
    
  </channel>
</rss>
