<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>static on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/static/</link>
    <description>Recent content in static on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Sep 2008 23:59:54 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/static/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My dislike of Java&#39;s static import</title>
      <link>https://www.markhneedham.com/blog/2008/09/24/my-dislike-of-javas-static-import/</link>
      <pubDate>Wed, 24 Sep 2008 23:59:54 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2008/09/24/my-dislike-of-javas-static-import/</guid>
      <description>While playing around with JBehave I was reminded of my dislike of the import static feature which was introduced in Java 1.5.
Using import static allows us to access static members defined in another class without referencing the class name. For example suppose we want to use the following method in our code:
Math.max(1,2); Normally we would need to include the class name (Math) that the static function (max) belongs to.</description>
    </item>
    
  </channel>
</rss>
