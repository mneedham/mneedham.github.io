<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node Js on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/node-js/</link>
    <description>Recent content in Node Js on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Sep 2011 19:55:45 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/node-js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>node.js: child_process.exec not returning all results</title>
      <link>https://mneedham.github.io/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</link>
      <pubDate>Thu, 22 Sep 2011 19:55:45 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</guid>
      <description>I&amp;rsquo;ve been playing around with some node.js code to get each of the commits from our git repository but noticed that it didn&amp;rsquo;t seem to be returning me all the results.
I had the following code:
var exec = require(&#39;child_process&#39;).exec; var gitRepository = &#39;/some/local/path&#39;; exec(&#39;cd &#39; + gitRepository + &#39; &amp;amp;&amp;amp; git log --pretty=format:&amp;quot;%H | %ad | %s%d&amp;quot; --date=raw &#39;, function(error, stdout, stderror) { var commits = stdout.split(&amp;quot;\n&amp;quot;); // do some stuff with commits });  We have around 2000 commits in the repository but I was only getting back 1600 of them when I checked the length of commits.</description>
    </item>
    
    <item>
      <title>Learning node.js: Step</title>
      <link>https://mneedham.github.io/blog/2011/09/11/learning-node-js-step/</link>
      <pubDate>Sun, 11 Sep 2011 22:37:15 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/09/11/learning-node-js-step/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js to generate some graphs from our git repository which effectively meant chaining together a bunch of shell commands to give me the repository data in the format I wanted.
I was able to do this by making use of child_process which comes with the core library.
The first version looked like this:
var exec = require(&#39;child_process&#39;).exec, _ = require(&amp;quot;underscore&amp;quot;); ... function parseCommitsFromRepository(fn) { var gitRepository = &amp;quot;/tmp/core&amp;quot;; var gitPlayArea = &amp;quot;/tmp/&amp;quot; + new Date().</description>
    </item>
    
    <item>
      <title>node.js: Building a graph of build times using the Go API</title>
      <link>https://mneedham.github.io/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</link>
      <pubDate>Sat, 13 Aug 2011 14:52:25 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js again and one thing that I wanted to do was take a CSV file generated by the Go API and extract the build times so that we could display it on a graph.
Since I don&amp;rsquo;t have a Go instance on my machine I created a URL in my node application which would mimic the API and return a CSV file.
I&amp;rsquo;m using the express web framework to take care of some of the plumbing:</description>
    </item>
    
    <item>
      <title>node.js: A little application with Twitter &amp; CouchDB</title>
      <link>https://mneedham.github.io/blog/2010/03/21/node-js-a-little-application-with-twitter-couchdb/</link>
      <pubDate>Sun, 21 Mar 2010 22:13:27 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2010/03/21/node-js-a-little-application-with-twitter-couchdb/</guid>
      <description>I&amp;rsquo;ve been continuing to play around with node.js and I thought it would be interesting to write a little application to poll Twitter every minute and save any new Tweets into a CouchDB database.
I first played around with CouchDB in May last year and initially spent a lot of time trying to work out how to install it before coming across CouchDBX which gives you one click installation for Mac OS X.</description>
    </item>
    
  </channel>
</rss>