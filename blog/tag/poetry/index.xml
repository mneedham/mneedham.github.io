<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>poetry on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/poetry/</link>
    <description>Recent content in poetry on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Oct 2023 00:44:37 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/poetry/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Poetry/Dagster: ImportError: cannot import name &#39;appengine&#39; from &#39;requests.packages.urllib3.contrib&#39;</title>
      <link>https://www.markhneedham.com/blog/2023/10/09/dagster-poetry-importerror-cannot-import-appengine-requests/</link>
      <pubDate>Mon, 09 Oct 2023 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/10/09/dagster-poetry-importerror-cannot-import-appengine-requests/</guid>
      <description>I’m taking some tentative steps into the world of batch data pipelines and I’ve been following Dagster’s DuckDB tutorial when I ran into a dependency issue that I had to work around. In this blog post, I’ll share the steps that I took in case you run into the same issue.
I’m using the Poetry dependency management tool, but I think you’d get the same issue even if you used pip directly.</description>
    </item>
    
    <item>
      <title>Poetry: The current project&#39;s Python requirement is not compatible</title>
      <link>https://www.markhneedham.com/blog/2023/10/05/poetry-project-python-not-compatible/</link>
      <pubDate>Thu, 05 Oct 2023 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/10/05/poetry-project-python-not-compatible/</guid>
      <description>A few times this week I’ve run into an interesting problem with Python version requirements when trying to install various packages. In this blog post, we’ll learn what’s going on and how to fix it.
Our story begins with the innocent creation of a Poetry project:
poetry init Next, we’re going to add dlt, the data loading tool:
poetry add dlt Output Creating virtualenv incompatible-blog-Bp2VMsrx-py3.11 in /Users/markhneedham/Library/Caches/pypoetry/virtualenvs Using version ^0.</description>
    </item>
    
    <item>
      <title>Poetry: Updating a package to a new version</title>
      <link>https://www.markhneedham.com/blog/2023/10/04/poetry-package-update/</link>
      <pubDate>Wed, 04 Oct 2023 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/10/04/poetry-package-update/</guid>
      <description>I’m using the Poetry package manager for all my Python projects these days and wanted to upgrade as library that I installed a few weeks ago. I got myself all tangled up and wanted to write down how to do it for future me.
Let’s create a simple project to demonstrate what to do:
poetry init pyproject.toml [tool.poetry] name = &amp;#34;update-blog&amp;#34; version = &amp;#34;0.1.0&amp;#34; description = &amp;#34;&amp;#34; authors = [&amp;#34;Mark Needham &amp;lt;m.</description>
    </item>
    
    <item>
      <title>Apache Pinot: Experimenting with the StarTree Index</title>
      <link>https://www.markhneedham.com/blog/2023/07/28/apache-pinot-experimenting-with-startree-index/</link>
      <pubDate>Fri, 28 Jul 2023 11:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/07/28/apache-pinot-experimenting-with-startree-index/</guid>
      <description>My colleagues Sandeep Dabade and Kulbir Nijjer recently wrote a three part blog post series about the StarTree index, an Apache Pinot indexing technique that dynamically builds a tree structure to maintain aggregates across a group of dimensions. I’ve not used this index before and wanted to give it a try and in this blog post, I’ll share what I learned.
I’ve put all the code in the startreedata/pinot-recipes GitHub repository in case you want to try it out yourself.</description>
    </item>
    
    <item>
      <title>Python/Poetry: Library not loaded: no such file, not in dyld cache</title>
      <link>https://www.markhneedham.com/blog/2023/07/27/poetry-library-not-loaded-no-such-file-dyld-cache/</link>
      <pubDate>Thu, 27 Jul 2023 11:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/07/27/poetry-library-not-loaded-no-such-file-dyld-cache/</guid>
      <description>As I mentioned in a previous blog post, I’ve been using Python’s Poetry library, but today it stopped working! In this blog post, I’ll explain what happened and how I got it working again.
It started off innocent enough, with me trying to create a new project:
poetry init But instead of seeing the usual interactive wizard, I got the following error:
Output dyld[20269]: Library not loaded: /opt/homebrew/Cellar/python@3.11/3.11.3/Frameworks/Python.framework/Versions/3.11/Python Referenced from: &amp;lt;1B2377F9-2187-39A9-AA98-20E438024DE2&amp;gt; /Users/markhneedham/Library/Application Support/pypoetry/venv/bin/python Reason: tried: &amp;#39;/opt/homebrew/Cellar/python@3.</description>
    </item>
    
    <item>
      <title>VSCode: Adding Poetry Python Interpreter</title>
      <link>https://www.markhneedham.com/blog/2023/07/24/vscode-poetry-python-interpreter/</link>
      <pubDate>Mon, 24 Jul 2023 04:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/07/24/vscode-poetry-python-interpreter/</guid>
      <description>I’ve been trying out Python’s Poetry dependency management tool recently and I really like it, but couldn’t figure out how to get it setup as VSCode’s Python interpreter. In this blog post, we’ll learn how to do that.
One way to add the Python interpreter in VSCode is to press Cmd+Shift+p and then type Python Interpreter. If you select the first result, you’ll see something like the following:
Figure 1.</description>
    </item>
    
  </channel>
</rss>
