<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coupling on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/coupling/</link>
    <description>Recent content in Coupling on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Aug 2009 22:42:55 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/coupling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coding: Coupling and Expressiveness</title>
      <link>https://mneedham.github.io/blog/2009/08/25/coding-coupling-and-expressiveness/</link>
      <pubDate>Tue, 25 Aug 2009 22:42:55 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2009/08/25/coding-coupling-and-expressiveness/</guid>
      <description>We came across an interesting situation in our code base recently whereby two coding approaches which I consider important for writing maintainable code seemed to come into conflict with each other.
The code we were working on needed to retrieve some customer details from a backend system by making use of the current user&amp;rsquo;s &amp;lsquo;customerId&amp;rsquo; which we can retrieve from the &amp;lsquo;LoggedInUser&amp;rsquo;.
My initial thought was that since we only needed one property of the &amp;lsquo;LoggedInUser&amp;rsquo; we could just pass in the &amp;lsquo;customerId&amp;rsquo; instead of the &amp;lsquo;LoggedInUser&amp;rsquo;:</description>
    </item>
    
  </channel>
</rss>