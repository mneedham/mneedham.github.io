<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kcat on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/kcat/</link>
    <description>Recent content in kcat on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Sep 2023 00:44:37 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/kcat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>kcat: SASL - Java JAAS configuration is not supported</title>
      <link>https://www.markhneedham.com/blog/2023/09/12/kcat-sasl-java-jaas-not-supported/</link>
      <pubDate>Tue, 12 Sep 2023 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2023/09/12/kcat-sasl-java-jaas-not-supported/</guid>
      <description>I’ve been updating the StarTree Kafka SASL recipe to use Pinot 0.12 and ran into an error while trying to have it use kcat to ingest data into Kafka. In this blog post, we’ll learn how I did this.
The initial recipe was ingesting data into Kafka using kafka-console-consumer.sh, which uses the Java Kafka client. I’m using this Kafka client config file:
kafka-config/kafka_client.conf security.protocol=SASL_PLAINTEXT sasl.mechanism=PLAIN sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \ username=&amp;#34;alice&amp;#34; \ password=&amp;#34;alice-secret&amp;#34;; And, we use this script to ingest data from a data generator:</description>
    </item>
    
    <item>
      <title>kcat/jq: Reached end of topic at offset: exiting</title>
      <link>https://www.markhneedham.com/blog/2022/12/06/kcat-jq-reached-end-of-topic-exiting/</link>
      <pubDate>Tue, 06 Dec 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/12/06/kcat-jq-reached-end-of-topic-exiting/</guid>
      <description>I’ve recently been working with Debezium to get the Pizza Shop product catalogue from MySQL into Apache Kafka and ran into an issue when querying the resulting stream using kcat and jq. In this blog I’ll show how I worked around that problem.
I configured Debezium to write any changes to the products table into the mysql.pizzashop.products topic. I then queriesthis topic to find the changes for just one of the products:</description>
    </item>
    
  </channel>
</rss>
