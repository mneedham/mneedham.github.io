<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test Driven Development on Mark Needham</title>
    <link>http://markhneedham.com/blog/tag/test-driven-development/</link>
    <description>Recent content in Test Driven Development on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Dec 2008 09:41:50 +0000</lastBuildDate>
    
	<atom:link href="http://markhneedham.com/blog/tag/test-driven-development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TDD: Does it make you slower?</title>
      <link>http://markhneedham.com/blog/2008/12/25/tdd-does-it-make-you-slower/</link>
      <pubDate>Thu, 25 Dec 2008 09:41:50 +0000</pubDate>
      
      <guid>http://markhneedham.com/blog/2008/12/25/tdd-does-it-make-you-slower/</guid>
      <description>There have been several times where we have been writing code in a test driven way and it has been suggested that we would be able to go much quicker if we stopped writing the tests and just wrote the code.
I feel this is a very short term way of looking at the problem and it does eventually come back to haunt you.
One of the problems seems to be that in many organisations only the first release of a piece of software is considered, and in this case then yes maybe it would be quicker to develop code in a non TDD fashion.</description>
    </item>
    
    <item>
      <title>BDD style unit test names</title>
      <link>http://markhneedham.com/blog/2008/09/04/bdd-style-unit-test-names/</link>
      <pubDate>Thu, 04 Sep 2008 00:05:18 +0000</pubDate>
      
      <guid>http://markhneedham.com/blog/2008/09/04/bdd-style-unit-test-names/</guid>
      <description>A couple of my colleagues have been posting about how to name your unit tests based on this original post by Jay Fields.
I think that test names are useful, especially when written in a BDD style expressing what a test is supposed to be doing.
For example, in a C# NUnit test we might see the following as a test name:
[Test] public void ShouldDoSomething() { // Code testing that we&#39;re doing something }  I write all my tests like this and I&amp;rsquo;m often asked what the point of the &amp;lsquo;Should&amp;rsquo; is, why not just name it &amp;lsquo;DoSomething&amp;rsquo;.</description>
    </item>
    
  </channel>
</rss>