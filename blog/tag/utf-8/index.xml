<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>utf-8 on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/utf-8/</link>
    <description>Recent content in utf-8 on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Jun 2012 23:30:23 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/utf-8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSV parsing/UTF-8 encoding</title>
      <link>https://www.markhneedham.com/blog/2012/06/10/csv-parsingutf-8-encoding/</link>
      <pubDate>Sun, 10 Jun 2012 23:30:23 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2012/06/10/csv-parsingutf-8-encoding/</guid>
      <description>I was recently trying to parse a CSV file which I’d converted from an Excel spreadsheet but was having problems with characters beyond the standard character set.
This is an example of what was going wrong:
&amp;gt; require &amp;#39;csv&amp;#39; &amp;gt; people = CSV.open(&amp;#34;sponsors.csv&amp;#34;, &amp;#39;r&amp;#39;, ?,, ?\r).to_a [&amp;#34;Erik D\366rnenburg&amp;#34;, &amp;#34;N/A&amp;#34;] &amp;gt; people.each { |sponsee, sponsor| puts &amp;#34;#{sponsee} #{sponsor}&amp;#34; } Erik D?rnenburg N/A I came across a Ruby gem called http://snippets.aktagon.com/snippets/159-Detecting-file-data-encoding-with-Ruby-and-the-chardet-RubyGem which allowed me to work out the character set of Erik’s name like so:</description>
    </item>
    
  </channel>
</rss>
