<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tiny-tasks on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/tiny-tasks/</link>
    <description>Recent content in tiny-tasks on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Aug 2008 23:18:24 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/tiny-tasks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pair Programming: Junior/Junior pair</title>
      <link>https://www.markhneedham.com/blog/2008/08/13/pair-programming-juniorjunior-pair/</link>
      <pubDate>Wed, 13 Aug 2008 23:18:24 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2008/08/13/pair-programming-juniorjunior-pair/</guid>
      <description>When it comes to Pair Programming the Junior/Junior pairing is considered the most likely to lead to disaster. The old joke being that if you pair two Junior Developers together then youâ€™d better hope you have a revert function on your repository. But is this fair?
Certainly pairing two Junior Developers together means that you automatically lose the value of the experience and mentoring skills that you would get if there was a Senior Developer as part of the pair.</description>
    </item>
    
  </channel>
</rss>
