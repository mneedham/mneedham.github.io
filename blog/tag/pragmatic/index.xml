<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pragmatic on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/pragmatic/</link>
    <description>Recent content in pragmatic on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Oct 2008 02:20:04 +0000</lastBuildDate>
    
	<atom:link href="https://www.markhneedham.com/blog/tag/pragmatic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pragmatic Learning and Thinking: Book Review</title>
      <link>https://www.markhneedham.com/blog/2008/10/06/pragmatic-learning-and-thinking-book-review/</link>
      <pubDate>Mon, 06 Oct 2008 02:20:04 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2008/10/06/pragmatic-learning-and-thinking-book-review/</guid>
      <description>The Book Pragmatic Learning and Thinking by Andy Hunt
   The Review I came across this book when reading a post linking lean to the Dreyfus Model on Dan North&amp;#8217;s blog.
 I have a keen interest in theories of learning and have completed an NLP Practitioner&amp;#8217;s course so the ideas described in the book summary immediately appealed to me.
 After coming across the concept of Reading Deliberately in Chapter 6 of the book I decided I should give the SQ3Q approach to reading books its first run out.</description>
    </item>
    
    <item>
      <title>Should we always use Domain Model?</title>
      <link>https://www.markhneedham.com/blog/2008/09/19/should-we-always-use-domain-mode/</link>
      <pubDate>Fri, 19 Sep 2008 08:34:35 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2008/09/19/should-we-always-use-domain-mode/</guid>
      <description>During the discussion about Domain Driven Design at the Alt.NET conference I felt like the idea of the Rich Domain Model was being represented as the only way to design software but I don&amp;#8217;t feel that this is the case.
 As always in software we never have a silver bullet and there are times when Domain Model is not necessarily the best choice, just as there are times when OOP is not necessarily the best choice.</description>
    </item>
    
  </channel>
</rss>