<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>objects on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/objects/</link>
    <description>Recent content in objects on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jun 2009 00:28:14 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/objects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>F#: Setting properties like named parameters</title>
      <link>https://markhneedham.com/blog/2009/06/29/f-setting-properties-like-named-parameters/</link>
      <pubDate>Mon, 29 Jun 2009 00:28:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/29/f-setting-properties-like-named-parameters/</guid>
      <description>One of the most frustrating things for me lately about interacting with C# libraries from F# has been setting up objects through the use of properties.
 While I am against the use of setters to construct objects in the first place, that&amp;#8217;s the way that a lot of libraries work so it&amp;#8217;s a bit of a necessary evil!
 In C# we would typically make use of the object initializer syntax to do this, but in F# I&amp;#8217;ve been writing code like this to do the same thing:</description>
    </item>
    
  </channel>
</rss>