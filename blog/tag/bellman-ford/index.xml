<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bellman-ford on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/bellman-ford/</link>
    <description>Recent content in bellman-ford on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jan 2013 19:14:08 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/bellman-ford/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bellman-Ford algorithm in Python using vectorisation/numpy</title>
      <link>https://markhneedham.com/blog/2013/01/20/bellman-ford-algorithm-in-python-using-vectorisationnumpy/</link>
      <pubDate>Sun, 20 Jan 2013 19:14:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/20/bellman-ford-algorithm-in-python-using-vectorisationnumpy/</guid>
      <description>for i in range(1, vertices): for v in range(0, vertices): previous_cache = cache least_adjacent_cost = calculate_least_adjacent_cost(adjacency_list, i, v, previous_cache) cache[v] = min(previous_cache[v], least_adjacent_cost) # detecting negative cycles for v in range(0, vertices): previous_cache = copy.deepcopy(cache) least_adjacent_cost = calculate_least_adjacent_cost(adjacency_list, i, v, previous_cache) cache[v] = min(previous_cache[v], least_adjacent_cost) if(not cache == previous_cache): raise Exception(&amp;#34;negative cycle detected&amp;#34;) shortest_path = min(cache) # We want to get to this point previous_cache = cache[:] # here we copy the contents of cache into previous_cache cache = minimum(previous_cache, new_shortest_paths) 1 2 3 4 5 6 # these are the previous shortest paths for vertex 0,1â€¦,n inf inf 4 inf inf inf # edges for vertex 0 -2 inf inf inf inf inf # edges for vertex 1 inf -1 inf inf inf inf # and so on.</description>
    </item>
    
  </channel>
</rss>