<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pinot on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/pinot/</link>
    <description>Recent content in pinot on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Nov 2021 00:44:37 +0000</lastBuildDate>
    
	<atom:link href="https://www.markhneedham.com/blog/tag/pinot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache Pinot: org.apache.helix.HelixException: Cluster structure is not set up for cluster: PinotCluster</title>
      <link>https://www.markhneedham.com/blog/2021/11/23/apache-pinot-helix-exception-cluster-structure-not-set-up/</link>
      <pubDate>Tue, 23 Nov 2021 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2021/11/23/apache-pinot-helix-exception-cluster-structure-not-set-up/</guid>
      <description>In my continued exploration of Apache Pinot, I wanted to spin up all the components individually rather than relying on one of the QuickStarts that takes care of that for me. In doing so I came across an interesting error that we&amp;#8217;ll explore in this post.
 Setup We&amp;#8217;re going to spin up a local instance of Pinot using the following Docker compose config:
 version: &#39;3.7&#39; services: zookeeper: image: zookeeper:3.</description>
    </item>
    
    <item>
      <title>Apache Pinot: BadQueryRequestException - Cannot convert value to type: LONG</title>
      <link>https://www.markhneedham.com/blog/2021/07/16/pinot-bad-query-request-exception-cannot-convert-value-long/</link>
      <pubDate>Fri, 16 Jul 2021 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2021/07/16/pinot-bad-query-request-exception-cannot-convert-value-long/</guid>
      <description>In my continued exploration of Apache Pinot I&amp;#8217;ve been trying out the GitHub events recipe , which imports data from the GitHub events stream into Pinot. In this blog post I want to show how I worked around an exception I was getting when trying to filter the data by one of the timestamp&amp;#8217;s column.
 Setup We&amp;#8217;re going to spin up a local instance of Pinot using the following Docker compose config:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Analysing England&#39;s Covid case data</title>
      <link>https://www.markhneedham.com/blog/2021/06/22/pinot-analysing-england-covid-cases/</link>
      <pubDate>Tue, 22 Jun 2021 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2021/06/22/pinot-analysing-england-covid-cases/</guid>
      <description>As I mentioned in my last blog post, I&amp;#8217;ve been playing around with Apache Pinot, a data store that&amp;#8217;s optimised for user facing analytical workloads.
   My understanding is that Pinot is a really good fit for datasets where:
  The query patterns are of an analytical nature e.g. slicing and dicing on any columns.
  We&amp;#8217;re ingesting the data in real time from a stream of events.</description>
    </item>
    
    <item>
      <title>Apache Pinot: {&#39;errorCode&#39;: 410, &#39;message&#39;: &#39;BrokerResourceMissingError&#39;}</title>
      <link>https://www.markhneedham.com/blog/2021/06/21/pinot-broker-resource-missing/</link>
      <pubDate>Mon, 21 Jun 2021 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2021/06/21/pinot-broker-resource-missing/</guid>
      <description>I&amp;#8217;ve recently been playing around with Apache Pinot, a realtime analytical data store that&amp;#8217;s used for user facing analytics use cases. In this blog post I want to walk through some challenges I had connecting to Pinot using the Python driver and how I got things working.
 I&amp;#8217;m running Pinot locally using the Docker image, which I setup in a Docker compose file:
 docker-compose.yml version: &#39;3.7&#39; services: pinot: image: apachepinot/pinot:0.</description>
    </item>
    
  </channel>
</rss>