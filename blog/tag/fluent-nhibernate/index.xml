<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fluent-nhibernate on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/fluent-nhibernate/</link>
    <description>Recent content in fluent-nhibernate on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Jun 2010 00:07:43 +0000</lastBuildDate><atom:link href="https://www.markhneedham.com/blog/tag/fluent-nhibernate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fluent NHibernate and the 2nd level cache</title>
      <link>https://www.markhneedham.com/blog/2010/06/16/fluent-nhibernate-and-the-2nd-level-cache/</link>
      <pubDate>Wed, 16 Jun 2010 00:07:43 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2010/06/16/fluent-nhibernate-and-the-2nd-level-cache/</guid>
      <description>We’ve been trying to cache some objects using NHibernate’s second level cache which always proves to be a trickier task than I remember it being the previous time!
We’re storing some reference data in the database and then using LINQ to NHibernate to query for the specific row that we want based on some user entered criteria.
We can cache that query by calling &amp;#39;SetCacheable&amp;#39; on the &amp;#39;QueryOptions&amp;#39; property of our query:</description>
    </item>
    
  </channel>
</rss>
