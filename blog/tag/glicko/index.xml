<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>glicko on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/glicko/</link>
    <description>Recent content in glicko on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Sep 2013 21:02:30 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/glicko/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Glicko Rating System: A simple example using Clojure</title>
      <link>https://markhneedham.com/blog/2013/09/14/glicko-rating-system-a-simple-example-using-clojure/</link>
      <pubDate>Sat, 14 Sep 2013 21:02:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/14/glicko-rating-system-a-simple-example-using-clojure/</guid>
      <description>If one player&amp;rsquo;s rating increases by x, the opponent&amp;rsquo;s rating does not usually decrease by x as in the Elo system.
In fact, in the Glicko system, the amount by which the opponent&amp;rsquo;s rating decreases is governed by both players&amp;rsquo; RD&amp;rsquo;s.
where:
where:
(ns ranking-algorithms.glicko (:require [clojure.math.numeric-tower :as math])) (def q (/ (java.lang.Math/log 10) 400)) (defn g [rd] (/ 1 (java.lang.Math/sqrt (+ 1 (/ (* 3 (math/expt q 2) (math/expt rd 2)) (math/expt ( .</description>
    </item>
    
  </channel>
</rss>