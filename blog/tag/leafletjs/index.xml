<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leafletjs on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/leafletjs/</link>
    <description>Recent content in leafletjs on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Dec 2017 17:35:03 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/leafletjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leaflet: Fit polyline in view</title>
      <link>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</link>
      <pubDate>Sun, 31 Dec 2017 17:35:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</guid>
      <description>&amp;lt;div id=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34;/&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css&amp;#34;/&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;); L.tileLayer(&amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, {maxZoom: 18,}).addTo(map); var rawPoints = [ { &amp;#34;latitude&amp;#34;: 51.357874010145395, &amp;#34;longitude&amp;#34;: -0.198045110923591 }, { &amp;#34;latitude&amp;#34;: 51.3573858289394, &amp;#34;longitude&amp;#34;: -0.19787754933584795 }, { &amp;#34;latitude&amp;#34;: 51.35632791810057, &amp;#34;longitude&amp;#34;: -0.19750254941422557 }, { &amp;#34;latitude&amp;#34;: 51.35553240304241, &amp;#34;longitude&amp;#34;: -0.197232163894512 }, { &amp;#34;latitude&amp;#34;: 51.35496267279901, &amp;#34;longitude&amp;#34;: -0.1970247338143316 }, { &amp;#34;latitude&amp;#34;: 51.35388700570004, &amp;#34;longitude&amp;#34;: -0.19666483094752069 }, { &amp;#34;latitude&amp;#34;: 51.</description>
    </item>
    
    <item>
      <title>Leaflet: Mapping Strava runs/polylines on Open Street Map</title>
      <link>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</link>
      <pubDate>Sat, 29 Apr 2017 15:36:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</guid>
      <description>&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Mapping my runs&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34; /&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;).setView([55.609818, 13.003286], 13); L.tileLayer( &amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18, }).addTo(map); var encodedRoutes = [ &amp;#34;{zkrIm`inANPD?BDXGPKLATHNRBRFtAR~AFjAHl@D|ALtATj@HHJBL?`@EZ?NQ\\Y^MZURGJKR]RMXYh@QdAWf@[~@aAFGb@?j@YJKBU@m@FKZ[NSPKTCRJD?`@Wf@Wb@g@HCp@Qh@]z@SRMRE^EHJZnDHbBGPHb@NfBTxBN|DVbCBdA^lBFl@Lz@HbBDl@Lr@Bb@ApCAp@Ez@g@bEMl@g@`B_AvAq@l@ QF]Rs@Nq@CmAVKCK?_@Nw@h@UJIHOZa@xA]~@UfASn@U`@_@~@[d@Sn@s@rAs@dAGN?NVhAB\\Ox@@b@S|A?Tl@jBZpAt@vBJhATfGJn@b@fARp@H^Hx@ARGNSTIFWHe@AGBOTAP@^\\zBMpACjEWlEIrCKl@i@nAk@}@}@yBOWSg@kAgBUk@Mu@[mC?QLIEUAuAS_E?uCKyCA{BH{DDgF`AaEr@uAb@oA~@{AE}AKw@ g@qAU[_@w@[gAYm@]qAEa@FOXg@JGJ@j@o@bAy@NW?Qe@oCCc@SaBEOIIEQGaAe@kC_@{De@cE?KD[H[P]NcAJ_@DGd@Gh@UHI@Ua@}Bg@yBa@uDSo@i@UIICQUkCi@sCKe@]aAa@oBG{@G[CMOIKMQe@IIM@KB]Tg@Nw@^QL]NMPMn@@\\Lb@P~@XT&amp;#34;, &amp;#34;u}krIq_inA_@y@My@Yu@OqAUsA]mAQc@CS@o@FSHSp@e@n@Wl@]ZCFEBK?OC_@Qw@?m@CSK[]]EMBeAA_@m@qEAg@UoCAaAMs@IkBMoACq@SwAGOYa@IYIyA_@kEMkC]{DEaAScC@yEHkGA_ALsCBiA@mCD{CCuAZcANOH@HDZl@Z`@RFh@\\TDT@ZVJBPMVGLM\\Mz@c@NCPMXERO|@a@^Ut@s@p@KJAJ Bd@EHEXi@f@a@\\g@b@[HUD_B@uADg@DQLCLD~@l@`@J^TF?JANQ\\UbAyABEZIFG`@o@RAJEl@_@ZENDDIA[Ki@BURQZaARODKVs@LSdAiAz@G`BU^A^GT@PRp@zARXRn@`BlDHt@ZlAFh@^`BX|@HHHEf@i@FAHHp@bBd@v@DRAVMl@i@v@SROXm@tBILOTOLs@NON_@t@KX]h@Un@k@\\c@h@Ud@]ZGNKp@Sj@KJo@ b@W`@UPOX]XWd@UF]b@WPOAIBSf@QVi@j@_@V[b@Uj@YtAEFCCELARBn@`@lBjAzD^vB^hB?LENURkAv@[Ze@Xg@Py@p@QHONMA[HGAWE_@Em@Hg@AMCG@QHq@Cm@M[Jy@?UJIA{@Ae@KI@GFKNIX[QGAcAT[JK?OVMFK@IAIUKAYJI?QKUCGFIZCXDtAHl@@p@LjBCZS^ERAn@Fj@Br@Hn@HzAHh@RfD?j@TnCTlA NjANb@\\z@TtARr@P`AFnAGfBG`@CFE?&amp;#34; ] for (let encoded of encodedRoutes) { var coordinates = L.Polyline.fromEncoded(encoded).getLatLngs(); L.polyline( coordinates, { color: &amp;#39;blue&amp;#39;, weight: 2, opacity: .7, lineJoin: &amp;#39;round&amp;#39; } ).addTo(map); } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python -m http.</description>
    </item>
    
    <item>
      <title>Leaflet JS: Resizing a map to keep a circle diameter inside it</title>
      <link>https://markhneedham.com/blog/2013/06/30/leaflet-js-resizing-a-map-to-keep-a-circle-diameter-inside-it/</link>
      <pubDate>Sun, 30 Jun 2013 22:23:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/30/leaflet-js-resizing-a-map-to-keep-a-circle-diameter-inside-it/</guid>
      <description>var distance = 10; $(&amp;#34;#inputDistance&amp;#34;).val(distance); var latLong=[51.505, -0.11398315429687499]; $(&amp;#34;#inputLatLong&amp;#34;).val(latLong) var map = L.map(&amp;#39;map&amp;#39;).setView(latLong,11); var layer = L.tileLayer(&amp;#39;http://{s}.tile.cloudmade.com/e7b61e61295a44a5b319ca0bd3150890/997/256/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18 }); layer.addTo(map); var currentDiameter = L.circle(latLong, distance * 1000); currentDiameter.addTo(map); var currentPositionMarker = L.marker([latLong[0], latLong[1]]); currentPositionMarker.addTo(map); $(&amp;#34;#inputDistance&amp;#34;).change(function() {	map.removeLayer(currentDiameter); currentDiameter = L.circle(currentPositionMarker.getLatLng(), $(&amp;#34;#inputDistance&amp;#34;).val() * 1000); currentDiameter.addTo(map); }); $(&amp;#34;#inputDistance&amp;#34;).change(function() {	map.removeLayer(currentDiameter); currentDiameter = L.circle(currentPositionMarker.getLatLng(), $(&amp;#34;#inputDistance&amp;#34;).val() * 1000); currentDiameter.addTo(map); map.fitBounds(currentDiameter.getBounds()); }); $(document).ready(function() {	var distance = 10; $(&amp;#34;#inputDistance&amp;#34;).val(distance); var latLong=[51.505, -0.11398315429687499]; $(&amp;#34;#inputLatLong&amp;#34;).val(latLong) var map = L.</description>
    </item>
    
  </channel>
</rss>