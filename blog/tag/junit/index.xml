<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Junit on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/junit/</link>
    <description>Recent content in Junit on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Dec 2008 00:34:17 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/junit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JUnit Theories: First Thoughts</title>
      <link>https://markhneedham.com/blog/2008/12/12/junit-theories-first-thoughts/</link>
      <pubDate>Fri, 12 Dec 2008 00:34:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/12/junit-theories-first-thoughts/</guid>
      <description>One of my favourite additions to JUnit 4.4 was the @Theory annotation which allows us to write parameterised tests rather than having to recreate the same test multiple times with different data values or creating one test and iterating through our own collection of data values.
Previously, as far as I&amp;rsquo;m aware, it was only possible to parameterise tests by using the TestNG library which has some nice ideas around grouping tests but had horrible reporting the last time I used it.</description>
    </item>
    
  </channel>
</rss>