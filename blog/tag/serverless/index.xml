<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serverless on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/serverless/</link>
    <description>Recent content in Serverless on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Sep 2017 07:51:29 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/serverless/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless: Building a mini producer/consumer data pipeline with AWS SNS</title>
      <link>https://mneedham.github.io/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</link>
      <pubDate>Sat, 30 Sep 2017 07:51:29 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</guid>
      <description>I wanted to create a little data pipeline with Serverless whose main use would be to run once a day, call an API, and load that data into a database.  It&#39;s mostly used to pull in recent data from that API, but I also wanted to be able to invoke it manually and specify a date range.  I created the following pair of lambdas that communicate with each other via an SNS topic.</description>
    </item>
    
    <item>
      <title>Serverless: S3 - S3BucketPermissions - Action does not apply to any resource(s) in statement</title>
      <link>https://mneedham.github.io/blog/2017/09/29/serverless-s3-s3bucketpermissions-action-does-not-apply-to-any-resources-in-statement/</link>
      <pubDate>Fri, 29 Sep 2017 06:09:58 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2017/09/29/serverless-s3-s3bucketpermissions-action-does-not-apply-to-any-resources-in-statement/</guid>
      <description>I&#39;ve been playing around with S3 buckets with Serverless, and recently wrote the following code to create an S3 bucket and put a file into that bucket: const AWS = require(&amp;quot;aws-sdk&amp;quot;); let regionParams = { &#39;region&#39;: &#39;us-east-1&#39; } let s3 = new AWS.S3(regionParams); let s3BucketName = &amp;quot;marks-blog-bucket&amp;quot;; console.log(&amp;quot;Creating bucket: &amp;quot; + s3BucketName); let bucketParams = { Bucket: s3BucketName, ACL: &amp;quot;public-read&amp;quot; }; s3.createBucket(bucketParams).promise() .then(console.log) .catch(console.error); var putObjectParams = { Body: &amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello blog!</description>
    </item>
    
    <item>
      <title>Serverless: AWS HTTP Gateway - 502 Bad Gateway</title>
      <link>https://mneedham.github.io/blog/2017/08/11/serverless-aws-http-gateway-502-bad-gateway/</link>
      <pubDate>Fri, 11 Aug 2017 16:01:50 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2017/08/11/serverless-aws-http-gateway-502-bad-gateway/</guid>
      <description>In my continued work with Serverless and AWS Lambda I ran into a problem when trying to call a HTTP gateway.  My project looked like this:  serverless.yaml service: http-gateway frameworkVersion: &amp;quot;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;quot; provider: name: aws runtime: python3.6 timeout: 180 functions: no-op: name: NoOp handler: handler.noop events: - http: POST noOp   handler.py def noop(event, context): return &amp;quot;hello&amp;quot;   Let&#39;s deploy to AWS: $ serverless deploy Serverless: Packaging service.</description>
    </item>
    
    <item>
      <title>Serverless: Python - virtualenv - { &#34;errorMessage&#34;: &#34;Unable to import module &#39;handler&#39;&#34; }</title>
      <link>https://mneedham.github.io/blog/2017/08/06/serverless-python-virtualenv-errormessage-unable-import-module-handler/</link>
      <pubDate>Sun, 06 Aug 2017 19:03:30 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2017/08/06/serverless-python-virtualenv-errormessage-unable-import-module-handler/</guid>
      <description>I&#39;ve been using the Serverless library to deploy and run some Python functions on AWS lambda recently and was initially confused about how to handle my dependencies.  I tend to create a new virtualenv for each of my project so let&#39;s get that setup first: Prerequisites $ npm install serverless  $ virtualenv -p python3 a $ . a/bin/activate   Now let&#39;s create our Serverless project. I&#39;m going to install the requests library so that I can use it in my function.</description>
    </item>
    
  </channel>
</rss>