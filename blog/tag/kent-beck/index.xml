<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kent Beck on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/kent-beck/</link>
    <description>Recent content in Kent Beck on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Nov 2008 00:58:07 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/kent-beck/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Saff Squeeze: First Thoughts</title>
      <link>https://mneedham.github.io/blog/2008/11/21/saff-squeeze-first-thoughts/</link>
      <pubDate>Fri, 21 Nov 2008 00:58:07 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2008/11/21/saff-squeeze-first-thoughts/</guid>
      <description>While practicing some coding by doing the Roman number conversion last weekend I came across an article by Kent Beck which talked of a method he uses to remove the need to use the debugger to narrow down problems.
He calls the method the &amp;lsquo;Saff Squeeze&amp;rsquo; and the basic idea as I understand it is to write the original failing test and then inline the pieces of code that it calls, adding assertions earlier on in the code until the actual point of failure is found.</description>
    </item>
    
    <item>
      <title>Test Driven Development By Example: Book Review</title>
      <link>https://mneedham.github.io/blog/2008/10/07/test-driven-development-by-example-book-review/</link>
      <pubDate>Tue, 07 Oct 2008 23:17:19 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2008/10/07/test-driven-development-by-example-book-review/</guid>
      <description>The Book Test Driven Development by Example by Kent Beck
The Review I know this book is quite old but I haven&amp;rsquo;t read it before - it&amp;rsquo;s been recommended to me several times but I never got round to reading it, possibly because of my somewhat misguided opinion that seeing as I do TDD nearly every day I shouldn&amp;rsquo;t need to read it.
More by chance than anything else, I was browsing through a friend&amp;rsquo;s copy of the book and came across several gems of information which persuaded me that I should take the time to read the rest of it.</description>
    </item>
    
  </channel>
</rss>