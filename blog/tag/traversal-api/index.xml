<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>traversal-api on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/traversal-api/</link>
    <description>Recent content in traversal-api on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Oct 2017 21:43:17 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/traversal-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Neo4j: Traversal query timeout</title>
      <link>https://markhneedham.com/blog/2017/10/31/neo4j-traversal-query-timeout/</link>
      <pubDate>Tue, 31 Oct 2017 21:43:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/31/neo4j-traversal-query-timeout/</guid>
      <description>StandardExpander orderedExpander = new OrderedByTypeExpander() .add( RelationshipType.withName( &amp;#34;CONNECTS&amp;#34; ), Direction.BOTH ); PathFinder&amp;lt;Path&amp;gt; shortestPathFinder = GraphAlgoFactory.shortestPath( expander, 250 ); ... public class TimeConstrainedExpander implements PathExpander { private final StandardExpander expander; private final long startTime; private final Clock clock; private int pathsExpanded = 0; private long timeLimitInMillis; public TimeConstrainedExpander( StandardExpander expander, Clock clock, long timeLimitInMillis ) { this.expander = expander; this.clock = clock; this.startTime = clock.instant().toEpochMilli(); this.timeLimitInMillis = timeLimitInMillis; } @Override public Iterable&amp;lt;Relationship&amp;gt; expand( Path path, BranchState state ) { long timeSoFar = clock.</description>
    </item>
    
  </channel>
</rss>