<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feedback on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/feedback/</link>
    <description>Recent content in Feedback on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 May 2013 22:43:53 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/feedback/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Feedback: Reacting immediately</title>
      <link>https://mneedham.github.io/blog/2013/05/23/feedback-reacting-immediately/</link>
      <pubDate>Thu, 23 May 2013 22:43:53 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2013/05/23/feedback-reacting-immediately/</guid>
      <description>I was recently reading an article written by Henry Winter where he mentioned some of the ideas that Sir ALex Ferguson has been covering in some interviews he&#39;s been doing at Harvard and one bit stood out for me:  In a series of interviews in Harvard, Ferguson debated dealing with “fragile” egos in the dressing room, the power of the two simple words “well done” in motivating individuals and the importance of criticising players’ mistakes immediately after the match and then moving on.</description>
    </item>
    
    <item>
      <title>Feedback: In public</title>
      <link>https://mneedham.github.io/blog/2011/05/11/feedback-in-public/</link>
      <pubDate>Wed, 11 May 2011 12:12:00 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/05/11/feedback-in-public/</guid>
      <description>One of the areas that I covered during a session I ran at XP 2011 on making feedback work in teams was the idea of giving feedback in public.
The general consensus seems to be that giving feedback in public isn&amp;rsquo;t a good idea and it&amp;rsquo;d much more effective to give that feedback privately.
I think this is a good rule of thumb and my observations are that feedback given in public tends to not be given in a very constructive manner and therefore leads to a defensive response from the recipient.</description>
    </item>
    
    <item>
      <title>Feedback: Easing in</title>
      <link>https://mneedham.github.io/blog/2011/04/13/feedback-easing-in/</link>
      <pubDate>Wed, 13 Apr 2011 02:33:52 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/04/13/feedback-easing-in/</guid>
      <description>One of the most common techniques of feedback which I&amp;rsquo;ve come across is one that William Noonan describes in &amp;lsquo;Discussing the Undiscussable&amp;rsquo; as easing in.
From the book:  Easing in is a skilful strategy whereby I try to get the other person to come round to my point of view without my stating it directly. 
From my experience we&amp;rsquo;ll try to do this because giving our point of view could lead to an awkward conversation so we&amp;rsquo;d rather they express our opinion for us instead.</description>
    </item>
    
    <item>
      <title>Feedback: Making the request specific</title>
      <link>https://mneedham.github.io/blog/2011/02/06/feedback-making-the-request-specific/</link>
      <pubDate>Sun, 06 Feb 2011 15:47:30 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/02/06/feedback-making-the-request-specific/</guid>
      <description>My colleagues in Pune have been collecting feedback over the past week as part of the quarterly feedback cycle and it&amp;rsquo;s got me thinking about the way that people ask for the feedback.
The most popular way is to ask for general feedback which answers questions like this:  What are the things that the individual has done well? What are the things that the individual has not done well and/or needs more focus/improvement?</description>
    </item>
    
    <item>
      <title>Listening to feedback mechanisms</title>
      <link>https://mneedham.github.io/blog/2011/01/21/listening-to-feedback-mechanisms/</link>
      <pubDate>Fri, 21 Jan 2011 03:46:21 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/01/21/listening-to-feedback-mechanisms/</guid>
      <description>In Growing Object Oriented Software the authors talk about the value of listening to our tests to understand potential problems with our code and I&amp;rsquo;ve started to notice recently that there are implicit feedback mechanisms dotted around at a higher level which we can also listen to.
A couple of examples come to mind:
Nothing to show in the showcase I&amp;rsquo;ve worked on a couple of projects where we&amp;rsquo;ve got to the end of the iteration and realised that we don&amp;rsquo;t actually have anything tangible to show the product owner.</description>
    </item>
    
    <item>
      <title>Feedback loops: Overcompensating</title>
      <link>https://mneedham.github.io/blog/2010/10/24/feedback-loops-overcompensating/</link>
      <pubDate>Sun, 24 Oct 2010 08:39:14 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2010/10/24/feedback-loops-overcompensating/</guid>
      <description>One of the things that I&amp;rsquo;ve noticed while working with various colleagues over the last few years is that the more experienced ones are much more skilled at making slight adjustments to their approach based on feedback that they receive from the environment.
I&amp;rsquo;ve been reading a couple of books on systems thinking over the last few months and one of the takeaways for me has been that we need to be careful when reacting to feedback we get from a system to ensure that we don&amp;rsquo;t over compensate and end up creating a new problem for ourselves instead.</description>
    </item>
    
    <item>
      <title>Feedback, the environment and other people</title>
      <link>https://mneedham.github.io/blog/2010/07/20/feedback-the-environment-and-other-people/</link>
      <pubDate>Tue, 20 Jul 2010 17:30:16 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2010/07/20/feedback-the-environment-and-other-people/</guid>
      <description>Something that I&amp;rsquo;ve noticed over the last few years is that when people give feedback to each other there is often an over emphasis on the individual and less attention paid to the environment in which they were working.
I covered this a bit in a blog post I wrote about a year ago titled &amp;lsquo;Challenging projects and the Kubler Ross Grief Cycle&amp;rsquo; which I converted into a presentation that I gave at XP2010 in June.</description>
    </item>
    
    <item>
      <title>Group feedback</title>
      <link>https://mneedham.github.io/blog/2010/07/07/group-feedback/</link>
      <pubDate>Wed, 07 Jul 2010 00:17:41 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2010/07/07/group-feedback/</guid>
      <description>On an internal mailing list my colleague David Pattinson recently described a feedback approach he&amp;rsquo;d used on a project where everyone on the team went into a room and they took turns giving direct feedback to each person.
Since we were finishing the project that we&amp;rsquo;ve been working on for the past few months, Christian, Dermot and I decided to give it a try last week.
One thing to note is that this feedback wasn&amp;rsquo;t linked to any performance review, it was just between the 3 of us to allow us to find ways that we can be more effective on projects that we work on in the future.</description>
    </item>
    
    <item>
      <title>Feedback: Positive Reinforcement/Change yourself first</title>
      <link>https://mneedham.github.io/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</link>
      <pubDate>Tue, 12 Feb 2008 00:01:58 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</guid>
      <description>One of the more interesting concepts used on the NLP course that I did last year was the idea of only giving positive feedback to people.
The thinking behind the theory (which I think comes from Robert Dilts, one of the early thinkers behind NLP) is that people know what they are doing wrong and already beat themselves up about it; therefore there is no point you mentioning it as well.</description>
    </item>
    
    <item>
      <title>Giving effective feedback</title>
      <link>https://mneedham.github.io/blog/2006/09/02/giving-effective-feedback/</link>
      <pubDate>Sat, 02 Sep 2006 03:07:45 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2006/09/02/giving-effective-feedback/</guid>
      <description>One of the most interesting things I have discovered since starting at ThoughtWorks earlier this month is the emphasis that is placed on giving feedback.
The first lesson we were taught about giving feedback was that it could be one of two types. Either it should Strengthen Confidence or Increase Effectiveness.
In Layman&amp;rsquo;s term that means that if you want to make a positive comment about somebody&amp;rsquo;s contribution then you should make reference to something specific that you believe they have done well so that they can continue doing it.</description>
    </item>
    
  </channel>
</rss>