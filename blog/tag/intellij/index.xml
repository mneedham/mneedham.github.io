<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>intellij on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/intellij/</link>
    <description>Recent content in intellij on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Sep 2015 05:54:54 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/intellij/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IntelliJ 14.1.5: Unable to import maven project</title>
      <link>https://markhneedham.com/blog/2015/09/30/intellij-14-1-5-unable-to-import-maven-project/</link>
      <pubDate>Wed, 30 Sep 2015 05:54:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/09/30/intellij-14-1-5-unable-to-import-maven-project/</guid>
      <description>After a recent IntelliJ upgrade I&amp;#8217;ve been running into the following error when trying to attach the sources of any library being pulled in via Maven:
  Unable to import maven project
   It seems like this is a recent issue in the 14.x series and luckily is reasonably easy to fix by adding the following flag to the VM options passed to the Maven importer:
 -Didea.</description>
    </item>
    
    <item>
      <title>IntelliJ Debug Mode: Viewing beyond 100 frames/items in an array</title>
      <link>https://markhneedham.com/blog/2012/11/26/intellij-debug-mode-viewing-beyond-100-framesitems-in-an-array/</link>
      <pubDate>Mon, 26 Nov 2012 04:28:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/26/intellij-debug-mode-viewing-beyond-100-framesitems-in-an-array/</guid>
      <description>In my continued attempts at the Kaggle Digit Recognizer problem I&amp;#8217;ve been playing around with the encog library to try and build a neural networks solution to the problem.
 Unfortunately it&amp;#8217;s not quite working at the moment so I wanted to debug the code and see whether the input parameters were being correctly translated from the CSV file.
 Each input is an array containing 784 values but by default IntelliJ restricts you to seeing 100 elements which wasn&amp;#8217;t helpful in my case since the early values tend to all be 0 and it&amp;#8217;s not until you get half way through that you see different values:</description>
    </item>
    
    <item>
      <title>IntelliJ: Find/Replace using regular expressions with capture groups</title>
      <link>https://markhneedham.com/blog/2012/03/30/intellij-findreplace-using-regular-expressions-with-capture-groups/</link>
      <pubDate>Fri, 30 Mar 2012 06:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/30/intellij-findreplace-using-regular-expressions-with-capture-groups/</guid>
      <description>Everyone now and then we end up having to write a bunch of mapping code and I quite like using IntelliJ&amp;#8217;s &#39;Replace&#39; option to do it but always end up spending about 5 minutes trying to remember how to do capture groups so I thought I&amp;#8217;d write it down this time.
 Given the following text in our file:
 val mark = 0 val dave = 0 val john = 0 val alex = 0   Let&amp;#8217;s say we wanted to prefix each of those names with &#39;cool&#39; and had decided not to use Column mode for whatever reason.</description>
    </item>
    
    <item>
      <title>IntelliJ: Adding resources with unusual extensions onto the classpath</title>
      <link>https://markhneedham.com/blog/2011/06/09/intellij-adding-resources-with-unusual-extensions-onto-the-classpath/</link>
      <pubDate>Thu, 09 Jun 2011 23:10:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/09/intellij-adding-resources-with-unusual-extensions-onto-the-classpath/</guid>
      <description>We&amp;#8217;re making use of MarkLogic and therefore xquery on the project I&amp;#8217;m currently working on and recently wanted to add our xquery setup files onto the classpath so they could be used in a test.
 We added them into &#39;src/main/resources&#39; and set that as a source path in IntelliJ assuming that was all we needed to do.
 Despite doing that our test kept failing because it couldn&amp;#8217;t locate the files on the classpath.</description>
    </item>
    
    <item>
      <title>IntelliJ style item tracking in Visual Studio</title>
      <link>https://markhneedham.com/blog/2008/08/09/intellij-style-item-tracking-in-visual-studio/</link>
      <pubDate>Sat, 09 Aug 2008 14:51:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/09/intellij-style-item-tracking-in-visual-studio/</guid>
      <description>One of my favourite features of IntelliJ is that it tracks the item that you currently have open on your Solution Explorer.
 I thought this wasn&amp;#8217;t possible in Visual Studio and had resigned myself to trying to remember which project each file was in. Luckily for me a colleague pointed out that it is in fact possible but is just turned off by default.
 Tools &amp;gt; Options &amp;gt; Projects and Solutions &amp;gt; Check &#39;Track Active Item in Solution Explorer&#39;</description>
    </item>
    
    <item>
      <title>Do IDEs encourage bad code?</title>
      <link>https://markhneedham.com/blog/2008/07/27/do-ides-encourage-bad-code/</link>
      <pubDate>Sun, 27 Jul 2008 11:43:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/07/27/do-ides-encourage-bad-code/</guid>
      <description>Although modern day IDEs (Eclipse, IntelliJ, Resharper etc) undoubtedly provide a lot of benefits when writing code, I am starting to wonder if the ease at which they make things possible actually encourages bad habits.
 Useful features such as creating and initialising member variables from the definition of a constructor are quickly nullified by the ease at which one is able to create getters/setters/properties for these same member variables. All hopes of encapsulation gone with a few clicks of the mouse.</description>
    </item>
    
  </channel>
</rss>