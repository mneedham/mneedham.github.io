<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>couchdb on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/tag/couchdb/</link>
    <description>Recent content in couchdb on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Feb 2011 17:58:54 +0000</lastBuildDate>
    
	<atom:link href="https://www.markhneedham.com/blog/tag/couchdb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CouchDB: Join like behaviour with link functions</title>
      <link>https://www.markhneedham.com/blog/2011/02/13/couchdb-join-like-behaviour-with-link-functions/</link>
      <pubDate>Sun, 13 Feb 2011 17:58:54 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2011/02/13/couchdb-join-like-behaviour-with-link-functions/</guid>
      <description>I&amp;#8217;ve been playing around with the Twitter streaming API a bit lately to see which links are being posted most frequently by the people I follow and then storing the appropriate tweets in CouchDB.
 I recently came across a problem which I struggled to solve for quite a while.
 Based on the following map function:
 { &#34;_id&#34; : &#34;_design/query&#34;, &#34;views&#34; : { &#34;by_link&#34; : { &#34;map&#34; : &#34;</description>
    </item>
    
    <item>
      <title>CouchDB: &#39;badmatch&#39; when executing view</title>
      <link>https://www.markhneedham.com/blog/2011/02/12/couchdb-badmatch-when-executing-view/</link>
      <pubDate>Sat, 12 Feb 2011 18:03:53 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2011/02/12/couchdb-badmatch-when-executing-view/</guid>
      <description>I&amp;#8217;ve been playing around with CouchDB again in my annual attempt to capture the links appearing on my twitter stream and I managed to create the following error for myself:
 $ curl http://127.0.0.1:5984/twitter_links/_design/cleanup/_view/find_broken_links {&#34;error&#34;:&#34;badmatch&#34;,&#34;reason&#34;:&#34;{\n \&#34;find_broken_links\&#34;: {\n \&#34;map\&#34;: \&#34;function(doc) { \nvar prefix = doc.actual_link.match(/.*/); \n if(true) { emit(doc.actual_link, null); } }\&#34;\n }\n}&#34;}   It turns out this error is because I&amp;#8217;ve managed to create new line characters in the view while editing it inside CouchDBX.</description>
    </item>
    
    <item>
      <title>CouchDB/Futon: &#39;_all_dbs&#39; call returns databases with leading &#39;c/&#39;</title>
      <link>https://www.markhneedham.com/blog/2009/05/31/couchdbfuton-_all_dbs-call-returns-databases-with-leading-c/</link>
      <pubDate>Sun, 31 May 2009 23:28:20 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2009/05/31/couchdbfuton-_all_dbs-call-returns-databases-with-leading-c/</guid>
      <description>As I mentioned in my previous post I&amp;#8217;ve been playing around with CouchDB and one of the problems that I&amp;#8217;ve been having is that although I can access my database through the REST API perfectly fine, whenever I went to the Futon page (&#39;http://localhost:5984/_utils/&#39; in my case) to view my list of databases I was getting the following javascript error:
 Database information could not be retrieved: missing   I thought I&amp;#8217;d have a quick look with FireBug to see if I could work out what was going on and saw several requests being made to the following urls and resulting in 404s:</description>
    </item>
    
    <item>
      <title>SharpCouch: Use anonymous type to create JSON objects</title>
      <link>https://www.markhneedham.com/blog/2009/05/31/sharpcouch-use-anonymous-type-to-create-json-objects/</link>
      <pubDate>Sun, 31 May 2009 20:59:47 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2009/05/31/sharpcouch-use-anonymous-type-to-create-json-objects/</guid>
      <description>I&amp;#8217;ve been playing around with CouchDB a bit today and in particular making use of SharpCouch, a library which acts as a wrapper around CouchDB calls. It is included in the CouchBrowse library which is recommended as a good starting point for interacting with CouchDB from C# code.
 I decided to work out how the API worked with by writing an integration test to save a document to the database.</description>
    </item>
    
  </channel>
</rss>