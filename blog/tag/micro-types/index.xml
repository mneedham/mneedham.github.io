<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>micro-types on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/micro-types/</link>
    <description>Recent content in micro-types on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Mar 2009 22:40:57 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/micro-types/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OO: Micro Types</title>
      <link>https://markhneedham.com/blog/2009/03/10/oo-micro-types/</link>
      <pubDate>Tue, 10 Mar 2009 22:40:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/10/oo-micro-types/</guid>
      <description>Micro or Tiny types present an approach to coding which seems to divide opinion in my experience, from those who think it&amp;rsquo;s a brilliant idea to those who believe it&amp;rsquo;s static typing gone mad.
I fall into the former group.
So what is it?
The idea is fairly simple - all primitives and strings in our code are wrapped by a class, meaning that we never pass primitives around.In essence Rule #3 of Jeff Bay&amp;rsquo;s Object Calisthenics.</description>
    </item>
    
  </channel>
</rss>