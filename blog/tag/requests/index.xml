<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>requests on Mark Needham</title>
    <link>http://localhost:8000/blog/tag/requests/</link>
    <description>Recent content in requests on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Jul 2018 15:10:00 +0000</lastBuildDate><atom:link href="http://localhost:8000/blog/tag/requests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python: Parallel download files using requests</title>
      <link>http://localhost:8000/blog/2018/07/15/python-parallel-download-files-requests/</link>
      <pubDate>Sun, 15 Jul 2018 15:10:00 +0000</pubDate>
      
      <guid>http://localhost:8000/blog/2018/07/15/python-parallel-download-files-requests/</guid>
      <description>I often find myself downloading web pages with Python’s requests library to do some local scrapping when building datasets but I’ve never come up with a good way for downloading those pages in parallel.
Below is the code that I use. First we’ll import the required libraries:
import os import requests from time import time as timer And now a function that streams a response into a local file:</description>
    </item>
    
  </channel>
</rss>
