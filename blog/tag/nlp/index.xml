<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nlp on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/nlp/</link>
    <description>Recent content in nlp on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 May 2020 00:21:00 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/nlp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>QuickGraph #7: An entity graph of TWIN4j using APOC NLP</title>
      <link>https://markhneedham.com/blog/2020/05/05/quick-graph-building-entity-graph-twin4j-apoc-nlp/</link>
      <pubDate>Tue, 05 May 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/05/05/quick-graph-building-entity-graph-twin4j-apoc-nlp/</guid>
      <description>One of the most popular use cases for Neo4j is knowledge graphs, and part of that process involves using NLP to create a graph structure from raw text. If we were doing a serious NLP project we&amp;#8217;d want to use something like GraphAware Hume, but in this blog post we&amp;#8217;re going to learn how to add basic NLP functionality to our graph applications.
  Figure 1. Building an entity graph of TWIN4j using APOC NLP  APOC NLP The big cloud providers (AWS, GCP, and Azure) all have Natural Language Processing APIs and, although their APIs aren&amp;#8217;t identical, they all let us extract entities, key phrases, and sentiment from text documents.</description>
    </item>
    
    <item>
      <title>scikit-learn: Creating a matrix of named entity counts</title>
      <link>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</link>
      <pubDate>Wed, 29 Nov 2017 23:01:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; from polyglot.text import Text &amp;gt;&amp;gt;&amp;gt; doc = &amp;#34;My name is David Beckham. Hello from London, England&amp;#34; &amp;gt;&amp;gt;&amp;gt; Text(doc, hint_language_code=&amp;#34;en&amp;#34;).entities [I-PER([&amp;#39;David&amp;#39;, &amp;#39;Beckham&amp;#39;]), I-LOC([&amp;#39;London&amp;#39;]), I-LOC([&amp;#39;England&amp;#39;])] &amp;gt;&amp;gt;&amp;gt; [&amp;#34;_&amp;#34;.join(entity) for entity in Text(doc, hint_language_code=&amp;#34;en&amp;#34;).entities] [&amp;#39;David_Beckham&amp;#39;, &amp;#39;London&amp;#39;, &amp;#39;England&amp;#39;] from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline nlp_pipeline = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) ... # Train and Test the model ... entities = {} def analyze(doc): if doc not in entities: entities[doc] = [&amp;#34;_&amp;#34;.</description>
    </item>
    
    <item>
      <title>Python: polyglot - ModuleNotFoundError: No module named &#39;icu&#39;</title>
      <link>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</link>
      <pubDate>Tue, 28 Nov 2017 19:52:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</guid>
      <description>$ pip install polyglot ImportError: No module named &amp;#39;icu&amp;#39; brew install icu4c export ICU_VERSION=58 export PYICU_INCLUDES=/usr/local/Cellar/icu4c/58.2/include export PYICU_LFLAGS=-L/usr/local/Cellar/icu4c/58.2/lib pip install pyicu $ ls -lh /usr/local/Cellar/icu4c/ total 0 drwxr-xr-x 12 markneedham admin 408B 28 Nov 06:12 58.2 pip install pycld2 pip install morfessor polyglot download embeddings2.de polyglot download ner2.de polyglot download embeddings2.en polyglot download ner2.en </description>
    </item>
    
    <item>
      <title>Where are we now? Where do we want to be?</title>
      <link>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</link>
      <pubDate>Sat, 20 Sep 2008 17:32:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</guid>
      <description>Listening to Dan Northspeaking last week I was reminded of one of my favourite NLP[*]techniques for making improvements on projects.
The technique is the TOTE(Test, Operate, Test, Exit) and it is a technique designed to help us get from where we are now to where we want to be via short feedback loops.
On my previous project we had a situation where we needed to build and deploy our application in order to show it to the client in a show case.</description>
    </item>
    
    <item>
      <title>Feedback: Positive Reinforcement/Change yourself first</title>
      <link>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</link>
      <pubDate>Tue, 12 Feb 2008 00:01:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</guid>
      <description>One of the more interesting concepts used on the NLP coursethat I did last year was the idea of only giving positive feedback to people.
The thinking behind the theory (which I think comes from Robert Dilts, one of the early thinkers behind NLP) is that people know what they are doing wrong and already beat themselves up about it; therefore there is no point you mentioning it as well.</description>
    </item>
    
    <item>
      <title>Giving effective feedback</title>
      <link>https://markhneedham.com/blog/2006/09/02/giving-effective-feedback/</link>
      <pubDate>Sat, 02 Sep 2006 03:07:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/09/02/giving-effective-feedback/</guid>
      <description>One of the most interesting things I have discovered since starting at ThoughtWorks earlier this month is the emphasis that is placed on giving feedback.
The first lesson we were taught about giving feedback was that it could be one of two types. Either it should Strengthen Confidenceor Increase Effectiveness.
In Layman&amp;rsquo;s term that means that if you want to make a positive comment about somebody&amp;rsquo;s contribution then you should make reference to something specific that you believe they have done well so that they can continue doing it.</description>
    </item>
    
  </channel>
</rss>