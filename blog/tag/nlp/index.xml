<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nlp on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/nlp/</link>
    <description>Recent content in Nlp on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Nov 2017 23:01:38 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/nlp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>scikit-learn: Creating a matrix of named entity counts</title>
      <link>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</link>
      <pubDate>Wed, 29 Nov 2017 23:01:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</guid>
      <description>I&#39;ve been trying to improve my score on Kaggle&#39;s Spooky Author Identification competition, and my latest idea was building a model which used named entities extracted using the polyglot NLP library.  We&#39;ll start by learning how to extract entities form a sentence using polyglot which isn&#39;t too tricky: &amp;gt;&amp;gt;&amp;gt; from polyglot.text import Text &amp;gt;&amp;gt;&amp;gt; doc = &amp;quot;My name is David Beckham. Hello from London, England&amp;quot; &amp;gt;&amp;gt;&amp;gt; Text(doc, hint_language_code=&amp;quot;en&amp;quot;).entities [I-PER([&#39;David&#39;, &#39;Beckham&#39;]), I-LOC([&#39;London&#39;]), I-LOC([&#39;England&#39;])]   This sentence contains three entities.</description>
    </item>
    
    <item>
      <title>Python: polyglot - ModuleNotFoundError: No module named &#39;icu&#39;</title>
      <link>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</link>
      <pubDate>Tue, 28 Nov 2017 19:52:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</guid>
      <description>I wanted to use the polyglot NLP library that my colleague Will Lyon mentioned in his analysis of Russian Twitter Trolls but had installation problems which I thought I&#39;d share in case anyone else experiences the same issues.  I started by trying to install polyglot: $ pip install polyglot ImportError: No module named &#39;icu&#39;   Hmmm I&#39;m not sure what icu is but luckily there&#39;s a GitHub issue covering this problem.</description>
    </item>
    
    <item>
      <title>Where are we now? Where do we want to be?</title>
      <link>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</link>
      <pubDate>Sat, 20 Sep 2008 17:32:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</guid>
      <description>Listening to Dan North speaking last week I was reminded of one of my favourite NLP[*] techniques for making improvements on projects.
The technique is the TOTE (Test, Operate, Test, Exit) and it is a technique designed to help us get from where we are now to where we want to be via short feedback loops.
On my previous project we had a situation where we needed to build and deploy our application in order to show it to the client in a show case.</description>
    </item>
    
    <item>
      <title>Feedback: Positive Reinforcement/Change yourself first</title>
      <link>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</link>
      <pubDate>Tue, 12 Feb 2008 00:01:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</guid>
      <description>One of the more interesting concepts used on the NLP course that I did last year was the idea of only giving positive feedback to people.
The thinking behind the theory (which I think comes from Robert Dilts, one of the early thinkers behind NLP) is that people know what they are doing wrong and already beat themselves up about it; therefore there is no point you mentioning it as well.</description>
    </item>
    
    <item>
      <title>Giving effective feedback</title>
      <link>https://markhneedham.com/blog/2006/09/02/giving-effective-feedback/</link>
      <pubDate>Sat, 02 Sep 2006 03:07:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/09/02/giving-effective-feedback/</guid>
      <description>One of the most interesting things I have discovered since starting at ThoughtWorks earlier this month is the emphasis that is placed on giving feedback.
The first lesson we were taught about giving feedback was that it could be one of two types. Either it should Strengthen Confidence or Increase Effectiveness.
In Layman&amp;rsquo;s term that means that if you want to make a positive comment about somebody&amp;rsquo;s contribution then you should make reference to something specific that you believe they have done well so that they can continue doing it.</description>
    </item>
    
  </channel>
</rss>