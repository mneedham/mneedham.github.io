<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slap on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/slap/</link>
    <description>Recent content in Slap on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jun 2009 17:35:51 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/slap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coding: Single Level of Abstraction Principle</title>
      <link>https://mneedham.github.io/blog/2009/06/12/coding-single-level-of-abstraction-principle/</link>
      <pubDate>Fri, 12 Jun 2009 17:35:51 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2009/06/12/coding-single-level-of-abstraction-principle/</guid>
      <description>One of the other useful principles for writing readable code that I&amp;rsquo;ve come across in the last year or so is the Single Level of Abstraction Principle.
I first came across the idea of writing code at the same level of abstraction in Uncle Bob&amp;rsquo;s Clean Code although I only learnt about the actual term in Neal Ford&amp;rsquo;s The Productive Programmer.
As the name suggests the idea is that within a certain method we look to keep all the code at the same level of abstraction to help us read it more easily.</description>
    </item>
    
  </channel>
</rss>