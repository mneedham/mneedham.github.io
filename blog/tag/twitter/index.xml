<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>twitter on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/twitter/</link>
    <description>Recent content in twitter on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 May 2019 06:50:00 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/twitter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Twint: Loading tweets into Kafka and Neo4j</title>
      <link>https://markhneedham.com/blog/2019/05/29/loading-tweets-twint-kafka-neo4j/</link>
      <pubDate>Wed, 29 May 2019 06:50:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/29/loading-tweets-twint-kafka-neo4j/</guid>
      <description>In this post we&amp;#8217;re going to load tweets via the twint library into Kafka, and once we&amp;#8217;ve got them in there we&amp;#8217;ll use the Kafka Connect Neo4j Sink Plugin to get them into Neo4j.
 What is twint? Twitter data has always been some of the most fun to play with, but over the years the official API has become more and more restritive, and it now takes a really long time to download enough data to do anything interesting.</description>
    </item>
    
    <item>
      <title>Neo4j: Graphing the &#39;My name is...I work&#39; Twitter meme</title>
      <link>https://markhneedham.com/blog/2017/02/28/neo4j-graphing-name-work-twitter-meme/</link>
      <pubDate>Tue, 28 Feb 2017 15:50:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/28/neo4j-graphing-name-work-twitter-meme/</guid>
      <description>:param bearer: &#39;&amp;lt;your-bearer-token-goes-here&amp;gt;&#39; WITH &#39;https://api.twitter.com/1.1/search/tweets.json?count=100&amp;amp;result_type=recent&amp;amp;lang=en&amp;amp;q=&#39; as url, {bearer} as bearer CALL apoc.load.jsonParams(url + &amp;quot;%22my%20name%22%20is%22%20%22I%20work%22&amp;quot;,{Authorization:&amp;quot;Bearer &amp;quot;+bearer},null) yield value UNWIND value.statuses as status WITH status, status.user as u, status.entities as e WHERE status.quoted_status_id is not null // create a node for the original tweet MERGE (t:Tweet {id:status.id}) ON CREATE SET t.text=status.text,t.created_at=status.created_at,t.retweet_count=status.retweet_count, t.favorite_count=status.favorite_count // create a node for the author + a POSTED relationship from the author to the tweet MERGE (p:User {name:u.screen_name}) MERGE (p)-[:POSTED]-&amp;gt;(t) // create a MENTIONED relationship from the tweet to any users mentioned in the tweet FOREACH (m IN e.</description>
    </item>
    
    <item>
      <title>Twitter as a learning tool</title>
      <link>https://markhneedham.com/blog/2008/12/07/twitter-as-a-learning-tool/</link>
      <pubDate>Sun, 07 Dec 2008 22:30:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/07/twitter-as-a-learning-tool/</guid>
      <description>About 8 or 9 months ago I remember having a conversation with a colleague where I asked him where he had got his almost encyclopedic knowledge of all things software development.
His reply at the time was that he read a lot of blogs and that this was where he had picked up a lot of the information.
While subscribing to different blogs remains a useful way of learning about different aspects of software development, I think Twitteris now becoming a very useful complementary tool to use alongside the RSS reader.</description>
    </item>
    
  </channel>
</rss>