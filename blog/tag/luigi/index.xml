<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>luigi on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/luigi/</link>
    <description>Recent content in luigi on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Mar 2017 05:39:04 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/luigi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Luigi: Defining dynamic requirements (on output files)</title>
      <link>https://markhneedham.com/blog/2017/03/28/luigi-defining-dynamic-requirements-on-output-files/</link>
      <pubDate>Tue, 28 Mar 2017 05:39:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/28/luigi-defining-dynamic-requirements-on-output-files/</guid>
      <description>class MembersToCSV(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def requires(self): yield GroupsToJSON(self.key, self.lat, self.lon) class MembersToCSV(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def run(self): outputs = [] for input in self.input(): with input.open(&amp;#39;r&amp;#39;) as group_file: groups_json = json.load(group_file) groups = [str(group[&amp;#39;id&amp;#39;]) for group in groups_json] for group_id in groups: members = MembersToJSON(group_id, self.key) outputs.append(members.output().path) yield members def requires(self): yield GroupsToJSON(self.key, self.lat, self.lon) class MembersToJSON(luigi.Task): group_id = luigi.</description>
    </item>
    
    <item>
      <title>Luigi: An ExternalProgramTask example - Converting JSON to CSV</title>
      <link>https://markhneedham.com/blog/2017/03/25/luigi-externalprogramtask-example-converting-json-csv/</link>
      <pubDate>Sat, 25 Mar 2017 14:09:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/25/luigi-externalprogramtask-example-converting-json-csv/</guid>
      <description>import luigi import requests import json from collections import Counter class GroupsToJSON(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def run(self): seed_topic = &amp;#34;nosql&amp;#34; uri = &amp;#34;https://api.meetup.com/2/groups?&amp;amp;topic={0}&amp;amp;lat={1}&amp;amp;lon={2}&amp;amp;key={3}&amp;#34;.format(seed_topic, self.lat, self.lon, self.key) r = requests.get(uri) all_topics = [topic[&amp;#34;urlkey&amp;#34;] for result in r.json()[&amp;#34;results&amp;#34;] for topic in result[&amp;#34;topics&amp;#34;]] c = Counter(all_topics) topics = [entry[0] for entry in c.most_common(10)] groups = {} for topic in topics: uri = &amp;#34;https://api.meetup.com/2/groups?&amp;amp;topic={0}&amp;amp;lat={1}&amp;amp;lon={2}&amp;amp;key={3}&amp;#34;.format(topic, self.lat, self.lon, self.key) r = requests.</description>
    </item>
    
  </channel>
</rss>