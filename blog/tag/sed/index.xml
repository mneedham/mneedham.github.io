<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sed on Mark Needham</title>
    <link>https://mneedham.github.io/blog/tag/sed/</link>
    <description>Recent content in Sed on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Aug 2015 19:30:51 +0000</lastBuildDate>
    
	<atom:link href="https://mneedham.github.io/blog/tag/sed/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sed: Using environment variables</title>
      <link>https://mneedham.github.io/blog/2015/08/13/sed-using-environment-variables/</link>
      <pubDate>Thu, 13 Aug 2015 19:30:51 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2015/08/13/sed-using-environment-variables/</guid>
      <description>I&#39;ve been playing around with the BBC football data set that I wrote about a couple of months ago and I wanted to write some code that would take the import script and replace all instances of remote URIs with a file system path.  For example the import file contains several lines similar to this: LOAD CSV WITH HEADERS FROM &amp;quot;https://raw.githubusercontent.com/mneedham/neo4j-bbc/master/data/matches.csv&amp;quot; AS row  And I want that to read:</description>
    </item>
    
    <item>
      <title>Sed: Replacing characters with a new line</title>
      <link>https://mneedham.github.io/blog/2012/12/29/sed-replacing-characters-with-a-new-line/</link>
      <pubDate>Sat, 29 Dec 2012 17:49:46 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2012/12/29/sed-replacing-characters-with-a-new-line/</guid>
      <description>I&#39;ve been playing around with writing some algorithms in both Ruby and Haskell and the latter wasn&#39;t giving the correct result so I wanted to output an intermediate state of the two programs and compare them.
I didn&#39;t do any fancy formatting of the output from either program so I had the raw data structures in text files which I needed to transform so that they were comparable.
The main thing I wanted to do was get each of the elements of the collection onto their own line.</description>
    </item>
    
    <item>
      <title>Sed: Extended regular expressions</title>
      <link>https://mneedham.github.io/blog/2011/02/11/sed-extended-regular-expressions/</link>
      <pubDate>Fri, 11 Feb 2011 20:34:53 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2011/02/11/sed-extended-regular-expressions/</guid>
      <description>Irfan and I were looking at how to do some text substitution in a text file this afternoon and turned to sed to help us in our quest.
He had originally used grep to find what he wanted to replace on each line, using a grep regular expression to match one or more numbers:
cat the_file.txt | grep &amp;quot;[0-9]\+&amp;quot;  That works pretty well but since I knew how to do the substitution in sed we needed to convert the regular expression to work with sed.</description>
    </item>
    
    <item>
      <title>Capistrano, sed, escaping forward slashes and &#39;p&#39; is not &#39;puts&#39;!</title>
      <link>https://mneedham.github.io/blog/2010/11/18/capistrano-sed-escaping-forward-slashes-and-p-is-not-puts/</link>
      <pubDate>Thu, 18 Nov 2010 18:40:37 +0000</pubDate>
      
      <guid>https://mneedham.github.io/blog/2010/11/18/capistrano-sed-escaping-forward-slashes-and-p-is-not-puts/</guid>
      <description>Priyank and I have been working on automating part of our deployment process and one task we needed to do as part of this is replace some variables used in one of our shell scripts.
All the variables in the script refer to production specific locations but we needed to change a couple of them in order to run the script in our QA environment.
We&amp;rsquo;re therefore written a sed command, which we call from Capistrano, to allow us to do this.</description>
    </item>
    
  </channel>
</rss>