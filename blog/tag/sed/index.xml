<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sed on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/sed/</link>
    <description>Recent content in sed on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Aug 2015 19:30:51 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/sed/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sed: Using environment variables</title>
      <link>https://markhneedham.com/blog/2015/08/13/sed-using-environment-variables/</link>
      <pubDate>Thu, 13 Aug 2015 19:30:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/13/sed-using-environment-variables/</guid>
      <description>LOAD CSV WITH HEADERS FROM &amp;#34;https://raw.githubusercontent.com/mneedham/neo4j-bbc/master/data/matches.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;file:///Users/markneedham/repos/neo4j-bbc/data/matches.csv&amp;#34; AS row $ echo $PWD /Users/markneedham/repos/neo4j-bbc $ sed &amp;#39;s_https://raw.githubusercontent.com/mneedham/neo4j-bbc/master__&amp;#39; import.cql $ sed &amp;#39;s_https://raw.githubusercontent.com/mneedham/neo4j-bbc/master__&amp;#39; import.cql | grep LOAD LOAD CSV WITH HEADERS FROM &amp;#34;/data/matches.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/players.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/players.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/fouls.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/attempts.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/attempts.</description>
    </item>
    
    <item>
      <title>Sed: Replacing characters with a new line</title>
      <link>https://markhneedham.com/blog/2012/12/29/sed-replacing-characters-with-a-new-line/</link>
      <pubDate>Sat, 29 Dec 2012 17:49:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/29/sed-replacing-characters-with-a-new-line/</guid>
      <description>[(1,2), (3,4)â€¦] sed -E -e &amp;#39;s/, \(/\\n(/g&amp;#39; ruby_union.txt sed -E -e &amp;#34;s/,\(/\ /g&amp;#34; ruby_union.txt $ echo &amp;#34;mark\r\nneedham&amp;#34; mark\r\nneedham $ echo -e &amp;#34;mark\r\nneedham&amp;#34; mark needham sed -E -e &amp;#34;s/, \(/\\`echo -e &amp;#39;\n\r&amp;#39;`/g&amp;#34; ruby_union.txt $ echo &amp;#34;[(1,2), (3,4), (5,6)]&amp;#34; | sed -E -e &amp;#34;s/, \(/\\`echo -e &amp;#39;\n\r&amp;#39;`/g&amp;#34; -e &amp;#39;s/\[|]|\)|\(//g&amp;#39; 1,2 3,4 5,6 </description>
    </item>
    
    <item>
      <title>Sed: Extended regular expressions</title>
      <link>https://markhneedham.com/blog/2011/02/11/sed-extended-regular-expressions/</link>
      <pubDate>Fri, 11 Feb 2011 20:34:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/11/sed-extended-regular-expressions/</guid>
      <description>Irfanand I were looking at how to do some text substitution in a text file this afternoon and turned to sed to help us in our quest.
He had originally used grep to find what he wanted to replace on each line, using a grep regular expression to match one or more numbers:
cat the_file.txt | grep &amp;#34;[0-9]\+&amp;#34; That works pretty well but since I knew how to do the substitution in sed we needed to convert the regular expression to work with sed.</description>
    </item>
    
    <item>
      <title>Capistrano, sed, escaping forward slashes and &#39;p&#39; is not &#39;puts&#39;!</title>
      <link>https://markhneedham.com/blog/2010/11/18/capistrano-sed-escaping-forward-slashes-and-p-is-not-puts/</link>
      <pubDate>Thu, 18 Nov 2010 18:40:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/18/capistrano-sed-escaping-forward-slashes-and-p-is-not-puts/</guid>
      <description>Priyankand I have been working on automating part of our deployment process and one task we needed to do as part of this is replace some variables used in one of our shell scripts.
All the variables in the script refer to production specific locations but we needed to change a couple of them in order to run the script in our QA environment.
We&amp;rsquo;re therefore written a sed command, which we call from Capistrano, to allow us to do this.</description>
    </item>
    
  </channel>
</rss>