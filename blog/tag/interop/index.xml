<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>interop on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/interop/</link>
    <description>Recent content in interop on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Mar 2013 20:21:10 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/interop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>clojure/Java Interop: The doto macro</title>
      <link>https://markhneedham.com/blog/2013/03/17/clojurejava-interop-the-doto-macro/</link>
      <pubDate>Sun, 17 Mar 2013 20:21:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/17/clojurejava-interop-the-doto-macro/</guid>
      <description>(doto (new java.util.HashMap) (.put &amp;#34;a&amp;#34; 1) (.put &amp;#34;b&amp;#34; 2)) -&amp;gt; {a=1, b=2} (defn create-stadium-node [db line] (let [stadium-node (.. db createNode)] (.. stadium-node (setProperty &amp;#34;wkt&amp;#34; (format &amp;#34;POINT(%s %s)&amp;#34; (:long line) (:lat line)))) (.. stadium-node (setProperty &amp;#34;name&amp;#34; (:stadium line))) stadium-node)) (defn create-stadium-node [db line] (doto (.. db createNode) (.setProperty &amp;#34;wkt&amp;#34; (format &amp;#34;POINT(%s %s)&amp;#34; (:long line) (:lat line))) (.setProperty &amp;#34;name&amp;#34; (:stadium line)))) # the end of our main function (.. tx success) (.</description>
    </item>
    
  </channel>
</rss>