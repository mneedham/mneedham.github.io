<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spatial on Mark Needham</title>
    <link>https://markhneedham.com/blog/tag/spatial/</link>
    <description>Recent content in spatial on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Mar 2013 22:13:41 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/tag/spatial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>neo4j/cypher: Finding football stadiums near a city using spatial</title>
      <link>https://markhneedham.com/blog/2013/03/10/neo4jcypher-finding-football-stadiums-near-a-city-using-spatial/</link>
      <pubDate>Sun, 10 Mar 2013 22:13:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/10/neo4jcypher-finding-football-stadiums-near-a-city-using-spatial/</guid>
      <description>One of the things that I wanted to add to my football graph was something location related so I could try out neo4j spatial and I thought the easiest way to do that was to model the location of football stadiums.
 To start with I needed to add spatial as an unmanaged extension to my neo4j plugins folder which involved doing the following:
 $ git clone git://github.com/neo4j/spatial.git spatial $ cd spatial $ mvn clean package -Dmaven.</description>
    </item>
    
    <item>
      <title>Oracle Spatial: Querying by a point/latitude/longitude</title>
      <link>https://markhneedham.com/blog/2012/03/23/oracle-spatial-querying-by-a-pointlatitudelongitude/</link>
      <pubDate>Fri, 23 Mar 2012 23:54:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/23/oracle-spatial-querying-by-a-pointlatitudelongitude/</guid>
      <description>We&amp;#8217;re using Oracle Spatial on the application I&amp;#8217;m working on and while most of the time any spatial queries we make are done from Java code we wanted to be able to run them directly from SQL as well to verify the code was working correctly.
 We normally end up forgetting how to construct a query so I thought I&amp;#8217;d document it.
 Assuming we have a table table_with_shape which has a column shape which is a polygon, if we want to check whether a lat/long value interacts with that shape we can do that with the following query:</description>
    </item>
    
  </channel>
</rss>