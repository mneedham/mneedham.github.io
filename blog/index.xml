<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mark Needham</title>
    <link>https://markhneedham.com/blog/</link>
    <description>Recent content on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Oct 2020 00:21:00 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Neo4j: Cypher - FOREACH vs CALL {} (subquery)</title>
      <link>https://markhneedham.com/blog/2020/10/29/neo4j-foreach-call-subquery/</link>
      <pubDate>Thu, 29 Oct 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/10/29/neo4j-foreach-call-subquery/</guid>
      <description>I recently wanted to create a graph based on an adjacency list, and in this post we&amp;#8217;ll learn how to do that using the FOREACH[https://neo4j.com/docs/cypher-manual/current/clauses/foreach/^] clause and then with the new CALL {} subquery clause.
 We&amp;#8217;ll start with the following map of ids &amp;#8594; arrays of ids:
 :param list =&amp;gt; ({`0`: [7, 9], `1`: [2, 4, 5, 6, 8, 9], `2`: [0, 6, 8, 9], `3`: [1, 2, 6, 9], `4`: [1, 2, 3, 7], `5`: [8, 9], `6`: [2, 4, 5, 7, 8, 9], `7`: [0, 3, 4, 6, 8, 9], `8`: [1, 6, 9], `9`: [0, 1, 3, 5]})   We want to create one node per id and create a relationship from each node to the nodes in its array.</description>
    </item>
    
    <item>
      <title>Unix: Get file name without extension from file path</title>
      <link>https://markhneedham.com/blog/2020/08/24/unix-get-file-name-without-extension-from-file-path/</link>
      <pubDate>Mon, 24 Aug 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/08/24/unix-get-file-name-without-extension-from-file-path/</guid>
      <description>I recently found myself needing to extract the file name but not file extension from a bunch of file paths and wanted to share a neat technique that I learnt to do it.
 I started with a bunch of Jupyter notebook files, which I listed usign the following command;
 $ find notebooks/ -maxdepth 1 -iname *ipynb notebooks/09_Predictions_sagemaker.ipynb notebooks/00_Environment.ipynb notebooks/05_Train_Evaluate_Model.ipynb notebooks/01_DataLoading.ipynb notebooks/05_SageMaker.ipynb notebooks/09_Predictions_sagemaker-Copy2.ipynb notebooks/09_Predictions_sagemaker-Copy1.ipynb notebooks/02_Co-Author_Graph.ipynb notebooks/04_Model_Feature_Engineering.ipynb notebooks/09_Predictions_scikit.ipynb notebooks/03_Train_Test_Split.ipynb   If we pick one of those files:</description>
    </item>
    
    <item>
      <title>pipenv: ImportError: No module named &#39;virtualenv.seed.via_app_data&#39;</title>
      <link>https://markhneedham.com/blog/2020/08/07/pipenv-import-file-no-module-named-virtualenv/</link>
      <pubDate>Fri, 07 Aug 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/08/07/pipenv-import-file-no-module-named-virtualenv/</guid>
      <description>I&amp;#8217;ve been trying to install pipenv on a new computer and ran into a frustrating issue. After installing pipenv using pip, I tried to run the command below:
 $ /home/markhneedham/.local/bin/pipenv shell Creating a virtualenv for this project… Pipfile: /tmp/Pipfile Using /usr/bin/python3.8 (3.8.2) to create virtualenv… ⠙ Creating virtual environment...ModuleNotFoundError: No module named &#39;virtualenv.seed.via_app_data&#39; ✘ Failed creating virtual environment [pipenv.exceptions.VirtualenvCreationException]: Failed to create virtual environment.   Hmmm, for some reason it&amp;#8217;s unable to find one of the virtualenv modules.</description>
    </item>
    
    <item>
      <title>Google Docs: Find and replace script</title>
      <link>https://markhneedham.com/blog/2020/05/12/google-docs-find-and-replace-script/</link>
      <pubDate>Tue, 12 May 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/05/12/google-docs-find-and-replace-script/</guid>
      <description>I keep track of the podcasts that I&amp;#8217;ve listened to in a Google Doc, having pasted the episode title and podcast name from Player.FM. The format isn&amp;#8217;t exactly what I want so I&amp;#8217;ve been running the Find and Replace command to update each entry. This is obviously a very boring task, so I wanted to see if I could automate it.
 An example entry in the Google Doc reads like this:</description>
    </item>
    
    <item>
      <title>QuickGraph #7: An entity graph of TWIN4j using APOC NLP</title>
      <link>https://markhneedham.com/blog/2020/05/05/quick-graph-building-entity-graph-twin4j-apoc-nlp/</link>
      <pubDate>Tue, 05 May 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/05/05/quick-graph-building-entity-graph-twin4j-apoc-nlp/</guid>
      <description>One of the most popular use cases for Neo4j is knowledge graphs, and part of that process involves using NLP to create a graph structure from raw text. If we were doing a serious NLP project we&amp;#8217;d want to use something like GraphAware Hume, but in this blog post we&amp;#8217;re going to learn how to add basic NLP functionality to our graph applications.
  Figure 1. Building an entity graph of TWIN4j using APOC NLP  APOC NLP The big cloud providers (AWS, GCP, and Azure) all have Natural Language Processing APIs and, although their APIs aren&amp;#8217;t identical, they all let us extract entities, key phrases, and sentiment from text documents.</description>
    </item>
    
    <item>
      <title>Python: Select keys from map/dictionary</title>
      <link>https://markhneedham.com/blog/2020/04/27/python-select-keys-from-map-dictionary/</link>
      <pubDate>Mon, 27 Apr 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/04/27/python-select-keys-from-map-dictionary/</guid>
      <description>In this post we&amp;#8217;re going to learn how to filter a Python map/dictionary to return a subset of keys or values. I needed to do this recently while logging some maps that had a lot of keys that I wasn&amp;#8217;t interested in.
 We&amp;#8217;ll start with the following map:
 x = {&#34;a&#34;: 1, &#34;b&#34;: 2, &#34;c&#34;: 3, &#34;d&#34;: 4} {&#39;a&#39;: 1, &#39;b&#39;: 2, &#39;c&#39;: 3, &#39;d&#39;: 4}   We want to filter this map so that we only have the keys a and c.</description>
    </item>
    
    <item>
      <title>QuickGraph #6: COVID-19 Taxonomy Graph</title>
      <link>https://markhneedham.com/blog/2020/04/21/quick-graph-covid-19-taxonomy/</link>
      <pubDate>Tue, 21 Apr 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/04/21/quick-graph-covid-19-taxonomy/</guid>
      <description>It&amp;#8217;s been several months since our last QuickGraph and the world feels very different than it was back then. I&amp;#8217;ve been reading a couple of books about viruses - Spillover and Pale Rider - and am now very curious to learn more about the medical terms reference in the books.
 With the Pre Release of neosemantics (n10s) for Neo4j 4.0, I thought it would be interesting to create a graph of the taxonomy of the virus that caused COVID-19, using data extracted from Wikidata&amp;#8217;s SPARQL API.</description>
    </item>
    
    <item>
      <title>Python: Find the starting Sunday for all the weeks in a month</title>
      <link>https://markhneedham.com/blog/2020/04/18/python-starting-sundays-in-a-month/</link>
      <pubDate>Sat, 18 Apr 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/04/18/python-starting-sundays-in-a-month/</guid>
      <description>In this post we&amp;#8217;re going to learn how to find the dates of all the Sundays in a given month, as well as the Sunday immediately preceding the 1st day in the month, assuming that day isn&amp;#8217;t a Sunday.
 Let&amp;#8217;s start by importing some libraries that we&amp;#8217;re going to use in this blog post:
 from dateutil import parser import datetime import calendar   Next we need to find the first day of the current month, which we can do with the following code:</description>
    </item>
    
    <item>
      <title>React Semantic-UI: Adding a custom icon to open link in a new window</title>
      <link>https://markhneedham.com/blog/2020/04/13/react-semantic-ui-custom-add-icon-open-new-window/</link>
      <pubDate>Mon, 13 Apr 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/04/13/react-semantic-ui-custom-add-icon-open-new-window/</guid>
      <description>I&amp;#8217;ve been building a little React app that uses the Semantic UI library and found myself wanting to render a custom icon.
 Semantic UI describes an icon as &#34;a glyph used to represent something else&#34;, and there are a big list of in built icons. For example, the following code renders a thumbs up icon:
 import {Icon} from &#34;semantic-ui-react&#34;; &amp;lt;Icon name=&#34;thumbs up outline icon green large&#34; style={{margin: 0}}/&amp;gt;    Figure 1.</description>
    </item>
    
    <item>
      <title>Streamlit: multiselect - AttributeError: &#39;numpy.ndarray&#39; object has no attribute &#39;index&#39;</title>
      <link>https://markhneedham.com/blog/2020/03/31/streamlit-multiselect-numpy-no-attribute-index/</link>
      <pubDate>Tue, 31 Mar 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/03/31/streamlit-multiselect-numpy-no-attribute-index/</guid>
      <description>In this post we&amp;#8217;ll learn how to overcome a problem I encountered while building a small Streamlit application to analyse John Hopkin&amp;#8217;s data on the COVID-19 disease. The examples in this post use a CSV file that contains time series data of deaths in each country.
 I started with the following code to create a multiselect widget that lists all countries and selected the United Kingdom by default:
 import streamlit as st import pandas as pd default_countries = [&#34;</description>
    </item>
    
    <item>
      <title>SPARQL: OR conditions in a WHERE clause using the UNION clause</title>
      <link>https://markhneedham.com/blog/2020/02/07/sparql-or-conditions-where-union-query/</link>
      <pubDate>Fri, 07 Feb 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/02/07/sparql-or-conditions-where-union-query/</guid>
      <description>This is part 4 of my series of posts about querying the Wikidata API, in which I learn how to use SPARQL&amp;#8217;s UNION clause to handle an OR condition in a WHERE clause.
  Figure 1. Using SPARQL&amp;#8217;s UNION clause  But first, some context!
 After running queries against the Wikidata SPARQL API to pull the date of birth and nationality of tennis players into the Australian Open Graph, I noticed that several players hadn&amp;#8217;t actually been updated.</description>
    </item>
    
    <item>
      <title>Neo4j: Enriching an existing graph by querying the Wikidata SPARQL API</title>
      <link>https://markhneedham.com/blog/2020/02/04/neo4j-enriching-existing-graph-wikidata-sparql-api/</link>
      <pubDate>Tue, 04 Feb 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/02/04/neo4j-enriching-existing-graph-wikidata-sparql-api/</guid>
      <description>This is the third post in a series about querying Wikidata&amp;#8217;s SPARQL API. In the first post we wrote some basic queries, in the second we learnt about the SELECT and CONSTRUCT clauses, and in this post we&amp;#8217;re going to import query results into an existing Neo4j graph.
  Figure 1. Enriching a Neo4j Graph with Wikidata  Setting up Neo4j We&amp;#8217;re going to use the following Docker Compose configuration in this blog post:</description>
    </item>
    
    <item>
      <title>Neo4j: Cross database querying with Neo4j Fabric</title>
      <link>https://markhneedham.com/blog/2020/02/03/neo4j-cross-database-querying-fabric/</link>
      <pubDate>Mon, 03 Feb 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/02/03/neo4j-cross-database-querying-fabric/</guid>
      <description>A couple of weeks ago I wrote a QuickGraph blog post about the Australian Open, in which I showed how to use Neo4j 4.0&amp;#8217;s multi database feature.
 In that post we focused on queries that could be run on one database, but the 4.0 release also contains another feature for doing cross database querying - Neo4j Fabric - and we&amp;#8217;re going to learn how to use that in this post.</description>
    </item>
    
    <item>
      <title>Querying Wikidata: SELECT vs CONSTRUCT</title>
      <link>https://markhneedham.com/blog/2020/02/02/querying-wikidata-construct-select/</link>
      <pubDate>Sun, 02 Feb 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/02/02/querying-wikidata-construct-select/</guid>
      <description>In this blog post we&amp;#8217;re going to build upon the newbie&amp;#8217;s guide to querying Wikidata, and learn all about the CONSTRUCT clause.
  Figure 1. SPARQL&amp;#8217;s CONSTRUCT and SELECT clauses  In the newbie&amp;#8217;s guide, we wrote the following query to find a tennis player with the name &#34;Nick Kyrgios&#34; and return their date of birth:
 SELECT * WHERE { ?person wdt:P106 wd:Q10833314 ; rdfs:label &#39;Nick Kyrgios&#39;@en ; wdt:P569 ?</description>
    </item>
    
    <item>
      <title>Neo4j: Finding the longest path</title>
      <link>https://markhneedham.com/blog/2020/01/29/neo4j-finding-longest-path/</link>
      <pubDate>Wed, 29 Jan 2020 15:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/29/neo4j-finding-longest-path/</guid>
      <description>One on my favourite things about storing data in a graph database is executing path based queries against that data. I&amp;#8217;ve been trying to find a way to write such queries against the Australian Open QuickGraph, and in this blog post we&amp;#8217;re going to write what I think of as longest path queries against this graph.
  Figure 1. Finding longest paths in Neo4j  Setting up Neo4j We&amp;#8217;re going to use the following Docker Compose configuration in this blog post:</description>
    </item>
    
    <item>
      <title>A newbie&#39;s guide to querying Wikidata</title>
      <link>https://markhneedham.com/blog/2020/01/29/newbie-guide-querying-wikidata/</link>
      <pubDate>Wed, 29 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/29/newbie-guide-querying-wikidata/</guid>
      <description>After reading one of Jesús Barrasa&amp;#8217;s recent QuickGraph posts about enriching a knowledge graph with data from Wikidata, I wanted to learn how to query the Wikidata API so that I could pull in the data for my own QuickGraphs.
 I want to look up information about tennis players, and one of my favourite players is Nick Kyrgios, so this blog post is going to be all about him.</description>
    </item>
    
    <item>
      <title>Neo4j: Performing a database dump within a Docker container</title>
      <link>https://markhneedham.com/blog/2020/01/28/neo4j-database-dump-docker-container/</link>
      <pubDate>Tue, 28 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/28/neo4j-database-dump-docker-container/</guid>
      <description>Before the release of Neo4j 4.0, taking a dump of a database running within a Docker container was a tricky affair.
 We&amp;#8217;d need to stop the container and remove it, run the container again in bash mode, and finally take a dump of the database. With 4.0 things are simpler.
  Figure 1. Neo4j on Docker  We&amp;#8217;ll be using the following Docker Compose configuration in this blog post:</description>
    </item>
    
    <item>
      <title>Neo4j: Exporting a subset of data from one database to another</title>
      <link>https://markhneedham.com/blog/2020/01/27/neo4j-exporting-subset-database/</link>
      <pubDate>Mon, 27 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/27/neo4j-exporting-subset-database/</guid>
      <description>As part of the preparation for another blog post, I wanted to export a subset of data from one Neo4j database to another one, which seemed like a blog post in its own right.
  Figure 1. Exporting data using APOC&amp;#8217;s Export JSON  Setting up Neo4j We&amp;#8217;re going to use the following Docker Compose configuration in this blog post:
 Dockerfile version: &#39;3.7&#39; services: neo4j: image: neo4j:4.0.0-enterprise container_name: &#34;</description>
    </item>
    
    <item>
      <title>QuickGraph #5: Australian Open</title>
      <link>https://markhneedham.com/blog/2020/01/23/quick-graph-australian-open/</link>
      <pubDate>Thu, 23 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/23/quick-graph-australian-open/</guid>
      <description>It&amp;#8217;s time for another QuickGraph, this one based on data from the Australian Open tennis tournament. We&amp;#8217;re going to use data curated by Jeff Sackmann in the tennis_wta and tennis_atp repositories.
  Figure 1. Australian Open Graph (Background from https://www.freepik.com/free-photo/3d-network-background-with-connecting-lines-dots_3961382.htm)  Setting up Neo4j We&amp;#8217;re going to use the following Docker Compose configuration in this blog post:
 docker-compose.yml version: &#39;3.7&#39; services: neo4j: image: neo4j:4.0.0-enterprise container_name: &#34;quickgraph-aus-open&#34; volumes: - .</description>
    </item>
    
    <item>
      <title>Creating an Interactive UK Official Charts Data App with Streamlit and Neo4j</title>
      <link>https://markhneedham.com/blog/2020/01/16/interactive-uk-charts-quickgraph-neo4j-streamlit/</link>
      <pubDate>Thu, 16 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/16/interactive-uk-charts-quickgraph-neo4j-streamlit/</guid>
      <description>I recently came across Streamlit, a tool that makes it easy to build data based single page web applications. I wanted to give it a try, and the UK Charts QuickGraph that I recently wrote about seemed like a good opportunity for that.
 This blog post starts from where we left off. The data is loaded into Neo4j and we&amp;#8217;ve written some queries to explore different aspects of the dataset.</description>
    </item>
    
    <item>
      <title>Python: Altair - Setting the range of Date values for an axis</title>
      <link>https://markhneedham.com/blog/2020/01/14/altair-range-values-dates-axis/</link>
      <pubDate>Tue, 14 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/14/altair-range-values-dates-axis/</guid>
      <description>In my continued experiments with the Altair visualisation library, I wanted to set a custom range of data values on the x axis of a chart. In this blog post we&amp;#8217;ll learn how to do that.
 We&amp;#8217;ll start where we left off in the last blog post, with the following code that renders a scatterplot containing the chart position of a song on a certain date:
 import altair as alt import pandas as pd import datetime df = pd.</description>
    </item>
    
    <item>
      <title>Python: Altair - TypeError: Object of type date is not JSON serializable</title>
      <link>https://markhneedham.com/blog/2020/01/10/altair-typeerror-object-type-date-not-json-serializable/</link>
      <pubDate>Fri, 10 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/10/altair-typeerror-object-type-date-not-json-serializable/</guid>
      <description>I&amp;#8217;ve been playing with the Altair statistical visualisation library and recently ran into an error while trying to render a DataFrame that contained dates.
 I was trying to render a scatterplot containing the chart position of a song on a certain date, as seen in the code below:
 # pip install altair pandas import altair as alt import pandas as pd import datetime df = pd.DataFrame( [ {&#34;position&#34;: 2, &#34;</description>
    </item>
    
    <item>
      <title>QuickGraph #4: UK Official Singles Chart 2019</title>
      <link>https://markhneedham.com/blog/2020/01/04/quick-graph-uk-official-charts/</link>
      <pubDate>Sat, 04 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/04/quick-graph-uk-official-charts/</guid>
      <description>For our first QuickGraph of the new decade we&amp;#8217;re going to explore data from the Official UK Top 40 Chart. This chart ranks the top 100 songs of the week based on official sales of sales of downloads, CD, vinyl, audio streams and video streams. Every week BBC Radio 1 broadcast the top 40 songs, which explains the name of the chart.
  Figure 1. The Official UK Charts  Scraping the Official Charts I couldn&amp;#8217;t find a dump of the dataset, so we&amp;#8217;re going to use our web scraping skills again.</description>
    </item>
    
    <item>
      <title>Spotify API: Making my first call</title>
      <link>https://markhneedham.com/blog/2020/01/02/spotify-api-making-my-first-call/</link>
      <pubDate>Thu, 02 Jan 2020 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2020/01/02/spotify-api-making-my-first-call/</guid>
      <description>I wanted to enrich the data for a little music application I&amp;#8217;m working on and realised it would be a perfect opportunity to try out the Spotify API. I want to extract data about individual tracks (via the Tracks API), but before we do that we&amp;#8217;ll need to create an app and have it approved for access to the Spotify API.
   Registering an application After logging into the Spotify Dashboard using my usual Spotify credentials, I was prompted to create an application:</description>
    </item>
    
    <item>
      <title>QuickGraph #3: Itsu Allergens</title>
      <link>https://markhneedham.com/blog/2019/12/23/quick-graph-itsu-allergens/</link>
      <pubDate>Mon, 23 Dec 2019 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/12/23/quick-graph-itsu-allergens/</guid>
      <description>As someone who&amp;#8217;s allergic to lots of different things, the introduction of allergen charts in restaurants over the last few years has been very helpful. These charts are often hidden away in PDF files, but the Asian inspired Itsu restaurant have all this information available on their online menus. This therefore seemed like a great opportunity for another QuickGraph.
   Scraping the Itsu website I wrote a couple of Python scripts to download each of the menu items and then extract the product name, description, and allergens.</description>
    </item>
    
    <item>
      <title>QuickGraph #2: Guardian Top 100 Male Footballers</title>
      <link>https://markhneedham.com/blog/2019/12/22/quick-graph-guardian-top-100-male-footballers/</link>
      <pubDate>Sun, 22 Dec 2019 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/12/22/quick-graph-guardian-top-100-male-footballers/</guid>
      <description>Over the last week the Guardian have been counting down their top 100 male footballers of 2019, and on Friday they also published a Google sheet containing all the votes, which seemed like a perfect candidate for a QuickGraph.
   We can see a preview of the Google sheet in the printscreen below:
   We can also download Google Sheets in CSV format based on the following URI template:</description>
    </item>
    
    <item>
      <title>React React Router: Setting parent component state based on route change event</title>
      <link>https://markhneedham.com/blog/2019/12/19/react-reach-parent-event-route-change/</link>
      <pubDate>Thu, 19 Dec 2019 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/12/19/react-reach-parent-event-route-change/</guid>
      <description>I&amp;#8217;ve been working on a React Reach Router based application that has several routes and wanted to show a search box in the header unless the user was on the search page. After a lot of trial and error I learnt that I could use a route change event listener to do this.
 The CodeSandbox below shows all the code to do this:
  Let&amp;#8217;s walk through the code.</description>
    </item>
    
    <item>
      <title>Elasticsearch: Importing data into App Search</title>
      <link>https://markhneedham.com/blog/2019/11/24/elasticsearch-import-data-appsearch/</link>
      <pubDate>Sun, 24 Nov 2019 00:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/11/24/elasticsearch-import-data-appsearch/</guid>
      <description>For a side project that I&amp;#8217;m working on I wanted to create a small React application that can query data stored in Elasticsearch, and most of the tutorials I found suggested using a tool called Elastic App Search.
 I&amp;#8217;d not heard of App Search before, and it took me a while to figure out that it&amp;#8217;s the mid level product in between Elasticsearch Service and Elastic Site Search Service, as described on elastic.</description>
    </item>
    
    <item>
      <title>Graphing Brexit: Did the threat work?</title>
      <link>https://markhneedham.com/blog/2019/09/27/graphing-brexit-did-the-threat-work/</link>
      <pubDate>Fri, 27 Sep 2019 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/09/27/graphing-brexit-did-the-threat-work/</guid>
      <description>Following on from the blog post where we compared how MPs and parties voted on Brexit indicative measures, in this post we&amp;#8217;re going to explore how Conservative MPs have voted with respect to a no deal exit from the European Union. In particular we&amp;#8217;d like to know whether the threat to have the party whip removed had an impact on how they voted in the recent motion to request an extension to work out a deal.</description>
    </item>
    
    <item>
      <title>Graphing Brexit: MPs vs Parties</title>
      <link>https://markhneedham.com/blog/2019/09/23/graphing-brexit-mps-vs-parties/</link>
      <pubDate>Mon, 23 Sep 2019 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/09/23/graphing-brexit-mps-vs-parties/</guid>
      <description>In the previous post of the Graphing Brexit series we computed the average vote by party. In this post we&amp;#8217;re going to take those average party scores and compare them against the votes placed by individual MPs. The goal is to determine whether, Brexit wise, MPs are representing the right party!
 It won&amp;#8217;t be perfect since we know that not everyone in a party voted the same way, but it should still give us some fun results.</description>
    </item>
    
    <item>
      <title>Graphing Brexit: Plotting how the parties voted</title>
      <link>https://markhneedham.com/blog/2019/09/20/graphing-brexit-charting-how-the-parties-voted/</link>
      <pubDate>Fri, 20 Sep 2019 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/09/20/graphing-brexit-charting-how-the-parties-voted/</guid>
      <description>Over the last week I&amp;#8217;ve revisited the Brexit Graph that I created in March 2019, this time looking at how the parties voted on average on each of the indicative votes.
 To recap, we have a graph that has the following schema:
   Since the initial post I&amp;#8217;ve slightly changed how the MEMBER_OF relationship works. As several MPs have switched MPs in the intervening months, we&amp;#8217;re now storing a start property to indicate when they started representing a party and an end property to indicate when they stopped representing a party.</description>
    </item>
    
    <item>
      <title>Neo4j: Approximate string matching/similarity</title>
      <link>https://markhneedham.com/blog/2019/09/18/neo4j-string-matching-similarity/</link>
      <pubDate>Wed, 18 Sep 2019 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/09/18/neo4j-string-matching-similarity/</guid>
      <description>I&amp;#8217;ve been playing with the Brexit Graph over the last few days, and wanted to map the MPs that I got from CommonsVotes with data from the TheyWorkForYou API.
 I already had voting records loaded into Neo4j, but to recap, this is how I did that:
 UNWIND [655,656,657,658,659,660,661,662,711, 669, 668, 667, 666, 664] AS division LOAD CSV FROM &#34;https://github.com/mneedham/graphing-brexit/raw/master/data/commonsvotes/Division&#34; + division + &#34;.csv&#34; AS row // Create motion nodes WITH division, collect(row) AS rows MERGE (motion:Motion {division: trim(split(rows[0][0], &#34;</description>
    </item>
    
    <item>
      <title>Neo4j: apoc.load.csv - Neo.ClientError.Statement.SyntaxError: Type mismatch: expected Float, Integer, Number or String but was Any </title>
      <link>https://markhneedham.com/blog/2019/09/05/neo4j-apoc-load-csv-type-mismatch-expected-float-integer-number-string/</link>
      <pubDate>Thu, 05 Sep 2019 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/09/05/neo4j-apoc-load-csv-type-mismatch-expected-float-integer-number-string/</guid>
      <description>The Neo4j APOC library&#39;s Load CSV procedure is very useful if you want more control over the import process than the LOAD CSV clause allows. I found myself using it last week to import a CSV file of embeddings, because I wanted to know the line number of the row in the CSV file while importing the data.
 I had a file that looked like this, which I put into the import directory:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Nested Path Comprehensions vs OPTIONAL MATCH</title>
      <link>https://markhneedham.com/blog/2019/08/23/neo4j-cypher-path-comprehensions-optional-match/</link>
      <pubDate>Fri, 23 Aug 2019 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/08/23/neo4j-cypher-path-comprehensions-optional-match/</guid>
      <description>While writing my previous post about Cypher nested path comprehensions, I realised that for this particular problem, the OPTIONAL MATCH clause is a better choice.
 To recap, we have the following graph:
 MERGE (club:Club {name: &#34;Man Utd&#34;}) MERGE (league:League {name: &#34;Premier League&#34;}) MERGE (country:Country {name: &#34;England&#34;}) MERGE (club)-[:IN_LEAGUE]-&amp;gt;(league) MERGE (league)-[:IN_COUNTRY]-&amp;gt;(country) MERGE (club2:Club {name: &#34;Juventus&#34;}) MERGE (league2:League {name: &#34;Serie A&#34;}) MERGE (club2)-[:IN_LEAGUE]-&amp;gt;(league2)     We started the post with the following query that returns (club)-[:IN_LEAGUE]&amp;#8594;(league)-[:IN_COUNTRY]&amp;#8594;(country) paths:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Nested Path Comprehensions</title>
      <link>https://markhneedham.com/blog/2019/08/22/neo4j-cypher-nested-pattern-comprehensions/</link>
      <pubDate>Thu, 22 Aug 2019 11:08:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/08/22/neo4j-cypher-nested-pattern-comprehensions/</guid>
      <description>I&amp;#8217;ve recently been building an application using the GRANDstack, which uses nested Cypher path comprehensions to translate GraphQL queries to Cypher ones. I&amp;#8217;d not done this before, so I was quite curious how this feature worked. We&amp;#8217;ll explore it using the following dataset:
 MERGE (club:Club {name: &#34;Man Utd&#34;}) MERGE (league:League {name: &#34;Premier League&#34;}) MERGE (country:Country {name: &#34;England&#34;}) MERGE (club)-[:IN_LEAGUE]-&amp;gt;(league) MERGE (league)-[:IN_COUNTRY]-&amp;gt;(country) MERGE (club2:Club {name: &#34;Juventus&#34;}) MERGE (league2:League {name: &#34;Serie A&#34;</description>
    </item>
    
    <item>
      <title>Neo4j: Conditional WHERE clause with APOC</title>
      <link>https://markhneedham.com/blog/2019/07/31/neo4j-conditional-where-query-apoc/</link>
      <pubDate>Wed, 31 Jul 2019 11:08:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/07/31/neo4j-conditional-where-query-apoc/</guid>
      <description>Sometimes we want to be able to vary our Cypher queries based on the value of a parameter. I came across such a situation today, and thought I&amp;#8217;d share how I solved it using the APOC library.
 Let&amp;#8217;s first setup some sample data:
 UNWIND range(0, 5) AS id CREATE (:Person {name: &#34;person-&#34; + id})   Now, if we want to get all pairs of people, we could write the following query:</description>
    </item>
    
    <item>
      <title>Python: Click - Handling Date Parameter</title>
      <link>https://markhneedham.com/blog/2019/07/29/python-click-date-parameter-type/</link>
      <pubDate>Mon, 29 Jul 2019 11:08:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/07/29/python-click-date-parameter-type/</guid>
      <description>I&amp;#8217;ve been building a little CLI application using the Python Click Library, and I wanted to pass in a Date as a parameter. There&amp;#8217;s more than one way to do this.
 Let&amp;#8217;s first install the Click library:
 pip install click   And now we&amp;#8217;ll import our required libraries:
 from datetime import date import click   Now we&amp;#8217;ll create a sub command that takes two parameters: date-start and date-end.</description>
    </item>
    
    <item>
      <title>Kafka: Python Consumer - No messages with group id/consumer group</title>
      <link>https://markhneedham.com/blog/2019/06/03/kafka-python-consumer-no-messages-group-id-consumer-group/</link>
      <pubDate>Mon, 03 Jun 2019 11:08:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/06/03/kafka-python-consumer-no-messages-group-id-consumer-group/</guid>
      <description>When I&amp;#8217;m learning a new technology, I often come across things that are incredibly confusing when I first come across them, but make complete sense afterwards. In this post I&amp;#8217;ll explain my experience writing a Kafka consumer that wasn&amp;#8217;t finding any messages when using consumer groups .
 Setting up Kafka infrastructure We&amp;#8217;ll set up the Kafka infrastructure locally using the Docker Compose Template that I describe in my Kafka: A Basic Tutorial blog post.</description>
    </item>
    
    <item>
      <title>Twint: Loading tweets into Kafka and Neo4j</title>
      <link>https://markhneedham.com/blog/2019/05/29/loading-tweets-twint-kafka-neo4j/</link>
      <pubDate>Wed, 29 May 2019 06:50:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/29/loading-tweets-twint-kafka-neo4j/</guid>
      <description>In this post we&amp;#8217;re going to load tweets via the twint library into Kafka, and once we&amp;#8217;ve got them in there we&amp;#8217;ll use the Kafka Connect Neo4j Sink Plugin to get them into Neo4j.
 What is twint? Twitter data has always been some of the most fun to play with, but over the years the official API has become more and more restritive, and it now takes a really long time to download enough data to do anything interesting.</description>
    </item>
    
    <item>
      <title>Docker: Find the network for a container</title>
      <link>https://markhneedham.com/blog/2019/05/24/docker-find-network-for-container/</link>
      <pubDate>Fri, 24 May 2019 06:10:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/24/docker-find-network-for-container/</guid>
      <description>If we want two Docker containers to communicate with each other they need to belong to the same network. In this post we&amp;#8217;ll learn how to find out the network of existing containers so that we can attach new containers to that network.
 All the containers mentioned in this post can be launched locally from Docker compose, using the following command:
 git clone git@github.com:mneedham/ksql-kafka-neo4j-streams.git &amp;amp;&amp;amp; cd ksql-kafka-neo4j-streams docker-compose-up   Running this command will create four containers:</description>
    </item>
    
    <item>
      <title>Processing Neo4j Transaction Events with KSQL and Kafka Streams</title>
      <link>https://markhneedham.com/blog/2019/05/23/processing-neo4j-transaction-events-ksql-kafka-streams/</link>
      <pubDate>Thu, 23 May 2019 12:46:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/23/processing-neo4j-transaction-events-ksql-kafka-streams/</guid>
      <description>The Neo4j Streams Library lets users send transaction events to a Kafka topic, and in this post we&amp;#8217;re going to learn how to explore these events using the KSQL streaming SQL Engine.
 All the infrastructure used in this post can be launched locally from Docker compose, using the following command:
 git clone git@github.com:mneedham/ksql-kafka-neo4j-streams.git &amp;amp;&amp;amp; cd ksql-kafka-neo4j-streams docker-compose-up   Running this command will create four containers:
 Starting zookeeper-blog .</description>
    </item>
    
    <item>
      <title>Deleting Kafka Topics on Docker</title>
      <link>https://markhneedham.com/blog/2019/05/23/deleting-kafka-topics-on-docker/</link>
      <pubDate>Thu, 23 May 2019 07:58:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/23/deleting-kafka-topics-on-docker/</guid>
      <description>In this post we&amp;#8217;re going to learn how to delete a Kafka Topic when running a Kafka Broker on Docker.
 We&amp;#8217;ll spin up a local Kafka environment using the Docker Compose template from the Kafka Basic Tutorial blog post that I wrote last week. Let&amp;#8217;s open a terminal window and run the following commands to set up our environment:
 git clone git@github.com:mneedham/basic-kafka-tutorial.git &amp;amp;&amp;amp; cd basic-kafka-tutorial docker-compose up   On another terminal window, run the following command to see the list of Docker containers that are running:</description>
    </item>
    
    <item>
      <title>KSQL: Create Stream - extraneous input &#39;properties&#39;</title>
      <link>https://markhneedham.com/blog/2019/05/20/kql-create-stream-extraneous-input/</link>
      <pubDate>Mon, 20 May 2019 11:43:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/20/kql-create-stream-extraneous-input/</guid>
      <description>In my continued playing with the KSQL streaming engine for Kafka, I came across another interesting error while trying to put a stream on top of a topic generated by the Neo4j Streams Library.
 We&amp;#8217;ll simplify the events being posted on the topic for this blog post, so this is what the events on the topic look like:
 { &#34;id&#34;:&#34;ABCDEFGHI&#34;, &#34;properties&#34;: { &#34;name&#34;:&#34;Mark&#34;, &#34;location&#34;:&#34;London&#34; } }   We then create a stream on that topic:</description>
    </item>
    
    <item>
      <title>KSQL: Create Stream - Failed to prepare statement: name is null</title>
      <link>https://markhneedham.com/blog/2019/05/19/ksql-create-stream-failed-to-prepare-statement-name-is-null/</link>
      <pubDate>Sun, 19 May 2019 19:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/19/ksql-create-stream-failed-to-prepare-statement-name-is-null/</guid>
      <description>I&amp;#8217;ve been playing with KSQL over the weekend and ran into a basic error message that took me a little while to solve.
 I was trying to create a stream over a topic dummy1, which is the simplest possible thing you can do with KSQL. The events posted to dummy1 are JSON messages containing only an id key. Below is an example of a message posted to the topic:</description>
    </item>
    
    <item>
      <title>Kafka: A basic tutorial</title>
      <link>https://markhneedham.com/blog/2019/05/16/kafka-basic-tutorial/</link>
      <pubDate>Thu, 16 May 2019 10:02:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/16/kafka-basic-tutorial/</guid>
      <description>In this post we&amp;#8217;re going to learn how to launch Kafka locally and write to and read from a topic using one of the Python drivers.
 To make things easy for myself, I&amp;#8217;ve created a Docker Compose template that launches 3 containers:
   broker - our Kafka broker
  zookeeper - used by Kafka for leader election
  jupyter - notebooks for connecting to our Kafka broker</description>
    </item>
    
    <item>
      <title>Neo4j: keep/filter keys in a map using APOC</title>
      <link>https://markhneedham.com/blog/2019/05/12/neo4j-keep-filter-keys-map-apoc/</link>
      <pubDate>Sun, 12 May 2019 17:58:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/12/neo4j-keep-filter-keys-map-apoc/</guid>
      <description>In this post we&amp;#8217;ll learn how to write a Cypher query to create a node in Neo4j containing some of the keys from a map. This post assumes that the APOC library is installed.
 We&amp;#8217;ll start by creating a map that contains data from my twitter profile:
 :param document =&amp;gt; { id: 14707949, name: &#34;Mark Needham&#34;, username: &#34;markhneedham&#34;, bio: &#34;Developer Relations @neo4j&#34;, location: &#34;London, United Kingdom&#34;, url: &#34;http://www.markhneedham.com&#34;, join_date: &#34;</description>
    </item>
    
    <item>
      <title>Jupyter: RuntimeError: This event loop is already running</title>
      <link>https://markhneedham.com/blog/2019/05/10/jupyter-runtimeerror-this-event-loop-is-already-running/</link>
      <pubDate>Fri, 10 May 2019 23:00:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/05/10/jupyter-runtimeerror-this-event-loop-is-already-running/</guid>
      <description>I&amp;#8217;ve been using the twint library to explore the Neo4j twitter community, and ran into an initially confusing error when I moved the code I&amp;#8217;d written into a Jupyter notebook.
 The first three cells of my notebook contain the following code:
 Cell 1:
 ! pip install twint   Cell 2:
 import json import twint   Cell 3:
 users = [&#34;vikatakavi11&#34;, &#34;tee_mars3&#34;] for username in users[:10]: c = twint.</description>
    </item>
    
    <item>
      <title>pyspark: Py4JJavaError: An error occurred while calling o138.loadClass.: java.lang.ClassNotFoundException: org.graphframes.GraphFramePythonAPI</title>
      <link>https://markhneedham.com/blog/2019/04/17/pyspark-class-not-found-exception-org-graphframes-graphframepythonapi/</link>
      <pubDate>Wed, 17 Apr 2019 09:00:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/04/17/pyspark-class-not-found-exception-org-graphframes-graphframepythonapi/</guid>
      <description>I&amp;#8217;ve been building a Docker Container that has support for Jupyter, Spark, GraphFrames, and Neo4j, and ran into a problem that had me pulling my (metaphorical) hair out!
 The pyspark-notebook container gets us most of the way there, but it doesn&amp;#8217;t have GraphFrames or Neo4j support. Adding Neo4j is as simple as pulling in the Python Driver from Conda Forge, which leaves us with GraphFrames.
 When I&amp;#8217;m using GraphFrames with pyspark locally I would pull it in via the --packages config parameter, like this:</description>
    </item>
    
    <item>
      <title>Neo4j: Delete all nodes</title>
      <link>https://markhneedham.com/blog/2019/04/14/neo4j-delete-all-nodes/</link>
      <pubDate>Sun, 14 Apr 2019 12:52:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/04/14/neo4j-delete-all-nodes/</guid>
      <description>When experimenting with a new database, at some stage we&amp;#8217;ll probably want to delete all our data and start again. I was trying to do this with Neo4j over the weekend and it didn&amp;#8217;t work as I expected, so I thought I&amp;#8217;d write the lessons I learned.
 We&amp;#8217;ll be using Neo4j via the Neo4j Desktop with the default settings. This means that we have a maximum heap size of 1GB.</description>
    </item>
    
    <item>
      <title>Python: Getting GitHub download count from the GraphQL API using requests</title>
      <link>https://markhneedham.com/blog/2019/04/07/python-github-download-count-graphql-requests/</link>
      <pubDate>Sun, 07 Apr 2019 05:03:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/04/07/python-github-download-count-graphql-requests/</guid>
      <description>I was recently trying to use some code I shared just over a year ago to compute GitHub Project download numbers from the GraphQL API, and wanted to automate this in a Python script.
 It was more fiddly than I expected, so I thought I&amp;#8217;d share the code for the benefit of future me more than anything else!
 Pre requisites We&amp;#8217;re going to use the popular requests library to query the API, so we need to import that.</description>
    </item>
    
    <item>
      <title>Finding famous MPs based on their Wikipedia Page Views</title>
      <link>https://markhneedham.com/blog/2019/04/01/famous-mps-wikipedia-pageviews/</link>
      <pubDate>Mon, 01 Apr 2019 05:03:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/04/01/famous-mps-wikipedia-pageviews/</guid>
      <description>As part of the Graphing Brexit series of blog posts, I wanted to work out who were the most important Members of the UK parliament, and after a bit of Googling I realised that views of their Wikipedia pages would do the trick.
 I initially found my way to tools.wmflabs.org, which is great for exploring the popularity of an individual MP, but not so good if you want to extract the data for 600 of them.</description>
    </item>
    
    <item>
      <title>Neo4j: From Graph Model to Neo4j Import</title>
      <link>https://markhneedham.com/blog/2019/03/27/from-graph-model-to-neo4j-import/</link>
      <pubDate>Wed, 27 Mar 2019 06:42:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/03/27/from-graph-model-to-neo4j-import/</guid>
      <description>In this post we&amp;#8217;re going to learn how to import the DBLP citation network into Neo4j using the Neo4j Import Tool.
 In case you haven&amp;#8217;t come across this dataset before, Tomaz Bratanic has a great blog post explaining it.
 The tl;dr is that we have articles, authors, and venues. Authors can write articles, articles can reference other articles, and articles are presented at a venue. Below is the graph model for this dataset:</description>
    </item>
    
    <item>
      <title>Neo4j: Delete/Remove dynamic properties</title>
      <link>https://markhneedham.com/blog/2019/03/14/neo4j-delete-dynamic-properties/</link>
      <pubDate>Thu, 14 Mar 2019 06:42:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/03/14/neo4j-delete-dynamic-properties/</guid>
      <description>Irfan and I were playing with a dataset earlier today, and having run a bunch of graph algorithms, we had a lot of properties that we wanted to clear out.
 The following Cypher query puts Neo4j into the state that we were dealing with.
 CREATE (:Node {name: &#34;Mark&#34;, pagerank: 2.302, louvain: 1, lpa: 4 }) CREATE (:Node {name: &#34;Michael&#34;, degree: 23, triangles: 12, betweeness: 48.70 }) CREATE (:Node {name: &#34;</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Date ranges</title>
      <link>https://markhneedham.com/blog/2019/01/13/neo4j-cypher-date-ranges/</link>
      <pubDate>Sun, 13 Jan 2019 06:42:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/01/13/neo4j-cypher-date-ranges/</guid>
      <description>As part of a dataset I&amp;#8217;ve been working with this week, I wanted to generate a collection of a range of dates using the Cypher query language.
 I&amp;#8217;ve previously used the duration function, which lets you add (or subtract) from a specific date, so I thought I&amp;#8217;d start from there. If we want to find the day after 1st January 2019, we could write the following query:
 neo4j&amp;gt; WITH date(&#34;</description>
    </item>
    
    <item>
      <title>Neo4j: APOC - Caused by: java.io.RuntimeException: Can&#39;t read url or key file (No such file or directory)</title>
      <link>https://markhneedham.com/blog/2019/01/12/neo4j-apoc-file-not-found-exception-no-such-file-directory/</link>
      <pubDate>Sat, 12 Jan 2019 19:05:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/01/12/neo4j-apoc-file-not-found-exception-no-such-file-directory/</guid>
      <description>I&amp;#8217;ve been using Neo4j&amp;#8217;s APOC library to load some local JSON files this week, and ran into an interesting problem.
 The LOAD CSV tool assumes that any files you load locally are in the import directory, so I&amp;#8217;ve got into the habit of putting my data there. Let&amp;#8217;s check what I&amp;#8217;m trying to import by opening the import directory:
   What&amp;#8217;s in there?
   Just the one JSON file needs processing.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Remove consecutive duplicates from a list</title>
      <link>https://markhneedham.com/blog/2019/01/12/neo4j-cypher-remove-consecutive-duplicates/</link>
      <pubDate>Sat, 12 Jan 2019 04:32:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/01/12/neo4j-cypher-remove-consecutive-duplicates/</guid>
      <description>I was playing with a dataset this week and wanted to share how I removes duplicate consecutive elements from a list using the Cypher query language.
 For simplicity&amp;#8217;s sake, imagine that we have this list:
 neo4j&amp;gt; return [1,2,3,3,4,4,4,5,3] AS values; +-----------------------------+ | values | +-----------------------------+ | [1, 2, 3, 3, 4, 4, 4, 5, 3] | +-----------------------------+   We want to remove the duplicate 3&amp;#8217;s and 4&amp;#8217;s, such that our end result should be:</description>
    </item>
    
    <item>
      <title>Python: Add query parameters to a URL</title>
      <link>https://markhneedham.com/blog/2019/01/11/python-add-query-parameters-url/</link>
      <pubDate>Fri, 11 Jan 2019 09:42:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2019/01/11/python-add-query-parameters-url/</guid>
      <description>I was recently trying to automate adding a query parameter to a bunch of URLS and came across a neat approach a long way down this StackOverflow answer, that uses the PreparedRequest class from the requests library.
 Let&amp;#8217;s first get the class imported:
 from requests.models import PreparedRequest req = PreparedRequest()   And now let&amp;#8217;s use use this class to add a query parameter to a URL. We can do this with the following code:</description>
    </item>
    
    <item>
      <title>Python: Pandas - DataFrame plotting ignoring figure</title>
      <link>https://markhneedham.com/blog/2018/12/25/python-pandas-dataframe-plot-figure/</link>
      <pubDate>Tue, 25 Dec 2018 21:09:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/12/25/python-pandas-dataframe-plot-figure/</guid>
      <description>In my continued use of matplotlib I wanted to change the size of the chart I was plotting and struggled a bit to start with. We&amp;#8217;ll use the same DataFrame as before:
 df = pd.DataFrame({ &#34;name&#34;: [&#34;Mark&#34;, &#34;Arya&#34;, &#34;Praveena&#34;], &#34;age&#34;: [34, 1, 31] }) df   In my last blog post I showed how we can create a bar chart by executing the following code:
 df.plot.bar(x=&#34;name&#34;) plt.tight_layout() plt.</description>
    </item>
    
    <item>
      <title>Neo4j: Pruning transaction logs more aggressively</title>
      <link>https://markhneedham.com/blog/2018/12/24/neo4j-prune-transaction-logs-more-aggressively/</link>
      <pubDate>Mon, 24 Dec 2018 21:09:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/12/24/neo4j-prune-transaction-logs-more-aggressively/</guid>
      <description>One thing that new users of Neo4j when playing around with it locally is how much space the transaction logs can take up, especially when we&amp;#8217;re creating and deleting lots of data while we get started. We can see this by running the following query a few times:
 UNWIND range(0, 1000) AS id CREATE (:Foo {id: id}); MATCH (f:Foo) DELETE f   This query creates a bunch of data before immediately deleting it.</description>
    </item>
    
    <item>
      <title>Pandas: Create matplotlib plot with x-axis label not index</title>
      <link>https://markhneedham.com/blog/2018/12/21/pandas-plot-x-axis-index/</link>
      <pubDate>Fri, 21 Dec 2018 16:57:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/12/21/pandas-plot-x-axis-index/</guid>
      <description>I&amp;#8217;ve been using matplotlib a bit recently, and wanted to share a lesson I learnt about choosing the label of the x-axis. Let&amp;#8217;s first import the libraries we&amp;#8217;ll use in this post:
 import pandas as pd import matplotlib.pyplot as plt   And now we&amp;#8217;ll create a DataFrame of values that we want to chart:
 df = pd.DataFrame({ &#34;name&#34;: [&#34;Mark&#34;, &#34;Arya&#34;, &#34;Praveena&#34;], &#34;age&#34;: [34, 1, 31] }) df   This is what our DataFrame looks like:</description>
    </item>
    
    <item>
      <title>PySpark: Creating DataFrame with one column - TypeError: Can not infer schema for type: &lt;type &#39;int&#39;&gt;</title>
      <link>https://markhneedham.com/blog/2018/12/09/pyspark-creating-dataframe-one-column/</link>
      <pubDate>Sun, 09 Dec 2018 10:25:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/12/09/pyspark-creating-dataframe-one-column/</guid>
      <description>I&amp;#8217;ve been playing with PySpark recently, and wanted to create a DataFrame containing only one column. I tried to do this by writing the following code:
 spark.createDataFrame([(1)], [&#34;count&#34;])   If we run that code we&amp;#8217;ll get the following error message:
 Traceback (most recent call last): File &#34;&amp;lt;stdin&amp;gt;&#34;, line 1, in &amp;lt;module&amp;gt; File &#34;/home/markhneedham/projects/graph-algorithms/spark-2.4.0-bin-hadoop2.7/python/pyspark/sql/session.py&#34;, line 748, in createDataFrame rdd, schema = self._createFromLocal(map(prepare, data), schema) File &#34;/home/markhneedham/projects/graph-algorithms/spark-2.4.0-bin-hadoop2.7/python/pyspark/sql/session.py&#34;, line 416, in _createFromLocal struct = self.</description>
    </item>
    
    <item>
      <title>Neo4j: Storing inferred relationships with APOC triggers</title>
      <link>https://markhneedham.com/blog/2018/11/05/neo4j-inferred-relationships-apoc-triggers/</link>
      <pubDate>Mon, 05 Nov 2018 06:15:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/11/05/neo4j-inferred-relationships-apoc-triggers/</guid>
      <description>One of my favourite things about modelling data in graphs is how easy it makes it to infer relationships between pieces of data based on other relationships. In this post we&amp;#8217;re going to learn how to compute and store those inferred relationships using the triggers feature from the APOC library.
 Meetup Graph Before we get to that, let&amp;#8217;s first understand what we mean when we say inferred relationship. We&amp;#8217;ll create a small graph containing Person, Meetup, and Topic nodes with the following query:</description>
    </item>
    
    <item>
      <title>Neo4j Graph Algorithms: Visualising Projected Graphs</title>
      <link>https://markhneedham.com/blog/2018/10/31/neo4j-graph-algorithms-visualise-projected-graph/</link>
      <pubDate>Wed, 31 Oct 2018 18:12:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/10/31/neo4j-graph-algorithms-visualise-projected-graph/</guid>
      <description>A few weeks ago I wrote a blog post showing how to work out the best tennis player of all time using the Weighted PageRank algorithm, and in the process created a projected credibility graph which I want to explore in more detail in this post.
 As I pointed out in that post, sometimes the graph model doesn&amp;#8217;t fit well with what the algorithm expects, so we need to project the graph on which we run graph algorithms.</description>
    </item>
    
    <item>
      <title>Neo4j Graph Algorithms: Calculating the cosine similarity of Game of Thrones episodes</title>
      <link>https://markhneedham.com/blog/2018/09/28/neo4j-graph-algorithms-cosine-game-of-thrones/</link>
      <pubDate>Fri, 28 Sep 2018 07:55:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/09/28/neo4j-graph-algorithms-cosine-game-of-thrones/</guid>
      <description>A couple of years ago I wrote a blog post showing how to calculate cosine similarity on Game of Thrones episodes using scikit-learn, and with the release of Similarity Algorithms in the Neo4j Graph Algorithms library I thought it was a good time to revisit that post.
 The dataset contains characters and episodes, and we want to calculate episode similarity based on the characters that appear in each episode. Before we run any algorithms we need to get the data into Neo4j.</description>
    </item>
    
    <item>
      <title>matplotlib - Create a histogram/bar chart for ratings/full numbers</title>
      <link>https://markhneedham.com/blog/2018/09/24/matplotlib-histogram-bar-chart-ratings-full-values/</link>
      <pubDate>Mon, 24 Sep 2018 07:55:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/09/24/matplotlib-histogram-bar-chart-ratings-full-values/</guid>
      <description>In my continued work with matplotlib I wanted to plot a histogram (or bar chart) for a bunch of star ratings to see how they were distributed.
 Before we do anything let&amp;#8217;s import matplotlib as well as pandas:
 import random import pandas as pd import matplotlib matplotlib.use(&#39;TkAgg&#39;) import matplotlib.pyplot as plt plt.style.use(&#39;fivethirtyeight&#39;)   Next we&amp;#8217;ll create an array of randomly chosen star ratings between 1 and 5:</description>
    </item>
    
    <item>
      <title>matplotlib - MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.</title>
      <link>https://markhneedham.com/blog/2018/09/18/matplotlib-matplotlib-deprecation-adding-axes/</link>
      <pubDate>Tue, 18 Sep 2018 07:56:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/09/18/matplotlib-matplotlib-deprecation-adding-axes/</guid>
      <description>In my last post I showed how to remove axes legends from a matplotlib chart, and while writing the post I actually had the change the code I used as my initial approach is now deprecated.
 As in the previous post, we&amp;#8217;ll first import pandas and matplotlib:
 import pandas as pd import matplotlib matplotlib.use(&#39;TkAgg&#39;) import matplotlib.pyplot as plt plt.style.use(&#39;fivethirtyeight&#39;)   And we&amp;#8217;ll still use this DataFrame:
 df = pd.</description>
    </item>
    
    <item>
      <title>matplotlib - Remove axis legend</title>
      <link>https://markhneedham.com/blog/2018/09/18/matplotlib-remove-axis-legend/</link>
      <pubDate>Tue, 18 Sep 2018 07:55:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/09/18/matplotlib-remove-axis-legend/</guid>
      <description>I&amp;#8217;ve been working with matplotlib a bit recently, and I wanted to remove all axis legends from my chart. It took me a bit longer than I expected to figure it out so I thought I&amp;#8217;d write it up.
 Before we do anything let&amp;#8217;s import matplotlib as well as pandas, since we&amp;#8217;re going to plot data from a pandas DataFrame.
 import pandas as pd import matplotlib matplotlib.use(&#39;TkAgg&#39;) import matplotlib.</description>
    </item>
    
    <item>
      <title>Neo4j: Using LOAD CSV to process csv.gz files from S3</title>
      <link>https://markhneedham.com/blog/2018/09/05/neo4j-load-csv-gz-s3/</link>
      <pubDate>Wed, 05 Sep 2018 07:26:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/09/05/neo4j-load-csv-gz-s3/</guid>
      <description>I&amp;#8217;ve been building some training material for the GraphConnect conference that happens in a couple of weeks time and I wanted to load gzipped CSV files. I got this working using Cypher&amp;#8217;s LOAD CSV command with the file stored locally, but when I uploaded it to S3 it didn&amp;#8217;t work as I expected.
 I uploaded the file to an S3 bucket and then tried to read it back like this:</description>
    </item>
    
    <item>
      <title>QuickGraph #1: Analysing Python Dependency Graph with PageRank, Closeness Centrality, and Betweenness Centrality</title>
      <link>https://markhneedham.com/blog/2018/07/16/quick-graph-python-dependency-graph/</link>
      <pubDate>Mon, 16 Jul 2018 05:25:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/07/16/quick-graph-python-dependency-graph/</guid>
      <description>I&amp;#8217;ve always wanted to build a dependency graph of libraries in the Python ecosytem but I never quite got around to it&amp;#8230;&amp;#8203;until now! I thought I might be able to get a dump of all the libraries and their dependencies, but while searching I came across this article which does a good job of explaining why that&amp;#8217;s not possible.
 Finding Python Dependencies The best we can do is generate a dependency graph of our locally installed packages using the excellent pipdeptree tool.</description>
    </item>
    
    <item>
      <title>Python: Parallel download files using requests</title>
      <link>https://markhneedham.com/blog/2018/07/15/python-parallel-download-files-requests/</link>
      <pubDate>Sun, 15 Jul 2018 15:10:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/07/15/python-parallel-download-files-requests/</guid>
      <description>I often find myself downloading web pages with Python&amp;#8217;s requests library to do some local scrapping when building datasets but I&amp;#8217;ve never come up with a good way for downloading those pages in parallel.
 Below is the code that I use. First we&amp;#8217;ll import the required libraries:
 import os import requests from time import time as timer   And now a function that streams a response into a local file:</description>
    </item>
    
    <item>
      <title>Neo4j 3.4: Grouping Datetimes</title>
      <link>https://markhneedham.com/blog/2018/07/10/neo4j-grouping-datetimes/</link>
      <pubDate>Tue, 10 Jul 2018 04:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/07/10/neo4j-grouping-datetimes/</guid>
      <description>In my continued analysis of Strava runs I wanted to try and find my best runs grouped by different time components, which was actually much easier than I was expecting.
 Importing the dataset If you want to try out the examples below you can execute the following LOAD CSV commands to load the data:
 LOAD CSV WITH HEADERS FROM &#34;https://github.com/mneedham/strava/raw/master/runs.csv&#34; AS row MERGE (run:Run {id: toInteger(row.id)}) SET run.distance = toFloat(row.</description>
    </item>
    
    <item>
      <title>Neo4j 3.4: Syntax Error - Text cannot be parsed to a Duration (aka dealing with empty durations)</title>
      <link>https://markhneedham.com/blog/2018/07/09/neo4j-text-cannot-be-parsed-to-duration/</link>
      <pubDate>Mon, 09 Jul 2018 18:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/07/09/neo4j-text-cannot-be-parsed-to-duration/</guid>
      <description>As I continued with my travels with Neo4j 3.4&amp;#8217;s temporal data type I came across some fun edge cases when dealing with empty durations while importing data.
 Imagine we&amp;#8217;re trying to create 3 nodes from the following array of input data. Two of the rows have invalid durations!
 UNWIND [ {id: 12345, duration: &#34;PT2M20S&#34;}, {id: 12346, duration: &#34;&#34;}, {id: 12347, duration: null} ] AS row MERGE (run:Run {id: row.</description>
    </item>
    
    <item>
      <title>Neo4j: Querying the Strava Graph using Py2neo</title>
      <link>https://markhneedham.com/blog/2018/06/15/neo4j-querying-strava-graph-py2neo/</link>
      <pubDate>Fri, 15 Jun 2018 13:45:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/06/15/neo4j-querying-strava-graph-py2neo/</guid>
      <description>Last week Nigel released v4 of Py2neo and given I was just getting ready to write some queries against my Strava activity graph I thought I&amp;#8217;d give it a try.
 If you want to learn how to create your own Strava graph you should read my previous post, but just to recap, this is the graph model that we created:
   Let&amp;#8217;s get to it!
 tl;dr the code in this post is available as a Jupyter notebook so if you want the code and nothing but the code head over there!</description>
    </item>
    
    <item>
      <title>Neo4j: Building a graph of Strava activities</title>
      <link>https://markhneedham.com/blog/2018/06/12/neo4j-building-strava-graph/</link>
      <pubDate>Tue, 12 Jun 2018 05:30:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/06/12/neo4j-building-strava-graph/</guid>
      <description>In my last post I showed how to import activities from Strava&amp;#8217;s API into Neo4j using only the APOC library, but that was only part of the graph so I thought I&amp;#8217;d share the rest of what I&amp;#8217;ve done.
 The Graph Model In the previous post I showed how to import nodes with Run label, but there are some other pieces of data that I wanted to import as well.</description>
    </item>
    
    <item>
      <title>Neo4j APOC: Importing data from Strava&#39;s paginated JSON API</title>
      <link>https://markhneedham.com/blog/2018/06/05/neo4j-apoc-loading-data-strava-paginated-json-api/</link>
      <pubDate>Tue, 05 Jun 2018 05:30:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/06/05/neo4j-apoc-loading-data-strava-paginated-json-api/</guid>
      <description>Over the weekend I&amp;#8217;ve been playing around with loading data from the Strava API into Neo4j and I started with the following Python script which creates a node with a Run label for each of my activities.
 If you want to follow along on your own data you&amp;#8217;ll need to get an API key via the &#39;My API Application&#39; section of the website. Once you&amp;#8217;ve got that put it in the TOKEN environment variable and you should be good to go.</description>
    </item>
    
    <item>
      <title>Neo4j 3.4: Gotchas when working with Durations</title>
      <link>https://markhneedham.com/blog/2018/06/03/neo4j-3.4-gotchas-working-with-durations/</link>
      <pubDate>Sun, 03 Jun 2018 20:11:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/06/03/neo4j-3.4-gotchas-working-with-durations/</guid>
      <description>Continuing with my explorations of Strava data in Neo4j I wanted to share some things I learnt while trying to work out my pace for certain distances.
 Before we get into the pace calculations let&amp;#8217;s first understand how the duration function works. If we run the following query we might expect to get back the same value that we put in&amp;#8230;&amp;#8203;
 RETURN duration({seconds: 413.77}).seconds AS seconds   ╒═════════╕ │&#34;</description>
    </item>
    
    <item>
      <title>Neo4j 3.4: Formatting instances of the Duration and Datetime date types</title>
      <link>https://markhneedham.com/blog/2018/06/03/neo4j-3.4-formatting-instances-durations-dates/</link>
      <pubDate>Sun, 03 Jun 2018 04:08:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/06/03/neo4j-3.4-formatting-instances-durations-dates/</guid>
      <description>In my last blog post I showed how to compare instances of Neo4j&amp;#8217;s Duration data type, and in the middle of the post I realised that I needed to use the APOC library to return the value in the format I wanted. This was the solution I ended up with:
 WITH duration({seconds: 100}) AS duration RETURN apoc.text.lpad(toString(duration.minutes), 2, &#34;0&#34;) + &#34;:&#34; + apoc.text.lpad(toString(duration.secondsOfMinute), 2, &#34;0&#34;)   If we run that query this is the output:</description>
    </item>
    
    <item>
      <title>Neo4j 3.4: Comparing durations</title>
      <link>https://markhneedham.com/blog/2018/06/02/neo4j-3.4-comparing-durations/</link>
      <pubDate>Sat, 02 Jun 2018 03:24:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/06/02/neo4j-3.4-comparing-durations/</guid>
      <description>Neo4j 3.4 saw the introduction of the temporal date type, which my colleague Adam Cowley covered in his excellent blog post, and in this post I want to share my experience using durations from my Strava runs.
 I&amp;#8217;ll show how to load the whole Strava dataset in another blog post but for now we&amp;#8217;ll just manually create some durations based on the elapsed time in seconds that Strava provides. We can run the following query to convert duration in seconds into the duration type:</description>
    </item>
    
    <item>
      <title>Interpreting Word2vec or GloVe embeddings using scikit-learn and Neo4j graph algorithms</title>
      <link>https://markhneedham.com/blog/2018/05/19/interpreting-word2vec-glove-embeddings-sklearn-neo4j-graph-algorithms/</link>
      <pubDate>Sat, 19 May 2018 09:47:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/05/19/interpreting-word2vec-glove-embeddings-sklearn-neo4j-graph-algorithms/</guid>
      <description>A couple of weeks I came across a paper titled Parameter Free Hierarchical Graph-Based Clustering for Analyzing Continuous Word Embeddings via Abigail See&#39;s blog post about ACL 2017.
  The paper explains an algorithm that helps to make sense of word embeddings generated by algorithms such as Word2vec and GloVe.
 I&amp;#8217;m fascinated by how graphs can be used to interpret seemingly black box data, so I was immediately intrigued and wanted to try and reproduce their findings using Neo4j.</description>
    </item>
    
    <item>
      <title>Predicting movie genres with node2Vec and Tensorflow</title>
      <link>https://markhneedham.com/blog/2018/05/11/node2vec-tensorflow/</link>
      <pubDate>Fri, 11 May 2018 08:12:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/05/11/node2vec-tensorflow/</guid>
      <description>In my previous post we looked at how to get up and running with the node2Vec algorithm, and in this post we&amp;#8217;ll learn how we can feed graph embeddings into a simple Tensorflow model.
 Recall that node2Vec takes in a list of edges (or relationships) and gives us back an embedding (array of numbers) for each node.
 This time we&amp;#8217;re going to run the algorithm over a movies recommendation dataset from the Neo4j Sandbox.</description>
    </item>
    
    <item>
      <title>Exploring node2vec - a graph embedding algorithm</title>
      <link>https://markhneedham.com/blog/2018/05/11/exploring-node2vec-graph-embedding-algorithm/</link>
      <pubDate>Fri, 11 May 2018 08:08:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/05/11/exploring-node2vec-graph-embedding-algorithm/</guid>
      <description>In my explorations of graph based machine learning, one algorithm I came across is called node2Vec. The paper describes it as &#34;an algorithmic framework for learning continuous feature representations for nodes in networks&#34;.
 So what does the algorithm do? From the website:
  The node2vec framework learns low-dimensional representations for nodes in a graph by optimizing a neighborhood preserving objective. The objective is flexible, and the algorithm accommodates for various definitions of network neighborhoods by simulating biased random walks.</description>
    </item>
    
    <item>
      <title>Tensorflow 1.8: Hello World using the Estimator API</title>
      <link>https://markhneedham.com/blog/2018/05/05/tensorflow-18-hello-world-using-estimator-api/</link>
      <pubDate>Sat, 05 May 2018 00:31:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/05/05/tensorflow-18-hello-world-using-estimator-api/</guid>
      <description>Over the last week I&amp;#8217;ve been going over various Tensorflow tutorials and one of the best ones when getting started is Sidath Asiri&amp;#8217;s Hello World in TensorFlow, which shows how to build a simple linear classifier on the Iris dataset.
 I&amp;#8217;ll use the same data as Sidath, so if you want to follow along you&amp;#8217;ll need to download these files:
   iris_training.csv
  iris_test.csv
   Loading data The way we load data will remain exactly the same - we&amp;#8217;ll still be reading it into a Pandas dataframe:</description>
    </item>
    
    <item>
      <title>Python via virtualenv on Mac OS X: RuntimeError: Python is not installed as a framework.</title>
      <link>https://markhneedham.com/blog/2018/05/04/python-runtime-error-osx-matplotlib-not-installed-as-framework-mac/</link>
      <pubDate>Fri, 04 May 2018 22:03:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/05/04/python-runtime-error-osx-matplotlib-not-installed-as-framework-mac/</guid>
      <description>I&amp;#8217;ve previously written a couple of blog posts about my troubles getting matplotlib to play nicely and I run into a slightly different variant today while following Sidath Asiri&amp;#8217;s Hello World in TensorFlow tutorial.
 When I ran the script using a version of Python installed via virtualenv I got the following exception:
 Traceback (most recent call last): File &#34;iris.py&#34;, line 4, in &amp;lt;module&amp;gt; from matplotlib import pyplot as plt File &#34;</description>
    </item>
    
    <item>
      <title>PyData London 2018 Conference Experience Report</title>
      <link>https://markhneedham.com/blog/2018/04/29/pydata-london-2018/</link>
      <pubDate>Sun, 29 Apr 2018 11:54:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/04/29/pydata-london-2018/</guid>
      <description>Over the last few days I attended PyData London 2018 and wanted to share my experience. The PyData series of conferences aim to bring together users and developers of data analysis tools to share ideas and learn from each other. I presented a talk on building a recommendation with Python and Neo4j at the 2016 version but didn&amp;#8217;t attend last year.
 The organisers said there were ~ 550 attendees spread over 1 day of tutorials and 2 days of talks.</description>
    </item>
    
    <item>
      <title>Python: Serialize and Deserialize Numpy 2D arrays</title>
      <link>https://markhneedham.com/blog/2018/04/07/python-serialize-deserialize-numpy-2d-arrays/</link>
      <pubDate>Sat, 07 Apr 2018 19:38:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/04/07/python-serialize-deserialize-numpy-2d-arrays/</guid>
      <description>I&amp;#8217;ve been playing around with saving and loading scikit-learn models and needed to serialize and deserialize Numpy arrays as part of the process.
 I could use pickle but that seems a bit overkill so I decided instead to save the byte representation of the array. We can get that representation by calling the tobytes method on a Numpy array:
 import numpy as np &amp;gt;&amp;gt;&amp;gt; np.array([ [1,2,3], [4,5,6], [7,8,9] ]) array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) &amp;gt;&amp;gt;&amp;gt; np.</description>
    </item>
    
    <item>
      <title>Python 3: Converting a list to a dictionary with dictionary comprehensions</title>
      <link>https://markhneedham.com/blog/2018/04/02/python-list-to-dictionary-comprehensions/</link>
      <pubDate>Mon, 02 Apr 2018 04:20:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/04/02/python-list-to-dictionary-comprehensions/</guid>
      <description>When coding in Python I often find myself with lists containing key/value pairs that I want to convert to a dictionary.
 In a recent example I had the following code:
 values = [{&#39;key&#39;: &#39;name&#39;, &#39;value&#39;: &#39;Mark&#39;}, {&#39;key&#39;: &#39;age&#39;, &#39;value&#39;: 34}]   And I wanted to create a dictionary that had the keys name and age and their respective values. The easiest way to convert this list to a dictionary is to iterate over the list and construct the dictionary key by key:</description>
    </item>
    
    <item>
      <title>GitHub: Getting the download count for a release</title>
      <link>https://markhneedham.com/blog/2018/03/23/github-release-download-count/</link>
      <pubDate>Fri, 23 Mar 2018 15:49:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/23/github-release-download-count/</guid>
      <description>At Neo4j we distribute several of our Developer Relations projects via GitHub Releases so I was curious whether there was a way to see how many people had downloaded them.
 I found an article explaining how to do it on v3 of the GitHub API, but I&amp;#8217;ve got used to the v4 GraphQL API and I&amp;#8217;m not going back! Thankfully it&amp;#8217;s not too difficult to figure out.
 GitHub let you explore the API via the GitHub GraphQL Explorer and the following query gets us the information we require:</description>
    </item>
    
    <item>
      <title>Neo4j Desktop: undefined: Unable to extract host from undefined</title>
      <link>https://markhneedham.com/blog/2018/03/20/neo4j-undefined-unable-to-extract-host-from-undefined/</link>
      <pubDate>Tue, 20 Mar 2018 17:51:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/20/neo4j-undefined-unable-to-extract-host-from-undefined/</guid>
      <description>During a training session I facilitated today one of the attendees got the following error message while trying to execute a query inside the Neo4j Desktop.
   This error message happens if we try to run a query when the database hasn&amp;#8217;t been started, and would usually be accompanied by this screen:
   On this occasion that wasn&amp;#8217;t happening, but we can easily fix it by going back to the project screen and starting the database:</description>
    </item>
    
    <item>
      <title>Neo4j: Using the Neo4j Import Tool with the Neo4j Desktop</title>
      <link>https://markhneedham.com/blog/2018/03/19/neo4j-using-neo4j-import-tool-with-neo4j-desktop/</link>
      <pubDate>Mon, 19 Mar 2018 21:38:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/19/neo4j-using-neo4j-import-tool-with-neo4j-desktop/</guid>
      <description>Last week as part of a modelling and import webinar I showed how to use the Neo4j Import Tool to create a graph of the Yelp Open Dataset:
  Afterwards I realised that I didn&amp;#8217;t show how to use the tool if you already have an existing database in place so this post will show how to do that.
 Imagine we have a Neo4j Desktop project that looks like this:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Neo.ClientError.Statement.TypeError: Don&#39;t know how to add Double and String</title>
      <link>https://markhneedham.com/blog/2018/03/14/neo4j-cypher-neo-clienterror-statement-typeerror-dont-know-add-double-string/</link>
      <pubDate>Wed, 14 Mar 2018 16:53:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/14/neo4j-cypher-neo-clienterror-statement-typeerror-dont-know-add-double-string/</guid>
      <description>RETURN toFloat(&amp;quot;1.0&amp;quot;) + &amp;quot; Mark&amp;quot; ╒══════════╕ │&amp;quot;result&amp;quot; │ ╞══════════╡ │&amp;quot;1.0 Mark&amp;quot;│ └──────────┘ RETURN toFloat(&amp;quot;1.0&amp;quot;) + &amp;quot; Mark&amp;quot; Neo.ClientError.Statement.TypeError: Don&#39;t know how to add `Double(1.000000e+00)` and `String(&amp;quot; Mark&amp;quot;)` CYPHER 3.2 RETURN toFloat(&amp;quot;1.0&amp;quot;) + &amp;quot; Mark&amp;quot; AS result RETURN toString(toFloat(&amp;quot;1.0&amp;quot;)) + &amp;quot; Mark&amp;quot; AS result </description>
    </item>
    
    <item>
      <title>Yelp: Reverse geocoding businesses to extract detailed location information</title>
      <link>https://markhneedham.com/blog/2018/03/14/yelp-reverse-geocoding-businesses-extract-detailed-location-information/</link>
      <pubDate>Wed, 14 Mar 2018 08:53:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/14/yelp-reverse-geocoding-businesses-extract-detailed-location-information/</guid>
      <description>$ cat dataset/business.json | head -n1 | jq { &amp;#34;business_id&amp;#34;: &amp;#34;FYWN1wneV18bWNgQjJ2GNg&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Dental by Design&amp;#34;, &amp;#34;neighborhood&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;address&amp;#34;: &amp;#34;4855 E Warner Rd, Ste B9&amp;#34;, &amp;#34;city&amp;#34;: &amp;#34;Ahwatukee&amp;#34;, &amp;#34;state&amp;#34;: &amp;#34;AZ&amp;#34;, &amp;#34;postal_code&amp;#34;: &amp;#34;85044&amp;#34;, &amp;#34;latitude&amp;#34;: 33.3306902, &amp;#34;longitude&amp;#34;: -111.9785992, &amp;#34;stars&amp;#34;: 4, &amp;#34;review_count&amp;#34;: 22, &amp;#34;is_open&amp;#34;: 1, &amp;#34;attributes&amp;#34;: { &amp;#34;AcceptsInsurance&amp;#34;: true, &amp;#34;ByAppointmentOnly&amp;#34;: true, &amp;#34;BusinessAcceptsCreditCards&amp;#34;: true }, &amp;#34;categories&amp;#34;: [ &amp;#34;Dentists&amp;#34;, &amp;#34;General Dentistry&amp;#34;, &amp;#34;Health &amp;amp; Medical&amp;#34;, &amp;#34;Oral Surgeons&amp;#34;, &amp;#34;Cosmetic Dentists&amp;#34;, &amp;#34;Orthodontists&amp;#34; ], &amp;#34;hours&amp;#34;: { &amp;#34;Friday&amp;#34;: &amp;#34;7:30-17:00&amp;#34;, &amp;#34;Tuesday&amp;#34;: &amp;#34;7:30-17:00&amp;#34;, &amp;#34;Thursday&amp;#34;: &amp;#34;7:30-17:00&amp;#34;, &amp;#34;Wednesday&amp;#34;: &amp;#34;7:30-17:00&amp;#34;, &amp;#34;Monday&amp;#34;: &amp;#34;7:30-17:00&amp;#34; } } import reverse_geocoder as rg lat_longs = { &amp;#34;FYWN1wneV18bWNgQjJ2GNg&amp;#34;: (33.</description>
    </item>
    
    <item>
      <title>Running asciidoctor-pdf on TeamCity</title>
      <link>https://markhneedham.com/blog/2018/03/13/running-asciidoctor-pdf-teamcity/</link>
      <pubDate>Tue, 13 Mar 2018 21:57:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/13/running-asciidoctor-pdf-teamcity/</guid>
      <description>source &amp;#39;https://rubygems.org&amp;#39; gem &amp;#39;prawn&amp;#39; gem &amp;#39;addressable&amp;#39; gem &amp;#39;prawn-svg&amp;#39; gem &amp;#39;prawn-templates&amp;#39; gem &amp;#39;asciidoctor-pdf&amp;#39; bundle install --path vendor/ bundle package export PATH=&amp;#34;$PATH:/home/teamcity/.gem/ruby/2.3.0/bin&amp;#34; mkdir $PWD/gems export GEM_HOME=&amp;#34;$PWD/gems&amp;#34; gem install bundler --user-install --no-rdoc --no-ri &amp;amp;&amp;amp; bundle install ./vendor/ruby/2.3.0/bin/asciidoctor-pdf -a allow-uri-read blog.adoc </description>
    </item>
    
    <item>
      <title>Neo4j Import: java.lang.IllegalStateException: Mixing specified and unspecified group belongings in a single import isn&#39;t supported</title>
      <link>https://markhneedham.com/blog/2018/03/07/neo4j-import-java-lang-illegalstateexception-mixing-specified-unspecified-group-belongings-single-import-isnt-supported/</link>
      <pubDate>Wed, 07 Mar 2018 03:11:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/03/07/neo4j-import-java-lang-illegalstateexception-mixing-specified-unspecified-group-belongings-single-import-isnt-supported/</guid>
      <description>$ cat people_header.csv name:ID(Person) $ cat people.csv &amp;#34;Mark&amp;#34; &amp;#34;Michael&amp;#34; &amp;#34;Ryan&amp;#34; &amp;#34;Will&amp;#34; &amp;#34;Jennifer&amp;#34; &amp;#34;Karin&amp;#34; $ cat companies_header.csv name:ID(Company) $ cat companies.csv &amp;#34;Neo4j&amp;#34; $ ./bin/neo4j-admin import \ 	--database=blog.db \ 	--mode=csv \ 	--nodes:Person people_header.csv,people.csv \ 	--nodes:Company companies_heade.csv,companies.csv Neo4j version: 3.3.3 Importing the contents of these files into /Users/markneedham/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-b59e33d5-2060-4a5d-bdb8-0b9f6dc919fa/installation-3.3.3/data/databases/blog.db: Nodes: :Person /Users/markneedham/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-b59e33d5-2060-4a5d-bdb8-0b9f6dc919fa/installation-3.3.3/people_header.csv /Users/markneedham/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-b59e33d5-2060-4a5d-bdb8-0b9f6dc919fa/installation-3.3.3/people.csv :Company /Users/markneedham/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-b59e33d5-2060-4a5d-bdb8-0b9f6dc919fa/installation-3.3.3/companies.csv ... Import error: Mixing specified and unspecified group belongings in a single import isn&amp;#39;t supported Caused by:Mixing specified and unspecified group belongings in a single import isn&amp;#39;t supported java.</description>
    </item>
    
    <item>
      <title>Asciidoctor: Creating a macro</title>
      <link>https://markhneedham.com/blog/2018/02/19/asciidoctor-creating-macro/</link>
      <pubDate>Mon, 19 Feb 2018 20:51:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/02/19/asciidoctor-creating-macro/</guid>
      <description>featured::https://s3.amazonaws.com/dev.assets.neo4j.com/wp-content/uploads/20180202004247/this-week-in-neo4j-3-february-2018.jpg[name=&amp;#34;Suellen Stringer-Hye&amp;#34;] RUBY_ENGINE == &amp;#39;opal&amp;#39; ? (require &amp;#39;featured-macro/extension&amp;#39;) : (require_relative &amp;#39;featured-macro/extension&amp;#39;) Asciidoctor::Extensions.register do if (@document.basebackend? &amp;#39;html&amp;#39;) &amp;amp;&amp;amp; (@document.safe &amp;lt; SafeMode::SECURE) block_macro FeaturedBlockMacro end end require &amp;#39;asciidoctor/extensions&amp;#39; unless RUBY_ENGINE == &amp;#39;opal&amp;#39; include ::Asciidoctor class FeaturedBlockMacro &amp;lt; Extensions::BlockMacroProcessor use_dsl named :featured def process parent, target, attrs name = attrs[&amp;#34;name&amp;#34;] html = %(&amp;lt;div class=&amp;#34;imageblock image-heading&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;content&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;#{target}&amp;#34; alt=&amp;#34;#{name}- This Week’s Featured Community Member&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;400&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;p style=&amp;#34;font-size: .8em; line-height: 1.</description>
    </item>
    
    <item>
      <title>Tensorflow: Kaggle Spooky Authors Bag of Words Model</title>
      <link>https://markhneedham.com/blog/2018/01/29/tensorflow-kaggle-spooky-authors-bag-words-model/</link>
      <pubDate>Mon, 29 Jan 2018 06:51:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/01/29/tensorflow-kaggle-spooky-authors-bag-words-model/</guid>
      <description>from __future__ import absolute_import from __future__ import division from __future__ import print_function import numpy as np import pandas as pd import tensorflow as tf from sklearn import preprocessing from sklearn.model_selection import train_test_split EMBEDDING_SIZE = 50 MAX_LABEL = 3 WORDS_FEATURE = &amp;#39;words&amp;#39; # Name of the input words feature. def bag_of_words_model(features, labels, mode): bow_column = tf.feature_column.categorical_column_with_identity(WORDS_FEATURE, num_buckets=n_words) bow_embedding_column = tf.feature_column.embedding_column(bow_column, dimension=EMBEDDING_SIZE) bow = tf.feature_column.input_layer(features, feature_columns=[bow_embedding_column]) logits = tf.layers.dense(bow, MAX_LABEL, activation=None) return create_estimator_spec(logits=logits, labels=labels, mode=mode) def create_estimator_spec(logits, labels, mode): predicted_classes = tf.</description>
    </item>
    
    <item>
      <title>Asciidoc to Asciidoc: Exploding includes</title>
      <link>https://markhneedham.com/blog/2018/01/23/asciidoc-asciidoc-exploding-includes/</link>
      <pubDate>Tue, 23 Jan 2018 21:11:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/01/23/asciidoc-asciidoc-exploding-includes/</guid>
      <description>$ asciidoctor --help Usage: asciidoctor [OPTION]... FILE... Translate the AsciiDoc source FILE or FILE(s) into the backend output format (e.g., HTML 5, DocBook 4.5, etc.) By default, the output is written to a file with the basename of the source file and the appropriate extension. Example: asciidoctor -b html5 source.asciidoc -b, --backend BACKEND set output format backend: [html5, xhtml5, docbook5, docbook45, manpage] (default: html5) additional backends are supported via extensions (e.</description>
    </item>
    
    <item>
      <title>Strava: Calculating the similarity of two runs</title>
      <link>https://markhneedham.com/blog/2018/01/18/strava-calculating-similarity-two-runs/</link>
      <pubDate>Thu, 18 Jan 2018 23:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2018/01/18/strava-calculating-similarity-two-runs/</guid>
      <description>import polyline polyline.decode(&amp;#39;u{~vFvyys@fS]&amp;#39;) [(40.63179, -8.65708), (40.62855, -8.65693)] The sequences are &amp;ldquo;warped&amp;rdquo; non-linearly in the time dimension to determine a measure of their similarity independent of certain non-linear variations in the time dimension.
import os import polyline import requests from fastdtw import fastdtw token = os.environ[&amp;#34;TOKEN&amp;#34;] headers = {&amp;#39;Authorization&amp;#39;: &amp;#34;Bearer {0}&amp;#34;.format(token)} def find_points(activity_id): r = requests.get(&amp;#34;https://www.strava.com/api/v3/activities/{0}&amp;#34;.format(activity_id), headers=headers) response = r.json() line = response[&amp;#34;map&amp;#34;][&amp;#34;polyline&amp;#34;] return polyline.decode(line) from scipy.spatial.distance import euclidean activity1_id = 1361109741 activity2_id = 1346460542 distance, path = fastdtw(find_points(activity1_id), find_points(activity2_id), dist=euclidean) &amp;gt;&amp;gt;&amp;gt; print(distance) 2.</description>
    </item>
    
    <item>
      <title>Leaflet: Fit polyline in view</title>
      <link>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</link>
      <pubDate>Sun, 31 Dec 2017 17:35:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</guid>
      <description>&amp;lt;div id=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34;/&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css&amp;#34;/&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;); L.tileLayer(&amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, {maxZoom: 18,}).addTo(map); var rawPoints = [ { &amp;#34;latitude&amp;#34;: 51.357874010145395, &amp;#34;longitude&amp;#34;: -0.198045110923591 }, { &amp;#34;latitude&amp;#34;: 51.3573858289394, &amp;#34;longitude&amp;#34;: -0.19787754933584795 }, { &amp;#34;latitude&amp;#34;: 51.35632791810057, &amp;#34;longitude&amp;#34;: -0.19750254941422557 }, { &amp;#34;latitude&amp;#34;: 51.35553240304241, &amp;#34;longitude&amp;#34;: -0.197232163894512 }, { &amp;#34;latitude&amp;#34;: 51.35496267279901, &amp;#34;longitude&amp;#34;: -0.1970247338143316 }, { &amp;#34;latitude&amp;#34;: 51.35388700570004, &amp;#34;longitude&amp;#34;: -0.19666483094752069 }, { &amp;#34;latitude&amp;#34;: 51.</description>
    </item>
    
    <item>
      <title>Ethereum Hello World Example using solc and web3</title>
      <link>https://markhneedham.com/blog/2017/12/28/ethereum-hello-world-example-using-solc-and-web3/</link>
      <pubDate>Thu, 28 Dec 2017 11:03:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/28/ethereum-hello-world-example-using-solc-and-web3/</guid>
      <description>npm install web3 npm install abi-decoder npm install ethereumjs-testrpc pragma solidity ^0.4.0; contract Token { mapping (address =&amp;gt; uint) public balances; function Token() { balances[msg.sender] = 1000000; } function transfer(address _to, uint _amount) { if (balances[msg.sender] &amp;lt; _amount) { throw; } balances[msg.sender] -= _amount; balances[_to] += _amount; } } $ ./node_modules/.bin/testrpc --gasPrice 20000 EthereumJS TestRPC v6.0.3 (ganache-core: 2.0.2) Listening on localhost:8545 const fs = require(&amp;#34;fs&amp;#34;), abiDecoder = require(&amp;#39;abi-decoder&amp;#39;), Web3 = require(&amp;#39;web3&amp;#39;), solc = require(&amp;#39;solc&amp;#39;); const input = fs.</description>
    </item>
    
    <item>
      <title>Morning Pages: What should I write about?</title>
      <link>https://markhneedham.com/blog/2017/12/27/morning-pages-write/</link>
      <pubDate>Wed, 27 Dec 2017 23:28:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/27/morning-pages-write/</guid>
      <description></description>
    </item>
    
    <item>
      <title>scikit-learn: Using GridSearch to tune the hyper-parameters of VotingClassifier</title>
      <link>https://markhneedham.com/blog/2017/12/10/scikit-learn-using-gridsearch-tune-hyper-parameters-votingclassifier/</link>
      <pubDate>Sun, 10 Dec 2017 07:55:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/10/scikit-learn-using-gridsearch-tune-hyper-parameters-votingclassifier/</guid>
      <description>import pandas as pd from sklearn import linear_model from sklearn.ensemble import VotingClassifier from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline Y_COLUMN = &amp;#34;author&amp;#34; TEXT_COLUMN = &amp;#34;text&amp;#34; unigram_log_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer()), (&amp;#39;logreg&amp;#39;, linear_model.LogisticRegression()) ]) ngram_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(ngram_range=(1, 2))), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) tfidf_pipe = Pipeline([ (&amp;#39;tfidf&amp;#39;, TfidfVectorizer(min_df=3, max_features=None, strip_accents=&amp;#39;unicode&amp;#39;, analyzer=&amp;#39;word&amp;#39;, token_pattern=r&amp;#39;\w{1,}&amp;#39;, ngram_range=(1, 3), use_idf=1, smooth_idf=1, sublinear_tf=1, stop_words=&amp;#39;english&amp;#39;)), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) classifiers = [ (&amp;#34;ngram&amp;#34;, ngram_pipe), (&amp;#34;unigram&amp;#34;, unigram_log_pipe), (&amp;#34;tfidf&amp;#34;, tfidf_pipe), ] mixed_pipe = Pipeline([ (&amp;#34;voting&amp;#34;, VotingClassifier(classifiers, voting=&amp;#34;soft&amp;#34;)) ]) from sklearn.</description>
    </item>
    
    <item>
      <title>scikit-learn: Building a multi class classification ensemble</title>
      <link>https://markhneedham.com/blog/2017/12/05/scikit-learn-building-multi-class-classification-ensemble/</link>
      <pubDate>Tue, 05 Dec 2017 22:19:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/05/scikit-learn-building-multi-class-classification-ensemble/</guid>
      <description>from sklearn import linear_model from sklearn.ensemble import VotingClassifier from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline ngram_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(ngram_range=(1, 2))), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) unigram_log_pipe = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer()), (&amp;#39;logreg&amp;#39;, linear_model.LogisticRegression()) ]) classifiers = [ (&amp;#34;ngram&amp;#34;, ngram_pipe), (&amp;#34;unigram&amp;#34;, unigram_log_pipe), ] mixed_pipe = Pipeline([ (&amp;#34;voting&amp;#34;, VotingClassifier(classifiers, voting=&amp;#34;soft&amp;#34;)) ]) import pandas as pd import numpy as np from sklearn.model_selection import StratifiedKFold from sklearn import metrics Y_COLUMN = &amp;#34;author&amp;#34; TEXT_COLUMN = &amp;#34;text&amp;#34; def test_pipeline(df, nlp_pipeline): y = df[Y_COLUMN].</description>
    </item>
    
    <item>
      <title>Python: Combinations of values on and off</title>
      <link>https://markhneedham.com/blog/2017/12/03/python-combinations-values-off/</link>
      <pubDate>Sun, 03 Dec 2017 17:23:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/03/python-combinations-values-off/</guid>
      <description>0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 1 1 1 1 1 &amp;gt;&amp;gt;&amp;gt; &amp;#34;{0:0b}&amp;#34;.format(1).zfill(3) &amp;#39;001&amp;#39; &amp;gt;&amp;gt;&amp;gt; &amp;#34;{0:0b}&amp;#34;.format(5).zfill(3) &amp;#39;101&amp;#39; &amp;gt;&amp;gt;&amp;gt; &amp;#34;{0:0b}&amp;#34;.format(6).zfill(3) &amp;#39;110&amp;#39; &amp;gt;&amp;gt;&amp;gt; [int(x) for x in list(&amp;#34;{0:0b}&amp;#34;.format(1).zfill(3))] [0, 0, 1] def combinations_on_off(num_classifiers): return [[int(x) for x in list(&amp;#34;{0:0b}&amp;#34;.format(i).zfill(num_classifiers))] for i in range(1, 2 ** num_classifiers)] &amp;gt;&amp;gt;&amp;gt; for combination in combinations_on_off(3): print(combination) [0, 0, 1] [0, 1, 0] [0, 1, 1] [1, 0, 0] [1, 0, 1] [1, 1, 0] [1, 1, 1] &amp;gt;&amp;gt;&amp;gt; for combination in combinations_on_off(4): print(combination) [0, 0, 0, 1] [0, 0, 1, 0] [0, 0, 1, 1] [0, 1, 0, 0] [0, 1, 0, 1] [0, 1, 1, 0] [0, 1, 1, 1] [1, 0, 0, 0] [1, 0, 0, 1] [1, 0, 1, 0] [1, 0, 1, 1] [1, 1, 0, 0] [1, 1, 0, 1] [1, 1, 1, 0] [1, 1, 1, 1] </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Property values can only be of primitive types or arrays thereof.</title>
      <link>https://markhneedham.com/blog/2017/12/01/neo4j-cypher-property-values-can-primitive-types-arrays-thereof/</link>
      <pubDate>Fri, 01 Dec 2017 22:09:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/01/neo4j-cypher-property-values-can-primitive-types-arrays-thereof/</guid>
      <description>CREATE (:Person {id: [1, &amp;quot;mark&amp;quot;, 2.0]}) Neo.ClientError.Statement.TypeError Property values can only be of primitive types or arrays thereof. CREATE (:Person {id: [value in [1, &amp;quot;mark&amp;quot;, 2.0] | toString(value)]}) Added 1 label, created 1 node, set 1 property, completed after 4 ms. </description>
    </item>
    
    <item>
      <title>Python: Learning about defaultdict&#39;s handling of missing keys</title>
      <link>https://markhneedham.com/blog/2017/12/01/python-learning-defaultdicts-handling-missing-keys/</link>
      <pubDate>Fri, 01 Dec 2017 15:26:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/01/python-learning-defaultdicts-handling-missing-keys/</guid>
      <description>vocabulary = defaultdict() vocabulary.default_factory = vocabulary.__len__ &amp;gt;&amp;gt;&amp;gt; from collections import defaultdict &amp;gt;&amp;gt;&amp;gt; vocabulary = defaultdict() &amp;gt;&amp;gt;&amp;gt; vocabulary.default_factory = vocabulary.__len__ &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;foo&amp;#34;] 0 &amp;gt;&amp;gt;&amp;gt; vocabulary.items() dict_items([(&amp;#39;foo&amp;#39;, 0)]) &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;bar&amp;#34;] 1 &amp;gt;&amp;gt;&amp;gt; vocabulary.items() dict_items([(&amp;#39;foo&amp;#39;, 0), (&amp;#39;bar&amp;#39;, 1)]) &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;baz&amp;#34;] = &amp;#34;Mark &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;baz&amp;#34;] &amp;#39;Mark&amp;#39; &amp;gt;&amp;gt;&amp;gt; vocabulary[&amp;#34;python&amp;#34;] 3 &amp;gt;&amp;gt;&amp;gt; vocabulary.items() dict_items([(&amp;#39;foo&amp;#39;, 0), (&amp;#39;bar&amp;#39;, 1), (&amp;#39;baz&amp;#39;, &amp;#39;Mark&amp;#39;), (&amp;#39;python&amp;#39;, 3)]) &amp;#34;&amp;#34;&amp;#34; __missing__(key) # Called by __getitem__ for missing key; pseudo-code: if self.default_factory is None: raise KeyError((key,)) self[key] = value = self.</description>
    </item>
    
    <item>
      <title>scikit-learn: Creating a matrix of named entity counts</title>
      <link>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</link>
      <pubDate>Wed, 29 Nov 2017 23:01:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/29/scikit-learn-creating-a-matrix-of-named-entity-counts/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; from polyglot.text import Text &amp;gt;&amp;gt;&amp;gt; doc = &amp;#34;My name is David Beckham. Hello from London, England&amp;#34; &amp;gt;&amp;gt;&amp;gt; Text(doc, hint_language_code=&amp;#34;en&amp;#34;).entities [I-PER([&amp;#39;David&amp;#39;, &amp;#39;Beckham&amp;#39;]), I-LOC([&amp;#39;London&amp;#39;]), I-LOC([&amp;#39;England&amp;#39;])] &amp;gt;&amp;gt;&amp;gt; [&amp;#34;_&amp;#34;.join(entity) for entity in Text(doc, hint_language_code=&amp;#34;en&amp;#34;).entities] [&amp;#39;David_Beckham&amp;#39;, &amp;#39;London&amp;#39;, &amp;#39;England&amp;#39;] from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline nlp_pipeline = Pipeline([ (&amp;#39;cv&amp;#39;, CountVectorizer(), (&amp;#39;mnb&amp;#39;, MultinomialNB()) ]) ... # Train and Test the model ... entities = {} def analyze(doc): if doc not in entities: entities[doc] = [&amp;#34;_&amp;#34;.</description>
    </item>
    
    <item>
      <title>Python: polyglot - ModuleNotFoundError: No module named &#39;icu&#39;</title>
      <link>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</link>
      <pubDate>Tue, 28 Nov 2017 19:52:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/28/python-polyglot-modulenotfounderror-no-module-named-icu/</guid>
      <description>$ pip install polyglot ImportError: No module named &amp;#39;icu&amp;#39; brew install icu4c export ICU_VERSION=58 export PYICU_INCLUDES=/usr/local/Cellar/icu4c/58.2/include export PYICU_LFLAGS=-L/usr/local/Cellar/icu4c/58.2/lib pip install pyicu $ ls -lh /usr/local/Cellar/icu4c/ total 0 drwxr-xr-x 12 markneedham admin 408B 28 Nov 06:12 58.2 pip install pycld2 pip install morfessor polyglot download embeddings2.de polyglot download ner2.de polyglot download embeddings2.en polyglot download ner2.en </description>
    </item>
    
    <item>
      <title>Python 3: TypeError: unsupported format string passed to numpy.ndarray.__format__</title>
      <link>https://markhneedham.com/blog/2017/11/19/python-3-typeerror-unsupported-format-string-passed-to-numpy-ndarray-__format__/</link>
      <pubDate>Sun, 19 Nov 2017 07:16:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/19/python-3-typeerror-unsupported-format-string-passed-to-numpy-ndarray-__format__/</guid>
      <description>Iteration Training set observations Testing set observations --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &amp;lt;ipython-input-28-007cbab507e3&amp;gt; in &amp;lt;module&amp;gt;() 6 print(&amp;#39;{} {:^61} {}&amp;#39;.format(&amp;#39;Iteration&amp;#39;, &amp;#39;Training set observations&amp;#39;, &amp;#39;Testing set observations&amp;#39;)) 7 for iteration, data in enumerate(kf, start=1): ----&amp;gt; 8 print(&amp;#39;{0:^9} {1} {2:^25}&amp;#39;.format(iteration, data[0], data[1])) TypeError: unsupported format string passed to numpy.ndarray.__format__ &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; &amp;#34;{:9}&amp;#34;.format(np.array([1,2,3])) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; TypeError: unsupported format string passed to numpy.</description>
    </item>
    
    <item>
      <title>Kubernetes: Copy a dataset to a StatefulSet&#39;s PersistentVolume</title>
      <link>https://markhneedham.com/blog/2017/11/18/kubernetes-copy-a-dataset-to-a-statefulsets-persistentvolume/</link>
      <pubDate>Sat, 18 Nov 2017 12:44:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/18/kubernetes-copy-a-dataset-to-a-statefulsets-persistentvolume/</guid>
      <description>$ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE datadir-neo-helm-neo4j-core-0 Bound pvc-043efa91-cc54-11e7-bfa5-080027ab9eac 10Gi RWO standard 45s datadir-neo-helm-neo4j-core-1 Bound pvc-1737755a-cc54-11e7-bfa5-080027ab9eac 10Gi RWO standard 13s datadir-neo-helm-neo4j-core-2 Bound pvc-18696bfd-cc54-11e7-bfa5-080027ab9eac 10Gi RWO standard 11s $ kubectl get pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pvc-043efa91-cc54-11e7-bfa5-080027ab9eac 10Gi RWO Delete Bound default/datadir-neo-helm-neo4j-core-0 standard 41m pvc-1737755a-cc54-11e7-bfa5-080027ab9eac 10Gi RWO Delete Bound default/datadir-neo-helm-neo4j-core-1 standard 40m pvc-18696bfd-cc54-11e7-bfa5-080027ab9eac 10Gi RWO Delete Bound default/datadir-neo-helm-neo4j-core-2 standard 40m #!</description>
    </item>
    
    <item>
      <title>Kubernetes 1.8: Using Cronjobs to take Neo4j backups</title>
      <link>https://markhneedham.com/blog/2017/11/17/kubernetes-1-8-using-cronjobs-take-neo4j-backups/</link>
      <pubDate>Fri, 17 Nov 2017 18:10:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/17/kubernetes-1-8-using-cronjobs-take-neo4j-backups/</guid>
      <description>minikube start --memory 8192 helm init &amp;amp;&amp;amp; kubectl rollout status -w deployment/tiller-deploy --namespace=kube-system helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/ helm install incubator/neo4j --name neo-helm --wait --set authEnabled=false,core.extraVars.NEO4J_dbms_backup_address=0.0.0.0:6362 kubectl exec neo-helm-neo4j-core-0 \  -- bin/cypher-shell --format verbose \  &amp;#34;CALL dbms.cluster.overview() YIELD id, role RETURN id, role&amp;#34; +-----------------------------------------------------+ | id | role | +-----------------------------------------------------+ | &amp;#34;0b3bfe6c-6a68-4af5-9dd2-e96b564df6e5&amp;#34; | &amp;#34;LEADER&amp;#34; | | &amp;#34;09e9bee8-bdc5-4e95-926c-16ea8213e6e7&amp;#34; | &amp;#34;FOLLOWER&amp;#34; | | &amp;#34;859b9b56-9bfc-42ae-90c3-02cedacfe720&amp;#34; | &amp;#34;FOLLOWER&amp;#34; | +-----------------------------------------------------+ kubectl exec neo-helm-neo4j-core-0 \  -- bin/cypher-shell --format verbose \  &amp;#34;UNWIND range(0,1000) AS id CREATE (:Person {id: id})&amp;#34; 0 rows available after 653 ms, consumed after another 0 ms Added 1001 nodes, Set 1001 properties, Added 1001 labels kind: PersistentVolumeClaim apiVersion: v1 metadata: name: backupdir-neo4j labels: app: neo4j-backup spec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi --- apiVersion: batch/v1beta1 kind: CronJob metadata: name: neo4j-backup spec: schedule: &amp;#34;*/1 * * * *&amp;#34; jobTemplate: spec: template: spec: volumes: - name: backupdir-neo4j persistentVolumeClaim: claimName: backupdir-neo4j containers: - name: neo4j-backup image: neo4j:3.</description>
    </item>
    
    <item>
      <title>Neo4j Browser: Expected entity id to be an integral value</title>
      <link>https://markhneedham.com/blog/2017/11/06/neo4j-browser-expected-entity-id-integral-value/</link>
      <pubDate>Mon, 06 Nov 2017 16:17:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/11/06/neo4j-browser-expected-entity-id-integral-value/</guid>
      <description>unwind range(0,1000) AS id create (:Person {id: id}) :param ids: [0] match (p:Person) where p.id in {ids} return p ╒════════╕ │&amp;quot;p&amp;quot; │ ╞════════╡ │{&amp;quot;id&amp;quot;:0}│ └────────┘ match (p:Person) where id(p) in {ids} return p Neo.ClientError.Statement.TypeError Expected entity id to be an integral value match (p:Person) where id(p) in [id in {ids} | toInteger(id)] return p ╒════════╕ │&amp;quot;p&amp;quot; │ ╞════════╡ │{&amp;quot;id&amp;quot;:0}│ └────────┘ </description>
    </item>
    
    <item>
      <title>Neo4j: Traversal query timeout</title>
      <link>https://markhneedham.com/blog/2017/10/31/neo4j-traversal-query-timeout/</link>
      <pubDate>Tue, 31 Oct 2017 21:43:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/31/neo4j-traversal-query-timeout/</guid>
      <description>StandardExpander orderedExpander = new OrderedByTypeExpander() .add( RelationshipType.withName( &amp;#34;CONNECTS&amp;#34; ), Direction.BOTH ); PathFinder&amp;lt;Path&amp;gt; shortestPathFinder = GraphAlgoFactory.shortestPath( expander, 250 ); ... public class TimeConstrainedExpander implements PathExpander { private final StandardExpander expander; private final long startTime; private final Clock clock; private int pathsExpanded = 0; private long timeLimitInMillis; public TimeConstrainedExpander( StandardExpander expander, Clock clock, long timeLimitInMillis ) { this.expander = expander; this.clock = clock; this.startTime = clock.instant().toEpochMilli(); this.timeLimitInMillis = timeLimitInMillis; } @Override public Iterable&amp;lt;Relationship&amp;gt; expand( Path path, BranchState state ) { long timeSoFar = clock.</description>
    </item>
    
    <item>
      <title>Kubernetes: Simple example of pod running</title>
      <link>https://markhneedham.com/blog/2017/10/21/kubernetes-simple-example-pod-running/</link>
      <pubDate>Sat, 21 Oct 2017 10:06:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/21/kubernetes-simple-example-pod-running/</guid>
      <description>kind: Pod apiVersion: v1 metadata: name: marks-dummy-pod spec: containers: - name: marks-dummy-pod image: ubuntu restartPolicy: Never $ kubectl apply -f pod_no_while.yaml pod &amp;#34;marks-dummy-pod&amp;#34; created $ kubectl get pods No resources found, use --show-all to see completed objects. $ kubectl get pods --show-all NAME READY STATUS RESTARTS AGE marks-dummy-pod 0/1 Completed 0 1m kind: Pod apiVersion: v1 metadata: name: marks-dummy-pod spec: containers: - name: marks-dummy-pod image: ubuntu command: [&amp;#34;/bin/bash&amp;#34;, &amp;#34;-ec&amp;#34;, &amp;#34;while :; do echo &amp;#39;.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Deleting duplicate nodes</title>
      <link>https://markhneedham.com/blog/2017/10/06/neo4j-cypher-deleting-duplicate-nodes/</link>
      <pubDate>Fri, 06 Oct 2017 16:13:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/10/06/neo4j-cypher-deleting-duplicate-nodes/</guid>
      <description>UNWIND range(0, 100) AS id CREATE (p1:Person {id: toInteger(rand() * id)}) MERGE (p2:Person {id: toInteger(rand() * id)}) MERGE (p3:Person {id: toInteger(rand() * id)}) MERGE (p4:Person {id: toInteger(rand() * id)}) CREATE (p1)-[:KNOWS]-&amp;gt;(p2) CREATE (p1)-[:KNOWS]-&amp;gt;(p3) CREATE (p1)-[:KNOWS]-&amp;gt;(p4) Added 173 labels, created 173 nodes, set 173 properties, created 5829 relationships, completed after 408 ms. MATCH (p:Person) WITH p.id as id, collect(p) AS nodes WHERE size(nodes) &amp;gt; 1 RETURN [ n in nodes | n.</description>
    </item>
    
    <item>
      <title>AWS: Spinning up a Neo4j instance with APOC installed</title>
      <link>https://markhneedham.com/blog/2017/09/30/aws-spinning-up-a-neo4j-instance-with-apoc-installed/</link>
      <pubDate>Sat, 30 Sep 2017 21:23:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/30/aws-spinning-up-a-neo4j-instance-with-apoc-installed/</guid>
      <description>#!/bin/bash curl -L https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/3.2.0.3/apoc-3.2.0.3-all.jar -O sudo cp apoc-3.2.0.3-all.jar /var/lib/neo4j/plugins/ $ node neo4j-with-apoc.js Creating a Neo4j server Key pair created. Save this to a file - you&amp;#39;ll need to use it if you want to ssh into the Neo4j server -----BEGIN RSA PRIVATE KEY----- &amp;lt;Private key details&amp;gt; -----END RSA PRIVATE KEY----- Created Group Id:&amp;lt;Group Id&amp;gt; Opened Neo4j ports Instance Id: &amp;lt;Instance Id&amp;gt; Your Neo4j server is now ready! You&amp;#39;ll need to login to the server and change the default password: https://ec2-ip-address.</description>
    </item>
    
    <item>
      <title>Serverless: Building a mini producer/consumer data pipeline with AWS SNS</title>
      <link>https://markhneedham.com/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</link>
      <pubDate>Sat, 30 Sep 2017 07:51:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/30/serverless-building-mini-producerconsumer-data-pipeline-aws-sns/</guid>
      <description>service: marks-blog frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 iamRoleStatements: - Effect: &amp;#39;Allow&amp;#39; Action: - &amp;#34;sns:Publish&amp;#34; Resource: - ${self:custom.BlogTopic} custom: BlogTopic: Fn::Join: - &amp;#34;:&amp;#34; - - arn - aws - sns - Ref: AWS::Region - Ref: AWS::AccountId - marks-blog-topic functions: message-consumer: name: MessageConsumer handler: handler.consumer events: - sns: topicName: marks-blog-topic displayName: Topic to process events message-producer: name: MessageProducer handler: handler.producer events: - schedule: rate(1 day) import boto3 import json import datetime from datetime import timezone def producer(event, context): sns = boto3.</description>
    </item>
    
    <item>
      <title>Serverless: S3 - S3BucketPermissions - Action does not apply to any resource(s) in statement</title>
      <link>https://markhneedham.com/blog/2017/09/29/serverless-s3-s3bucketpermissions-action-does-not-apply-to-any-resources-in-statement/</link>
      <pubDate>Fri, 29 Sep 2017 06:09:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/29/serverless-s3-s3bucketpermissions-action-does-not-apply-to-any-resources-in-statement/</guid>
      <description>const AWS = require(&amp;#34;aws-sdk&amp;#34;); let regionParams = { &amp;#39;region&amp;#39;: &amp;#39;us-east-1&amp;#39; } let s3 = new AWS.S3(regionParams); let s3BucketName = &amp;#34;marks-blog-bucket&amp;#34;; console.log(&amp;#34;Creating bucket: &amp;#34; + s3BucketName); let bucketParams = { Bucket: s3BucketName, ACL: &amp;#34;public-read&amp;#34; }; s3.createBucket(bucketParams).promise() .then(console.log) .catch(console.error); var putObjectParams = { Body: &amp;#34;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello blog!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;, Bucket: s3BucketName, Key: &amp;#34;blog.html&amp;#34; }; s3.putObject(putObjectParams).promise() .then(console.log) .catch(console.error); $ curl --head --silent https://s3.amazonaws.com/marks-blog-bucket/blog.html HTTP/1.1 403 Forbidden x-amz-request-id: 512FE36798C0BE4D x-amz-id-2: O1ELGMJ0jjs11WCrNiVNF2z2ssRgtO4+M4H2QQB5025HjIpC54VId0eKZryYeBYN8Pvb8GsolTQ= Content-Type: application/xml Transfer-Encoding: chunked Date: Fri, 29 Sep 2017 05:42:03 GMT Server: AmazonS3 service: marks-blog frameworkVersion: &amp;#34;&amp;gt;=1.</description>
    </item>
    
    <item>
      <title>Python 3: Create sparklines using matplotlib</title>
      <link>https://markhneedham.com/blog/2017/09/23/python-3-create-sparklines-using-matplotlib/</link>
      <pubDate>Sat, 23 Sep 2017 06:51:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/23/python-3-create-sparklines-using-matplotlib/</guid>
      <description>import matplotlib matplotlib.use(&amp;#34;Agg&amp;#34;) import matplotlib.pyplot as plt import base64 from io import BytesIO def sparkline(data, figsize=(4, 0.25), **kwags): &amp;#34;&amp;#34;&amp;#34; Returns a HTML image tag containing a base64 encoded sparkline style plot &amp;#34;&amp;#34;&amp;#34; data = list(data) fig, ax = plt.subplots(1, 1, figsize=figsize, **kwags) ax.plot(data) for k,v in ax.spines.items(): v.set_visible(False) ax.set_xticks([]) ax.set_yticks([]) plt.plot(len(data) - 1, data[len(data) - 1], &amp;#39;r.&amp;#39;) ax.fill_between(range(len(data)), data, len(data)*[min(data)], alpha=0.1) img = BytesIO() plt.savefig(img, transparent=True, bbox_inches=&amp;#39;tight&amp;#39;) img.seek(0) plt.close() return base64.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Create Cypher map with dynamic keys</title>
      <link>https://markhneedham.com/blog/2017/09/19/neo4j-cypher-create-cypher-map-with-dynamic-keys/</link>
      <pubDate>Tue, 19 Sep 2017 19:30:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/09/19/neo4j-cypher-create-cypher-map-with-dynamic-keys/</guid>
      <description>WITH &amp;quot;a&amp;quot; as dynamicKey, &amp;quot;b&amp;quot; as dynamicValue RETURN { dynamicKey: dynamicValue } AS map ╒══════════════════╕ │&amp;quot;map&amp;quot; │ ╞══════════════════╡ │{&amp;quot;dynamicKey&amp;quot;:&amp;quot;b&amp;quot;}│ └──────────────────┘ CALL dbms.functions() yield name, description WHERE name STARTS WITH &amp;quot;apoc.map.from&amp;quot; RETURN name, description ╒═════════════════════╤═════════════════════════════════════════════════════╕ │&amp;quot;name&amp;quot; │&amp;quot;description&amp;quot; │ ╞═════════════════════╪═════════════════════════════════════════════════════╡ │&amp;quot;apoc.map.fromLists&amp;quot; │&amp;quot;apoc.map.fromLists([keys],[values])&amp;quot; │ ├─────────────────────┼─────────────────────────────────────────────────────┤ │&amp;quot;apoc.map.fromNodes&amp;quot; │&amp;quot;apoc.map.fromNodes(label, property)&amp;quot; │ ├─────────────────────┼─────────────────────────────────────────────────────┤ │&amp;quot;apoc.map.fromPairs&amp;quot; │&amp;quot;apoc.map.fromPairs([[key,value],[key2,value2],...])&amp;quot;│ ├─────────────────────┼─────────────────────────────────────────────────────┤ │&amp;quot;apoc.map.fromValues&amp;quot;│&amp;quot;apoc.map.fromValues([key1,value1,key2,value2,...])&amp;quot; │ └─────────────────────┴─────────────────────────────────────────────────────┘ WITH &amp;quot;a&amp;quot; as dynamicKey, &amp;quot;b&amp;quot; as dynamicValue RETURN apoc.map.fromValues([dynamicKey, dynamicValue]) AS map ╒═════════╕ │&amp;quot;map&amp;quot; │ ╞═════════╡ │{&amp;quot;a&amp;quot;:&amp;quot;b&amp;quot;}│ └─────────┘ WITH &amp;quot;a&amp;quot; as dynamicKey, &amp;quot;b&amp;quot; as dynamicValue RETURN apoc.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Rounding of floating point numbers/BigDecimals</title>
      <link>https://markhneedham.com/blog/2017/08/13/neo4j-cypher-rounding-of-floating-point-numbersbigdecimals/</link>
      <pubDate>Sun, 13 Aug 2017 07:23:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/13/neo4j-cypher-rounding-of-floating-point-numbersbigdecimals/</guid>
      <description>with &amp;quot;8.37&amp;quot; as rawNumeric RETURN toFloat(rawNumeric) * 1000000 AS numeric ╒═════════════════╕ │&amp;quot;numeric&amp;quot; │ ╞═════════════════╡ │8369999.999999999│ └─────────────────┘ $ ls -lh plugins/ total 3664 -rw-r--r--@ 1 markneedham staff 1.8M 9 Aug 09:14 apoc-3.2.0.4-all.jar $ docker run -v $PWD/plugins:/plugins \  -p 7474:7474 \  -p 7687:7687 \  -e NEO4J_AUTH=&amp;#34;none&amp;#34; \  neo4j:3.2.3 with &amp;quot;8.37&amp;quot; as rawNumeric RETURN apoc.number.exact.mul(rawNumeric,&amp;quot;1000000&amp;quot;) AS apocConversion ╒════════════════╕ │&amp;quot;apocConversion&amp;quot;│ ╞════════════════╡ │&amp;quot;8370000.00&amp;quot; │ └────────────────┘ with &amp;quot;8.37&amp;quot; as rawNumeric RETURN toFloat(apoc.</description>
    </item>
    
    <item>
      <title>Serverless: AWS HTTP Gateway - 502 Bad Gateway</title>
      <link>https://markhneedham.com/blog/2017/08/11/serverless-aws-http-gateway-502-bad-gateway/</link>
      <pubDate>Fri, 11 Aug 2017 16:01:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/11/serverless-aws-http-gateway-502-bad-gateway/</guid>
      <description>service: http-gateway frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 functions: no-op: name: NoOp handler: handler.noop events: - http: POST noOp def noop(event, context): return &amp;#34;hello&amp;#34; $ serverless deploy Serverless: Packaging service... Serverless: Excluding development dependencies... Serverless: Uploading CloudFormation file to S3... Serverless: Uploading artifacts... Serverless: Uploading service .zip file to S3 (179 B)... Serverless: Validating template... Serverless: Updating Stack... Serverless: Checking Stack update progress... .............. Serverless: Stack update finished.</description>
    </item>
    
    <item>
      <title>Serverless: Python - virtualenv - { &#34;errorMessage&#34;: &#34;Unable to import module &#39;handler&#39;&#34; }</title>
      <link>https://markhneedham.com/blog/2017/08/06/serverless-python-virtualenv-errormessage-unable-import-module-handler/</link>
      <pubDate>Sun, 06 Aug 2017 19:03:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/06/serverless-python-virtualenv-errormessage-unable-import-module-handler/</guid>
      <description>$ npm install serverless $ virtualenv -p python3 a $ . a/bin/activate service: python-starter-template frameworkVersion: &amp;#34;&amp;gt;=1.2.0 &amp;lt;2.0.0&amp;#34; provider: name: aws runtime: python3.6 timeout: 180 functions: starter-function: name: Starter handler: handler.starter import requests def starter(event, context): print(&amp;#34;event:&amp;#34;, event, &amp;#34;context:&amp;#34;, context) r = requests.get(&amp;#34;http://www.google.com&amp;#34;) print(r.status_code) $ pip install requests $ ./node_modules/serverless/bin/serverless invoke local --function starter-function event: {} context: &amp;lt;__main__.FakeLambdaContext object at 0x10bea9a20&amp;gt; 200 null $ ./node_modules/serverless/bin/serverless deploy Serverless: Packaging service... Serverless: Excluding development dependencies.</description>
    </item>
    
    <item>
      <title>AWS Lambda: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory&#39;</title>
      <link>https://markhneedham.com/blog/2017/08/03/aws-lambda-libld-linux-2-bad-elf-interpreter-no-file-directory/</link>
      <pubDate>Thu, 03 Aug 2017 17:24:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/03/aws-lambda-libld-linux-2-bad-elf-interpreter-no-file-directory/</guid>
      <description>b&amp;#39;/bin/sh: ./binary/wkhtmltopdf: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory\n&amp;#39;: Exception Traceback (most recent call last): File &amp;#34;/var/task/handler.py&amp;#34;, line 33, in generate_certificate wkhtmltopdf(local_html_file_name, local_pdf_file_name) File &amp;#34;/var/task/lib/wkhtmltopdf.py&amp;#34;, line 64, in wkhtmltopdf wkhp.render() File &amp;#34;/var/task/lib/wkhtmltopdf.py&amp;#34;, line 56, in render raise Exception(stderr) Exception: b&amp;#39;/bin/sh: ./binary/wkhtmltopdf: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory\n&amp;#39; </description>
    </item>
    
    <item>
      <title>PHP vs Python: Generating a HMAC</title>
      <link>https://markhneedham.com/blog/2017/08/02/php-vs-python-generating-a-hmac/</link>
      <pubDate>Wed, 02 Aug 2017 06:09:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/08/02/php-vs-python-generating-a-hmac/</guid>
      <description>I&amp;rsquo;ve been writing a bit of code to integrate with a ClassMarker webhook, and you&amp;rsquo;re required to check that an incoming request actually came from ClassMarker by checking the value of a base64 hash using HMAC SHA256.
The example in the documentation is written in PHP which I haven&amp;rsquo;t done for about 10 years so I had to figure out how to do the same thing in Python.
$ php -a php &amp;gt; echo base64_encode(hash_hmac(&amp;#34;sha256&amp;#34;, &amp;#34;my data&amp;#34;, &amp;#34;my_secret&amp;#34;, true)); vyniKpNSlxu4AfTgSJImt+j+pRx7v6m+YBobfKsoGhE= import hmac import hashlib import base64 data = &amp;#34;my data&amp;#34;.</description>
    </item>
    
    <item>
      <title>Docker: Building custom Neo4j images on Mac OS X</title>
      <link>https://markhneedham.com/blog/2017/07/26/docker-building-custom-neo4j-images-on-mac-os-x/</link>
      <pubDate>Wed, 26 Jul 2017 22:20:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/26/docker-building-custom-neo4j-images-on-mac-os-x/</guid>
      <description>I sometimes needs to create custom Neo4j Docker images to try things out and wanted to share my work flow, mostly for future Mark but also in case it&amp;rsquo;s useful to someone else.
There&amp;rsquo;s already a docker-neo4j repository so we&amp;rsquo;ll just tweak the files in there to achieve what we want.
$ git clone git@github.com:neo4j/docker-neo4j.git $ cd docker-neo4j If we want to build a Docker image for Neo4j Enterprise Edition we can run the following build target:</description>
    </item>
    
    <item>
      <title>Pandas: ValueError: The truth value of a Series is ambiguous.</title>
      <link>https://markhneedham.com/blog/2017/07/26/pandas-valueerror-the-truth-value-of-a-series-is-ambiguous/</link>
      <pubDate>Wed, 26 Jul 2017 21:41:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/26/pandas-valueerror-the-truth-value-of-a-series-is-ambiguous/</guid>
      <description>import pandas as pd &amp;gt;&amp;gt;&amp;gt; df = pd.DataFrame({&amp;#34;a&amp;#34;: [1,2,3,4,5], &amp;#34;b&amp;#34;: [2,3,4,5,6]}) &amp;gt;&amp;gt;&amp;gt; df a b 0 5 2 1 6 6 2 0 8 3 3 2 4 1 6 &amp;gt;&amp;gt;&amp;gt; divmod(df[&amp;#34;a&amp;#34;], 2)[1] &amp;gt; 0 0 True 1 False 2 True 3 False 4 True Name: a, dtype: bool &amp;gt;&amp;gt;&amp;gt; divmod(df[&amp;#34;b&amp;#34;], 2)[1] &amp;gt; 0 0 False 1 True 2 False 3 True 4 False Name: b, dtype: bool &amp;gt;&amp;gt;&amp;gt; df[&amp;#34;anyOdd&amp;#34;] = (divmod(df[&amp;#34;a&amp;#34;], 2)[1] &amp;gt; 0) or (divmod(df[&amp;#34;b&amp;#34;], 2)[1] &amp;gt; 0) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/Users/markneedham/projects/kaggle/house-prices/a/lib/python3.</description>
    </item>
    
    <item>
      <title>Pandas/scikit-learn: get_dummies test/train sets - ValueError: shapes not aligned</title>
      <link>https://markhneedham.com/blog/2017/07/05/pandasscikit-learn-get_dummies-testtrain-sets-valueerror-shapes-not-aligned/</link>
      <pubDate>Wed, 05 Jul 2017 15:42:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/05/pandasscikit-learn-get_dummies-testtrain-sets-valueerror-shapes-not-aligned/</guid>
      <description>import pandas as pd import numpy as np from sklearn import linear_model train = pd.DataFrame({&amp;#34;letter&amp;#34;:[&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;], &amp;#34;value&amp;#34;: [1, 2, 3, 4]}) X_train = train.drop([&amp;#34;value&amp;#34;], axis=1) X_train = pd.get_dummies(X_train) y_train = train[&amp;#34;value&amp;#34;]~~~ &amp;lt;h3&amp;gt;Test set&amp;lt;/h3&amp;gt; ~~~python test = pd.DataFrame({&amp;#34;letter&amp;#34;:[&amp;#34;D&amp;#34;, &amp;#34;D&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;E&amp;#34;], &amp;#34;value&amp;#34;: [4, 5, 7, 19]}) X_test = test.drop([&amp;#34;value&amp;#34;], axis=1) X_test = pd.get_dummies(X_test) y_test = test[&amp;#34;value&amp;#34;] lr = linear_model.LinearRegression() model = lr.fit(X_train, y_train) model.score(X_test, y_test) ValueError: shapes (4,3) and (4,) not aligned: 3 (dim 1) !</description>
    </item>
    
    <item>
      <title>Pandas: Find rows where column/field is null</title>
      <link>https://markhneedham.com/blog/2017/07/05/pandas-find-rows-where-columnfield-is-null/</link>
      <pubDate>Wed, 05 Jul 2017 14:31:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/07/05/pandas-find-rows-where-columnfield-is-null/</guid>
      <description>import pandas as pd train = pd.read_csv(&amp;#34;train.csv&amp;#34;) null_columns=train.columns[train.isnull().any()] train[null_columns].isnull().sum() LotFrontage 259 Alley 1369 MasVnrType 8 MasVnrArea 8 BsmtQual 37 BsmtCond 37 BsmtExposure 38 BsmtFinType1 37 BsmtFinType2 38 Electrical 1 FireplaceQu 690 GarageType 81 GarageYrBlt 81 GarageFinish 81 GarageQual 81 GarageCond 81 PoolQC 1453 Fence 1179 MiscFeature 1406 dtype: int64 print(train[train[&amp;#34;Electrical&amp;#34;].isnull()][null_columns]) LotFrontage Alley MasVnrType MasVnrArea BsmtQual BsmtCond BsmtExposure \ 1379 73.0 NaN None 0.0 Gd TA No BsmtFinType1 BsmtFinType2 Electrical FireplaceQu GarageType GarageYrBlt \ 1379 Unf Unf NaN NaN BuiltIn 2007.</description>
    </item>
    
    <item>
      <title>Shell: Create a comma separated string</title>
      <link>https://markhneedham.com/blog/2017/06/23/shell-create-comma-separated-string/</link>
      <pubDate>Fri, 23 Jun 2017 12:26:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/23/shell-create-comma-separated-string/</guid>
      <description>foo-0,foo-1,foo-2 n=3 for i in $(seq 0 $(($n &amp;gt; 0? $n-1: 0))); do echo &amp;#34;foo-$i&amp;#34; done foo-0 foo-1 foo-2 n=3 combined=&amp;#34;&amp;#34; for i in $(seq 0 $(($n &amp;gt; 0? $n-1: 0))); do token=&amp;#34;foo-$i&amp;#34; combined=&amp;#34;${combined}${combined:+,}$token&amp;#34; done echo $combined foo-0,foo-1,foo-2 n=3 combined=&amp;#34;&amp;#34; for i in $(seq 0 $(($n &amp;gt; 0 ? $n-1: 0))); do token=&amp;#34;foo-$i&amp;#34; combined=&amp;#34;${combined}${combined:+,}$token&amp;#34; echo $combined done foo-0 foo-0,foo-1 foo-0,foo-1,foo-2 </description>
    </item>
    
    <item>
      <title>scikit-learn: Random forests - Feature Importance</title>
      <link>https://markhneedham.com/blog/2017/06/16/scikit-learn-random-forests-feature-importance/</link>
      <pubDate>Fri, 16 Jun 2017 05:55:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/16/scikit-learn-random-forests-feature-importance/</guid>
      <description>import numpy as np import pandas as pd from sklearn.ensemble import RandomForestRegressor from sklearn.model_selection import train_test_split # We&amp;#39;ll use this library to make the display pretty from tabulate import tabulate train = pd.read_csv(&amp;#39;train.csv&amp;#39;) # the model can only handle numeric values so filter out the rest data = train.select_dtypes(include=[np.number]).interpolate().dropna() y = train.SalePrice X = data.drop([&amp;#34;SalePrice&amp;#34;, &amp;#34;Id&amp;#34;], axis=1) X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=.33) clf = RandomForestRegressor(n_jobs=2, n_estimators=1000) model = clf.</description>
    </item>
    
    <item>
      <title>Kubernetes: Which node is a pod on?</title>
      <link>https://markhneedham.com/blog/2017/06/14/kubernetes-node-pod/</link>
      <pubDate>Wed, 14 Jun 2017 08:49:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/14/kubernetes-node-pod/</guid>
      <description>$ kubectl get pod NAME READY STATUS RESTARTS AGE neo4j-core-0 1/1 Running 0 6m neo4j-core-1 1/1 Running 0 6m neo4j-core-2 1/1 Running 0 2m $ kubectl get pod -o wide NAME READY STATUS RESTARTS AGE IP NODE neo4j-core-0 1/1 Running 0 6m 10.32.3.6 gke-neo4j-cluster-default-pool-ded394fa-0kpw neo4j-core-1 1/1 Running 0 6m 10.32.3.7 gke-neo4j-cluster-default-pool-ded394fa-0kpw neo4j-core-2 1/1 Running 0 2m 10.32.0.10 gke-neo4j-cluster-default-pool-ded394fa-kp68 </description>
    </item>
    
    <item>
      <title>Kaggle: House Prices: Advanced Regression Techniques - Trying to fill in missing values</title>
      <link>https://markhneedham.com/blog/2017/06/04/kaggle-house-prices-advanced-regression-techniques-trying-fill-missing-values/</link>
      <pubDate>Sun, 04 Jun 2017 09:22:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/06/04/kaggle-house-prices-advanced-regression-techniques-trying-fill-missing-values/</guid>
      <description>import pandas as pd train = pd.read_csv(&amp;#39;train.csv&amp;#39;) null_columns=train.columns[train.isnull().any()] &amp;gt;&amp;gt;&amp;gt; print(train[null_columns].isnull().sum()) LotFrontage 259 Alley 1369 MasVnrType 8 MasVnrArea 8 BsmtQual 37 BsmtCond 37 BsmtExposure 38 BsmtFinType1 37 BsmtFinType2 38 Electrical 1 FireplaceQu 690 GarageType 81 GarageYrBlt 81 GarageFinish 81 GarageQual 81 GarageCond 81 PoolQC 1453 Fence 1179 MiscFeature 1406 dtype: int64 cols = [col for col in train.columns if col.startswith(&amp;#34;Lot&amp;#34;)] missing_frontage = train[cols][train[&amp;#34;LotFrontage&amp;#34;].isnull()] &amp;gt;&amp;gt;&amp;gt; print(missing_frontage.head()) LotFrontage LotArea LotShape LotConfig 7 NaN 10382 IR1 Corner 12 NaN 12968 IR2 Inside 14 NaN 10920 IR1 Corner 16 NaN 11241 IR1 CulDSac 24 NaN 8246 IR1 Inside sub_train = train[train.</description>
    </item>
    
    <item>
      <title>GraphQL-Europe: A trip to Berlin</title>
      <link>https://markhneedham.com/blog/2017/05/27/graphql-europe-trip-berlin/</link>
      <pubDate>Sat, 27 May 2017 11:31:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/27/graphql-europe-trip-berlin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PostgreSQL: ERROR:  argument of WHERE must not return a set</title>
      <link>https://markhneedham.com/blog/2017/05/01/postgresql-error-argument-must-not-return-set/</link>
      <pubDate>Mon, 01 May 2017 20:42:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/01/postgresql-error-argument-must-not-return-set/</guid>
      <description>SELECT id, data-&amp;gt;&amp;#39;start_date&amp;#39; AS startDate, data-&amp;gt;&amp;#39;average_speed&amp;#39; AS averageSpeed FROM runs WHERE jsonb_array_elements(data-&amp;gt;&amp;#39;segment_efforts&amp;#39;)-&amp;gt;&amp;#39;segment&amp;#39;-&amp;gt;&amp;gt;&amp;#39;id&amp;#39; = &amp;#39;6818475&amp;#39; ERROR: argument of WHERE must not return a set LINE 3: WHERE jsonb_array_elements(data-&amp;gt;&amp;#39;segment_efforts&amp;#39;)-&amp;gt;&amp;#39;segmen... SELECT id, data-&amp;gt;&amp;#39;start_date&amp;#39; AS startDate, data-&amp;gt;&amp;#39;average_speed&amp;#39; AS averageSpeed FROM runs r, LATERAL jsonb_array_elements(r.data-&amp;gt;&amp;#39;segment_efforts&amp;#39;) segment WHERE segment -&amp;gt;&amp;#39;segment&amp;#39;-&amp;gt;&amp;gt;&amp;#39;id&amp;#39; = &amp;#39;6818475&amp;#39; id | startdate | averagespeed -----------+------------------------+--------------  455461182 | &amp;#34;2015-12-24T11:20:26Z&amp;#34; | 2.841 440088621 | &amp;#34;2015-11-27T06:10:42Z&amp;#34; | 2.975 407930503 | &amp;#34;2015-10-07T05:18:34Z&amp;#34; | 2.985 317170464 | &amp;#34;2015-06-03T04:44:59Z&amp;#34; | 2.</description>
    </item>
    
    <item>
      <title>Loading and analysing Strava runs using PostgreSQL JSON data type</title>
      <link>https://markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/</link>
      <pubDate>Mon, 01 May 2017 19:11:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/</guid>
      <description>create database strava; \connect strava; CREATE TABLE runs ( id INTEGER NOT NULL, data jsonb ); ALTER TABLE runs ADD PRIMARY KEY(id); import requests import os import json import psycopg2 token = os.environ[&amp;#34;TOKEN&amp;#34;] headers = {&amp;#39;Authorization&amp;#39;: &amp;#34;Bearer {0}&amp;#34;.format(token)} with psycopg2.connect(&amp;#34;dbname=strava user=markneedham&amp;#34;) as conn: with conn.cursor() as cur: page = 1 while True: r = requests.get(&amp;#34;https://www.strava.com/api/v3/athlete/activities?page={0}&amp;#34;.format(page), headers = headers) response = r.json() if len(response) == 0: break else: for activity in response: r = requests.</description>
    </item>
    
    <item>
      <title>Leaflet: Mapping Strava runs/polylines on Open Street Map</title>
      <link>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</link>
      <pubDate>Sat, 29 Apr 2017 15:36:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</guid>
      <description>&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Mapping my runs&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34; /&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;).setView([55.609818, 13.003286], 13); L.tileLayer( &amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18, }).addTo(map); var encodedRoutes = [ &amp;#34;{zkrIm`inANPD?BDXGPKLATHNRBRFtAR~AFjAHl@D|ALtATj@HHJBL?`@EZ?NQ\\Y^MZURGJKR]RMXYh@QdAWf@[~@aAFGb@?j@YJKBU@m@FKZ[NSPKTCRJD?`@Wf@Wb@g@HCp@Qh@]z@SRMRE^EHJZnDHbBGPHb@NfBTxBN|DVbCBdA^lBFl@Lz@HbBDl@Lr@Bb@ApCAp@Ez@g@bEMl@g@`B_AvAq@l@ QF]Rs@Nq@CmAVKCK?_@Nw@h@UJIHOZa@xA]~@UfASn@U`@_@~@[d@Sn@s@rAs@dAGN?NVhAB\\Ox@@b@S|A?Tl@jBZpAt@vBJhATfGJn@b@fARp@H^Hx@ARGNSTIFWHe@AGBOTAP@^\\zBMpACjEWlEIrCKl@i@nAk@}@}@yBOWSg@kAgBUk@Mu@[mC?QLIEUAuAS_E?uCKyCA{BH{DDgF`AaEr@uAb@oA~@{AE}AKw@ g@qAU[_@w@[gAYm@]qAEa@FOXg@JGJ@j@o@bAy@NW?Qe@oCCc@SaBEOIIEQGaAe@kC_@{De@cE?KD[H[P]NcAJ_@DGd@Gh@UHI@Ua@}Bg@yBa@uDSo@i@UIICQUkCi@sCKe@]aAa@oBG{@G[CMOIKMQe@IIM@KB]Tg@Nw@^QL]NMPMn@@\\Lb@P~@XT&amp;#34;, &amp;#34;u}krIq_inA_@y@My@Yu@OqAUsA]mAQc@CS@o@FSHSp@e@n@Wl@]ZCFEBK?OC_@Qw@?m@CSK[]]EMBeAA_@m@qEAg@UoCAaAMs@IkBMoACq@SwAGOYa@IYIyA_@kEMkC]{DEaAScC@yEHkGA_ALsCBiA@mCD{CCuAZcANOH@HDZl@Z`@RFh@\\TDT@ZVJBPMVGLM\\Mz@c@NCPMXERO|@a@^Ut@s@p@KJAJ Bd@EHEXi@f@a@\\g@b@[HUD_B@uADg@DQLCLD~@l@`@J^TF?JANQ\\UbAyABEZIFG`@o@RAJEl@_@ZENDDIA[Ki@BURQZaARODKVs@LSdAiAz@G`BU^A^GT@PRp@zARXRn@`BlDHt@ZlAFh@^`BX|@HHHEf@i@FAHHp@bBd@v@DRAVMl@i@v@SROXm@tBILOTOLs@NON_@t@KX]h@Un@k@\\c@h@Ud@]ZGNKp@Sj@KJo@ b@W`@UPOX]XWd@UF]b@WPOAIBSf@QVi@j@_@V[b@Uj@YtAEFCCELARBn@`@lBjAzD^vB^hB?LENURkAv@[Ze@Xg@Py@p@QHONMA[HGAWE_@Em@Hg@AMCG@QHq@Cm@M[Jy@?UJIA{@Ae@KI@GFKNIX[QGAcAT[JK?OVMFK@IAIUKAYJI?QKUCGFIZCXDtAHl@@p@LjBCZS^ERAn@Fj@Br@Hn@HzAHh@RfD?j@TnCTlA NjANb@\\z@TtARr@P`AFnAGfBG`@CFE?&amp;#34; ] for (let encoded of encodedRoutes) { var coordinates = L.Polyline.fromEncoded(encoded).getLatLngs(); L.polyline( coordinates, { color: &amp;#39;blue&amp;#39;, weight: 2, opacity: .7, lineJoin: &amp;#39;round&amp;#39; } ).addTo(map); } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python -m http.</description>
    </item>
    
    <item>
      <title>Python: Flask - Generating a static HTML page</title>
      <link>https://markhneedham.com/blog/2017/04/27/python-flask-generating-a-static-html-page/</link>
      <pubDate>Thu, 27 Apr 2017 20:59:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/27/python-flask-generating-a-static-html-page/</guid>
      <description>from flask import render_template import flask app = flask.Flask(&amp;#39;my app&amp;#39;) if __name__ == &amp;#34;__main__&amp;#34;: with app.app_context(): rendered = render_template(&amp;#39;blog.html&amp;#39;, \ title = &amp;#34;My Generated Page&amp;#34;, \ people = [{&amp;#34;name&amp;#34;: &amp;#34;Mark&amp;#34;}, {&amp;#34;name&amp;#34;: &amp;#34;Michael&amp;#34;}]) print(rendered) &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;{{ title }}&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;{{ title }}&amp;lt;/h1&amp;gt; &amp;lt;ul&amp;gt; {% for person in people %} &amp;lt;li&amp;gt;{{ person.name }}&amp;lt;/li&amp;gt; {% endfor %} &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python blog.py &amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;My Generated Page&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;My Generated Page&amp;lt;/h1&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;Mark&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Michael&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python blog.</description>
    </item>
    
    <item>
      <title>AWS Lambda: Programmatically scheduling a CloudWatchEvent</title>
      <link>https://markhneedham.com/blog/2017/04/05/aws-lambda-programatically-scheduling-a-cloudwatchevent/</link>
      <pubDate>Wed, 05 Apr 2017 23:49:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/05/aws-lambda-programatically-scheduling-a-cloudwatchevent/</guid>
      <description>import boto3 lambda_client = boto3.client(&amp;#39;lambda&amp;#39;) events_client = boto3.client(&amp;#39;events&amp;#39;) fn_name = &amp;#34;HelloWorld&amp;#34; fn_role = &amp;#39;arn:aws:iam::[your-aws-id]:role/lambda_basic_execution&amp;#39; fn_response = lambda_client.create_function( FunctionName=fn_name, Runtime=&amp;#39;python2.7&amp;#39;, Role=fn_role, Handler=&amp;#34;{0}.lambda_handler&amp;#34;.format(fn_name), Code={&amp;#39;ZipFile&amp;#39;: open(&amp;#34;{0}.zip&amp;#34;.format(fn_name), &amp;#39;rb&amp;#39;).read(), }, ) fn_arn = fn_response[&amp;#39;FunctionArn&amp;#39;] frequency = &amp;#34;rate(1 hour)&amp;#34; name = &amp;#34;{0}-Trigger&amp;#34;.format(fn_name) rule_response = events_client.put_rule( Name=name, ScheduleExpression=frequency, State=&amp;#39;ENABLED&amp;#39;, ) lambda_client.add_permission( FunctionName=fn_name, StatementId=&amp;#34;{0}-Event&amp;#34;.format(name), Action=&amp;#39;lambda:InvokeFunction&amp;#39;, Principal=&amp;#39;events.amazonaws.com&amp;#39;, SourceArn=rule_response[&amp;#39;RuleArn&amp;#39;], ) events_client.put_targets( Rule=name, Targets=[ { &amp;#39;Id&amp;#39;: &amp;#34;1&amp;#34;, &amp;#39;Arn&amp;#39;: fn_arn, }, ] ) $ aws events list-rules --query &amp;#34;Rules[?Name==&amp;#39;HelloWorld-Trigger&amp;#39;]&amp;#34; [ { &amp;#34;State&amp;#34;: &amp;#34;ENABLED&amp;#34;, &amp;#34;ScheduleExpression&amp;#34;: &amp;#34;rate(1 hour)&amp;#34;, &amp;#34;Name&amp;#34;: &amp;#34;HelloWorld-Trigger&amp;#34;, &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:events:us-east-1:[your-aws-id]:rule/HelloWorld-Trigger&amp;#34; } ] $ aws events list-targets-by-rule --rule HelloWorld-Trigger { &amp;#34;Targets&amp;#34;: [ { &amp;#34;Id&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:lambda:us-east-1:[your-aws-id]:function:HelloWorld&amp;#34; } ] } $ aws lambda get-policy --function-name HelloWorld { &amp;#34;Policy&amp;#34;: &amp;#34;{\&amp;#34;Version\&amp;#34;:\&amp;#34;2012-10-17\&amp;#34;,\&amp;#34;Id\&amp;#34;:\&amp;#34;default\&amp;#34;,\&amp;#34;Statement\&amp;#34;:[{\&amp;#34;Sid\&amp;#34;:\&amp;#34;HelloWorld-Trigger-Event\&amp;#34;,\&amp;#34;Effect\&amp;#34;:\&amp;#34;Allow\&amp;#34;,\&amp;#34;Principal\&amp;#34;:{\&amp;#34;Service\&amp;#34;:\&amp;#34;events.</description>
    </item>
    
    <item>
      <title>AWS Lambda: Encrypted environment variables</title>
      <link>https://markhneedham.com/blog/2017/04/03/aws-lambda-encrypted-environment-variables/</link>
      <pubDate>Mon, 03 Apr 2017 05:49:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/03/aws-lambda-encrypted-environment-variables/</guid>
      <description>import boto3 import os from base64 import b64decode def lambda_handler(event, context): encrypted = os.environ[&amp;#39;ENCRYPTED_VALUE&amp;#39;] decrypted = boto3.client(&amp;#39;kms&amp;#39;).decrypt(CiphertextBlob=b64decode(encrypted))[&amp;#39;Plaintext&amp;#39;] # Don&amp;#39;t print out your decrypted value in a real function! This is just to show how it works. print(&amp;#34;Decrypted value:&amp;#34;, decrypted) plain_text = os.environ[&amp;#34;PLAIN_TEXT_VALUE&amp;#34;] print(&amp;#34;Plain text:&amp;#34;, plain_text) zip HelloWorldEncrypted.zip HelloWorldEncrypted.py import boto3 from base64 import b64encode fn_name = &amp;#34;HelloWorldEncrypted&amp;#34; kms_key = &amp;#34;arn:aws:kms:[aws-zone]:[your-aws-id]:key/[your-kms-key-id]&amp;#34; fn_role = &amp;#39;arn:aws:iam::[your-aws-id]:role/lambda_basic_execution&amp;#39; lambda_client = boto3.client(&amp;#39;lambda&amp;#39;) kms_client = boto3.client(&amp;#39;kms&amp;#39;) encrypt_me = &amp;#34;abcdefg&amp;#34; encrypted = b64encode(kms_client.</description>
    </item>
    
    <item>
      <title>AWS Lambda: Programatically create a Python &#39;Hello World&#39; function</title>
      <link>https://markhneedham.com/blog/2017/04/02/aws-lambda-programatically-create-a-python-hello-world-function/</link>
      <pubDate>Sun, 02 Apr 2017 22:11:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/02/aws-lambda-programatically-create-a-python-hello-world-function/</guid>
      <description>def lambda_handler(event, context): print(&amp;#34;Hello world&amp;#34;) $ zip HelloWorld.zip HelloWorld.py $ unzip -l HelloWorld.zip Archive: HelloWorld.zip Length Date Time Name -------- ---- ---- ---- 61 04-02-17 22:04 HelloWorld.py -------- ------- 61 1 file import boto3 lambda_client = boto3.client(&amp;#39;lambda&amp;#39;) fn_name = &amp;#34;HelloWorld&amp;#34; fn_role = &amp;#39;arn:aws:iam::[your-aws-id]:role/lambda_basic_execution&amp;#39; lambda_client.create_function( FunctionName=fn_name, Runtime=&amp;#39;python2.7&amp;#39;, Role=fn_role, Handler=&amp;#34;{0}.lambda_handler&amp;#34;.format(fn_name), Code={&amp;#39;ZipFile&amp;#39;: open(&amp;#34;{0}.zip&amp;#34;.format(fn_name), &amp;#39;rb&amp;#39;).read(), }, ) $ aws ec2 describe-security-groups --query &amp;#39;SecurityGroups[0].OwnerId&amp;#39; --output text 123456789012 $ python CreateHelloWorld.py </description>
    </item>
    
    <item>
      <title>My top 10 technology podcasts</title>
      <link>https://markhneedham.com/blog/2017/03/30/top-10-technology-podcasts/</link>
      <pubDate>Thu, 30 Mar 2017 22:38:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/30/top-10-technology-podcasts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Luigi: Defining dynamic requirements (on output files)</title>
      <link>https://markhneedham.com/blog/2017/03/28/luigi-defining-dynamic-requirements-on-output-files/</link>
      <pubDate>Tue, 28 Mar 2017 05:39:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/28/luigi-defining-dynamic-requirements-on-output-files/</guid>
      <description>class MembersToCSV(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def requires(self): yield GroupsToJSON(self.key, self.lat, self.lon) class MembersToCSV(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def run(self): outputs = [] for input in self.input(): with input.open(&amp;#39;r&amp;#39;) as group_file: groups_json = json.load(group_file) groups = [str(group[&amp;#39;id&amp;#39;]) for group in groups_json] for group_id in groups: members = MembersToJSON(group_id, self.key) outputs.append(members.output().path) yield members def requires(self): yield GroupsToJSON(self.key, self.lat, self.lon) class MembersToJSON(luigi.Task): group_id = luigi.</description>
    </item>
    
    <item>
      <title>Luigi: An ExternalProgramTask example - Converting JSON to CSV</title>
      <link>https://markhneedham.com/blog/2017/03/25/luigi-externalprogramtask-example-converting-json-csv/</link>
      <pubDate>Sat, 25 Mar 2017 14:09:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/25/luigi-externalprogramtask-example-converting-json-csv/</guid>
      <description>import luigi import requests import json from collections import Counter class GroupsToJSON(luigi.Task): key = luigi.Parameter() lat = luigi.Parameter() lon = luigi.Parameter() def run(self): seed_topic = &amp;#34;nosql&amp;#34; uri = &amp;#34;https://api.meetup.com/2/groups?&amp;amp;topic={0}&amp;amp;lat={1}&amp;amp;lon={2}&amp;amp;key={3}&amp;#34;.format(seed_topic, self.lat, self.lon, self.key) r = requests.get(uri) all_topics = [topic[&amp;#34;urlkey&amp;#34;] for result in r.json()[&amp;#34;results&amp;#34;] for topic in result[&amp;#34;topics&amp;#34;]] c = Counter(all_topics) topics = [entry[0] for entry in c.most_common(10)] groups = {} for topic in topics: uri = &amp;#34;https://api.meetup.com/2/groups?&amp;amp;topic={0}&amp;amp;lat={1}&amp;amp;lon={2}&amp;amp;key={3}&amp;#34;.format(topic, self.lat, self.lon, self.key) r = requests.</description>
    </item>
    
    <item>
      <title>Python 3: TypeError: Object of type &#39;dict_values&#39; is not JSON serializable</title>
      <link>https://markhneedham.com/blog/2017/03/19/python-3-typeerror-object-type-dict_values-not-json-serializable/</link>
      <pubDate>Sun, 19 Mar 2017 16:40:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/19/python-3-typeerror-object-type-dict_values-not-json-serializable/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; import json &amp;gt;&amp;gt;&amp;gt; x = {&amp;#34;mark&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;Mark&amp;#34;}, &amp;#34;michael&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;Michael&amp;#34;} } &amp;gt;&amp;gt;&amp;gt; json.dumps(x.values()) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py&amp;#34;, line 231, in dumps return _default_encoder.encode(obj) File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py&amp;#34;, line 199, in encode chunks = self.iterencode(o, _one_shot=True) File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py&amp;#34;, line 257, in iterencode return _iterencode(o, 0) File &amp;#34;/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/encoder.py&amp;#34;, line 180, in default o.__class__.__name__) TypeError: Object of type &amp;#39;dict_values&amp;#39; is not JSON serializable &amp;gt;&amp;gt;&amp;gt; json.</description>
    </item>
    
    <item>
      <title>Neo4j: apoc.date.parse - java.lang.IllegalArgumentException: Illegal pattern character &#39;T&#39; / java.text.ParseException: Unparseable date: &#34;2012-11-12T08:46:15Z&#34;</title>
      <link>https://markhneedham.com/blog/2017/03/06/neo4j-apoc-date-parse-java-lang-illegalargumentexception-illegal-pattern-character-t-java-text-parseexception-unparseable-date-2012-11-12t084615z/</link>
      <pubDate>Mon, 06 Mar 2017 20:52:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/03/06/neo4j-apoc-date-parse-java-lang-illegalargumentexception-illegal-pattern-character-t-java-text-parseexception-unparseable-date-2012-11-12t084615z/</guid>
      <description>return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;) AS ts Failed to invoke function `apoc.date.parse`: Caused by: java.lang.IllegalArgumentException: java.text.ParseException: Unparseable date: &amp;quot;2012-11-12T08:46:15Z&amp;quot; return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-ddTHH:mm:ssZ&amp;quot;) AS ts Failed to invoke function `apoc.date.parse`: Caused by: java.lang.IllegalArgumentException: Illegal pattern character &#39;T&#39; return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssZ&amp;quot;) AS ts Failed to invoke function `apoc.date.parse`: Caused by: java.lang.IllegalArgumentException: java.text.ParseException: Unparseable date: &amp;quot;2012-11-12T08:46:15Z&amp;quot; return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;&amp;quot;) AS ts ╒══════════╕ │&amp;quot;ts&amp;quot; │ ╞══════════╡ │1352709975│ └──────────┘ return apoc.date.parse(&amp;quot;2012-11-12T08:46:15Z&amp;quot;,&#39;s&#39;,&amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&amp;quot;) AS ts ╒══════════╕ │&amp;quot;ts&amp;quot; │ ╞══════════╡ │1352709975│ └──────────┘ </description>
    </item>
    
    <item>
      <title>Neo4j: Graphing the &#39;My name is...I work&#39; Twitter meme</title>
      <link>https://markhneedham.com/blog/2017/02/28/neo4j-graphing-name-work-twitter-meme/</link>
      <pubDate>Tue, 28 Feb 2017 15:50:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/28/neo4j-graphing-name-work-twitter-meme/</guid>
      <description>:param bearer: &#39;&amp;lt;your-bearer-token-goes-here&amp;gt;&#39; WITH &#39;https://api.twitter.com/1.1/search/tweets.json?count=100&amp;amp;result_type=recent&amp;amp;lang=en&amp;amp;q=&#39; as url, {bearer} as bearer CALL apoc.load.jsonParams(url + &amp;quot;%22my%20name%22%20is%22%20%22I%20work%22&amp;quot;,{Authorization:&amp;quot;Bearer &amp;quot;+bearer},null) yield value UNWIND value.statuses as status WITH status, status.user as u, status.entities as e WHERE status.quoted_status_id is not null // create a node for the original tweet MERGE (t:Tweet {id:status.id}) ON CREATE SET t.text=status.text,t.created_at=status.created_at,t.retweet_count=status.retweet_count, t.favorite_count=status.favorite_count // create a node for the author + a POSTED relationship from the author to the tweet MERGE (p:User {name:u.screen_name}) MERGE (p)-[:POSTED]-&amp;gt;(t) // create a MENTIONED relationship from the tweet to any users mentioned in the tweet FOREACH (m IN e.</description>
    </item>
    
    <item>
      <title>Neo4j: How do null values even work?</title>
      <link>https://markhneedham.com/blog/2017/02/22/neo4j-null-values-even-work/</link>
      <pubDate>Wed, 22 Feb 2017 23:28:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/22/neo4j-null-values-even-work/</guid>
      <description>WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value = null RETURN value (no changes, no records) WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value &amp;lt;&amp;gt; null RETURN value (no changes, no records) WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value RETURN value = null AS outcome ╒═══════╤═════════╕ │&amp;quot;value&amp;quot;│&amp;quot;outcome&amp;quot;│ ╞═══════╪═════════╡ │null │null │ ├───────┼─────────┤ │&amp;quot;null&amp;quot; │null │ ├───────┼─────────┤ │&amp;quot;&amp;quot; │null │ ├───────┼─────────┤ │&amp;quot;Mark&amp;quot; │null │ └───────┴─────────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value RETURN value = &amp;quot;Mark&amp;quot; AS outcome ╒═══════╤═════════╕ │&amp;quot;value&amp;quot;│&amp;quot;outcome&amp;quot;│ ╞═══════╪═════════╡ │null │null │ ├───────┼─────────┤ │&amp;quot;null&amp;quot; │false │ ├───────┼─────────┤ │&amp;quot;&amp;quot; │false │ ├───────┼─────────┤ │&amp;quot;Mark&amp;quot; │true │ └───────┴─────────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value is null RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │null │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value is not null RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │&amp;quot;null&amp;quot; │ ├───────┤ │&amp;quot;&amp;quot; │ ├───────┤ │&amp;quot;Mark&amp;quot; │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value &amp;lt;&amp;gt; &amp;quot;&amp;quot; RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │&amp;quot;null&amp;quot; │ ├───────┤ │&amp;quot;Mark&amp;quot; │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value WITH value WHERE value = &amp;quot;&amp;quot; RETURN value ╒═══════╕ │&amp;quot;value&amp;quot;│ ╞═══════╡ │&amp;quot;&amp;quot; │ └───────┘ WITH [null, &amp;quot;null&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Mark&amp;quot;] AS values UNWIND values AS value RETURN value, value = &amp;quot;&amp;quot; AS isEmpty, value &amp;lt;&amp;gt; &amp;quot;&amp;quot; AS isNotEmpty ╒═══════╤═════════╤════════════╕ │&amp;quot;value&amp;quot;│&amp;quot;isEmpty&amp;quot;│&amp;quot;isNotEmpty&amp;quot;│ ╞═══════╪═════════╪════════════╡ │null │null │null │ ├───────┼─────────┼────────────┤ │&amp;quot;null&amp;quot; │false │true │ ├───────┼─────────┼────────────┤ │&amp;quot;&amp;quot; │true │false │ ├───────┼─────────┼────────────┤ │&amp;quot;Mark&amp;quot; │false │true │ └───────┴─────────┴────────────┘ $ cat nulls.</description>
    </item>
    
    <item>
      <title>Neo4j: Analysing a CSV file using LOAD CSV and Cypher</title>
      <link>https://markhneedham.com/blog/2017/02/19/neo4j-analysing-csv-file-using-load-csv-cypher/</link>
      <pubDate>Sun, 19 Feb 2017 22:39:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/19/neo4j-analysing-csv-file-using-load-csv-cypher/</guid>
      <description>$ cat ~/Downloads/youtube_stats_pW9boJoUxO0.csv Video IDs:, pW9boJoUxO0, Start time:, Wed Feb 15 08:57:55 2017, End time:, Wed Feb 15 10:03:10 2017 Playbacks, Peak concurrent viewers, Total view time (hours), Average session length (minutes) 348, 112, 97.125, 16.7456896552, Country code, AR, AT, BE, BR, BY, CA, CH, CL, CR, CZ, DE, DK, EC, EE, ES, FI, FR, GB, HU, IE, IL, IN, IT, LB, LU, LV, MY, NL, NO, NZ, PK, PL, QA, RO, RS, RU, SE, TR, US, VN, ZA Playbacks, 2, 2, 1, 14, 1, 10, 2, 1, 1, 1, 27, 1, 1, 1, 3, 1, 25, 54, 1, 4, 6, 8, 1, 1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 2, 6, 22, 1, 114, 1, 1 Peak concurrent viewers, 2, 1, 1, 4, 1, 5, 1, 1, 0, 0, 11, 1, 1, 1, 2, 1, 6, 25, 1, 3, 3, 2, 1, 1, 1, 1, 1, 9, 1, 1, 0, 1, 0, 1, 1, 3, 7, 0, 44, 1, 0 Total view time (hours), 1.</description>
    </item>
    
    <item>
      <title>ReactJS/Material-UI: Cannot resolve module &#39;material-ui/lib/&#39;</title>
      <link>https://markhneedham.com/blog/2017/02/12/reactjsmaterial-ui-cannot-resolve-module-material-uilib/</link>
      <pubDate>Sun, 12 Feb 2017 22:43:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/12/reactjsmaterial-ui-cannot-resolve-module-material-uilib/</guid>
      <description>ERROR in ./src/app/modules/Foo.js Module not found: Error: Cannot resolve module &amp;#39;material-ui/lib/Subheader&amp;#39; in /Users/markneedham/neo/reactjs-test/src/app/modules @ ./src/app/modules/Foo.js 13:17-53 webpack: Failed to compile. import React from &amp;#39;react&amp;#39; import Subheader from &amp;#39;material-ui/lib/Subheader&amp;#39; export default React.createClass({ render() { return &amp;lt;div&amp;gt; &amp;lt;Subheader&amp;gt;Some Text&amp;lt;/Subheader&amp;gt; &amp;lt;/div&amp;gt; } }) import Foo from &amp;#39;./modules/Foo&amp;#39; render(Foo, document.getElementById(&amp;#34;app&amp;#34;)) import React from &amp;#39;react&amp;#39; import Subheader from &amp;#39;material-ui/Subheader&amp;#39; export default React.createClass({ render() { return &amp;lt;div&amp;gt; &amp;lt;Subheader&amp;gt;Some Text&amp;lt;/Subheader&amp;gt; &amp;lt;/div&amp;gt; } }) </description>
    </item>
    
    <item>
      <title>Go: Multi-threaded writing to a CSV file</title>
      <link>https://markhneedham.com/blog/2017/01/31/go-multi-threaded-writing-csv-file/</link>
      <pubDate>Tue, 31 Jan 2017 05:57:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/01/31/go-multi-threaded-writing-csv-file/</guid>
      <description>As part of a Go script I&amp;rsquo;ve been working on I wanted to write to a CSV file from multiple Go routines, but realised that the built in CSV Writer isn&amp;rsquo;t thread safe.
My first attempt at writing to the CSV file looked like this:
package main import ( &amp;#34;encoding/csv&amp;#34; &amp;#34;os&amp;#34; &amp;#34;log&amp;#34; &amp;#34;strconv&amp;#34; ) func main() { csvFile, err := os.Create(&amp;#34;/tmp/foo.csv&amp;#34;) if err != nil { log.Panic(err) } w := csv.</description>
    </item>
    
    <item>
      <title>Go vs Python: Parsing a JSON response from a HTTP API</title>
      <link>https://markhneedham.com/blog/2017/01/21/go-vs-python-parsing-a-json-response-from-a-http-api/</link>
      <pubDate>Sat, 21 Jan 2017 10:49:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/01/21/go-vs-python-parsing-a-json-response-from-a-http-api/</guid>
      <description>As part of a recommendations with Neo4j talkthat I&amp;rsquo;ve presented a few times over the last year I have a set of scripts that download some data from the meetup.com API.
They&amp;rsquo;re all written in Python but I thought it&amp;rsquo;d be a fun exercise to see what they&amp;rsquo;d look like in Go. My eventual goal is to try and parallelise the API calls.
This is the Python version of the script:</description>
    </item>
    
    <item>
      <title>Go: First attempt at channels</title>
      <link>https://markhneedham.com/blog/2016/12/24/go-first-attempt-at-channels/</link>
      <pubDate>Sat, 24 Dec 2016 10:45:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/12/24/go-first-attempt-at-channels/</guid>
      <description>We&amp;rsquo;ll create two channels:
package scrape import ( &amp;#34;github.com/PuerkitoBio/goquery&amp;#34; &amp;#34;os&amp;#34; &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;io&amp;#34; ) func checkError(err error) { if err != nil { fmt.Println(err) log.Fatal(err) } } type Blip struct { Link string Title string } func (blip Blip) Download() File { parts := strings.Split(blip.Link, &amp;#34;/&amp;#34;) fileName := &amp;#34;rawData/items/&amp;#34; + parts[len(parts) - 1] if _, err := os.Stat(fileName); os.IsNotExist(err) { resp, err := http.Get(&amp;#34;http://www.thoughtworks.com&amp;#34; + blip.Link) checkError(err) body := resp.</description>
    </item>
    
    <item>
      <title>Go: cannot execute binary file: Exec format error</title>
      <link>https://markhneedham.com/blog/2016/12/23/go-cannot-execute-binary-file-exec-format-error/</link>
      <pubDate>Fri, 23 Dec 2016 18:24:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/12/23/go-cannot-execute-binary-file-exec-format-error/</guid>
      <description>$ go build $ scp myapp ubuntu@aws... $ ssh ubuntu@aws... $ ./myapp -bash: ./myapp: cannot execute binary file: Exec format error env GOOS=linux GOARCH=amd64 GOARM=7 go build </description>
    </item>
    
    <item>
      <title>Neo4j: Graphing the ThoughtWorks Technology Radar</title>
      <link>https://markhneedham.com/blog/2016/12/23/neo4j-graphing-the-thoughtworks-technology-radar/</link>
      <pubDate>Fri, 23 Dec 2016 17:40:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/12/23/neo4j-graphing-the-thoughtworks-technology-radar/</guid>
      <description>|----------------------------------------------+----------+-------------| | technology | date | suggestion | |----------------------------------------------+----------+-------------| | AppHarbor | Mar 2012 | Trial | | Accumulate-only data | Nov 2015 | Assess | | Accumulate-only data | May 2015 | Assess | | Accumulate-only data | Jan 2015 | Assess | | Buying solutions you can only afford one of | Mar 2012 | Hold | |----------------------------------------------+----------+-------------| WITH [&amp;quot;Hold&amp;quot;, &amp;quot;Assess&amp;quot;, &amp;quot;Trial&amp;quot;, &amp;quot;Adopt&amp;quot;] AS positions UNWIND RANGE (0, size(positions) - 2) AS index WITH positions[index] AS pos1, positions[index + 1] AS pos2 MERGE (position1:Position {value: pos1}) MERGE (position2:Position {value: pos2}) MERGE (position1)-[:NEXT]-&amp;gt;(position2); load csv with headers from &amp;quot;file:///blips.</description>
    </item>
    
    <item>
      <title>Go: Templating with the Gin Web Framework</title>
      <link>https://markhneedham.com/blog/2016/12/23/go-templating-with-the-gin-web-framework/</link>
      <pubDate>Fri, 23 Dec 2016 14:30:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/12/23/go-templating-with-the-gin-web-framework/</guid>
      <description>$ echo $GOPATH /Users/markneedham/projects/gocode $ pwd /Users/markneedham/projects/gocode/src/github.com/mneedham/golang-gin-templating-demo $ go get gopkg.in/gin-gonic/gin.v1 $ ls -lh $GOPATH/src/gopkg.in total 0 drwxr-xr-x 3 markneedham staff 102B 23 Dec 10:55 gin-gonic package main import ( &amp;#34;github.com/gin-gonic/gin&amp;#34; &amp;#34;net/http&amp;#34; ) func main() { router := gin.Default() router.LoadHTMLGlob(&amp;#34;templates/*&amp;#34;) // our handlers will go here  router.Run(&amp;#34;0.0.0.0:9090&amp;#34;) } $ ls -lh total 8 -rw-r--r-- 1 markneedham staff 570B 23 Dec 13:34 demo.go drwxr-xr-x 4 markneedham staff 136B 23 Dec 13:34 templates router.</description>
    </item>
    
    <item>
      <title>Docker: Unknown - Unable to query docker version: x509: certificate is valid for</title>
      <link>https://markhneedham.com/blog/2016/12/21/docker-unknown-unable-to-query-docker-version-x509-certificate-is-valid-for/</link>
      <pubDate>Wed, 21 Dec 2016 07:11:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/12/21/docker-unknown-unable-to-query-docker-version-x509-certificate-is-valid-for/</guid>
      <description>$ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS default - virtualbox Running tcp://192.168.99.101:2376 Unknown Unable to query docker version: Get https://192.168.99.101:2376/v1.15/version: x509: certificate is valid for 192.168.99.100, not 192.168.99.101 $ docker-machine stop Stopping &amp;#34;default&amp;#34;... Machine &amp;#34;default&amp;#34; was stopped. $ docker-machine start Starting &amp;#34;default&amp;#34;... (default) Check network to re-create if needed... (default) Waiting for an IP... Machine &amp;#34;default&amp;#34; was started. Waiting for SSH to be available... Detecting the provisioner.</description>
    </item>
    
    <item>
      <title>Kubernetes: Simulating a network partition</title>
      <link>https://markhneedham.com/blog/2016/12/04/kubernetes-simulating-a-network-partition/</link>
      <pubDate>Sun, 04 Dec 2016 12:37:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/12/04/kubernetes-simulating-a-network-partition/</guid>
      <description>$ kubectl get pods NAME READY STATUS RESTARTS AGE neo4j-0 1/1 Running 0 6h neo4j-1 1/1 Running 0 6h neo4j-2 1/1 Running 0 6h $ kubectl exec neo4j-0 -- ls -alh /sbin/route lrwxrwxrwx 1 root root 12 Oct 18 18:58 /sbin/route -&amp;gt; /bin/busybox $ kubectl exec neo4j-0 -- bin/cypher-shell &amp;#34;CALL dbms.cluster.role()&amp;#34; role &amp;#34;FOLLOWER&amp;#34; Bye! $ kubectl exec neo4j-1 -- bin/cypher-shell &amp;#34;CALL dbms.cluster.role()&amp;#34; role &amp;#34;FOLLOWER&amp;#34; Bye! $ kubectl exec neo4j-2 -- bin/cypher-shell &amp;#34;CALL dbms.</description>
    </item>
    
    <item>
      <title>Kubernetes: Spinning up a Neo4j 3.1 Causal Cluster</title>
      <link>https://markhneedham.com/blog/2016/11/25/kubernetes-spinning-up-a-neo4j-3-1-causal-cluster/</link>
      <pubDate>Fri, 25 Nov 2016 16:55:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/11/25/kubernetes-spinning-up-a-neo4j-3-1-causal-cluster/</guid>
      <description>for i in $(seq 0 2); do cat &amp;lt;&amp;lt;EOF | kubectl create -f - kind: PersistentVolume apiVersion: v1 metadata: name: pv${i} labels: type: local app: neo4j spec: capacity: storage: 1Gi accessModes: - ReadWriteOnce hostPath: path: &amp;#34;/tmp/${i}&amp;#34; EOF cat &amp;lt;&amp;lt;EOF | kubectl create -f - kind: PersistentVolumeClaim apiVersion: v1 metadata: name: datadir-neo4j-${i} labels: app: neo4j spec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi EOF done; $ kubectl get pv NAME CAPACITY ACCESSMODES STATUS CLAIM REASON AGE pv0 1Gi RWO Bound default/datadir-neo4j-0 7s pv1 1Gi RWO Bound default/datadir-neo4j-1 7s pv2 1Gi RWO Bound default/datadir-neo4j-2 7s $ kubectl get pvc NAME STATUS VOLUME CAPACITY ACCESSMODES AGE datadir-neo4j-0 Bound pv0 1Gi RWO 26s datadir-neo4j-1 Bound pv1 1Gi RWO 26s datadir-neo4j-2 Bound pv2 1Gi RWO 25s # Headless service to provide DNS lookup apiVersion: v1 kind: Service metadata: labels: app: neo4j name: neo4j spec: clusterIP: None ports: - port: 7474 selector: app: neo4j ---- # new API name apiVersion: &amp;#34;apps/v1alpha1&amp;#34; kind: PetSet metadata: name: neo4j spec: serviceName: neo4j replicas: 3 template: metadata: annotations: pod.</description>
    </item>
    
    <item>
      <title>Kubernetes: Writing hostname to a file</title>
      <link>https://markhneedham.com/blog/2016/11/22/kubernetes-writing-hostname-to-a-file/</link>
      <pubDate>Tue, 22 Nov 2016 19:56:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/11/22/kubernetes-writing-hostname-to-a-file/</guid>
      <description>$ minikube start Starting local Kubernetes cluster... Kubectl is now configured to use the cluster. apiVersion: v1 kind: Pod metadata: name: mark-super-simple-test-pod spec: containers: - name: test-container image: gcr.io/google_containers/busybox:1.24 command: [ &amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;env&amp;#34; ] dnsPolicy: Default restartPolicy: Never $ kubectl create -f hostname_super_simple.yaml pod &amp;#34;mark-super-simple-test-pod&amp;#34; created $ kubectl logs mark-super-simple-test-pod KUBERNETES_SERVICE_PORT=443 KUBERNETES_PORT=tcp://10.0.0.1:443 HOSTNAME=mark-super-simple-test-pod SHLVL=1 HOME=/root KUBERNETES_PORT_443_TCP_ADDR=10.0.0.1 PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin KUBERNETES_PORT_443_TCP_PORT=443 KUBERNETES_PORT_443_TCP_PROTO=tcp KUBERNETES_SERVICE_PORT_HTTPS=443 KUBERNETES_PORT_443_TCP=tcp://10.0.0.1:443 PWD=/ KUBERNETES_SERVICE_HOST=10.0.0.1 apiVersion: v1 kind: Pod metadata: name: mark-test-pod spec: containers: - name: test-container image: gcr.</description>
    </item>
    
    <item>
      <title>Neo4j 3.1 beta3 &#43; docker: Creating a Causal Cluster</title>
      <link>https://markhneedham.com/blog/2016/11/13/neo4j-3-1-beta3-docker-creating-a-causal-cluster/</link>
      <pubDate>Sun, 13 Nov 2016 12:30:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/11/13/neo4j-3-1-beta3-docker-creating-a-causal-cluster/</guid>
      <description>unsupported.dbms.edition=enterprise dbms.mode=CORE dbms.security.auth_enabled=false dbms.memory.heap.initial_size=512m dbms.memory.heap.max_size=512m dbms.memory.pagecache.size=100M dbms.tx_log.rotation.retention_policy=false dbms.connector.bolt.type=BOLT dbms.connector.bolt.enabled=true dbms.connector.bolt.listen_address=0.0.0.0:7687 dbms.connector.http.type=HTTP dbms.connector.http.enabled=true dbms.connector.http.listen_address=0.0.0.0:7474 dbms.connectors.default_listen_address=0.0.0.0 dbms.connectors.default_advertised_address=instance0 causal_clustering.initial_discovery_members=instance0:5000,instance1:5000,instance2:5000 causal_clustering.leader_election_timeout=2s docker run --name=instance0 --detach \  --publish=7474:7474 \  --publish=7687:7687 \  --net=cluster \  --hostname=instance0 \  --volume /tmp/ce/instance0/conf:/conf \  --volume /tmp/ce/instance0/data:/data \  neo4j/neo4j-experimental:3.1.0-M13-beta3-enterprise docker network create --driver=bridge cluster function config { mkdir -p /tmp/ce/$1/conf cat &amp;gt; /tmp/ce/$1/conf/neo4j.conf &amp;lt;&amp;lt; EOF unsupported.dbms.edition=enterprise dbms.mode=CORE dbms.security.auth_enabled=false dbms.memory.heap.initial_size=512m dbms.memory.heap.max_size=512m dbms.memory.pagecache.size=100M dbms.tx_log.rotation.retention_policy=false dbms.connector.bolt.type=BOLT dbms.connector.bolt.enabled=true dbms.connector.bolt.listen_address=0.0.0.0:7687 dbms.</description>
    </item>
    
    <item>
      <title>Neo4j: Find the intermediate point between two lat/longs</title>
      <link>https://markhneedham.com/blog/2016/11/01/neo4j-find-the-intermediate-point-between-two-latlongs/</link>
      <pubDate>Tue, 01 Nov 2016 22:10:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/11/01/neo4j-find-the-intermediate-point-between-two-latlongs/</guid>
      <description>(a)-[:NEXT {time: 60}]-&amp;gt;(b)-[:NEXT {time: 240}]-&amp;gt;(c) a = sin((1−f)⋅δ) / sin δ b = sin(f⋅δ) / sin δ x = a ⋅ cos φ1 ⋅ cos λ1 + b ⋅ cos φ2 ⋅ cos λ2 y = a ⋅ cos φ1 ⋅ sin λ1 + b ⋅ cos φ2 ⋅ sin λ2 z = a ⋅ sin φ1 + b ⋅ sin φ2 φi = atan2(z, √x² + y²) λi = atan2(y, x) δ is the angular distance d/R between the two points.</description>
    </item>
    
    <item>
      <title>Neo4j: Find the midpoint between two lat/longs</title>
      <link>https://markhneedham.com/blog/2016/10/31/neo4j-find-the-midpoint-between-two-latlongs/</link>
      <pubDate>Mon, 31 Oct 2016 19:31:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/10/31/neo4j-find-the-midpoint-between-two-latlongs/</guid>
      <description>WITH 51.4931963543 AS lat1, -0.0475185810 AS lon1, 51.47908 AS lat2 , -0.05393950 AS lon2 WITH radians(lat1) AS rlat1, radians(lon1) AS rlon1, radians(lat2) AS rlat2, radians(lon2) AS rlon2, radians(lon2 - lon1) AS dLon WITH rlat1, rlon1, rlat2, rlon2, cos(rlat2) * cos(dLon) AS Bx, cos(rlat2) * sin(dLon) AS By WITH atan2(sin(rlat1) + sin(rlat2), sqrt( (cos(rlat1) + Bx) * (cos(rlat1) + Bx) + By * By )) AS lat3, rlon1 + atan2(By, cos(rlat1) + Bx) AS lon3 RETURN degrees(lat3) AS midLat, degrees(lon3) AS midLon ╒═════════════════╤═════════════════════╕ │midLat │midLon │ ╞═════════════════╪═════════════════════╡ │51.</description>
    </item>
    
    <item>
      <title>Neo4j: Create dynamic relationship type</title>
      <link>https://markhneedham.com/blog/2016/10/30/neo4j-create-dynamic-relationship-type/</link>
      <pubDate>Sun, 30 Oct 2016 22:12:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/10/30/neo4j-create-dynamic-relationship-type/</guid>
      <description>load csv with headers from &amp;quot;file:///people.csv&amp;quot; AS row RETURN row ╒═══════════════════════════════════════════════════════╕ │row │ ╞═══════════════════════════════════════════════════════╡ │{node1: Mark, node2: Reshmee, relationship: MARRIED_TO}│ ├───────────────────────────────────────────────────────┤ │{node1: Mark, node2: Alistair, relationship: FRIENDS} │ └───────────────────────────────────────────────────────┘ load csv with headers from &amp;quot;file:///people.csv&amp;quot; AS row MERGE (p1:Person {name: row.node1}) MERGE (p2:Person {name: row.node2}) FOREACH(ignoreMe IN CASE WHEN row.relationship = &amp;quot;MARRIED_TO&amp;quot; THEN [1] ELSE [] END | MERGE (p1)-[:MARRIED_TO]-&amp;gt;(p2)) FOREACH(ignoreMe IN CASE WHEN row.relationship = &amp;quot;FRIENDS&amp;quot; THEN [1] ELSE [] END | MERGE (p1)-[:FRIENDS]-&amp;gt;(p2)) load csv with headers from &amp;quot;file:///people.</description>
    </item>
    
    <item>
      <title>Neo4j: Dynamically add property/Set dynamic property</title>
      <link>https://markhneedham.com/blog/2016/10/27/neo4j-dynamically-add-property/</link>
      <pubDate>Thu, 27 Oct 2016 05:29:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/10/27/neo4j-dynamically-add-property/</guid>
      <description>CREATE (stop:Stop {arrival: &amp;quot;0802&amp;quot;, departure: &amp;quot;0803H&amp;quot;}) MATCH (stop:Stop) UNWIND [&amp;quot;arrival&amp;quot;, &amp;quot;departure&amp;quot;] AS key WITH key, toInteger(substring(stop[key], 0, 2)) AS hours, toInteger(substring(stop[key], 2, 2)) AS minutes, CASE WHEN substring(stop[key], 4,1) = &amp;quot;H&amp;quot; THEN 30 ELSE 0 END AS seconds WITH key, (hours * 60 * 60) + (minutes * 60) + seconds AS secondsSinceStartOfDay RETURN key + &amp;quot;SecondsSinceStartOfDay&amp;quot; AS newKey, secondsSinceStartOfDay ╒═══════════════════════════════╤══════════════════════╕ │newKey │secondsSinceStartOfDay│ ╞═══════════════════════════════╪══════════════════════╡ │arrivalSecondsSinceStartOfDay │28920 │ ├───────────────────────────────┼──────────────────────┤ │departureSecondsSinceStartOfDay│29010 │ └───────────────────────────────┴──────────────────────┘ MATCH (stop:Stop2) UNWIND [&amp;quot;arrival&amp;quot;, &amp;quot;departure&amp;quot;] AS key WITH stop, key, toInteger(substring(stop[key], 0, 2)) AS hours, toInteger(substring(stop[key], 2, 2)) AS minutes, CASE WHEN substring(stop[key], 4,1) = &amp;quot;H&amp;quot; THEN 30 ELSE 0 END AS seconds WITH stop, key, (hours * 60 * 60) + (minutes * 60) + seconds AS secondsSinceStartOfDay WITH stop, key + &amp;quot;SecondsSinceStartOfDay&amp;quot; AS newKey, secondsSinceStartOfDay SET stop[newKey] = secondsSinceStartOfDay Invalid input &amp;#39;[&amp;#39;: expected an identifier character, whitespace, &amp;#39;{&amp;#39;, node labels, a property map, a relationship pattern, &amp;#39;.</description>
    </item>
    
    <item>
      <title>Neo4j: Detecting rogue spaces in CSV headers with LOAD CSV</title>
      <link>https://markhneedham.com/blog/2016/10/19/neo4j-detecting-rogue-spaces-in-csv-headers-with-load-csv/</link>
      <pubDate>Wed, 19 Oct 2016 05:16:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/10/19/neo4j-detecting-rogue-spaces-in-csv-headers-with-load-csv/</guid>
      <description>load csv with headers from &amp;quot;file:///foo.csv&amp;quot; as row RETURN row ╒══════════════════════════════════╕ │row │ ╞══════════════════════════════════╡ │{key1: a, key2: (null), key3: c}│ ├──────────────────────────────────┤ │{key1: d, key2: e, key3: f} │ └──────────────────────────────────┘ load csv with headers from &amp;quot;file:///foo.csv&amp;quot; as row WITH row WHERE NOT row.key2 is null RETURN row (no rows) load csv with headers from &amp;quot;file:///foo.csv&amp;quot; as row WITH row LIMIT 1 UNWIND keys(row) AS key RETURN key, SIZE(key) ╒═════╤═════════╕ │key │SIZE(key)│ ╞═════╪═════════╡ │key1 │4 │ ├─────┼─────────┤ │ key2│5 │ ├─────┼─────────┤ │ key3│5 │ └─────┴─────────┘ load csv with headers from &amp;quot;file:///foo.</description>
    </item>
    
    <item>
      <title>Neo4j: requirement failed</title>
      <link>https://markhneedham.com/blog/2016/10/04/neo4j-requirement-failed/</link>
      <pubDate>Tue, 04 Oct 2016 22:33:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/10/04/neo4j-requirement-failed/</guid>
      <description>MATCH (p:Person)-[:ACTED_IN]-&amp;gt;(movie) RETURN p, COLLECT(movie.title) AS movies ORDER BY COUNT(movies) DESC LIMIT 10 requirement failed 2016-10-03 23:25:07.529+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: requirement failed, reference to. requirement failed java.lang.IllegalArgumentException: requirement failed at scala.Predef$.require(Predef.scala:212) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.steps.sortSkipAndLimit$.apply(sortSkipAndLimit.scala:38) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.PlanEventHorizon$.apply(PlanEventHorizon.scala:43) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.PlanEventHorizon$.apply(PlanEventHorizon.scala:31) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.PlanWithTail.apply(PlanWithTail.scala:46) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.PlanWithTail.apply(PlanWithTail.scala:29) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.PlanSingleQuery.apply(PlanSingleQuery.scala:47) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.PlanSingleQuery.apply(PlanSingleQuery.scala:30) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.DefaultQueryPlanner$$anonfun$2.apply(QueryPlanner.scala:51) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.DefaultQueryPlanner$$anonfun$2.apply(QueryPlanner.scala:51) at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234) at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234) at scala.collection.immutable.List.foreach(List.scala:381) at scala.collection.TraversableLike$class.map(TraversableLike.scala:234) at scala.collection.immutable.List.map(List.scala:285) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.DefaultQueryPlanner.planQueries(QueryPlanner.scala:51) at org.neo4j.cypher.internal.compiler.v3_1.planner.logical.DefaultQueryPlanner.plan(QueryPlanner.scala:36) at org.neo4j.cypher.internal.compiler.v3_1.planner.CostBasedExecutablePlanBuilder.produceLogicalPlan(CostBasedExecutablePlanBuilder.scala:95) at org.</description>
    </item>
    
    <item>
      <title>Neo4j: Procedure call inside a query does not support passing arguments implicitly (pass explicitly after procedure name instead)</title>
      <link>https://markhneedham.com/blog/2016/10/02/neo4j-procedure-call-inside-a-query-does-not-support-passing-arguments-implicitly-pass-explicitly-after-procedure-name-instead/</link>
      <pubDate>Sun, 02 Oct 2016 10:13:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/10/02/neo4j-procedure-call-inside-a-query-does-not-support-passing-arguments-implicitly-pass-explicitly-after-procedure-name-instead/</guid>
      <description>CALL db.labels ╒══════════╕ │label │ ╞══════════╡ │Airport │ ├──────────┤ │Flight │ ├──────────┤ │Airline │ ├──────────┤ │Movie │ ├──────────┤ │AirportDay│ ├──────────┤ │Person │ ├──────────┤ │Engineer │ └──────────┘ CALL db.labels YIELD label WITH label WHERE tolower(label) contains &amp;quot;a&amp;quot; RETURN label Procedure call inside a query does not support passing arguments implicitly (pass explicitly after procedure name instead) (line 1, column 9 (offset: 8)) &amp;#34;CALL db.labels&amp;#34; ^ CALL db.labels() YIELD label WITH label WHERE tolower(label) contains &amp;quot;a&amp;quot; RETURN label ╒══════════╕ │label │ ╞══════════╡ │Airport │ ├──────────┤ │Airline │ ├──────────┤ │AirportDay│ └──────────┘ </description>
    </item>
    
    <item>
      <title>scikit-learn: First steps with log_loss</title>
      <link>https://markhneedham.com/blog/2016/09/14/scikit-learn-first-steps-with-log_loss/</link>
      <pubDate>Wed, 14 Sep 2016 05:33:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/09/14/scikit-learn-first-steps-with-log_loss/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; actual_labels = [&amp;#34;bam&amp;#34;, &amp;#34;ham&amp;#34;, &amp;#34;spam&amp;#34;] &amp;gt;&amp;gt;&amp;gt; from sklearn.metrics import log_loss &amp;gt;&amp;gt;&amp;gt; log_loss(actual_labels, [[1, 0, 0], [0, 1, 0], [0, 0, 1]]) 2.1094237467877998e-15 &amp;gt;&amp;gt;&amp;gt; log_loss(actual_labels, [[0, 0, 1], [1, 0, 0], [0, 1, 0]]) 34.538776394910684 This means that the predicted probability for that given class would be less than exp(-1) or around 0.368.
So, seeing a log loss greater than one can be expected in the cass that that your model only gives less than a 36% probability estimate for the correct class.</description>
    </item>
    
    <item>
      <title>scikit-learn: Clustering and the curse of dimensionality</title>
      <link>https://markhneedham.com/blog/2016/08/27/scikit-learn-clustering-and-the-curse-of-dimensionality/</link>
      <pubDate>Sat, 27 Aug 2016 20:32:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/08/27/scikit-learn-clustering-and-the-curse-of-dimensionality/</guid>
      <description>But in very high-dimensional spaces, Euclidean distances tend to become inflated (this is an instance of the so-called “curse of dimensionality”).
Running a dimensionality reduction algorithm such as PCA prior to k-means clustering can alleviate this problem and speed up the computations.
from sklearn.metrics.pairwise import cosine_similarity import numpy as np def distances(a, b): return np.linalg.norm(a-b), cosine_similarity([a, b])[0][1] def mixed(n_zeros, n_ones): return np.concatenate((np.repeat([1], n_ones), np.repeat([0], n_zeros)), axis=0) def ones(n_ones): return np.repeat([1], n_ones) print distances(mixed(2, 2), ones(4)) print distances(mixed(3, 3), ones(6)) print distances(mixed(50, 50), ones(100)) print distances(mixed(300, 300), ones(600)) (1.</description>
    </item>
    
    <item>
      <title>scikit-learn: Trying to find clusters of Game of Thrones episodes</title>
      <link>https://markhneedham.com/blog/2016/08/25/scikit-learn-trying-to-find-clusters-of-game-of-thrones-episodes/</link>
      <pubDate>Thu, 25 Aug 2016 22:07:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/08/25/scikit-learn-trying-to-find-clusters-of-game-of-thrones-episodes/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; all.shape (60, 638) &amp;gt;&amp;gt;&amp;gt; all array([[0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], ..., [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0], [0, 0, 0, ..., 0, 0, 0]]) &amp;gt;&amp;gt;&amp;gt; from sklearn.cluster import KMeans &amp;gt;&amp;gt;&amp;gt; n_clusters = 3 &amp;gt;&amp;gt;&amp;gt; km = KMeans(n_clusters=n_clusters, init=&amp;#39;k-means++&amp;#39;, max_iter=100, n_init=1) &amp;gt;&amp;gt;&amp;gt; cluster_labels = km.fit_predict(all) &amp;gt;&amp;gt;&amp;gt; cluster_labels array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=int32) &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; np.</description>
    </item>
    
    <item>
      <title>Neo4j/scikit-learn: Calculating the cosine similarity of Game of Thrones episodes</title>
      <link>https://markhneedham.com/blog/2016/08/22/neo4jscikit-learn-calculating-the-cosine-similarity-of-game-of-thrones-episodes/</link>
      <pubDate>Mon, 22 Aug 2016 21:12:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/08/22/neo4jscikit-learn-calculating-the-cosine-similarity-of-game-of-thrones-episodes/</guid>
      <description>:play http://guides.neo4j.com/got Episode 1 = [1, 1, 0] Episode 2 = [0, 1, 1] &amp;gt;&amp;gt;&amp;gt; from sklearn.metrics.pairwise import cosine_similarity &amp;gt;&amp;gt;&amp;gt; one = [1,1,0] &amp;gt;&amp;gt;&amp;gt; two = [0,1,1] &amp;gt;&amp;gt;&amp;gt; cosine_similarity([one, two]) array([[ 1. , 0.5], [ 0.5, 1. ]]) from neo4j.v1 import GraphDatabase, basic_auth driver = GraphDatabase.driver(&amp;#34;bolt://localhost&amp;#34;, auth=basic_auth(&amp;#34;neo4j&amp;#34;, &amp;#34;neo&amp;#34;)) session = driver.session() rows = session.run(&amp;#34;&amp;#34;&amp;#34; MATCH (c:Character), (e:Episode) OPTIONAL MATCH (c)-[appearance:APPEARED_IN]-&amp;gt;(e) RETURN e, c, appearance ORDER BY e.id, c.id&amp;#34;&amp;#34;&amp;#34;) &amp;gt;&amp;gt;&amp;gt; for row in rows: print row &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5415 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Addam Marbrand&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Addam_Marbrand&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5882 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Adrack Humble&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Adrack_Humble&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=6747 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Aegon V Targaryen&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Aegon_V_Targaryen&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5750 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Aemon&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Aemon&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5928 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Aeron Greyjoy&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Aeron_Greyjoy&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5503 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Aerys II Targaryen&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Aerys_II_Targaryen&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=6753 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Alannys Greyjoy&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Alannys_Greyjoy&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=6750 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Alerie Tyrell&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Alerie_Tyrell&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5753 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Alliser Thorne&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Alliser_Thorne&amp;#39;}&amp;gt; appearance=None&amp;gt; &amp;lt;Record e=&amp;lt;Node id=6780 labels=set([u&amp;#39;Episode&amp;#39;]) properties={u&amp;#39;season&amp;#39;: 1, u&amp;#39;number&amp;#39;: 1, u&amp;#39;id&amp;#39;: 1, u&amp;#39;title&amp;#39;: u&amp;#39;Winter Is Coming&amp;#39;}&amp;gt; c=&amp;lt;Node id=5858 labels=set([u&amp;#39;Character&amp;#39;]) properties={u&amp;#39;name&amp;#39;: u&amp;#39;Alton Lannister&amp;#39;, u&amp;#39;id&amp;#39;: u&amp;#39;/wiki/Alton_Lannister&amp;#39;}&amp;gt; appearance=None&amp;gt; episodes = {} for row in rows: if episodes.</description>
    </item>
    
    <item>
      <title>Python: matplotlib, seaborn, virtualenv - Python is not installed as a framework</title>
      <link>https://markhneedham.com/blog/2016/08/14/python-matplotlibseabornvirtualenv-python-is-not-installed-as-a-framework/</link>
      <pubDate>Sun, 14 Aug 2016 18:56:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/08/14/python-matplotlibseabornvirtualenv-python-is-not-installed-as-a-framework/</guid>
      <description>$ python 5_content_based_recommender/run.py Traceback (most recent call last): File &amp;#34;5_content_based_recommender/run.py&amp;#34;, line 14, in &amp;lt;module&amp;gt; import seaborn as sns File &amp;#34;/Users/markneedham/projects/themarketingtechnologist/tmt/lib/python2.7/site-packages/seaborn/__init__.py&amp;#34;, line 6, in &amp;lt;module&amp;gt; from .rcmod import * File &amp;#34;/Users/markneedham/projects/themarketingtechnologist/tmt/lib/python2.7/site-packages/seaborn/rcmod.py&amp;#34;, line 8, in &amp;lt;module&amp;gt; from . import palettes, _orig_rc_params File &amp;#34;/Users/markneedham/projects/themarketingtechnologist/tmt/lib/python2.7/site-packages/seaborn/palettes.py&amp;#34;, line 12, in &amp;lt;module&amp;gt; from .utils import desaturate, set_hls_values, get_color_cycle File &amp;#34;/Users/markneedham/projects/themarketingtechnologist/tmt/lib/python2.7/site-packages/seaborn/utils.py&amp;#34;, line 12, in &amp;lt;module&amp;gt; import matplotlib.pyplot as plt File &amp;#34;/Users/markneedham/projects/themarketingtechnologist/tmt/lib/python2.7/site-packages/matplotlib/pyplot.py&amp;#34;, line 114, in &amp;lt;module&amp;gt; _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup() File &amp;#34;/Users/markneedham/projects/themarketingtechnologist/tmt/lib/python2.</description>
    </item>
    
    <item>
      <title>scikit-learn: TF/IDF and cosine similarity for computer science papers</title>
      <link>https://markhneedham.com/blog/2016/07/27/scitkit-learn-tfidf-and-cosine-similarity-for-computer-science-papers/</link>
      <pubDate>Wed, 27 Jul 2016 02:45:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/27/scitkit-learn-tfidf-and-cosine-similarity-for-computer-science-papers/</guid>
      <description>In other words, these algorithms try to recommend items that are similar to those that a user liked in the past (or is examining in the present).
for each paper: generate a TF/IDF vector of the terms in the paper&amp;#39;s title calculate the cosine similarity of each paper&amp;#39;s TF/IDF vector with every other paper&amp;#39;s TF/IDF vector import glob corpus = [] for file in glob.glob(&amp;#34;papers/*.txt&amp;#34;): with open(file, &amp;#34;r&amp;#34;) as paper: corpus.</description>
    </item>
    
    <item>
      <title>Mahout/Hadoop: org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4</title>
      <link>https://markhneedham.com/blog/2016/07/22/mahouthadoop-org-apache-hadoop-ipc-remoteexception-server-ipc-version-9-cannot-communicate-with-client-version-4/</link>
      <pubDate>Fri, 22 Jul 2016 13:55:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/22/mahouthadoop-org-apache-hadoop-ipc-remoteexception-server-ipc-version-9-cannot-communicate-with-client-version-4/</guid>
      <description>&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.mahout&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mahout-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Exception in thread &amp;#34;main&amp;#34; org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4 at org.apache.hadoop.ipc.Client.call(Client.java:1113) at org.apache.hadoop.ipc.RPC$Invoker.invoke(RPC.java:229) at com.sun.proxy.$Proxy1.getProtocolVersion(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:85) at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:62) at com.sun.proxy.$Proxy1.getProtocolVersion(Unknown Source) at org.apache.hadoop.ipc.RPC.checkVersion(RPC.java:422) at org.apache.hadoop.hdfs.DFSClient.createNamenode(DFSClient.java:183) at org.apache.hadoop.hdfs.DFSClient.&amp;lt;init&amp;gt;(DFSClient.java:281) at org.apache.hadoop.hdfs.DFSClient.&amp;lt;init&amp;gt;(DFSClient.java:245) at org.apache.hadoop.hdfs.DistributedFileSystem.initialize(DistributedFileSystem.java:100) at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:1446) at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:67) at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:1464) at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:263) at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:124) at com.markhneedham.mahout.Similarity.getDocIndex(Similarity.java:86) at com.markhneedham.mahout.Similarity.main(Similarity.java:25) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.</description>
    </item>
    
    <item>
      <title>Hadoop: DataNode not starting</title>
      <link>https://markhneedham.com/blog/2016/07/22/hadoop-datanode-not-starting/</link>
      <pubDate>Fri, 22 Jul 2016 13:31:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/22/hadoop-datanode-not-starting/</guid>
      <description>java.io.IOException: File /user/markneedham/book2.txt could only be replicated to 0 nodes, instead of 1 at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:1448) at org.apache.hadoop.hdfs.server.namenode.NameNode.addBlock(NameNode.java:690) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.apache.hadoop.ipc.WritableRpcEngine$Server.call(WritableRpcEngine.java:342) at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1350) at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1346) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:396) at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:742) at org.apache.hadoop.ipc.Server$Handler.run(Server.java:1344) at org.apache.hadoop.ipc.Client.call(Client.java:905) at org.apache.hadoop.ipc.WritableRpcEngine$Invoker.invoke(WritableRpcEngine.java:198) at $Proxy0.addBlock(Unknown Source) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:82) at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:59) at $Proxy0.addBlock(Unknown Source) at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.locateFollowingBlock(DFSOutputStream.java:928) at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.nextBlockOutputStream(DFSOutputStream.java:811) at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:427) 2016-07-21 18:58:00,496 WARN org.</description>
    </item>
    
    <item>
      <title>Mahout: Exception in thread &#34;main&#34; java.lang.IllegalArgumentException: Wrong FS: file:/... expected: hdfs://</title>
      <link>https://markhneedham.com/blog/2016/07/21/mahout-exception-in-thread-main-java-lang-illegalargumentexception-wrong-fs-file-expected-hdfs/</link>
      <pubDate>Thu, 21 Jul 2016 17:57:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/21/mahout-exception-in-thread-main-java-lang-illegalargumentexception-wrong-fs-file-expected-hdfs/</guid>
      <description>bin/mahout seqdirectory \ --input file:///Users/markneedham/Downloads/apache-mahout-distribution-0.12.2/foo \ --output file:///Users/markneedham/Downloads/apache-mahout-distribution-0.12.2/foo-out \ -c UTF-8 \ -chunk 64 \ -prefix mah 16/07/21 21:19:20 INFO AbstractJob: Command line arguments: {--charset=[UTF-8], --chunkSize=[64], --endPhase=[2147483647], --fileFilterClass=[org.apache.mahout.text.PrefixAdditionFilter], --input=[file:///Users/markneedham/Downloads/apache-mahout-distribution-0.12.2/foo], --keyPrefix=[mah], --method=[mapreduce], --output=[file:///Users/markneedham/Downloads/apache-mahout-distribution-0.12.2/foo-out], --startPhase=[0], --tempDir=[temp]} 16/07/21 21:19:20 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable 16/07/21 21:19:20 INFO deprecation: mapred.input.dir is deprecated. Instead, use mapreduce.input.fileinputformat.inputdir 16/07/21 21:19:20 INFO deprecation: mapred.compress.map.output is deprecated. Instead, use mapreduce.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Detecting duplicates using relationships</title>
      <link>https://markhneedham.com/blog/2016/07/20/neo4j-cypher-detecting-duplicates-using-relationships/</link>
      <pubDate>Wed, 20 Jul 2016 17:32:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/20/neo4j-cypher-detecting-duplicates-using-relationships/</guid>
      <description>MATCH (r:Resource {id: &amp;quot;168640&amp;quot;})-[:REFERENCES]-&amp;gt;(other) WITH r, COLLECT(other) as myReferences UNWIND myReferences AS reference OPTIONAL MATCH path = (other)-[:REFERENCES]-&amp;gt;(reference) WITH other, COUNT(path) AS otherReferences, SIZE(myReferences) AS myReferences WITH other, 1.0 * otherReferences / myReferences AS similarity WHERE similarity &amp;gt; 0.5 RETURN other.id, other.title, similarity ORDER BY similarity DESC LIMIT 10 ╒════════╤═══════════════════════════════════════════╤══════════╕ │other.id│other.title │similarity│ ╞════════╪═══════════════════════════════════════════╪══════════╡ │168640 │Authentication in the Taos operating system│1 │ ├────────┼───────────────────────────────────────────┼──────────┤ │174614 │Authentication in the Taos operating system│1 │ └────────┴───────────────────────────────────────────┴──────────┘ ╒════════╤════════════════════════════════════════════════════════════════╤══════════════════╕ │other.</description>
    </item>
    
    <item>
      <title>Python: Scraping elements relative to each other with BeautifulSoup</title>
      <link>https://markhneedham.com/blog/2016/07/11/python-scraping-elements-relative-to-each-other-with-beautifulsoup/</link>
      <pubDate>Mon, 11 Jul 2016 06:01:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/11/python-scraping-elements-relative-to-each-other-with-beautifulsoup/</guid>
      <description>from bs4 import BeautifulSoup file_name = &amp;#34;Arya_Stark&amp;#34; wikia = BeautifulSoup(open(&amp;#34;data/wikia/characters/{0}&amp;#34;.format(file_name), &amp;#34;r&amp;#34;), &amp;#34;html.parser&amp;#34;) allegiance_element = [tag for tag in wikia.find_all(&amp;#39;h3&amp;#39;) if tag.text == &amp;#34;Allegiance&amp;#34;] &amp;gt; print allegiance_element [&amp;lt;h3 class=&amp;#34;pi-data-label pi-secondary-font&amp;#34;&amp;gt;Allegiance&amp;lt;/h3&amp;gt;] next_element = allegiance_element[0].next_sibling &amp;gt; print next_element &amp;gt; print next_element.name, type(next_element) None &amp;lt;class &amp;#39;bs4.element.NavigableString&amp;#39;&amp;gt; next_element = allegiance_element[0].next_sibling.next_sibling &amp;gt; print next_element.name, type(next_element) [&amp;lt;a href=&amp;#34;/wiki/House_Stark&amp;#34; title=&amp;#34;House Stark&amp;#34;&amp;gt;House Stark&amp;lt;/a&amp;gt;, &amp;lt;br/&amp;gt;, &amp;lt;a href=&amp;#34;/wiki/Faceless_Men&amp;#34; title=&amp;#34;Faceless Men&amp;#34;&amp;gt;Faceless Men&amp;lt;/a&amp;gt;, u&amp;#39; (Formerly)&amp;#39;] </description>
    </item>
    
    <item>
      <title>Neo4j 3.0 Drivers - Failed to save the server ID and the certificate received from the server</title>
      <link>https://markhneedham.com/blog/2016/07/11/neo4j-3-0-drivers-failed-to-save-the-server-id-and-the-certificate-received-from-the-server/</link>
      <pubDate>Mon, 11 Jul 2016 05:21:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/11/neo4j-3-0-drivers-failed-to-save-the-server-id-and-the-certificate-received-from-the-server/</guid>
      <description>org.neo4j.driver.v1.exceptions.ClientException: Unable to process request: General SSLEngine problem at org.neo4j.driver.internal.connector.socket.SocketClient.start(SocketClient.java:88) at org.neo4j.driver.internal.connector.socket.SocketConnection.&amp;lt;init&amp;gt;(SocketConnection.java:63) at org.neo4j.driver.internal.connector.socket.SocketConnector.connect(SocketConnector.java:52) at org.neo4j.driver.internal.pool.InternalConnectionPool.acquire(InternalConnectionPool.java:113) at org.neo4j.driver.internal.InternalDriver.session(InternalDriver.java:53) Caused by: javax.net.ssl.SSLHandshakeException: General SSLEngine problem at sun.security.ssl.Handshaker.checkThrown(Handshaker.java:1431) at sun.security.ssl.SSLEngineImpl.checkTaskThrown(SSLEngineImpl.java:535) at sun.security.ssl.SSLEngineImpl.writeAppRecord(SSLEngineImpl.java:1214) at sun.security.ssl.SSLEngineImpl.wrap(SSLEngineImpl.java:1186) at javax.net.ssl.SSLEngine.wrap(SSLEngine.java:469) at org.neo4j.driver.internal.connector.socket.TLSSocketChannel.wrap(TLSSocketChannel.java:270) at org.neo4j.driver.internal.connector.socket.TLSSocketChannel.runHandshake(TLSSocketChannel.java:131) at org.neo4j.driver.internal.connector.socket.TLSSocketChannel.&amp;lt;init&amp;gt;(TLSSocketChannel.java:95) at org.neo4j.driver.internal.connector.socket.TLSSocketChannel.&amp;lt;init&amp;gt;(TLSSocketChannel.java:77) at org.neo4j.driver.internal.connector.socket.TLSSocketChannel.&amp;lt;init&amp;gt;(TLSSocketChannel.java:70) at org.neo4j.driver.internal.connector.socket.SocketClient$ChannelFactory.create(SocketClient.java:251) at org.neo4j.driver.internal.connector.socket.SocketClient.start(SocketClient.java:75) ... 14 more Caused by: javax.net.ssl.SSLHandshakeException: General SSLEngine problem at sun.security.ssl.Alerts.getSSLException(Alerts.java:192) at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1728) at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:304) at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:296) at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1497) at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:212) at sun.</description>
    </item>
    
    <item>
      <title>R: Sentiment analysis of morning pages</title>
      <link>https://markhneedham.com/blog/2016/07/09/r-sentiment-analysis-of-morning-pages/</link>
      <pubDate>Sat, 09 Jul 2016 06:36:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/07/09/r-sentiment-analysis-of-morning-pages/</guid>
      <description>There is no wrong way to do Morning Pages – they are not high art.
They are not even “writing.” They are about anything and everything that crosses your mind– and they are for your eyes only.
Morning Pages provoke, clarify, comfort, cajole, prioritize and synchronize the day at hand. Do not over-think Morning Pages: just put three pages of anything on the page…and then do three more pages tomorrow.</description>
    </item>
    
    <item>
      <title>Python: BeautifulSoup - Insert tag</title>
      <link>https://markhneedham.com/blog/2016/06/30/python-beautifulsoup-insert-tag/</link>
      <pubDate>Thu, 30 Jun 2016 21:28:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/06/30/python-beautifulsoup-insert-tag/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; from bs4 import BeautifulSoup &amp;gt;&amp;gt;&amp;gt; tag = BeautifulSoup(&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;, &amp;#34;html.parser&amp;#34;) &amp;gt;&amp;gt;&amp;gt; tag &amp;lt;br/&amp;gt; &amp;gt;&amp;gt;&amp;gt; tag.name u&amp;#39;[document]&amp;#39; &amp;gt;&amp;gt;&amp;gt; from bs4 import Tag &amp;gt;&amp;gt;&amp;gt; tag = Tag(name = &amp;#34;br&amp;#34;) &amp;gt;&amp;gt;&amp;gt; tag &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;gt;&amp;gt;&amp;gt; tag.name &amp;#39;br&amp;#39; </description>
    </item>
    
    <item>
      <title>Unix: Find files greater than date</title>
      <link>https://markhneedham.com/blog/2016/06/24/unix-find-files-greater-than-date/</link>
      <pubDate>Fri, 24 Jun 2016 16:56:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/06/24/unix-find-files-greater-than-date/</guid>
      <description>$ ls -alh foo/database-agent-* -rw-r--r-- 1 markneedham wheel 2.5K 23 Jun 14:00 foo/database-agent-mac17f73-1-logs-archive-201606231300176.tar.gz -rw-r--r-- 1 markneedham wheel 8.6K 23 Jun 11:49 foo/database-agent-mac19b6b-1-logs-archive-201606231049507.tar.gz -rw-r--r-- 1 markneedham wheel 8.6K 23 Jun 11:49 foo/database-agent-mac1f427-1-logs-archive-201606231049507.tar.gz -rw-r--r-- 1 markneedham wheel 2.5K 23 Jun 14:00 foo/database-agent-mac29389-1-logs-archive-201606231300176.tar.gz -rw-r--r-- 1 markneedham wheel 11K 23 Jun 13:44 foo/database-agent-mac3533f-1-logs-archive-201606231244152.tar.gz -rw-r--r-- 1 markneedham wheel 4.8K 23 Jun 14:00 foo/database-agent-mac35563-1-logs-archive-201606231300176.tar.gz -rw-r--r-- 1 markneedham wheel 3.8K 23 Jun 13:44 foo/database-agent-mac35f7e-1-logs-archive-201606231244165.tar.gz -rw-r--r-- 1 markneedham wheel 4.</description>
    </item>
    
    <item>
      <title>Unix: Find all text below string in a file</title>
      <link>https://markhneedham.com/blog/2016/06/19/unix-find-all-text-below-string-in-a-file/</link>
      <pubDate>Sun, 19 Jun 2016 08:36:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/06/19/unix-find-all-text-below-string-in-a-file/</guid>
      <description># text I don&amp;#39;t care about = Heading of the bit I care about # text I care about $ cat /tmp/foo.txt # text I don&amp;#39;t care about = Heading of the bit I care about # text I care about $ cat /tmp/foo.txt | sed &amp;#39;1,/Heading of the bit I care about/d&amp;#39; # text I care about $ cat /tmp/foo.txt | sed -e &amp;#39;1,/Heading of the bit I care about/d&amp;#39; -e &amp;#39;/^\s*$/d&amp;#39; # text I care about </description>
    </item>
    
    <item>
      <title>Unix: Split string using separator</title>
      <link>https://markhneedham.com/blog/2016/06/19/unix-split-string-using-separator/</link>
      <pubDate>Sun, 19 Jun 2016 07:22:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/06/19/unix-split-string-using-separator/</guid>
      <description>A/B/C $ string=&amp;#34;A/B/C&amp;#34; $ echo ${string} | cut -d&amp;#34;/&amp;#34; -f3 C $ echo ${string} | awk -F&amp;#34;/&amp;#34; &amp;#39;{ print $3}&amp;#39; C $ IFS=&amp;#34;/&amp;#34; read -ra ADDR &amp;lt;&amp;lt;&amp;lt; &amp;#34;${string}&amp;#34;; echo ${ADDR[2]} C $ IFS=&amp;#34;/&amp;#34; read -ra ADDR &amp;lt;&amp;lt;&amp;lt; &amp;#34;${string}&amp;#34;; echo ${ADDR[-1]} C $ echo ${string##*/} C </description>
    </item>
    
    <item>
      <title>Python: Regex - matching foreign characters/unicode letters</title>
      <link>https://markhneedham.com/blog/2016/06/18/python-regex-matching-foreign-charactersunicode-letters/</link>
      <pubDate>Sat, 18 Jun 2016 07:38:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/06/18/python-regex-matching-foreign-charactersunicode-letters/</guid>
      <description>Peter Dinklage as Tyrion Lannister Daniel Naprous as Oznak zo Pahl(credited as Stunt Performer) Filip Lozić as Young Nobleman Morgan C. Jones as a Braavosi captain Adewale Akinnuoye-Agbaje as Malko &amp;lt;actor&amp;gt; as &amp;lt;character&amp;gt; Peter Dinklage, Tyrion Lannister Daniel Naprous, Oznak zo Pahl Filip Lozić, Young Nobleman Morgan C. Jones, a Braavosi captain Adewale Akinnuoye-Agbaje, Malko import re strings = [ &amp;#34;Peter Dinklage as Tyrion Lannister&amp;#34;, &amp;#34;Filip Lozić as Young Nobleman&amp;#34;, &amp;#34;Daniel Naprous as Oznak zo Pahl(credited as Stunt Performer)&amp;#34;, &amp;#34;Morgan C.</description>
    </item>
    
    <item>
      <title>Unix parallel: Populating all the USB sticks</title>
      <link>https://markhneedham.com/blog/2016/06/01/unix-parallel-populating-all-the-usb-sticks/</link>
      <pubDate>Wed, 01 Jun 2016 05:53:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/06/01/unix-parallel-populating-all-the-usb-sticks/</guid>
      <description>for i in 1 2 3 4 5 6 7; do diskutil renameVolume &amp;#34;USB DISK&amp;#34; NEO4J${i}; done function duplicate() { i=${1} echo ${i} time rsync -avP --size-only --delete --exclude &amp;#39;.*&amp;#39; --omit-dir-times /Users/markneedham/Downloads/graph-connect-europe-2016/ /Volumes/NEO4J${i}/ } seq 1 7 | parallel duplicate </description>
    </item>
    
    <item>
      <title>Neo4j vs Relational: Refactoring - Extracting node/table</title>
      <link>https://markhneedham.com/blog/2016/05/22/neo4j-vs-relational-refactoring-extracting-nodetable/</link>
      <pubDate>Sun, 22 May 2016 09:58:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/05/22/neo4j-vs-relational-refactoring-extracting-nodetable/</guid>
      <description>CREATE TABLE countries ( &amp;#34;code&amp;#34; character varying(3) NOT NULL PRIMARY KEY, &amp;#34;name&amp;#34; character varying(50) NOT NULL ); INSERT INTO countries VALUES(&amp;#39;MNE&amp;#39;, &amp;#39;Montenegro&amp;#39;); INSERT INTO countries VALUES(&amp;#39;SWZ&amp;#39;, &amp;#39;Swaziland&amp;#39;); ... ALTER TABLE clubs ADD COLUMN country_id character varying(3) REFERENCES countries(code); UPDATE clubs AS cl SET country_id = c.code FROM clubs INNER JOIN countries AS c ON c.name = clubs.country WHERE cl.id = clubs.id; ALTER TABLE clubs DROP COLUMN country; ALTER TABLE players ADD COLUMN country_id character varying(3) REFERENCES countries(code); UPDATE players AS p SET country_id = c.</description>
    </item>
    
    <item>
      <title>Neo4j vs Relational: Refactoring - Add a new field/property</title>
      <link>https://markhneedham.com/blog/2016/05/22/neo4j-vs-relational-refactoring-add-a-new-fieldproperty/</link>
      <pubDate>Sun, 22 May 2016 09:09:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/05/22/neo4j-vs-relational-refactoring-add-a-new-fieldproperty/</guid>
      <description>RelationalGraphALTER TABLE players ADD COLUMN nationality varying(30); UPDATE players SET nationality = &amp;#39;Brazil&amp;#39; WHERE players.id = &amp;#39;/aldair/profil/spieler/4151&amp;#39;; ... USING PERIODIC COMMIT LOAD CSV WITH HEADERS FROM &amp;quot;file:///transfers.csv&amp;quot; AS row MATCH (player:Player {id: row.playerUri}) SET player.nationality = row.playerNationality ALTER TABLE players ALTER COLUMN nationality SET NOT NULL CREATE CONSTRAINT ON (player:Player) ASSERT exists(player.nationality) </description>
    </item>
    
    <item>
      <title>R: substr - Getting a vector of positions</title>
      <link>https://markhneedham.com/blog/2016/04/18/r-substr-getting-a-vector-of-positions/</link>
      <pubDate>Mon, 18 Apr 2016 19:49:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/04/18/r-substr-getting-a-vector-of-positions/</guid>
      <description>&amp;gt; substr(&amp;#34;mark loves graphs&amp;#34;, 0, 4) [1] &amp;#34;mark&amp;#34; &amp;gt; substr(&amp;#34;mark loves graphs&amp;#34;, c(0, 6), c(4, 10)) [1] &amp;#34;mark&amp;#34; &amp;gt; substring(&amp;#34;mark loves graphs&amp;#34;, c(0, 6, 12), c(4, 10, 17)) [1] &amp;#34;mark&amp;#34; &amp;#34;loves&amp;#34; &amp;#34;graphs&amp;#34; </description>
    </item>
    
    <item>
      <title>R: tm - Unique words/terms per document</title>
      <link>https://markhneedham.com/blog/2016/04/11/r-tm-unique-wordsterms-per-document/</link>
      <pubDate>Mon, 11 Apr 2016 05:40:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/04/11/r-tm-unique-wordsterms-per-document/</guid>
      <description>library(tm) text = c(&amp;#34;I am Mark I am Mark&amp;#34;, &amp;#34;Neo4j is cool Neo4j is cool&amp;#34;) corpus = VCorpus(VectorSource(text)) tdm = as.matrix(TermDocumentMatrix(corpus, control = list(wordLengths = c(1, Inf)))) &amp;gt; tdm Docs Terms 1 2 am 2 0 cool 0 2 i 2 0 is 0 2 mark 2 0 neo4j 0 2 &amp;gt; rowSums(tdm) am cool i is mark neo4j 2 2 2 2 2 2 uniqueWords = function(d) { return(paste(unique(strsplit(d, &amp;#34; &amp;#34;)[[1]]), collapse = &amp;#39; &amp;#39;)) } corpus = tm_map(corpus, content_transformer(uniqueWords)) tdm = as.</description>
    </item>
    
    <item>
      <title>Neo4j: A procedure for the SLM clustering algorithm</title>
      <link>https://markhneedham.com/blog/2016/02/28/neo4j-a-procedure-for-the-slm-clustering-algorithm/</link>
      <pubDate>Sun, 28 Feb 2016 20:40:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/02/28/neo4j-a-procedure-for-the-slm-clustering-algorithm/</guid>
      <description>LOAD CSV FROM &amp;quot;file:///Users/markneedham/projects/slm/karate_club_network.txt&amp;quot; as row FIELDTERMINATOR &amp;quot;\t&amp;quot; MERGE (person1:Person {id: row[0]}) MERGE (person2:Person {id: row[1]}) MERGE (person1)-[:KNOWS]-&amp;gt;(person2) public class ClusterAllTheThings { @Context public org.neo4j.graphdb.GraphDatabaseService db; @Procedure @PerformsWrites public Stream&amp;lt;Cluster&amp;gt; knows() throws IOException { String query = &amp;#34;MATCH (person1:Person)-[r:KNOWS]-&amp;gt;(person2:Person) \n&amp;#34; + &amp;#34;RETURN person1.id AS p1, person2.id AS p2, toFloat(1) AS weight&amp;#34;; Result rows = db.execute( query ); ModularityOptimizer.ModularityFunction modularityFunction = ModularityOptimizer.ModularityFunction.Standard; Network network = Network.create( modularityFunction, rows ); double resolution = 1.</description>
    </item>
    
    <item>
      <title>Clojure: First steps with reducers</title>
      <link>https://markhneedham.com/blog/2016/01/24/clojure-first-steps-with-reducers/</link>
      <pubDate>Sun, 24 Jan 2016 22:01:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/01/24/clojure-first-steps-with-reducers/</guid>
      <description>(defn log2 [n] (/ (Math/log n) (Math/log 2))) (defn score-item [n] (if (= n 0) 0 (log2 n))) (+ (score-item 12) (score-item 13) (score-item 5)) 9.60733031374961 (reduce #(+ %1 (score-item %2)) 0 [12 13 5]) 9.60733031374961 (reduce #(+ %1 (score-item %2)) 0 [12 13 5 6]) 12.192292814470767 (require &amp;#39;[clojure.core.reducers :as r]) (r/reduce #(+ %1 (score-item %2)) 0 [12 13 5 6]) 12.192292814470767 (-&amp;gt;&amp;gt;[12 13 5 6] (map score-item) (filter #(&amp;gt; % 3))) (3.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - avoid duplicate calls to NOT patterns</title>
      <link>https://markhneedham.com/blog/2016/01/17/neo4j-cypher-avoid-duplicate-calls-to-not-patterns/</link>
      <pubDate>Sun, 17 Jan 2016 12:19:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2016/01/17/neo4j-cypher-avoid-duplicate-calls-to-not-patterns/</guid>
      <description>MATCH (member:Member {name: &amp;quot;Mark Needham&amp;quot;})-[:MEMBER_OF]-&amp;gt;(group:Group)&amp;lt;-[:MEMBER_OF]-(other:Member)-[:MEMBER_OF]-&amp;gt;(otherGroup:Group) RETURN otherGroup, COUNT(*) AS commonMembers ORDER BY commonMembers DESC LIMIT 5 Cypher version: CYPHER 2.3, planner: COST. 1084378 total db hits in 1103 ms. MATCH (member:Member {name: &amp;quot;Mark Needham&amp;quot;})-[:MEMBER_OF]-&amp;gt;(group:Group)&amp;lt;-[:MEMBER_OF]-(other:Member)-[:MEMBER_OF]-&amp;gt;(otherGroup:Group) WHERE NOT (member)-[:MEMBER_OF]-&amp;gt;(otherGroup) RETURN otherGroup, COUNT(*) AS commonMembers ORDER BY commonMembers DESC LIMIT 5 Cypher version: CYPHER 2.3, planner: COST. 14061442 total db hits in 3364 ms. When following longer paths, you’ll encounter duplicates. If you’re not interested in all the possible paths– but just distinct information from stages of the path – make sure that you eagerly eliminate duplicates, so that later matches don’t have to be executed many multiple times.</description>
    </item>
    
    <item>
      <title>2015: A year in the life of the Neo4j London meetup group</title>
      <link>https://markhneedham.com/blog/2015/12/31/2015-a-year-in-the-life-of-the-neo4j-london-meetup-group/</link>
      <pubDate>Thu, 31 Dec 2015 13:58:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/12/31/2015-a-year-in-the-life-of-the-neo4j-london-meetup-group/</guid>
      <description>library(RNeo4j) library(ggplot2) library(dplyr) library(zoo) graph = startGraph(&amp;#34;http://localhost:7474/db/data/&amp;#34;, username = &amp;#34;neo4j&amp;#34;, password = &amp;#34;myPassword&amp;#34;) query = &amp;#34;MATCH (:Group {name: {name}})&amp;lt;-[membership:MEMBER_OF]-() RETURN membership.joined AS timestamp&amp;#34; joinedDF = cypher(graph, query, name = &amp;#34;Neo4j - London User Group&amp;#34;) joinedDF$joinDate = as.Date(as.POSIXct(joinedDF$timestamp / 1000, origin=&amp;#34;1970-01-01&amp;#34;)) joinedDF$joinDate = as.Date(as.POSIXct(joinedDF$timestamp / 1000, origin=&amp;#34;1970-01-01&amp;#34;)) ggplot(aes(x = year, y = n, label = n), data = joinedDF %&amp;gt;% mutate(year = format(joinDate, &amp;#34;%Y&amp;#34;)) %&amp;gt;% count(year)) + geom_bar(stat = &amp;#34;identity&amp;#34;, fill = &amp;#34;Dark Blue&amp;#34;) + ggtitle(&amp;#34;Number of new members by year&amp;#34;) + geom_text(vjust=-0.</description>
    </item>
    
    <item>
      <title>Study until your mind wanders</title>
      <link>https://markhneedham.com/blog/2015/12/31/study-until-your-mind-wanders/</link>
      <pubDate>Thu, 31 Dec 2015 10:47:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/12/31/study-until-your-mind-wanders/</guid>
      <description></description>
    </item>
    
    <item>
      <title>R: Error in approxfun(x.values.1, y.values.1, method = &#34;constant&#34;, f = 1, :  zero non-NA points</title>
      <link>https://markhneedham.com/blog/2015/12/27/r-error-in-approxfunx-values-1-y-values-1-method-constant-f-1-zero-non-na-points/</link>
      <pubDate>Sun, 27 Dec 2015 12:24:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/12/27/r-error-in-approxfunx-values-1-y-values-1-method-constant-f-1-zero-non-na-points/</guid>
      <description>Source: local data frame [2 x 2] attended n (dbl) (int) 1 0 1541 2 1 53 attended = as.factor((df %&amp;gt;% dplyr::select(attended))$attended) upSampledDf = upSample(df %&amp;gt;% dplyr::select(-attended), attended) upSampledDf$attended = as.numeric(as.character(upSampledDf$Class)) p &amp;lt;- predict(model, newdata=test, type=&amp;#34;response&amp;#34;) pr &amp;lt;- prediction(p, test$attended) prf &amp;lt;- performance(pr, measure = &amp;#34;tpr&amp;#34;, x.measure = &amp;#34;fpr&amp;#34;) Error in approxfun(x.values.1, y.values.1, method = &amp;#34;constant&amp;#34;, f = 1, : zero non-NA points &amp;gt; test %&amp;gt;% count(attended) Source: local data frame [1 x 2] attended n (dbl) (int) 1 1 582 </description>
    </item>
    
    <item>
      <title>Python: Squashing &#39;duplicate&#39; pairs together</title>
      <link>https://markhneedham.com/blog/2015/12/20/python-squashing-duplicate-pairs-together/</link>
      <pubDate>Sun, 20 Dec 2015 12:12:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/12/20/python-squashing-duplicate-pairs-together/</guid>
      <description>A	B	(A is the same as B) B	C	(B is the same as C) C	D	... E	F	(E is the same as F) F	G	... (A, B, C, D) (E, F, G) pairs = [ (&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;), (&amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;), (&amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;), (&amp;#34;E&amp;#34;, &amp;#34;F&amp;#34;), (&amp;#34;F&amp;#34;, &amp;#34;G&amp;#34;) ] def find_matching_index(pair, dups): return [index for index, dup in enumerate(dups) if pair[0] in dup or pair[1] in dup] print find_matching_index((&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;), [set([&amp;#34;D&amp;#34;, &amp;#34;E&amp;#34;])]) [] print find_matching_index((&amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;), [set([&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;])]) [0] print find_matching_index((&amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;), [set([&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;]), set([&amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;])]) [0, 1] def extract_groups(items): dups = [] for pair in items: matching_index = find_matching_index(pair, dups) if len(matching_index) == 0: dups.</description>
    </item>
    
    <item>
      <title>Neo4j: Specific relationship vs Generic relationship &#43; property</title>
      <link>https://markhneedham.com/blog/2015/12/13/neo4j-specific-relationship-vs-generic-relationship-property/</link>
      <pubDate>Sun, 13 Dec 2015 21:22:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/12/13/neo4j-specific-relationship-vs-generic-relationship-property/</guid>
      <description>MATCH (member:Member {name: &amp;quot;Mark Needham&amp;quot;}) MATCH (futureEvent:Event) WHERE futureEvent.time &amp;gt;= timestamp() MATCH (futureEvent)&amp;lt;-[:HOSTED_EVENT]-(group) OPTIONAL MATCH (member)-[rsvp:RSVPD {response: &amp;quot;yes&amp;quot;}]-&amp;gt;(pastEvent)&amp;lt;-[:HOSTED_EVENT]-(group) WHERE pastEvent.time &amp;lt; timestamp() RETURN group.name, futureEvent.name, COUNT(rsvp) AS previousEvents ORDER BY previousEvents DESC MATCH (member:Member {name: &amp;quot;Mark Needham&amp;quot;}) MATCH (futureEvent:Event) WHERE futureEvent.time &amp;gt;= timestamp() MATCH (futureEvent)&amp;lt;-[:HOSTED_EVENT]-(group) OPTIONAL MATCH (member)-[rsvp:RSVP_YES]-&amp;gt;(pastEvent)&amp;lt;-[:HOSTED_EVENT]-(group) WHERE pastEvent.time &amp;lt; timestamp() RETURN group.name, futureEvent.name, COUNT(rsvp) AS previousEvents ORDER BY previousEvents DESC RSVPD {response: &amp;#34;yes&amp;#34;} Cypher version: CYPHER 2.3, planner: COST.</description>
    </item>
    
    <item>
      <title>Neo4j: Facts as nodes</title>
      <link>https://markhneedham.com/blog/2015/12/04/neo4j-facts-as-nodes/</link>
      <pubDate>Fri, 04 Dec 2015 07:52:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/12/04/neo4j-facts-as-nodes/</guid>
      <description>Modeling an action in terms of its product—that is, in terms of the thing that results from the action—produces a similar structure: an intermediate node that represents the outcome of an interaction between two or more entities.
MATCH (member:Member {name: &amp;quot;Mark Needham&amp;quot;})-[:MEMBER_OF]-&amp;gt;(group)-[:HAS_TOPIC]-&amp;gt;(topic) WITH member, topic, COUNT(*) AS score MATCH (topic)&amp;lt;-[:HAS_TOPIC]-(otherGroup) WHERE NOT (member)-[:MEMBER_OF]-&amp;gt;(otherGroup) RETURN otherGroup.name, COLLECT(topic.name), SUM(score) as score ORDER BY score DESC Cypher version: CYPHER 2.3, planner: COST. 89100 total db hits in 113 ms.</description>
    </item>
    
    <item>
      <title>Python: Parsing a JSON HTTP chunking stream</title>
      <link>https://markhneedham.com/blog/2015/11/28/python-parsing-a-json-http-chunking-stream/</link>
      <pubDate>Sat, 28 Nov 2015 13:56:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/11/28/python-parsing-a-json-http-chunking-stream/</guid>
      <description>import requests import json def stream_meetup_initial(): uri = &amp;#34;http://stream.meetup.com/2/rsvps&amp;#34; response = requests.get(uri, stream = True) for chunk in response.iter_content(chunk_size = None): yield chunk for raw_rsvp in stream_meetup_initial(): print raw_rsvp try: rsvp = json.loads(raw_rsvp) except ValueError as e: print e continue No JSON object could be decoded def stream_meetup_newline(): uri = &amp;#34;http://stream.meetup.com/2/rsvps&amp;#34; response = requests.get(uri, stream = True) buffer = &amp;#34;&amp;#34; for chunk in response.iter_content(chunk_size = 1): if chunk.endswith(&amp;#34;\n&amp;#34;): buffer += chunk yield buffer buffer = &amp;#34;&amp;#34; else: buffer += chunk r = requests.</description>
    </item>
    
    <item>
      <title>jq: Cannot iterate over number / string and number cannot be added</title>
      <link>https://markhneedham.com/blog/2015/11/24/jq-cannot-iterate-over-number-string-and-number-cannot-be-added/</link>
      <pubDate>Tue, 24 Nov 2015 00:12:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/11/24/jq-cannot-iterate-over-number-string-and-number-cannot-be-added/</guid>
      <description>$ head -n40 data/members/18313232.json [ { &amp;#34;status&amp;#34;: &amp;#34;active&amp;#34;, &amp;#34;city&amp;#34;: &amp;#34;London&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;. .&amp;#34;, &amp;#34;other_services&amp;#34;: {}, &amp;#34;country&amp;#34;: &amp;#34;gb&amp;#34;, &amp;#34;topics&amp;#34;: [], &amp;#34;lon&amp;#34;: -0.13, &amp;#34;joined&amp;#34;: 1438866605000, &amp;#34;id&amp;#34;: 92951932, &amp;#34;state&amp;#34;: &amp;#34;17&amp;#34;, &amp;#34;link&amp;#34;: &amp;#34;http://www.meetup.com/members/92951932&amp;#34;, &amp;#34;photo&amp;#34;: { &amp;#34;thumb_link&amp;#34;: &amp;#34;http://photos1.meetupstatic.com/photos/member/8/d/6/b/thumb_250896203.jpeg&amp;#34;, &amp;#34;photo_id&amp;#34;: 250896203, &amp;#34;highres_link&amp;#34;: &amp;#34;http://photos1.meetupstatic.com/photos/member/8/d/6/b/highres_250896203.jpeg&amp;#34;, &amp;#34;photo_link&amp;#34;: &amp;#34;http://photos1.meetupstatic.com/photos/member/8/d/6/b/member_250896203.jpeg&amp;#34; }, &amp;#34;lat&amp;#34;: 51.49, &amp;#34;visited&amp;#34;: 1446745707000, &amp;#34;self&amp;#34;: { &amp;#34;common&amp;#34;: {} } }, { &amp;#34;status&amp;#34;: &amp;#34;active&amp;#34;, &amp;#34;city&amp;#34;: &amp;#34;London&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Abdelkader Idryssy&amp;#34;, &amp;#34;other_services&amp;#34;: {}, &amp;#34;country&amp;#34;: &amp;#34;gb&amp;#34;, &amp;#34;topics&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Weekend Adventures&amp;#34;, &amp;#34;urlkey&amp;#34;: &amp;#34;weekend-adventures&amp;#34;, &amp;#34;id&amp;#34;: 16438 }, { &amp;#34;name&amp;#34;: &amp;#34;Community Building&amp;#34;, &amp;#34;urlkey&amp;#34;: &amp;#34;community-building&amp;#34;, $ jq -r &amp;#39;.</description>
    </item>
    
    <item>
      <title>jq: Filtering missing keys</title>
      <link>https://markhneedham.com/blog/2015/11/14/jq-filtering-missing-keys/</link>
      <pubDate>Sat, 14 Nov 2015 22:51:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/11/14/jq-filtering-missing-keys/</guid>
      <description>$ jq -r &amp;#34;.[0]&amp;#34; data/events/0.json { &amp;#34;status&amp;#34;: &amp;#34;past&amp;#34;, &amp;#34;rating&amp;#34;: { &amp;#34;count&amp;#34;: 1, &amp;#34;average&amp;#34;: 1 }, &amp;#34;utc_offset&amp;#34;: 3600000, &amp;#34;event_url&amp;#34;: &amp;#34;http://www.meetup.com/londonweb/events/3261890/&amp;#34;, &amp;#34;group&amp;#34;: { &amp;#34;who&amp;#34;: &amp;#34;Web Peeps&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;London Web&amp;#34;, &amp;#34;group_lat&amp;#34;: 51.52000045776367, &amp;#34;created&amp;#34;: 1034097743000, &amp;#34;join_mode&amp;#34;: &amp;#34;approval&amp;#34;, &amp;#34;group_lon&amp;#34;: -0.12999999523162842, &amp;#34;urlname&amp;#34;: &amp;#34;londonweb&amp;#34;, &amp;#34;id&amp;#34;: 163876 }, &amp;#34;name&amp;#34;: &amp;#34;London Web Design October Meetup&amp;#34;, &amp;#34;created&amp;#34;: 1094756756000, &amp;#34;venue&amp;#34;: { &amp;#34;city&amp;#34;: &amp;#34;London&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Roadhouse Live Music Restaurant , Bar &amp;amp; Club&amp;#34;, &amp;#34;country&amp;#34;: &amp;#34;GB&amp;#34;, &amp;#34;lon&amp;#34;: -0.1, &amp;#34;phone&amp;#34;: &amp;#34;44-020-7240-6001&amp;#34;, &amp;#34;address_1&amp;#34;: &amp;#34;The Piazza&amp;#34;, &amp;#34;address_2&amp;#34;: &amp;#34;Covent Garden&amp;#34;, &amp;#34;repinned&amp;#34;: false, &amp;#34;lat&amp;#34;: 51.</description>
    </item>
    
    <item>
      <title>Docker 1.9: Port forwarding on Mac OS X</title>
      <link>https://markhneedham.com/blog/2015/11/08/docker-1-9-port-forwarding-on-mac-os-x/</link>
      <pubDate>Sun, 08 Nov 2015 20:58:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/11/08/docker-1-9-port-forwarding-on-mac-os-x/</guid>
      <description>docker run --detach --publish=7474:7474 neo4j/neo4j $ curl http://localhost:7474 curl: (7) Failed to connect to localhost port 7474: Connection refused $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 1f7c48e267f0 neo4j/neo4j &amp;#34;/docker-entrypoint.s&amp;#34; 10 minutes ago Up 10 minutes 7473/tcp, 0.0.0.0:7474-&amp;gt;7474/tcp kickass_easley $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM default * virtualbox Running tcp://192.168.99.100:2376 $ curl http://192.168.99.100:7474 { &amp;#34;management&amp;#34; : &amp;#34;http://192.168.99.100:7474/db/manage/&amp;#34;, &amp;#34;data&amp;#34; : &amp;#34;http://192.168.99.100:7474/db/data/&amp;#34; } </description>
    </item>
    
    <item>
      <title>IntelliJ &#39;java: cannot find JDK 1.8&#39;</title>
      <link>https://markhneedham.com/blog/2015/11/08/intellij-java-cannot-find-jdk-1-8/</link>
      <pubDate>Sun, 08 Nov 2015 11:47:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/11/08/intellij-java-cannot-find-jdk-1-8/</guid>
      <description>module-name java: cannot find JDK 1.8 $ less /Users/markneedham/Library/Logs/IntelliJIdea15/idea.log 2015-11-05 16:31:28,429 [ 428129] INFO - figurations.GeneralCommandLine - Cannot run program &amp;#34;/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/bin/java&amp;#34; (in directory &amp;#34;/Applications/IntelliJ IDEA 15.app/Contents/bin&amp;#34;): error=2, No such file or directory java.io.IOException: Cannot run program &amp;#34;/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/bin/java&amp;#34; (in directory &amp;#34;/Applications/IntelliJ IDEA 15.app/Contents/bin&amp;#34;): error=2, No such file or directory at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048) at com.intellij.execution.configurations.GeneralCommandLine.startProcess(GeneralCommandLine.java:368) at com.intellij.execution.configurations.GeneralCommandLine.createProcess(GeneralCommandLine.java:354) at com.intellij.execution.process.OSProcessHandler.&amp;lt;init&amp;gt;(OSProcessHandler.java:38) at org.jetbrains.idea.maven.server.MavenServerManager$3.startProcess(MavenServerManager.java:359) at org.jetbrains.idea.maven.server.MavenServerManager$3.execute(MavenServerManager.java:345) at com.intellij.execution.rmi.RemoteProcessSupport.a(RemoteProcessSupport.java:206) at com.intellij.execution.rmi.RemoteProcessSupport.acquire(RemoteProcessSupport.java:139) at org.jetbrains.idea.maven.server.MavenServerManager.create(MavenServerManager.java:163) at org.jetbrains.idea.maven.server.MavenServerManager.create(MavenServerManager.java:71) at org.jetbrains.idea.maven.server.RemoteObjectWrapper.getOrCreateWrappee(RemoteObjectWrapper.java:41) at org.</description>
    </item>
    
    <item>
      <title>Hadoop: HDFS - ava.lang.NoSuchMethodError: org.apache.hadoop.fs.FSOutputSummer.&lt;init&gt;(Ljava/util/zip/Checksum;II)V</title>
      <link>https://markhneedham.com/blog/2015/10/31/hadoop-hdfs-ava-lang-nosuchmethoderror-org-apache-hadoop-fs-fsoutputsummer-ljavautilzipchecksumiiv/</link>
      <pubDate>Sat, 31 Oct 2015 23:58:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/10/31/hadoop-hdfs-ava-lang-nosuchmethoderror-org-apache-hadoop-fs-fsoutputsummer-ljavautilzipchecksumiiv/</guid>
      <description>package org.playground; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.FSDataInputStream; import org.apache.hadoop.fs.FSDataOutputStream; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import java.io.IOException; public class HadoopDFSFileReadWrite { static void printAndExit(String str) { System.err.println( str ); System.exit(1); } public static void main (String[] argv) throws IOException { Configuration conf = new Configuration(); conf.addResource(new Path(&amp;#34;/Users/markneedham/Downloads/core-site.xml&amp;#34;)); FileSystem fs = FileSystem.get(conf); Path inFile = new Path(&amp;#34;hdfs://192.168.0.11/user/markneedham/explore.R&amp;#34;); Path outFile = new Path(&amp;#34;hdfs://192.168.0.11/user/markneedham/output-&amp;#34; + System.currentTimeMillis()); // Check if input/output are valid  if (!fs.exists(inFile)) printAndExit(&amp;#34;Input file not found&amp;#34;); if (!</description>
    </item>
    
    <item>
      <title>Spark: MatchError (of class org.apache.spark.sql.catalyst.expressions.GenericRow) spark</title>
      <link>https://markhneedham.com/blog/2015/10/27/spark-matcherror-of-class-org-apache-spark-sql-catalyst-expressions-genericrow-spark/</link>
      <pubDate>Tue, 27 Oct 2015 23:10:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/10/27/spark-matcherror-of-class-org-apache-spark-sql-catalyst-expressions-genericrow-spark/</guid>
      <description>$ head -n5 pp-complete.csv &amp;#34;{0C7ADEF5-878D-4066-B785-0000003ED74A}&amp;#34;,&amp;#34;163000&amp;#34;,&amp;#34;2003-02-21 00:00&amp;#34;,&amp;#34;UB5 4PJ&amp;#34;,&amp;#34;T&amp;#34;,&amp;#34;N&amp;#34;,&amp;#34;F&amp;#34;,&amp;#34;106&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;READING ROAD&amp;#34;,&amp;#34;NORTHOLT&amp;#34;,&amp;#34;NORTHOLT&amp;#34;,&amp;#34;EALING&amp;#34;,&amp;#34;GREATER LONDON&amp;#34;,&amp;#34;A&amp;#34; &amp;#34;{35F67271-ABD4-40DA-AB09-00000085B9D3}&amp;#34;,&amp;#34;247500&amp;#34;,&amp;#34;2005-07-15 00:00&amp;#34;,&amp;#34;TA19 9DD&amp;#34;,&amp;#34;D&amp;#34;,&amp;#34;N&amp;#34;,&amp;#34;F&amp;#34;,&amp;#34;58&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;ADAMS MEADOW&amp;#34;,&amp;#34;ILMINSTER&amp;#34;,&amp;#34;ILMINSTER&amp;#34;,&amp;#34;SOUTH SOMERSET&amp;#34;,&amp;#34;SOMERSET&amp;#34;,&amp;#34;A&amp;#34; &amp;#34;{B20B1C74-E8E1-4137-AB3E-0000011DF342}&amp;#34;,&amp;#34;320000&amp;#34;,&amp;#34;2010-09-10 00:00&amp;#34;,&amp;#34;W4 1DZ&amp;#34;,&amp;#34;F&amp;#34;,&amp;#34;N&amp;#34;,&amp;#34;L&amp;#34;,&amp;#34;58&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;WHELLOCK ROAD&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;LONDON&amp;#34;,&amp;#34;EALING&amp;#34;,&amp;#34;GREATER LONDON&amp;#34;,&amp;#34;A&amp;#34; &amp;#34;{7D6B0915-C56B-4275-AF9B-00000156BCE7}&amp;#34;,&amp;#34;104000&amp;#34;,&amp;#34;1997-08-27 00:00&amp;#34;,&amp;#34;NE61 2BH&amp;#34;,&amp;#34;D&amp;#34;,&amp;#34;N&amp;#34;,&amp;#34;F&amp;#34;,&amp;#34;17&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;WESTGATE&amp;#34;,&amp;#34;MORPETH&amp;#34;,&amp;#34;MORPETH&amp;#34;,&amp;#34;CASTLE MORPETH&amp;#34;,&amp;#34;NORTHUMBERLAND&amp;#34;,&amp;#34;A&amp;#34; &amp;#34;{47B60101-B64C-413D-8F60-000002F1692D}&amp;#34;,&amp;#34;147995&amp;#34;,&amp;#34;2003-05-02 00:00&amp;#34;,&amp;#34;PE33 0RU&amp;#34;,&amp;#34;D&amp;#34;,&amp;#34;N&amp;#34;,&amp;#34;F&amp;#34;,&amp;#34;4&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;MASON GARDENS&amp;#34;,&amp;#34;WEST WINCH&amp;#34;,&amp;#34;KING&amp;#39;S LYNN&amp;#34;,&amp;#34;KING&amp;#39;S LYNN AND WEST NORFOLK&amp;#34;,&amp;#34;NORFOLK&amp;#34;,&amp;#34;A&amp;#34; import org.apache.spark.sql.{SQLContext, _} import org.apache.spark.{SparkConf, SparkContext} case class BlogTransaction(price: Integer, date: String, postCode:String, paon:String, saon:String, street:String, locality:String, city:String, district:String, county:String) object BlogApp { def main(args: Array[String]) { val conf = new SparkConf().setAppName(&amp;#34;Simple Application&amp;#34;) val sc = new SparkContext(conf) val sqlContext = new SQLContext(sc) import sqlContext.</description>
    </item>
    
    <item>
      <title>Exploring (potential) data entry errors in the Land Registry data set</title>
      <link>https://markhneedham.com/blog/2015/10/18/exploring-potential-data-entry-errors-in-the-land-registry-data-set/</link>
      <pubDate>Sun, 18 Oct 2015 10:03:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/10/18/exploring-potential-data-entry-errors-in-the-land-registry-data-set/</guid>
      <description>&amp;gt; library(data.table) &amp;gt; dt = fread(&amp;#34;pp-complete.csv&amp;#34;, header = FALSE) &amp;gt; dt[1:5] V1 V2 V3 V4 V5 1: {0C7ADEF5-878D-4066-B785-0000003ED74A} 163000 2003-02-21 00:00 UB5 4PJ T 2: {35F67271-ABD4-40DA-AB09-00000085B9D3} 247500 2005-07-15 00:00 TA19 9DD D 3: {B20B1C74-E8E1-4137-AB3E-0000011DF342} 320000 2010-09-10 00:00 W4 1DZ F 4: {7D6B0915-C56B-4275-AF9B-00000156BCE7} 104000 1997-08-27 00:00 NE61 2BH D 5: {47B60101-B64C-413D-8F60-000002F1692D} 147995 2003-05-02 00:00 PE33 0RU D V6 V7 V8 V9 V10 V11 V12 1: N F 106 READING ROAD NORTHOLT NORTHOLT 2: N F 58 ADAMS MEADOW ILMINSTER ILMINSTER 3: N L 58 WHELLOCK ROAD LONDON 4: N F 17 WESTGATE MORPETH MORPETH 5: N F 4 MASON GARDENS WEST WINCH KING&amp;#39;S LYNN V13 V14 V15 1: EALING GREATER LONDON A 2: SOUTH SOMERSET SOMERSET A 3: EALING GREATER LONDON A 4: CASTLE MORPETH NORTHUMBERLAND A 5: KING&amp;#39;S LYNN AND WEST NORFOLK NORFOLK A &amp;gt; dt = dt[, V2:= as.</description>
    </item>
    
    <item>
      <title>jq: error - Cannot iterate over null (null)</title>
      <link>https://markhneedham.com/blog/2015/10/09/jq-error-cannot-iterate-over-null-null/</link>
      <pubDate>Fri, 09 Oct 2015 06:34:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/10/09/jq-error-cannot-iterate-over-null-null/</guid>
      <description>$ head -n 100 so.json [ { &amp;#34;has_more&amp;#34;: true, &amp;#34;items&amp;#34;: [ { &amp;#34;is_answered&amp;#34;: false, &amp;#34;delete_vote_count&amp;#34;: 0, &amp;#34;body_markdown&amp;#34;: &amp;#34;...&amp;#34;, &amp;#34;tags&amp;#34;: [ &amp;#34;jdbc&amp;#34;, &amp;#34;neo4j&amp;#34;, &amp;#34;cypher&amp;#34;, &amp;#34;spring-data-neo4j&amp;#34; ], &amp;#34;question_id&amp;#34;: 33023306, &amp;#34;title&amp;#34;: &amp;#34;How to delete multiple nodes by specific ID using Cypher&amp;#34;, &amp;#34;down_vote_count&amp;#34;: 0, &amp;#34;view_count&amp;#34;: 8, &amp;#34;answers&amp;#34;: [ { ... ] $ jq -r \  &amp;#39;.[] | .items[] | { question_id: .question_id, answer: .answers[] } | [.question_id, .answer.answer_id, .answer.title] | @csv&amp;#39; so.json 33023306,33024189,&amp;#34;How to delete multiple nodes by specific ID using Cypher&amp;#34; 33020796,33021958,&amp;#34;How do a general search across string properties in my nodes?</description>
    </item>
    
    <item>
      <title>Mac OS X: Installing the PROJ.4 - Cartographic Projections Library</title>
      <link>https://markhneedham.com/blog/2015/10/05/mac-os-x-installing-the-proj-4-cartographic-projections-library/</link>
      <pubDate>Mon, 05 Oct 2015 22:41:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/10/05/mac-os-x-installing-the-proj-4-cartographic-projections-library/</guid>
      <description>$ wget http://download.osgeo.org/proj/proj-4.9.1.tar.gz $ tar -xvf proj-4.9.1.tar.gz $ cd proj-4.9.1 $ ./configure --prefix ~/projects/land-registry/proj-4.9.1 $ make $ make install $ ls -alh bin/ total 184 drwxr-xr-x 8 markneedham staff 272B 5 Oct 23:07 . drwxr-xr-x@ 41 markneedham staff 1.4K 5 Oct 20:46 .. -rwxr-xr-x 1 markneedham staff 20K 5 Oct 23:07 cs2cs -rwxr-xr-x 1 markneedham staff 16K 5 Oct 23:07 geod lrwxr-xr-x 1 markneedham staff 4B 5 Oct 23:07 invgeod -&amp;gt; geod lrwxr-xr-x 1 markneedham staff 4B 5 Oct 23:07 invproj -&amp;gt; proj -rwxr-xr-x 1 markneedham staff 13K 5 Oct 23:07 nad2bin -rwxr-xr-x 1 markneedham staff 21K 5 Oct 23:07 proj $ .</description>
    </item>
    
    <item>
      <title>R: data.table - Finding the maximum row</title>
      <link>https://markhneedham.com/blog/2015/10/02/r-data-table-finding-the-maximum-row/</link>
      <pubDate>Fri, 02 Oct 2015 18:42:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/10/02/r-data-table-finding-the-maximum-row/</guid>
      <description>&amp;gt; blogDT = data.table(name = c(&amp;#34;Property 1&amp;#34;,&amp;#34;Property 1&amp;#34;,&amp;#34;Property 1&amp;#34;,&amp;#34;Property 2&amp;#34;,&amp;#34;Property 2&amp;#34;,&amp;#34;Property 2&amp;#34;), price = c(10000, 12500, 18000, 245000, 512000, 1000000), date = c(&amp;#34;Day 1&amp;#34;, &amp;#34;Day 7&amp;#34;, &amp;#34;Day 10&amp;#34;, &amp;#34;Day 3&amp;#34;, &amp;#34;Day 5&amp;#34;, &amp;#34;Day 12&amp;#34;)) &amp;gt; blogDT[, lag.price := c(NA, price[-.N]), by = name] &amp;gt; blogDT[, diff := price - lag.price] &amp;gt; blogDT name price date lag.price diff 1: Property 1 10000 Day 1 NA NA 2: Property 1 12500 Day 7 10000 2500 3: Property 1 18000 Day 10 12500 5500 4: Property 2 245000 Day 3 NA NA 5: Property 2 512000 Day 5 245000 267000 6: Property 2 1000000 Day 12 512000 488000 &amp;gt; blogDT[!</description>
    </item>
    
    <item>
      <title>IntelliJ 14.1.5: Unable to import maven project</title>
      <link>https://markhneedham.com/blog/2015/09/30/intellij-14-1-5-unable-to-import-maven-project/</link>
      <pubDate>Wed, 30 Sep 2015 05:54:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/09/30/intellij-14-1-5-unable-to-import-maven-project/</guid>
      <description>-Didea.maven3.use.compat.resolver </description>
    </item>
    
    <item>
      <title>R: data.table - Comparing adjacent rows</title>
      <link>https://markhneedham.com/blog/2015/09/27/r-data-table-comparing-adjacent-rows/</link>
      <pubDate>Sun, 27 Sep 2015 22:02:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/09/27/r-data-table-comparing-adjacent-rows/</guid>
      <description>&amp;gt; blogDT = data.table(name = c(&amp;#34;Property 1&amp;#34;,&amp;#34;Property 1&amp;#34;,&amp;#34;Property 1&amp;#34;,&amp;#34;Property 2&amp;#34;,&amp;#34;Property 2&amp;#34;,&amp;#34;Property 2&amp;#34;), price = c(10000, 12500, 18000, 245000, 512000, 1000000)) &amp;gt; blogDT name price 1: Property 1 10000 2: Property 1 12500 3: Property 1 18000 4: Property 2 245000 5: Property 2 512000 6: Property 2 1000000 &amp;gt; blogDT[, lag.price := c(NA, price[-.N]), by = name] &amp;gt; blogDT name price lag.price 1: Property 1 10000 NA 2: Property 1 12500 10000 3: Property 1 18000 12500 4: Property 2 245000 NA 5: Property 2 512000 245000 6: Property 2 1000000 512000 &amp;gt; blogDT[, diff := price - lag.</description>
    </item>
    
    <item>
      <title>R: Querying a 20 million line CSV file - data.table vs data frame</title>
      <link>https://markhneedham.com/blog/2015/09/25/r-querying-a-20-million-line-csv-file-data-table-vs-data-frame/</link>
      <pubDate>Fri, 25 Sep 2015 06:28:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/09/25/r-querying-a-20-million-line-csv-file-data-table-vs-data-frame/</guid>
      <description>&amp;gt; library(readr) &amp;gt; system.time(read_csv(&amp;#34;pp-complete.csv&amp;#34;, col_names = FALSE)) user system elapsed 127.367 21.957 159.963 &amp;gt; df = read_csv(&amp;#34;pp-complete.csv&amp;#34;, col_names = FALSE) &amp;gt; head(df) Source: local data frame [6 x 16] X1 X2 X3 X4 X5 X6 X7 X8 X9 (chr) (int) (date) (chr) (chr) (chr) (chr) (chr) (chr) 1 {0C7ADEF5-878D-4066-B785-0000003ED74A} 163000 &amp;lt;NA&amp;gt; UB5 4PJ T N F 106 2 {35F67271-ABD4-40DA-AB09-00000085B9D3} 247500 &amp;lt;NA&amp;gt; TA19 9DD D N F 58 3 {B20B1C74-E8E1-4137-AB3E-0000011DF342} 320000 &amp;lt;NA&amp;gt; W4 1DZ F N L 58 4 {7D6B0915-C56B-4275-AF9B-00000156BCE7} 104000 &amp;lt;NA&amp;gt; NE61 2BH D N F 17 5 {47B60101-B64C-413D-8F60-000002F1692D} 147995 &amp;lt;NA&amp;gt; PE33 0RU D N F 4 6 {51F797CA-7BEB-4958-821F-000003E464AE} 110000 &amp;lt;NA&amp;gt; NR35 2SF T N F 5 Variables not shown: X10 (chr), X11 (chr), X12 (chr), X13 (chr), X14 (chr), X15 (chr), address (chr) &amp;gt; library(dplyr) &amp;gt; system.</description>
    </item>
    
    <item>
      <title>SparkR: Add new column to data frame by concatenating other columns</title>
      <link>https://markhneedham.com/blog/2015/09/21/sparkr-add-new-column-to-data-frame-by-concatenating-other-columns/</link>
      <pubDate>Mon, 21 Sep 2015 22:30:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/09/21/sparkr-add-new-column-to-data-frame-by-concatenating-other-columns/</guid>
      <description>./spark-1.5.0-bin-hadoop2.6/bin/sparkR --packages com.databricks:spark-csv_2.11:1.2.0 &amp;gt; sales &amp;lt;- read.df(sqlContext, &amp;#34;pp-complete.csv&amp;#34;, &amp;#34;com.databricks.spark.csv&amp;#34;, header=&amp;#34;false&amp;#34;) &amp;gt; head(sales) C0 C1 C2 C3 C4 C5 1 {0C7ADEF5-878D-4066-B785-0000003ED74A} 163000 2003-02-21 00:00 UB5 4PJ T N 2 {35F67271-ABD4-40DA-AB09-00000085B9D3} 247500 2005-07-15 00:00 TA19 9DD D N 3 {B20B1C74-E8E1-4137-AB3E-0000011DF342} 320000 2010-09-10 00:00 W4 1DZ F N 4 {7D6B0915-C56B-4275-AF9B-00000156BCE7} 104000 1997-08-27 00:00 NE61 2BH D N 5 {47B60101-B64C-413D-8F60-000002F1692D} 147995 2003-05-02 00:00 PE33 0RU D N 6 {51F797CA-7BEB-4958-821F-000003E464AE} 110000 2013-03-22 00:00 NR35 2SF T N C6 C7 C8 C9 C10 C11 1 F 106 READING ROAD NORTHOLT NORTHOLT 2 F 58 ADAMS MEADOW ILMINSTER ILMINSTER 3 L 58 WHELLOCK ROAD LONDON 4 F 17 WESTGATE MORPETH MORPETH 5 F 4 MASON GARDENS WEST WINCH KING&amp;#39;S LYNN 6 F 5 WILD FLOWER WAY DITCHINGHAM BUNGAY C12 C13 C14 1 EALING GREATER LONDON A 2 SOUTH SOMERSET SOMERSET A 3 EALING GREATER LONDON A 4 CASTLE MORPETH NORTHUMBERLAND A 5 KING&amp;#39;S LYNN AND WEST NORFOLK NORFOLK A 6 SOUTH NORFOLK NORFOLK A &amp;gt; sales$address = paste(sales$C9, sales$C10, sales$C11, sales$C12, sep=&amp;#34;, &amp;#34;) Error in as.</description>
    </item>
    
    <item>
      <title>SparkR: Error in invokeJava(isStatic = TRUE, className, methodName, ...) :  java.lang.ClassNotFoundException: Failed to load class for data source: csv.</title>
      <link>https://markhneedham.com/blog/2015/09/21/sparkr-error-in-invokejavaisstatic-true-classname-methodname-java-lang-classnotfoundexception-failed-to-load-class-for-data-source-csv/</link>
      <pubDate>Mon, 21 Sep 2015 22:06:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/09/21/sparkr-error-in-invokejavaisstatic-true-classname-methodname-java-lang-classnotfoundexception-failed-to-load-class-for-data-source-csv/</guid>
      <description>./spark-1.5.0-bin-hadoop2.6/bin/sparkR --packages com.databricks:spark-csv_2.11:1.2.0 &amp;gt; sales &amp;lt;- read.df(sqlContext, &amp;#34;pp-complete.csv&amp;#34;, &amp;#34;csv&amp;#34;) 15/09/20 19:13:02 ERROR RBackendHandler: loadDF on org.apache.spark.sql.api.r.SQLUtils failed Error in invokeJava(isStatic = TRUE, className, methodName, ...) : java.lang.ClassNotFoundException: Failed to load class for data source: csv. at org.apache.spark.sql.execution.datasources.ResolvedDataSource$.lookupDataSource(ResolvedDataSource.scala:67) at org.apache.spark.sql.execution.datasources.ResolvedDataSource$.apply(ResolvedDataSource.scala:87) at org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:114) at org.apache.spark.sql.api.r.SQLUtils$.loadDF(SQLUtils.scala:156) at org.apache.spark.sql.api.r.SQLUtils.loadDF(SQLUtils.scala) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.apache.spark.api.r.RBackendHandler.handleMethodCall(RBackendHandler.scala:132) at org.apache.spark.api.r.RBackendHandler.channelRead0(RBackendHandler.scala:79) at org.apache.spark.api.r.RBackendH &amp;gt; sales &amp;lt;- read.df(sqlContext, &amp;#34;pp-complete.csv&amp;#34;, &amp;#34;com.databricks.spark.csv&amp;#34;, header=&amp;#34;false&amp;#34;) &amp;gt; sales DataFrame[C0:string, C1:string, C2:string, C3:string, C4:string, C5:string, C6:string, C7:string, C8:string, C9:string, C10:string, C11:string, C12:string, C13:string, C14:string] </description>
    </item>
    
    <item>
      <title>Neo4j: Summarising neo4j-shell output</title>
      <link>https://markhneedham.com/blog/2015/08/21/neo4j-summarising-neo4j-shell-output/</link>
      <pubDate>Fri, 21 Aug 2015 20:59:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/21/neo4j-summarising-neo4j-shell-output/</guid>
      <description>I frequently find myself trying to optimise a set of cypher queries and I tend to group them together in a script that I fed to the Neo4j shell.
import re import sys from tabulate import tabulate lines = sys.stdin.readlines() def search(term, line): m = re.match(term + &amp;#34;: (.*)&amp;#34;, line) return (int(m.group(1)) if m else 0) nodes_created, relationships_created, constraints_added, indexes_added, labels_added, properties_set = 0, 0, 0, 0, 0, 0 for line in lines: nodes_created = nodes_created + search(&amp;#34;Nodes created&amp;#34;, line) relationships_created = relationships_created + search(&amp;#34;Relationships created&amp;#34;, line) constraints_added = constraints_added + search(&amp;#34;Constraints added&amp;#34;, line) indexes_added = indexes_added + search(&amp;#34;Indexes added&amp;#34;, line) labels_added = labels_added + search(&amp;#34;Labels added&amp;#34;, line) properties_set = properties_set + search(&amp;#34;Properties set&amp;#34;, line) time_match = re.</description>
    </item>
    
    <item>
      <title>Python: Extracting Excel spreadsheet into CSV files</title>
      <link>https://markhneedham.com/blog/2015/08/19/python-extracting-excel-spreadsheet-into-csv-files/</link>
      <pubDate>Wed, 19 Aug 2015 23:27:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/19/python-extracting-excel-spreadsheet-into-csv-files/</guid>
      <description>from xlrd import open_workbook import csv wb = open_workbook(&amp;#39;Road-Accident-Safety-Data-Guide-1979-2004.xls&amp;#39;) for i in range(2, wb.nsheets): sheet = wb.sheet_by_index(i) print sheet.name with open(&amp;#34;data/%s.csv&amp;#34; %(sheet.name.replace(&amp;#34; &amp;#34;,&amp;#34;&amp;#34;)), &amp;#34;w&amp;#34;) as file: writer = csv.writer(file, delimiter = &amp;#34;,&amp;#34;) print sheet, sheet.name, sheet.ncols, sheet.nrows header = [cell.value for cell in sheet.row(0)] writer.writerow(header) for row_idx in range(1, sheet.nrows): row = [int(cell.value) if isinstance(cell.value, float) else cell.value for cell in sheet.row(row_idx)] writer.writerow(row) $ cat data/1stPointofImpact.csv code,label 0,Did not impact 1,Front 2,Back 3,Offside 4,Nearside -1,Data missing or out of range $ cat data/RoadType.</description>
    </item>
    
    <item>
      <title>Unix: Stripping first n bytes in a file / Byte Order Mark (BOM)</title>
      <link>https://markhneedham.com/blog/2015/08/19/unix-stripping-first-n-bytes-in-a-file-byte-order-mark-bom/</link>
      <pubDate>Wed, 19 Aug 2015 23:27:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/19/unix-stripping-first-n-bytes-in-a-file-byte-order-mark-bom/</guid>
      <description>$ time tail -c +4 Casualty7904.csv &amp;gt; Casualty7904_stripped.csv real	0m31.945s user	0m31.370s sys	0m0.518s -c number The location is number bytes. </description>
    </item>
    
    <item>
      <title>Unix: Redirecting stderr to stdout</title>
      <link>https://markhneedham.com/blog/2015/08/15/unix-redirecting-stderr-to-stdout/</link>
      <pubDate>Sat, 15 Aug 2015 15:55:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/15/unix-redirecting-stderr-to-stdout/</guid>
      <description>#!/bin/sh ./neo4j-community-2.2.3/bin/neo4j start $ ./foo.sh &amp;gt; /tmp/output.txt Unable to find any JVMs matching version &amp;#34;1.7&amp;#34;. $ cat /tmp/output.txt Starting Neo4j Server...WARNING: not changing user process [48230]... waiting for server to be ready.... OK. http://localhost:7474/ is ready. #!/bin/sh ./neo4j-community-2.2.3/bin/neo4j start 2&amp;gt;&amp;amp;1 $ ./foo.sh &amp;gt; /tmp/output.txt $ cat /tmp/output.txt Unable to find any JVMs matching version &amp;#34;1.7&amp;#34;. Starting Neo4j Server...WARNING: not changing user process [47989]... waiting for server to be ready.... OK. http://localhost:7474/ is ready.</description>
    </item>
    
    <item>
      <title>Sed: Using environment variables</title>
      <link>https://markhneedham.com/blog/2015/08/13/sed-using-environment-variables/</link>
      <pubDate>Thu, 13 Aug 2015 19:30:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/13/sed-using-environment-variables/</guid>
      <description>LOAD CSV WITH HEADERS FROM &amp;#34;https://raw.githubusercontent.com/mneedham/neo4j-bbc/master/data/matches.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;file:///Users/markneedham/repos/neo4j-bbc/data/matches.csv&amp;#34; AS row $ echo $PWD /Users/markneedham/repos/neo4j-bbc $ sed &amp;#39;s_https://raw.githubusercontent.com/mneedham/neo4j-bbc/master__&amp;#39; import.cql $ sed &amp;#39;s_https://raw.githubusercontent.com/mneedham/neo4j-bbc/master__&amp;#39; import.cql | grep LOAD LOAD CSV WITH HEADERS FROM &amp;#34;/data/matches.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/players.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/players.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/fouls.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/attempts.csv&amp;#34; AS row LOAD CSV WITH HEADERS FROM &amp;#34;/data/attempts.</description>
    </item>
    
    <item>
      <title>Java: Jersey - java.lang.NoSuchMethodError: com.sun.jersey.core.reflection.ReflectionHelper. getContextClassLoaderPA()Ljava/security/PrivilegedAction;</title>
      <link>https://markhneedham.com/blog/2015/08/11/java-jersey-java-lang-nosuchmethoderror-com-sun-jersey-core-reflection-reflectionhelper-getcontextclassloaderpaljavasecurityprivilegedaction/</link>
      <pubDate>Tue, 11 Aug 2015 06:59:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/11/java-jersey-java-lang-nosuchmethoderror-com-sun-jersey-core-reflection-reflectionhelper-getcontextclassloaderpaljavasecurityprivilegedaction/</guid>
      <description>public class ExampleResourceTest { @Rule public Neo4jRule neo4j = new Neo4jRule() .withFixture(&amp;#34;CREATE (:Person {name: &amp;#39;Mark&amp;#39;})&amp;#34;) .withFixture(&amp;#34;CREATE (:Person {name: &amp;#39;Nicole&amp;#39;})&amp;#34;) .withExtension( &amp;#34;/unmanaged&amp;#34;, ExampleResource.class ); @Test public void shouldReturnAllTheNodes() { // Given  URI serverURI = neo4j.httpURI(); // When  HTTP.Response response = HTTP.GET(serverURI.resolve(&amp;#34;/unmanaged/example/people&amp;#34;).toString()); // Then  assertEquals(200, response.status()); List content = response.content(); assertEquals(2, content.size()); } } 07:51:32.985 [main] WARN o.e.j.u.component.AbstractLifeCycle - FAILED o.e.j.s.ServletContextHandler@29eda4f8{/unmanaged,null,STARTING}: java.lang.NoSuchMethodError: com.sun.jersey.core.reflection.ReflectionHelper.getContextClassLoaderPA()Ljava/security/PrivilegedAction; java.lang.NoSuchMethodError: com.sun.jersey.core.reflection.ReflectionHelper.getContextClassLoaderPA()Ljava/security/PrivilegedAction; at com.sun.jersey.spi.scanning.AnnotationScannerListener.&amp;lt;init&amp;gt;(AnnotationScannerListener.java:94) ~[jersey-server-1.19.jar:1.19] at com.</description>
    </item>
    
    <item>
      <title>Neo4j 2.2.3: Unmanaged extensions - Creating gzipped streamed responses with Jetty</title>
      <link>https://markhneedham.com/blog/2015/08/10/neo4j-2-2-3-unmanaged-extensions-creating-gzipped-streamed-responses-with-jetty/</link>
      <pubDate>Mon, 10 Aug 2015 23:57:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/10/neo4j-2-2-3-unmanaged-extensions-creating-gzipped-streamed-responses-with-jetty/</guid>
      <description>@Path(&amp;#34;/example&amp;#34;) public class ExampleResource { private final GraphDatabaseService db; private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper(); public ExampleResource(@Context GraphDatabaseService db) { this.db = db; } @GET @Produces(MediaType.APPLICATION_JSON) @Path(&amp;#34;/people&amp;#34;) public Response allNodes() throws IOException { StreamingOutput stream = streamQueryResponse(&amp;#34;MATCH (n:Person) RETURN n.name AS name&amp;#34;); return Response.ok().entity(stream).type(MediaType.APPLICATION_JSON).build(); } private StreamingOutput streamQueryResponse(final String query) { return new StreamingOutput() { @Override public void write(OutputStream os) throws IOException, WebApplicationException { JsonGenerator jg = OBJECT_MAPPER.getJsonFactory().createJsonGenerator(os, JsonEncoding.</description>
    </item>
    
    <item>
      <title>Record Linkage: Playing around with Duke</title>
      <link>https://markhneedham.com/blog/2015/08/08/record-linkage-playing-around-with-duke/</link>
      <pubDate>Sat, 08 Aug 2015 22:50:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/08/record-linkage-playing-around-with-duke/</guid>
      <description>export JAVA_HOME=`/usr/libexec/java_home` mvn clean package -DskipTests unzip duke-dist/target/duke-dist-1.3-SNAPSHOT-bin.zip wget https://raw.githubusercontent.com/larsga/Duke/master/doc/example-data/countries-dbpedia.csv wget https://raw.githubusercontent.com/larsga/Duke/master/doc/example-data/countries.xml wget https://raw.githubusercontent.com/larsga/Duke/master/doc/example-data/countries-mondial.csv wget https://raw.githubusercontent.com/larsga/Duke/master/doc/example-data/countries-test.txt java -cp &amp;#34;duke-dist-1.3-SNAPSHOT/lib/*&amp;#34; no.priv.garshol.duke.Duke --testfile=countries-test.txt --testdebug --showmatches countries.xml ... NO MATCH FOR: ID: &amp;#39;7706&amp;#39;, NAME: &amp;#39;guatemala&amp;#39;, AREA: &amp;#39;108890&amp;#39;, CAPITAL: &amp;#39;guatemala city&amp;#39;, MATCH 0.9825124555160142 ID: &amp;#39;10052&amp;#39;, NAME: &amp;#39;pitcairn islands&amp;#39;, AREA: &amp;#39;47&amp;#39;, CAPITAL: &amp;#39;adamstown&amp;#39;, ID: &amp;#39;http://dbpedia.org/resource/Pitcairn_Islands&amp;#39;, NAME: &amp;#39;pitcairn islands&amp;#39;, AREA: &amp;#39;47&amp;#39;, CAPITAL: &amp;#39;adamstown&amp;#39;, Correct links found: 200 / 218 (91.7%) Wrong links found: 0 / 24 (0.</description>
    </item>
    
    <item>
      <title>Spark: Convert RDD to DataFrame</title>
      <link>https://markhneedham.com/blog/2015/08/06/spark-convert-rdd-to-dataframe/</link>
      <pubDate>Thu, 06 Aug 2015 21:11:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/06/spark-convert-rdd-to-dataframe/</guid>
      <description>import org.apache.spark.sql.{SQLContext, Row, DataFrame} val sqlContext = new SQLContext(sc) val crimeFile = &amp;#34;Crimes_-_2001_to_present.csv&amp;#34; sqlContext.load(&amp;#34;com.databricks.spark.csv&amp;#34;, Map(&amp;#34;path&amp;#34; -&amp;gt; crimeFile, &amp;#34;header&amp;#34; -&amp;gt; &amp;#34;true&amp;#34;)).registerTempTable(&amp;#34;crimes&amp;#34;) private def createFile(df: DataFrame, file: String, header: String): Unit = { FileUtil.fullyDelete(new File(file)) val tmpFile = &amp;#34;tmp/&amp;#34; + System.currentTimeMillis() + &amp;#34;-&amp;#34; + file df.distinct.save(tmpFile, &amp;#34;com.databricks.spark.csv&amp;#34;) } val rows = sqlContext.sql(&amp;#34;select `Primary Type` as primaryType FROM crimes LIMIT 10&amp;#34;) rows.collect() res4: Array[org.apache.spark.sql.Row] = Array([ASSAULT], [ROBBERY], [CRIMINAL DAMAGE], [THEFT], [THEFT], [BURGLARY], [THEFT], [BURGLARY], [THEFT], [CRIMINAL DAMAGE]) rows.</description>
    </item>
    
    <item>
      <title>Spark: pyspark/Hadoop - py4j.protocol.Py4JJavaError: An error occurred while calling o23.load.: org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4</title>
      <link>https://markhneedham.com/blog/2015/08/04/spark-pysparkhadoop-py4j-protocol-py4jjavaerror-an-error-occurred-while-calling-o23-load-org-apache-hadoop-ipc-remoteexception-server-ipc-version-9-cannot-communicate-with-client-version-4/</link>
      <pubDate>Tue, 04 Aug 2015 06:35:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/04/spark-pysparkhadoop-py4j-protocol-py4jjavaerror-an-error-occurred-while-calling-o23-load-org-apache-hadoop-ipc-remoteexception-server-ipc-version-9-cannot-communicate-with-client-version-4/</guid>
      <description>from pyspark import SparkContext from pyspark.sql import SQLContext sc = SparkContext(&amp;#34;local&amp;#34;, &amp;#34;Simple App&amp;#34;) sqlContext = SQLContext(sc) file = &amp;#34;hdfs://localhost:9000/user/markneedham/Crimes_-_2001_to_present.csv&amp;#34; sqlContext.load(source=&amp;#34;com.databricks.spark.csv&amp;#34;, header=&amp;#34;true&amp;#34;, path = file).registerTempTable(&amp;#34;crimes&amp;#34;) rows = sqlContext.sql(&amp;#34;select `FBI Code` AS fbiCode, COUNT(*) AS times FROM crimes GROUP BY `FBI Code` ORDER BY times DESC&amp;#34;).collect() for row in rows: print(&amp;#34;{0} -&amp;gt; {1}&amp;#34;.format(row.fbiCode, row.times)) $ ./spark-1.3.0-bin-hadoop1/bin/spark-submit --driver-memory 5g --packages com.databricks:spark-csv_2.10:1.1.0 fbi_spark.py ... Traceback (most recent call last): File &amp;#34;/Users/markneedham/projects/neo4j-spark-chicago/fbi_spark.py&amp;#34;, line 11, in &amp;lt;module&amp;gt; sqlContext.</description>
    </item>
    
    <item>
      <title>Spark: Processing CSV files using Databricks Spark CSV Library</title>
      <link>https://markhneedham.com/blog/2015/08/02/spark-processing-csv-files-using-databricks-spark-csv-library/</link>
      <pubDate>Sun, 02 Aug 2015 18:08:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/08/02/spark-processing-csv-files-using-databricks-spark-csv-library/</guid>
      <description>$ ./spark-1.3.0-bin-hadoop1/bin/spark-shell scala&amp;gt; import org.apache.spark.sql.SQLContext import org.apache.spark.sql.SQLContext scala&amp;gt; val crimeFile = &amp;#34;/Users/markneedham/Downloads/Crimes_-_2001_to_present.csv&amp;#34; crimeFile: String = /Users/markneedham/Downloads/Crimes_-_2001_to_present.csv scala&amp;gt; val sqlContext = new SQLContext(sc) sqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@9746157 scala&amp;gt; sqlContext.load(&amp;#34;com.databricks.spark.csv&amp;#34;, Map(&amp;#34;path&amp;#34; -&amp;gt; crimeFile, &amp;#34;header&amp;#34; -&amp;gt; &amp;#34;true&amp;#34;)).registerTempTable(&amp;#34;crimes&amp;#34;) java.lang.RuntimeException: Failed to load class for data source: com.databricks.spark.csv at scala.sys.package$.error(package.scala:27) at org.apache.spark.sql.sources.ResolvedDataSource$.lookupDataSource(ddl.scala:268) at org.apache.spark.sql.sources.ResolvedDataSource$.apply(ddl.scala:279) at org.apache.spark.sql.SQLContext.load(SQLContext.scala:679) at java.lang.reflect.Method.invoke(Method.java:497) at org.apache.spark.repl.SparkIMain$ReadEvalPrint.call(SparkIMain.scala:1065) at org.apache.spark.repl.SparkIMain$Request.loadAndRun(SparkIMain.scala:1338) at org.apache.spark.repl.SparkIMain.loadAndRunReq$1(SparkIMain.scala:840) at org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:871) at org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:819) at org.apache.spark.repl.SparkILoop.reallyInterpret$1(SparkILoop.scala:856) at org.apache.spark.repl.SparkILoop.interpretStartingWith(SparkILoop.scala:901) at org.apache.spark.repl.SparkILoop.command(SparkILoop.scala:813) at org.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Removing consecutive duplicates</title>
      <link>https://markhneedham.com/blog/2015/07/30/neo4j-cypher-removing-consecutive-duplicates/</link>
      <pubDate>Thu, 30 Jul 2015 06:23:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/30/neo4j-cypher-removing-consecutive-duplicates/</guid>
      <description>RETURN [1,1,2,3,4,5,6,7,7,8] AS values ==&amp;gt; +-----------------------+ ==&amp;gt; | values | ==&amp;gt; +-----------------------+ ==&amp;gt; | [1,1,2,3,4,5,6,7,7,8] | ==&amp;gt; +-----------------------+ ==&amp;gt; 1 row WITH [1,1,2,3,4,5,6,7,7,8] AS values UNWIND RANGE(0, LENGTH(values) - 2) AS idx RETURN idx, idx+1, values[idx], values[idx+1] ==&amp;gt; +-------------------------------------------+ ==&amp;gt; | idx | idx+1 | values[idx] | values[idx+1] | ==&amp;gt; +-------------------------------------------+ ==&amp;gt; | 0 | 1 | 1 | 1 | ==&amp;gt; | 1 | 2 | 1 | 2 | ==&amp;gt; | 2 | 3 | 2 | 3 | ==&amp;gt; | 3 | 4 | 3 | 4 | ==&amp;gt; | 4 | 5 | 4 | 5 | ==&amp;gt; | 5 | 6 | 5 | 6 | ==&amp;gt; | 6 | 7 | 6 | 7 | ==&amp;gt; | 7 | 8 | 7 | 7 | ==&amp;gt; | 8 | 9 | 7 | 8 | ==&amp;gt; +-------------------------------------------+ ==&amp;gt; 9 rows WITH [1,1,2,3,4,5,6,7,7,8] AS values UNWIND RANGE(0, LENGTH(values) - 2) AS idx WITH values[idx] AS a, values[idx+1] AS b WHERE a &amp;lt;&amp;gt; b RETURN a,b ==&amp;gt; +-------+ ==&amp;gt; | a | b | ==&amp;gt; +-------+ ==&amp;gt; | 1 | 2 | ==&amp;gt; | 2 | 3 | ==&amp;gt; | 3 | 4 | ==&amp;gt; | 4 | 5 | ==&amp;gt; | 5 | 6 | ==&amp;gt; | 6 | 7 | ==&amp;gt; | 7 | 8 | ==&amp;gt; +-------+ ==&amp;gt; 7 rows WITH [1,1,2,3,4,5,6,7,7,8] AS values UNWIND RANGE(0, LENGTH(values) - 2) AS idx WITH values[idx] AS a, values[idx+1] AS b WHERE a &amp;lt;&amp;gt; b RETURN COLLECT(a)[0] + COLLECT(b) AS noDuplicates ==&amp;gt; +-------------------+ ==&amp;gt; | noDuplicates | ==&amp;gt; +-------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8] | ==&amp;gt; +-------------------+ ==&amp;gt; 1 row WITH [1,1,1,2,3,4,5,5,6,7,7,8] AS values UNWIND RANGE(0, LENGTH(values) - 2) AS idx WITH values[idx] AS a, values[idx+1] AS b WHERE a &amp;lt;&amp;gt; b RETURN COLLECT(a)[0] + COLLECT(b) AS noDuplicates ==&amp;gt; +-------------------+ ==&amp;gt; | noDuplicates | ==&amp;gt; +-------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8] | ==&amp;gt; +-------------------+ ==&amp;gt; 1 row WITH [1,1,1,2,3,4,5,5,6,7,7,8,1] AS values UNWIND RANGE(0, LENGTH(values) - 2) AS idx WITH values[idx] AS a, values[idx+1] AS b WHERE a &amp;lt;&amp;gt; b RETURN COLLECT(a)[0] + COLLECT(b) AS noDuplicates ==&amp;gt; +---------------------+ ==&amp;gt; | noDuplicates | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8,1] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row </description>
    </item>
    
    <item>
      <title>Neo4j: MERGE&#39;ing on super nodes</title>
      <link>https://markhneedham.com/blog/2015/07/28/neo4j-mergeing-on-super-nodes/</link>
      <pubDate>Tue, 28 Jul 2015 21:04:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/28/neo4j-mergeing-on-super-nodes/</guid>
      <description>MATCH (crime:Crime) WITH crime SKIP {skip} LIMIT 10000 MATCH (subCat:SubCategory {code: crime.fbiCode}) MERGE (crime)-[:CATEGORY]-&amp;gt;(subCat) RETURN COUNT(*) AS crimesProcessed MATCH (crime:Crime) WITH crime SKIP {skip} LIMIT 10000 MATCH (subCat:SubCategory {code: crime.fbiCode}) WITH crime, subCat, shortestPath((crime)-[:CATEGORY]-&amp;gt;(subCat)) AS path FOREACH(ignoreMe IN CASE WHEN path is NULL THEN [1] ELSE [] END | CREATE (crime)-[:CATEGORY]-&amp;gt;(subCat)) RETURN COUNT(*) MATCH (crime:Crime) WITH crime SKIP {skip} LIMIT 10000 MATCH (subCat:SubCategory {code: crime.fbiCode}) CREATE UNIQUE (crime)-[:CATEGORY]-&amp;gt;(subCat) RETURN COUNT(*) AS crimesProcessed </description>
    </item>
    
    <item>
      <title>Python: Difference between two datetimes in milliseconds</title>
      <link>https://markhneedham.com/blog/2015/07/28/python-difference-between-two-datetimes-in-milliseconds/</link>
      <pubDate>Tue, 28 Jul 2015 20:05:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/28/python-difference-between-two-datetimes-in-milliseconds/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; import datetime &amp;gt;&amp;gt;&amp;gt; start = datetime.datetime.now() &amp;gt;&amp;gt;&amp;gt; end = datetime.datetime.now() &amp;gt;&amp;gt;&amp;gt; end - start datetime.timedelta(0, 3, 519319) &amp;gt;&amp;gt;&amp;gt; dir(end - start) [&amp;#39;__abs__&amp;#39;, &amp;#39;__add__&amp;#39;, &amp;#39;__class__&amp;#39;, &amp;#39;__delattr__&amp;#39;, &amp;#39;__div__&amp;#39;, &amp;#39;__doc__&amp;#39;, &amp;#39;__eq__&amp;#39;, &amp;#39;__floordiv__&amp;#39;, &amp;#39;__format__&amp;#39;, &amp;#39;__ge__&amp;#39;, &amp;#39;__getattribute__&amp;#39;, &amp;#39;__gt__&amp;#39;, &amp;#39;__hash__&amp;#39;, &amp;#39;__init__&amp;#39;, &amp;#39;__le__&amp;#39;, &amp;#39;__lt__&amp;#39;, &amp;#39;__mul__&amp;#39;, &amp;#39;__ne__&amp;#39;, &amp;#39;__neg__&amp;#39;, &amp;#39;__new__&amp;#39;, &amp;#39;__nonzero__&amp;#39;, &amp;#39;__pos__&amp;#39;, &amp;#39;__radd__&amp;#39;, &amp;#39;__rdiv__&amp;#39;, &amp;#39;__reduce__&amp;#39;, &amp;#39;__reduce_ex__&amp;#39;, &amp;#39;__repr__&amp;#39;, &amp;#39;__rfloordiv__&amp;#39;, &amp;#39;__rmul__&amp;#39;, &amp;#39;__rsub__&amp;#39;, &amp;#39;__setattr__&amp;#39;, &amp;#39;__sizeof__&amp;#39;, &amp;#39;__str__&amp;#39;, &amp;#39;__sub__&amp;#39;, &amp;#39;__subclasshook__&amp;#39;, &amp;#39;days&amp;#39;, &amp;#39;max&amp;#39;, &amp;#39;microseconds&amp;#39;, &amp;#39;min&amp;#39;, &amp;#39;resolution&amp;#39;, &amp;#39;seconds&amp;#39;, &amp;#39;total_seconds&amp;#39;] &amp;gt;&amp;gt;&amp;gt; diff = end - start &amp;gt;&amp;gt;&amp;gt; elapsed_ms = (diff.</description>
    </item>
    
    <item>
      <title>Neo4j: From JSON to CSV to LOAD CSV via jq</title>
      <link>https://markhneedham.com/blog/2015/07/25/neo4j-from-json-to-csv-to-load-csv-via-jq/</link>
      <pubDate>Sat, 25 Jul 2015 23:05:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/25/neo4j-from-json-to-csv-to-load-csv-via-jq/</guid>
      <description>{ &amp;#34;categories&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Index Crime&amp;#34;, &amp;#34;sub_categories&amp;#34;: [ { &amp;#34;code&amp;#34;: &amp;#34;01A&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Homicide 1st &amp;amp; 2nd Degree&amp;#34; }, ] }, { &amp;#34;name&amp;#34;: &amp;#34;Non-Index Crime&amp;#34;, &amp;#34;sub_categories&amp;#34;: [ { &amp;#34;code&amp;#34;: &amp;#34;01B&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Involuntary Manslaughter&amp;#34; }, ] }, { &amp;#34;name&amp;#34;: &amp;#34;Violent Crime&amp;#34;, &amp;#34;sub_categories&amp;#34;: [ { &amp;#34;code&amp;#34;: &amp;#34;01A&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Homicide 1st &amp;amp; 2nd Degree&amp;#34; }, ] } ] } We want to get one row for each sub category which contains three columns - category name, sub category code, sub category description.</description>
    </item>
    
    <item>
      <title>Neo4j: Loading JSON documents with Cypher</title>
      <link>https://markhneedham.com/blog/2015/07/23/neo4j-loading-json-documents-with-cypher/</link>
      <pubDate>Thu, 23 Jul 2015 06:15:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/23/neo4j-loading-json-documents-with-cypher/</guid>
      <description>{ &amp;#34;categories&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Index Crime&amp;#34;, &amp;#34;sub_categories&amp;#34;: [ { &amp;#34;code&amp;#34;: &amp;#34;01A&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Homicide 1st &amp;amp; 2nd Degree&amp;#34; } ] }, { &amp;#34;name&amp;#34;: &amp;#34;Non-Index Crime&amp;#34;, &amp;#34;sub_categories&amp;#34;: [ { &amp;#34;code&amp;#34;: &amp;#34;01B&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Involuntary Manslaughter&amp;#34; } ] }, { &amp;#34;name&amp;#34;: &amp;#34;Violent Crime&amp;#34;, &amp;#34;sub_categories&amp;#34;: [ { &amp;#34;code&amp;#34;: &amp;#34;01A&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Homicide 1st &amp;amp; 2nd Degree&amp;#34; } ] } ] } import json from py2neo import Graph, authenticate # replace &amp;#39;foobar&amp;#39; with your password authenticate(&amp;#34;localhost:7474&amp;#34;, &amp;#34;neo4j&amp;#34;, &amp;#34;foobar&amp;#34;) graph = Graph() with open(&amp;#39;categories.</description>
    </item>
    
    <item>
      <title>Neo4j 2.2.3: neo4j-import - Encoder StringEncoder[2] returned an illegal encoded value 0</title>
      <link>https://markhneedham.com/blog/2015/07/21/neo4j-2-2-3-neo4j-import-encoder-stringencoder2-returned-an-illegal-encoded-value-0/</link>
      <pubDate>Tue, 21 Jul 2015 06:11:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/21/neo4j-2-2-3-neo4j-import-encoder-stringencoder2-returned-an-illegal-encoded-value-0/</guid>
      <description>Importing the contents of these files into tmp/crimes.db: Nodes: /Users/markneedham/projects/neo4j-spark-chicago/tmp/crimes.csv /Users/markneedham/projects/neo4j-spark-chicago/tmp/beats.csv /Users/markneedham/projects/neo4j-spark-chicago/tmp/primaryTypes.csv /Users/markneedham/projects/neo4j-spark-chicago/tmp/locations.csv Relationships: /Users/markneedham/projects/neo4j-spark-chicago/tmp/crimesBeats.csv /Users/markneedham/projects/neo4j-spark-chicago/tmp/crimesPrimaryTypes.csv /Users/markneedham/projects/neo4j-spark-chicago/tmp/crimesLocationsCleaned.csv Available memory: Free machine memory: 263.17 MB Max heap memory : 3.56 GB Nodes [*&amp;gt;:17.41 MB/s-------------------------|PROPERTIES(3)=|NODE:3|LABEL SCAN----|v:36.30 MB/s(2)===] 3MImport error: Panic called, so exiting java.lang.RuntimeException: Panic called, so exiting at org.neo4j.unsafe.impl.batchimport.staging.AbstractStep.assertHealthy(AbstractStep.java:200) at org.neo4j.unsafe.impl.batchimport.staging.AbstractStep.await(AbstractStep.java:191) at org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.receive(ProcessorStep.java:98) at org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.sendDownstream(ProcessorStep.java:224) at org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.access$400(ProcessorStep.java:42) at org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep$Sender.send(ProcessorStep.java:250) at org.neo4j.unsafe.impl.batchimport.LabelScanStorePopulationStep.process(LabelScanStorePopulationStep.java:60) at org.neo4j.unsafe.impl.batchimport.LabelScanStorePopulationStep.process(LabelScanStorePopulationStep.java:37) at org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep$4.run(ProcessorStep.java:120) at org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep$4.run(ProcessorStep.java:102) at org.neo4j.unsafe.impl.batchimport.executor.DynamicTaskExecutor$Processor.run(DynamicTaskExecutor.java:237) Caused by: java.</description>
    </item>
    
    <item>
      <title>R: Bootstrap confidence intervals</title>
      <link>https://markhneedham.com/blog/2015/07/19/r-bootstrap-confidence-intervals/</link>
      <pubDate>Sun, 19 Jul 2015 19:44:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/19/r-bootstrap-confidence-intervals/</guid>
      <description>&amp;gt; data = c(0, 1, 3, 2, 8, 2, 3, 4) &amp;gt; quantile(data, 0.05) 5% 0.35 &amp;gt; sample(data, replace = TRUE) [1] 0 3 2 8 8 0 8 0 &amp;gt; sample(data, replace = TRUE) [1] 2 2 4 3 4 4 2 2 library(ggplot) bootstrap_5th_percentile = function(data, n_bootstraps) { return(sapply(1:n_bootstraps, function(iteration) quantile(sample(data, replace = TRUE), 0.05))) } values = bootstrap_5th_percentile(data, 10000) ggplot(aes(x = value), data = data.frame(value = values)) + geom_histogram(binwidth=0.</description>
    </item>
    
    <item>
      <title>R: Blog post frequency anomaly detection</title>
      <link>https://markhneedham.com/blog/2015/07/17/r-blog-post-frequency-anomaly-detection/</link>
      <pubDate>Fri, 17 Jul 2015 23:34:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/17/r-blog-post-frequency-anomaly-detection/</guid>
      <description>install.packages(&amp;#34;devtools&amp;#34;) devtools::install_github(&amp;#34;twitter/AnomalyDetection&amp;#34;) library(AnomalyDetection) &amp;gt; library(dplyr) &amp;gt; raw_data %&amp;gt;% head() timestamp count 1 1980-09-25 14:01:00 182.478 2 1980-09-25 14:02:00 176.231 3 1980-09-25 14:03:00 183.917 4 1980-09-25 14:04:00 177.798 5 1980-09-25 14:05:00 165.469 6 1980-09-25 14:06:00 181.878 res = AnomalyDetectionTs(raw_data, max_anoms=0.02, direction=&amp;#39;both&amp;#39;, plot=TRUE) res$plot &amp;gt; df %&amp;gt;% sample_n(5) title date 1425 Coding: Copy/Paste then refactor 2009-10-31 07:54:31 783 Neo4j 2.0.0-M06 -&amp;gt; 2.0.0-RC1: Working with path expressions 2013-11-23 10:30:41 960 R: Removing for loops 2015-04-18 23:53:20 966 R: dplyr - Error in (list: invalid subscript type &amp;#39;double&amp;#39; 2015-04-27 22:34:43 343 Parsing XML from the unix terminal/shell 2011-09-03 23:42:11 &amp;gt; byWeek = df %&amp;gt;% mutate(year = year(date), week = week(date)) %&amp;gt;% group_by(week, year) %&amp;gt;% summarise(n = n()) %&amp;gt;% ungroup() %&amp;gt;% arrange(desc(n)) &amp;gt; byWeek %&amp;gt;% sample_n(5) Source: local data frame [5 x 3] week year n 1 44 2009 6 2 37 2011 4 3 39 2012 3 4 7 2013 4 5 6 2010 6 &amp;gt; data = byWeek %&amp;gt;% mutate(start_of_week = calculate_start_of_week(week, year)) %&amp;gt;% filter(start_of_week &amp;gt; ymd(&amp;#34;2008-07-01&amp;#34;)) %&amp;gt;% select(start_of_week, n) &amp;gt; data %&amp;gt;% sample_n(5) Source: local data frame [5 x 2] start_of_week n 1 2010-09-10 4 2 2013-04-09 4 3 2010-04-30 6 4 2012-03-11 3 5 2014-12-03 3 res = AnomalyDetectionTs(data, max_anoms=0.</description>
    </item>
    
    <item>
      <title>Neo4j: The football transfers graph</title>
      <link>https://markhneedham.com/blog/2015/07/16/neo4j-the-football-transfers-graph/</link>
      <pubDate>Thu, 16 Jul 2015 06:40:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/16/neo4j-the-football-transfers-graph/</guid>
      <description>$ head -n 10 data/transfers.csv player,from_team,from_team_id,to_team,to_team_id,fee,season Martin Keown,Everton,29,Arsenal FC,11,&amp;#34;2,10 Mill. £&amp;#34;,1992-1993 John Jensen,Bröndby IF,206,Arsenal FC,11,&amp;#34;1,12 Mill. £&amp;#34;,1992-1993 Alan Miller,Birmingham,337,Arsenal FC,11,,1992-1993 Jim Will,Sheffield Utd.,350,Arsenal FC,11,,1992-1993 David Rocastle,Arsenal FC,11,Leeds,399,&amp;#34;1,68 Mill. £&amp;#34;,1992-1993 Perry Groves,Arsenal FC,11,Southampton FC,180,595 Th. £,1992-1993 Ty Gooden,Arsenal FC,11,Wycombe Wand.,2805,?,1992-1993 Geraint Williams,Derby,22,Ipswich Town,677,525 Th. £,1992-1993 Jason Winters,Chelsea U21,9250,Ipswich Town,677,?,1992-1993 create index on :Team(id); create index on :Season(name); create index on :Transfer(description); create index on :Player(name); // teams load csv with headers from &amp;quot;file:///Users/markneedham/projects/football-transfers/data/teams.</description>
    </item>
    
    <item>
      <title>Python: UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position 0: ordinal not in range(128)</title>
      <link>https://markhneedham.com/blog/2015/07/15/python-unicodedecodeerror-ascii-codec-cant-decode-byte-0xe2-in-position-0-ordinal-not-in-range128/</link>
      <pubDate>Wed, 15 Jul 2015 06:20:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/15/python-unicodedecodeerror-ascii-codec-cant-decode-byte-0xe2-in-position-0-ordinal-not-in-range128/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; u&amp;#39;foo †&amp;#39; u&amp;#39;foo \u2020&amp;#39; &amp;gt;&amp;gt;&amp;gt; u&amp;#39;foo †&amp;#39;.replace(&amp;#34; †&amp;#34;, &amp;#34;&amp;#34;) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; UnicodeDecodeError: &amp;#39;ascii&amp;#39; codec can&amp;#39;t decode byte 0xe2 in position 1: ordinal not in range(128) &amp;gt;&amp;gt;&amp;gt; u&amp;#39;foo †&amp;#39;.replace(u&amp;#39; †&amp;#39;, &amp;#34;&amp;#34;) u&amp;#39;foo&amp;#39; &amp;gt;&amp;gt;&amp;gt; u&amp;#39;foo †&amp;#39;.replace(unicode(&amp;#39; †&amp;#39;, &amp;#34;utf-8&amp;#34;), &amp;#34;&amp;#34;) u&amp;#39;foo&amp;#39; </description>
    </item>
    
    <item>
      <title>R: I write more in the last week of the month, or do I?</title>
      <link>https://markhneedham.com/blog/2015/07/12/r-i-write-more-in-the-last-week-of-the-month-or-do-i/</link>
      <pubDate>Sun, 12 Jul 2015 09:53:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/12/r-i-write-more-in-the-last-week-of-the-month-or-do-i/</guid>
      <description>&amp;gt; df %&amp;gt;% sample_n(5) title date 946 Python: Equivalent to flatMap for flattening an array of arrays 2015-03-23 00:45:00 175 Ruby: Hash default value 2010-10-16 14:02:37 375 Java/Scala: Runtime.exec hanging/in &amp;#39;pipe_w&amp;#39; state 2011-11-20 20:20:08 1319 Coding Dojo #18: Groovy Bowling Game 2009-06-26 08:15:23 381 Continuous Delivery: Removing manual scenarios 2011-12-05 23:13:34 calculate_start_of_week = function(week, year) { date &amp;lt;- ymd(paste(year, 1, 1, sep=&amp;#34;-&amp;#34;)) week(date) = week return(date) } tidy_df = df %&amp;gt;% mutate(year = year(date), week = week(date), week_in_month = ceiling(day(date) / 7), max_week = max(week_in_month), weeks_from_end = max_week - week_in_month, start_of_week = calculate_start_of_week(week, year)) &amp;gt; tidy_df %&amp;gt;% select(date, weeks_from_end, start_of_week) %&amp;gt;% sample_n(5) date weeks_from_end start_of_week 1023 2008-08-08 21:16:02 3 2008-08-05 800 2014-01-31 06:51:06 0 2014-01-29 859 2014-08-14 10:24:52 3 2014-08-13 107 2010-07-10 22:49:52 3 2010-07-09 386 2011-12-20 23:57:51 2 2011-12-17 weeks_from_end_counts = tidy_df %&amp;gt;% group_by(start_of_week, weeks_from_end) %&amp;gt;% summarise(count = n()) &amp;gt; weeks_from_end_counts Source: local data frame [540 x 4] Groups: start_of_week, weeks_from_end start_of_week weeks_from_end year count 1 2006-08-27 0 2006 1 2 2006-08-27 4 2006 3 3 2006-09-03 4 2006 1 4 2008-02-05 3 2008 2 5 2008-02-12 3 2008 2 6 2008-07-15 2 2008 1 7 2008-07-22 1 2008 1 8 2008-08-05 3 2008 8 9 2008-08-12 2 2008 5 10 2008-08-12 3 2008 9 .</description>
    </item>
    
    <item>
      <title>R: Filling in missing dates with 0s</title>
      <link>https://markhneedham.com/blog/2015/07/12/r-filling-in-missing-dates-with-0s/</link>
      <pubDate>Sun, 12 Jul 2015 08:30:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/12/r-filling-in-missing-dates-with-0s/</guid>
      <description>&amp;gt; library(zoo) &amp;gt; library(dplyr) &amp;gt; df %&amp;gt;% sample_n(5) title date 888 R: Converting a named vector to a data frame 2014-10-31 23:47:26 144 Rails: Populating a dropdown list using &amp;#39;form_for&amp;#39; 2010-08-31 01:22:14 615 Onboarding: Sketch the landscape 2013-02-15 07:36:06 28 Javascript: The &amp;#39;new&amp;#39; keyword 2010-03-06 15:16:02 1290 Coding Dojo #16: Reading SUnit code 2009-05-28 23:23:19 &amp;gt; posts_by_date = df %&amp;gt;% mutate(year_mon = as.Date(as.yearmon(date))) %&amp;gt;% count(year_mon) &amp;gt; posts_by_date %&amp;gt;% head(5) year_mon n 1 2006-08-01 1 2 2006-09-01 4 3 2008-02-01 4 4 2008-07-01 2 5 2008-08-01 38 &amp;gt; ggplot(aes(x = year_mon, y = n), data = posts_by_date) + geom_line() &amp;gt; all_dates = seq(as.</description>
    </item>
    
    <item>
      <title>R: Date for given week/year</title>
      <link>https://markhneedham.com/blog/2015/07/10/r-date-for-given-weekyear/</link>
      <pubDate>Fri, 10 Jul 2015 22:01:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/10/r-date-for-given-weekyear/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; df = read.csv(&amp;#34;posts.csv&amp;#34;) &amp;gt; df$date = ymd_hms(df$date) &amp;gt; df %&amp;gt;% sample_n(10) title date 538 Nygard Big Data Model: The Investigation Stage 2012-10-10 00:00:36 341 The read-only database 2011-08-29 23:32:26 1112 CSS in Internet Explorer - Some lessons learned 2008-10-31 15:24:51 143 Coding: Mutating parameters 2010-08-26 07:47:23 433 Scala: Counting number of inversions (via merge sort) for an unsorted collection 2012-03-20 06:53:18 618 neo4j/cypher: SQL style GROUP BY functionality 2013-02-17 21:05:27 1111 Testing Hibernate mappings: Setting up test data 2008-10-30 13:24:14 462 neo4j: What question do you want to answer?</description>
    </item>
    
    <item>
      <title>R: dplyr - Error: cannot modify grouping variable</title>
      <link>https://markhneedham.com/blog/2015/07/09/r-dplyr-error-cannot-modify-grouping-variable/</link>
      <pubDate>Thu, 09 Jul 2015 05:55:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/09/r-dplyr-error-cannot-modify-grouping-variable/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; df %&amp;gt;% sample_n(5) title date 1148 Taiichi Ohno&amp;#39;s Workplace Management: Book Review 2008-12-08 14:14:48 158 Rails: Faking a delete method with &amp;#39;form_for&amp;#39; 2010-09-20 18:52:15 331 Retrospectives: The 4 L&amp;#39;s Retrospective 2011-07-25 21:00:30 1035 msbuild - Use OutputPath instead of OutDir 2008-08-14 18:54:03 1181 The danger of commenting out code 2009-01-17 06:02:33 &amp;gt; df %&amp;gt;% mutate(day = as.Date(date)) %&amp;gt;% count(day) %&amp;gt;% arrange(desc(n)) Source: local data frame [1,140 x 2] day n 1 2012-12-31 6 2 2014-05-31 6 3 2008-08-08 5 4 2013-01-27 5 5 2009-08-24 4 6 2012-06-24 4 7 2012-09-30 4 8 2012-10-27 4 9 2012-11-24 4 10 2013-02-28 4 &amp;gt; df %&amp;gt;% mutate(day = as.</description>
    </item>
    
    <item>
      <title>Python: Converting WordPress posts in CSV format</title>
      <link>https://markhneedham.com/blog/2015/07/07/python-converting-wordpress-posts-in-csv-format/</link>
      <pubDate>Tue, 07 Jul 2015 06:28:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/07/python-converting-wordpress-posts-in-csv-format/</guid>
      <description>&amp;lt;rss version=&amp;#34;2.0&amp;#34; xmlns:excerpt=&amp;#34;http://wordpress.org/export/1.2/excerpt/&amp;#34; xmlns:content=&amp;#34;http://purl.org/rss/1.0/modules/content/&amp;#34; xmlns:wfw=&amp;#34;http://wellformedweb.org/CommentAPI/&amp;#34; xmlns:dc=&amp;#34;http://purl.org/dc/elements/1.1/&amp;#34; xmlns:wp=&amp;#34;http://wordpress.org/export/1.2/&amp;#34; &amp;gt; ... &amp;lt;channel&amp;gt; &amp;lt;item&amp;gt; &amp;lt;title&amp;gt;First thoughts on Ruby...&amp;lt;/title&amp;gt; &amp;lt;link&amp;gt;http://www.markhneedham.com/blog/2006/08/29/first-thoughts-on-ruby/&amp;lt;/link&amp;gt; &amp;lt;pubDate&amp;gt;Tue, 29 Aug 2006 13:31:05 +0000&amp;lt;/pubDate&amp;gt; ... from bs4 import BeautifulSoup from soupselect import select from dateutil import parser import csv def read_page(page): return BeautifulSoup(open(page, &amp;#39;r&amp;#39;).read()) with open(&amp;#34;posts.csv&amp;#34;, &amp;#34;w&amp;#34;) as file: writer = csv.writer(file, delimiter=&amp;#34;,&amp;#34;) writer.writerow([&amp;#34;title&amp;#34;, &amp;#34;date&amp;#34;]) for row in select(read_page(&amp;#34;part2.xml&amp;#34;), &amp;#34;item&amp;#34;): title = select(row, &amp;#34;title&amp;#34;)[0].text.encode(&amp;#34;utf-8&amp;#34;) date = parser.parse(select(row, &amp;#34;pubdate&amp;#34;)[0].text) writer.writerow([title, date]) for row in select(read_page(&amp;#34;part1.</description>
    </item>
    
    <item>
      <title>R: Wimbledon - How do the seeds get on?</title>
      <link>https://markhneedham.com/blog/2015/07/05/r-wimbledon-how-do-the-seeds-get-on/</link>
      <pubDate>Sun, 05 Jul 2015 08:38:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/05/r-wimbledon-how-do-the-seeds-get-on/</guid>
      <description>expected_round = function(seeding) { if(seeding == 1) { return(&amp;#34;Winner&amp;#34;) } else if(seeding == 2) { return(&amp;#34;Finals&amp;#34;) } else if(seeding &amp;lt;= 4) { return(&amp;#34;Semi-Finals&amp;#34;) } else if(seeding &amp;lt;= 8) { return(&amp;#34;Quarter-Finals&amp;#34;) } else if(seeding &amp;lt;= 16) { return(&amp;#34;Round of 16&amp;#34;) } else { return(&amp;#34;Round of 32&amp;#34;) } } &amp;gt; expected_round(1) [1] &amp;#34;Winner&amp;#34; &amp;gt; expected_round(4) [1] &amp;#34;Semi-Finals&amp;#34; round_reached = function(player, main_matches) { furthest_match = main_matches %&amp;gt;% filter(winner == player | loser == player) %&amp;gt;% arrange(desc(round)) %&amp;gt;% head(1) return(ifelse(furthest_match$winner == player, &amp;#34;Winner&amp;#34;, as.</description>
    </item>
    
    <item>
      <title>R: Calculating the difference between ordered factor variables</title>
      <link>https://markhneedham.com/blog/2015/07/02/r-calculating-the-difference-between-ordered-factor-variables/</link>
      <pubDate>Thu, 02 Jul 2015 22:55:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/07/02/r-calculating-the-difference-between-ordered-factor-variables/</guid>
      <description>rounds = c(&amp;#34;Did not enter&amp;#34;, &amp;#34;Round of 128&amp;#34;, &amp;#34;Round of 64&amp;#34;, &amp;#34;Round of 32&amp;#34;, &amp;#34;Round of 16&amp;#34;, &amp;#34;Quarter-Finals&amp;#34;, &amp;#34;Semi-Finals&amp;#34;, &amp;#34;Finals&amp;#34;, &amp;#34;Winner&amp;#34;) round = factor(&amp;#34;Finals&amp;#34;, levels = rounds, ordered = TRUE) expected = factor(&amp;#34;Winner&amp;#34;, levels = rounds, ordered = TRUE) &amp;gt; round [1] Finals 9 Levels: Did not enter &amp;lt; Round of 128 &amp;lt; Round of 64 &amp;lt; Round of 32 &amp;lt; Round of 16 &amp;lt; Quarter-Finals &amp;lt; ... &amp;lt; Winner &amp;gt; expected [1] Winner 9 Levels: Did not enter &amp;lt; Round of 128 &amp;lt; Round of 64 &amp;lt; Round of 32 &amp;lt; Round of 16 &amp;lt; Quarter-Finals &amp;lt; .</description>
    </item>
    
    <item>
      <title>R: write.csv - unimplemented type &#39;list&#39; in &#39;EncodeElement&#39;</title>
      <link>https://markhneedham.com/blog/2015/06/30/r-write-csv-unimplemented-type-list-in-encodeelement/</link>
      <pubDate>Tue, 30 Jun 2015 22:26:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/30/r-write-csv-unimplemented-type-list-in-encodeelement/</guid>
      <description>&amp;gt; write.csv(foo, &amp;#34;/tmp/foo.csv&amp;#34;, row.names = FALSE) Error in .External2(C_writetable, x, file, nrow(x), p, rnames, sep, eol, : unimplemented type &amp;#39;list&amp;#39; in &amp;#39;EncodeElement&amp;#39; &amp;gt; foo col1 col2 1 1 a 2 2 b 3 3 c &amp;gt; typeof(foo$col1) [1] &amp;#34;double&amp;#34; &amp;gt; typeof(foo$col2) [1] &amp;#34;list&amp;#34; library(dplyr) foo = data.frame(col1 = c(1,2,3)) %&amp;gt;% mutate(col2 = list(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;)) foo = data.frame(col1 = c(1,2,3)) %&amp;gt;% mutate(col2 = list(&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;) %&amp;gt;% unlist()) write.csv(foo, &amp;#34;/tmp/foo.csv&amp;#34;, row.</description>
    </item>
    
    <item>
      <title>R: Speeding up the Wimbledon scraping job</title>
      <link>https://markhneedham.com/blog/2015/06/29/r-speeding-up-the-wimbledon-scraping-job/</link>
      <pubDate>Mon, 29 Jun 2015 05:36:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/29/r-speeding-up-the-wimbledon-scraping-job/</guid>
      <description>library(rvest) library(dplyr) scrape_matches1 = function(uri) { matches = data.frame() s = html(uri) rows = s %&amp;gt;% html_nodes(&amp;#34;div#scoresResultsContent tr&amp;#34;) i = 0 for(row in rows) { players = row %&amp;gt;% html_nodes(&amp;#34;td.day-table-name a&amp;#34;) seedings = row %&amp;gt;% html_nodes(&amp;#34;td.day-table-seed&amp;#34;) score = row %&amp;gt;% html_node(&amp;#34;td.day-table-score a&amp;#34;) flags = row %&amp;gt;% html_nodes(&amp;#34;td.day-table-flag img&amp;#34;) if(!is.null(score)) { player1 = players[1] %&amp;gt;% html_text() %&amp;gt;% str_trim() seeding1 = ifelse(!is.na(seedings[1]), seedings[1] %&amp;gt;% html_node(&amp;#34;span&amp;#34;) %&amp;gt;% html_text() %&amp;gt;% str_trim(), NA) flag1 = flags[1] %&amp;gt;% html_attr(&amp;#34;alt&amp;#34;) player2 = players[2] %&amp;gt;% html_text() %&amp;gt;% str_trim() seeding2 = ifelse(!</description>
    </item>
    
    <item>
      <title>R: dplyr - Update rows with earlier/previous rows values</title>
      <link>https://markhneedham.com/blog/2015/06/28/r-dplyr-update-rows-with-earlierprevious-rows-values/</link>
      <pubDate>Sun, 28 Jun 2015 22:30:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/28/r-dplyr-update-rows-with-earlierprevious-rows-values/</guid>
      <description>&amp;gt; data.frame(col1 = c(1,2,3,4,5), col2 = c(&amp;#34;a&amp;#34;, NA, NA , &amp;#34;b&amp;#34;, NA)) col1 col2 1 1 a 2 2 &amp;lt;NA&amp;gt; 3 3 &amp;lt;NA&amp;gt; 4 4 b 5 5 &amp;lt;NA&amp;gt; 1 1 a 2 2 a 3 3 a 4 4 b 5 5 b library(zoo) library(dplyr) &amp;gt; data.frame(col1 = c(1,2,3,4,5), col2 = c(&amp;#34;a&amp;#34;, NA, NA , &amp;#34;b&amp;#34;, NA)) %&amp;gt;% do(na.locf(.)) col1 col2 1 1 a 2 2 a 3 3 a 4 4 b 5 5 b &amp;gt; data.</description>
    </item>
    
    <item>
      <title>R: Command line - Error in GenericTranslator$new : could not find function &#34;loadMethod&#34;</title>
      <link>https://markhneedham.com/blog/2015/06/27/r-command-line-error-in-generictranslatornew-could-not-find-function-loadmethod/</link>
      <pubDate>Sat, 27 Jun 2015 22:47:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/27/r-command-line-error-in-generictranslatornew-could-not-find-function-loadmethod/</guid>
      <description>wimbledon#!/usr/bin/env Rscript library(rvest) library(dplyr) library(stringr) library(readr) # stuff $ time ./wimbledon ... Error in GenericTranslator$new : could not find function &amp;#34;loadMethod&amp;#34; Calls: write.csv ... html_extract_n -&amp;gt; &amp;lt;Anonymous&amp;gt; -&amp;gt; Map -&amp;gt; mapply -&amp;gt; &amp;lt;Anonymous&amp;gt; -&amp;gt; $ Execution halted real	0m1.431s user	0m1.127s sys	0m0.078s library(methods) #!/usr/bin/env Rscript library(methods) library(rvest) library(dplyr) library(stringr) library(readr) </description>
    </item>
    
    <item>
      <title>R: dplyr - squashing multiple rows per group into one</title>
      <link>https://markhneedham.com/blog/2015/06/27/r-dplyr-squashing-multiple-rows-per-group-into-one/</link>
      <pubDate>Sat, 27 Jun 2015 22:36:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/27/r-dplyr-squashing-multiple-rows-per-group-into-one/</guid>
      <description>library(dplyr) &amp;gt; main_matches %&amp;gt;% filter(loser == &amp;#34;Andy Murray&amp;#34;) %&amp;gt;% select(winner, year) winner year 1 Grigor Dimitrov 2014 2 Roger Federer 2012 3 Rafael Nadal 2011 4 Rafael Nadal 2010 5 Andy Roddick 2009 6 Rafael Nadal 2008 7 Marcos Baghdatis 2006 8 David Nalbandian 2005 &amp;gt; main_matches %&amp;gt;% filter(loser == &amp;#34;Andy Murray&amp;#34;) %&amp;gt;% group_by(winner) %&amp;gt;% summarise(years = paste(year)) Source: local data frame [6 x 2] winner years 1 Andy Roddick 2009 2 David Nalbandian 2005 3 Grigor Dimitrov 2014 4 Marcos Baghdatis 2006 5 Rafael Nadal 2011 6 Roger Federer 2012 &amp;gt; paste(c(2008,2009,2010)) [1] &amp;#34;2008&amp;#34; &amp;#34;2009&amp;#34; &amp;#34;2010&amp;#34; &amp;gt; paste(c(2008,2009,2010), collapse=&amp;#34;, &amp;#34;) [1] &amp;#34;2008, 2009, 2010&amp;#34; &amp;gt; main_matches %&amp;gt;% filter(loser == &amp;#34;Andy Murray&amp;#34;) %&amp;gt;% group_by(winner) %&amp;gt;% summarise(years = paste(year, collapse=&amp;#34;, &amp;#34;)) Source: local data frame [6 x 2] winner years 1 Andy Roddick 2009 2 David Nalbandian 2005 3 Grigor Dimitrov 2014 4 Marcos Baghdatis 2006 5 Rafael Nadal 2011, 2010, 2008 6 Roger Federer 2012 &amp;gt; main_matches %&amp;gt;% filter(loser == &amp;#34;Andy Murray&amp;#34;) %&amp;gt;% group_by(winner) %&amp;gt;% arrange(year) %&amp;gt;% summarise(years = paste(year, collapse =&amp;#34;,&amp;#34;), times = length(year)) %&amp;gt;% arrange(desc(times), years) Source: local data frame [6 x 3] winner years times 1 Rafael Nadal 2008,2010,2011 3 2 David Nalbandian 2005 1 3 Marcos Baghdatis 2006 1 4 Andy Roddick 2009 1 5 Roger Federer 2012 1 6 Grigor Dimitrov 2014 1 </description>
    </item>
    
    <item>
      <title>R: ggplot - Show discrete scale even with no value</title>
      <link>https://markhneedham.com/blog/2015/06/26/r-ggplot-show-discrete-scale-even-with-no-value/</link>
      <pubDate>Fri, 26 Jun 2015 22:48:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/26/r-ggplot-show-discrete-scale-even-with-no-value/</guid>
      <description>round_reached = function(player, main_matches) { furthest_match = main_matches %&amp;gt;% filter(winner == player | loser == player) %&amp;gt;% arrange(desc(round)) %&amp;gt;% head(1) return(ifelse(furthest_match$winner == player, &amp;#34;Winner&amp;#34;, as.character(furthest_match$round))) } player_performance = function(name, matches) { player = data.frame() for(y in 2005:2014) { round = round_reached(name, filter(matches, year == y)) if(length(round) == 1) { player = rbind(player, data.frame(year = y, round = round)) } else { player = rbind(player, data.frame(year = y, round = &amp;#34;Did not enter&amp;#34;)) } } return(player) } &amp;gt; player_performance(&amp;#34;Andy Murray&amp;#34;, main_matches) year round 1 2005 Round of 32 2 2006 Round of 16 3 2007 Did not enter 4 2008 Quarter-Finals 5 2009 Semi-Finals 6 2010 Semi-Finals 7 2011 Semi-Finals 8 2012 Finals 9 2013 Winner 10 2014 Quarter-Finals df = player_performance(&amp;#34;Andy Murray&amp;#34;, main_matches) rounds = c(&amp;#34;Did not enter&amp;#34;, &amp;#34;Round of 128&amp;#34;, &amp;#34;Round of 64&amp;#34;, &amp;#34;Round of 32&amp;#34;, &amp;#34;Round of 16&amp;#34;, &amp;#34;Quarter-Finals&amp;#34;, &amp;#34;Semi-Finals&amp;#34;, &amp;#34;Finals&amp;#34;, &amp;#34;Winner&amp;#34;) df$round = factor(df$round, levels = rounds) &amp;gt; df$round [1] Round of 32 Round of 16 Did not enter Quarter-Finals Semi-Finals Semi-Finals Semi-Finals [8] Finals Winner Quarter-Finals Levels: Did not enter Round of 128 Round of 64 Round of 32 Round of 16 Quarter-Finals Semi-Finals Finals Winner ggplot(aes(x = year, y = round, group=1), data = df) + geom_point() + geom_line() + scale_x_continuous(breaks=df$year) + scale_y_discrete(breaks = rounds) ggplot(aes(x = year, y = round, group=1), data = df) + geom_point() + geom_line() + scale_x_continuous(breaks=df$year) + scale_y_discrete(breaks = rounds, drop = FALSE) draw_chart = function(player, main_matches){ df = player_performance(player, main_matches) df$round = factor(df$round, levels = rounds) ggplot(aes(x = year, y = round, group=1), data = df) + geom_point() + geom_line() + scale_x_continuous(breaks=df$year) + scale_y_discrete(breaks = rounds, drop=FALSE) + ggtitle(player) + theme(axis.</description>
    </item>
    
    <item>
      <title>R: Scraping Wimbledon draw data</title>
      <link>https://markhneedham.com/blog/2015/06/25/r-scraping-wimbledon-draw-data/</link>
      <pubDate>Thu, 25 Jun 2015 23:14:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/25/r-scraping-wimbledon-draw-data/</guid>
      <description>library(rvest) library(dplyr) library(stringr) s = html_session(&amp;#34;http://www.atpworldtour.com/en/scores/archive/wimbledon/540/2013/results&amp;#34;) rows = s %&amp;gt;% html_nodes(&amp;#34;div#scoresResultsContent tr&amp;#34;) matches = data.frame() for(row in rows) { players = row %&amp;gt;% html_nodes(&amp;#34;td.day-table-name a&amp;#34;) seedings = row %&amp;gt;% html_nodes(&amp;#34;td.day-table-seed&amp;#34;) score = row %&amp;gt;% html_node(&amp;#34;td.day-table-score a&amp;#34;) if(!is.null(score)) { player1 = players[1] %&amp;gt;% html_text() %&amp;gt;% str_trim() seeding1 = ifelse(!is.na(seedings[1]), seedings[1] %&amp;gt;% html_node(&amp;#34;span&amp;#34;) %&amp;gt;% html_text() %&amp;gt;% str_trim(), NA) player2 = players[2] %&amp;gt;% html_text() %&amp;gt;% str_trim() seeding2 = ifelse(!is.na(seedings[2]), seedings[2] %&amp;gt;% html_node(&amp;#34;span&amp;#34;) %&amp;gt;% html_text() %&amp;gt;% str_trim(), NA) matches = rbind(data.</description>
    </item>
    
    <item>
      <title>R: Scraping the release dates of github projects</title>
      <link>https://markhneedham.com/blog/2015/06/23/r-scraping-the-release-dates-of-github-projects/</link>
      <pubDate>Tue, 23 Jun 2015 22:34:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/23/r-scraping-the-release-dates-of-github-projects/</guid>
      <description>library(dplyr) library(rvest) process_page = function(releases, session) { rows = session %&amp;gt;% html_nodes(&amp;#34;ul.release-timeline-tags li&amp;#34;) for(row in rows) { date = row %&amp;gt;% html_node(&amp;#34;span.date&amp;#34;) version = row %&amp;gt;% html_node(&amp;#34;div.tag-info a&amp;#34;) if(!is.null(version) &amp;amp;&amp;amp; !is.null(date)) { date = date %&amp;gt;% html_text() %&amp;gt;% str_trim() version = version %&amp;gt;% html_text() %&amp;gt;% str_trim() releases = rbind(releases, data.frame(date = date, version = version)) } } return(releases) } &amp;gt; r = process_page(data.frame(), html_session(&amp;#34;https://github.com/apache/cassandra/releases&amp;#34;)) &amp;gt; r date version 1 Jun 22, 2015 cassandra-2.</description>
    </item>
    
    <item>
      <title>R: Scraping Neo4j release dates with rvest</title>
      <link>https://markhneedham.com/blog/2015/06/21/r-scraping-neo4j-release-dates-with-rvest/</link>
      <pubDate>Sun, 21 Jun 2015 22:07:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/21/r-scraping-neo4j-release-dates-with-rvest/</guid>
      <description>download.file(&amp;#34;http://neo4j.com/release-notes/page/1&amp;#34;, &amp;#34;release-notes.html&amp;#34;) download.file(&amp;#34;http://neo4j.com/release-notes/page/2&amp;#34;, &amp;#34;release-notes2.html&amp;#34;) library(rvest) library(dplyr) page1 &amp;lt;- html(&amp;#34;release-notes.html&amp;#34;) page2 &amp;lt;- html(&amp;#34;release-notes2.html&amp;#34;) rows = c(page1 %&amp;gt;% html_nodes(&amp;#34;div.small-12 div.row&amp;#34;), page2 %&amp;gt;% html_nodes(&amp;#34;div.small-12 div.row&amp;#34;) ) &amp;gt; rows %&amp;gt;% head(1) [[1]] &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;h3 class=&amp;#34;entry-title&amp;#34;&amp;gt;&amp;lt;a href=&amp;#34;http://neo4j.com/release-notes/neo4j-2-2-2/&amp;#34;&amp;gt;Latest Release: Neo4j 2.2.2&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt; &amp;lt;h6&amp;gt;05/21/2015&amp;lt;/h6&amp;gt; &amp;lt;p&amp;gt;Neo4j 2.2.2 is a maintenance release, with critical improvements.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Notably, this release:&amp;lt;/p&amp;gt; &amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;Provides support for running Neo4j on Oracle and OpenJDK Java 8 runtimes&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Resolves an issue that prevented the Neo4j Browser from loading in the latest Chrome release (43.</description>
    </item>
    
    <item>
      <title>R: dplyr - segfault cause &#39;memory not mapped&#39;</title>
      <link>https://markhneedham.com/blog/2015/06/20/r-dplyr-segfault-cause-memory-not-mapped/</link>
      <pubDate>Sat, 20 Jun 2015 22:18:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/20/r-dplyr-segfault-cause-memory-not-mapped/</guid>
      <description>library(readr) dlines = data.frame(column = read_lines(&amp;#34;~/projects/logs/2015-06-18-22-docs&amp;#34;)) extract_uri = function(log) { parts = str_extract_all(log, &amp;#34;\&amp;#34;[^\&amp;#34;]*\&amp;#34;&amp;#34;) return(lapply(parts, function(p) str_match(p[1], &amp;#34;GET (.*) HTTP&amp;#34;)[2] %&amp;gt;% as.character)) } library(dplyr) pages_viewed = dlines %&amp;gt;% mutate(uri = extract_uri(column)) %&amp;gt;% count(uri) %&amp;gt;% arrange(desc(n)) segfault cause &amp;#39;memory not mapped&amp;#39; ## Error in eval(expr, envir, enclos): cannot group column uri, of class &amp;#39;list&amp;#39; extract_uri = function(log) { parts = str_extract_all(log, &amp;#34;\&amp;#34;[^\&amp;#34;]*\&amp;#34;&amp;#34;) return(unlist(lapply(parts, function(p) str_match(p[1], &amp;#34;GET (.*) HTTP&amp;#34;)[2] %&amp;gt;% as.character))) } </description>
    </item>
    
    <item>
      <title>R: Regex - capturing multiple matches of the same group</title>
      <link>https://markhneedham.com/blog/2015/06/19/r-regex-capturing-multiple-matches-of-the-same-group/</link>
      <pubDate>Fri, 19 Jun 2015 21:38:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/19/r-regex-capturing-multiple-matches-of-the-same-group/</guid>
      <description>log = &amp;#39;2015-06-18-22:277:548311224723746831\t2015-06-18T22:00:11\t2015-06-18T22:00:05Z\t93317114\tip-127-0-0-1\t127.0.0.5\tUser\tNotice\tneo4j.com.access.log\t127.0.0.3 - - [18/Jun/2015:22:00:11 +0000] &amp;#34;GET /docs/stable/query-updating.html HTTP/1.1&amp;#34; 304 0 &amp;#34;http://neo4j.com/docs/stable/cypher-introduction.html&amp;#34; &amp;#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36&amp;#34;&amp;#39; &amp;gt; library(stringr) &amp;gt; str_match(log, &amp;#34;\&amp;#34;[^\&amp;#34;]*\&amp;#34;&amp;#34;) [,1] [1,] &amp;#34;\&amp;#34;GET /docs/stable/query-updating.html HTTP/1.1\&amp;#34;&amp;#34; &amp;gt; str_extract_all(log, &amp;#34;\&amp;#34;[^\&amp;#34;]*\&amp;#34;&amp;#34;) [[1]] [1] &amp;#34;\&amp;#34;GET /docs/stable/query-updating.html HTTP/1.1\&amp;#34;&amp;#34; [2] &amp;#34;\&amp;#34;http://neo4j.com/docs/stable/cypher-introduction.html\&amp;#34;&amp;#34; [3] &amp;#34;\&amp;#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36\&amp;#34;&amp;#34; parts = str_extract_all(log, &amp;#34;\&amp;#34;[^\&amp;#34;]*\&amp;#34;&amp;#34;)[[1]] uri = str_match(parts[1], &amp;#34;GET (.*) HTTP&amp;#34;)[2] referer = str_match(parts[2], &amp;#34;\&amp;#34;(.</description>
    </item>
    
    <item>
      <title>Coding: Explore and retreat</title>
      <link>https://markhneedham.com/blog/2015/06/17/coding-explore-and-retreat/</link>
      <pubDate>Wed, 17 Jun 2015 17:23:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/17/coding-explore-and-retreat/</guid>
      <description>public class Network implements Cloneable, Serializable { private static final long serialVersionUID = 1; private int numberOfNodes; private int[] firstNeighborIndex; private int[] neighbor; private double[] edgeWeight; private double totalEdgeWeightSelfLinks; private double[] nodeWeight; private int nClusters; private int[] cluster; private double[] clusterWeight; private int[] numberNodesPerCluster; private int[][] nodePerCluster; private boolean clusteringStatsAvailable; ... } </description>
    </item>
    
    <item>
      <title>Northwind: Finding direct/transitive Reports in SQL and Neo4j&#39;s Cypher</title>
      <link>https://markhneedham.com/blog/2015/06/15/northwind-finding-directtransitive-reports-in-sql-and-neo4js-cypher/</link>
      <pubDate>Mon, 15 Jun 2015 22:53:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/15/northwind-finding-directtransitive-reports-in-sql-and-neo4js-cypher/</guid>
      <description>SELECT e.&amp;#34;EmployeeID&amp;#34;, e.&amp;#34;ReportsTo&amp;#34; FROM employees AS e WHERE e.&amp;#34;ReportsTo&amp;#34; is not null; EmployeeID | ReportsTo ------------+-----------  1 | 2 3 | 2 4 | 2 5 | 2 6 | 5 7 | 5 8 | 2 9 | 5 (8 rows) MATCH (e:Employee)&amp;lt;-[:REPORTS_TO]-(sub) RETURN sub.EmployeeID, e.EmployeeID +-------------------------------+ | sub.EmployeeID | e.EmployeeID | +-------------------------------+ | &amp;quot;4&amp;quot; | &amp;quot;2&amp;quot; | | &amp;quot;5&amp;quot; | &amp;quot;2&amp;quot; | | &amp;quot;1&amp;quot; | &amp;quot;2&amp;quot; | | &amp;quot;3&amp;quot; | &amp;quot;2&amp;quot; | | &amp;quot;8&amp;quot; | &amp;quot;2&amp;quot; | | &amp;quot;9&amp;quot; | &amp;quot;5&amp;quot; | | &amp;quot;6&amp;quot; | &amp;quot;5&amp;quot; | | &amp;quot;7&amp;quot; | &amp;quot;5&amp;quot; | +-------------------------------+ 8 rows SELECT e.</description>
    </item>
    
    <item>
      <title>The Willpower Instinct: Reducing time spent mindlessly scrolling for things to read</title>
      <link>https://markhneedham.com/blog/2015/06/12/the-willpower-instinct-reducing-time-spent-mindlessly-scrolling-for-things-to-read/</link>
      <pubDate>Fri, 12 Jun 2015 23:12:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/12/the-willpower-instinct-reducing-time-spent-mindlessly-scrolling-for-things-to-read/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j: Using LOAD CSV to help explore CSV files</title>
      <link>https://markhneedham.com/blog/2015/06/11/neo4j-using-load-csv-to-help-explore-csv-files/</link>
      <pubDate>Thu, 11 Jun 2015 23:15:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/11/neo4j-using-load-csv-to-help-explore-csv-files/</guid>
      <description>$ head -n 5 data/import/references.csv ReferencedEpisodeId,ReferencingEpisodeId,ReferenceText 168,184,&amp;#34;Marshall will eventually hear back from the New York State Judicatory Committee in Something New, which will become a main plot point of Season 9.&amp;#34; 168,169,Barney proclaiming to be done with Robin will be the focal point of Lobster Crawl. 58,57,&amp;#34;Barney finally confronts his saboteur (Abby, whom he slept with in Ten Sessions) in Everything Must Go.&amp;#34; 58,63,&amp;#34;Barney finally confronts his saboteur (Abby, whom he slept with in Ten Sessions) in Everything Must Go.</description>
    </item>
    
    <item>
      <title>Mac OS X: GNU sed -  Hex string replacement / replacing new line characters</title>
      <link>https://markhneedham.com/blog/2015/06/11/mac-os-x-gnu-sed-hex-string-replacement-replacing-new-line-characters/</link>
      <pubDate>Thu, 11 Jun 2015 21:38:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/11/mac-os-x-gnu-sed-hex-string-replacement-replacing-new-line-characters/</guid>
      <description>brew install coreutils brew install gnu-sed --with-default-names $ echo -e &amp;#34;Hello\x0AMark\x0A\x0D&amp;#34; Hello Mark $ echo -e &amp;#34;Hello\x0AMark\x0A\x0D&amp;#34; | \  sed &amp;#39;N;/\x0A[^\x0D]/s/\n/ /&amp;#39; Hello Mark $ echo -e &amp;#34;Hello\x0AMark\x0A\x0DHello\x0AMichael\x0A\x0D&amp;#34; Hello Mark Hello Michael $ echo -e &amp;#34;Hello\x0AMark\x0A\x0DHello\x0AMichael\x0A\x0D&amp;#34; | \  sed &amp;#39;N;/\x0A[^\x0D]/s/\n/ /&amp;#39; Hello Mark Hello Michael </description>
    </item>
    
    <item>
      <title>Unix: Converting a file of values into a comma separated list</title>
      <link>https://markhneedham.com/blog/2015/06/08/unix-converting-a-file-of-values-into-a-comma-separated-list/</link>
      <pubDate>Mon, 08 Jun 2015 22:23:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/08/unix-converting-a-file-of-values-into-a-comma-separated-list/</guid>
      <description>$ cat foo2.txt | head -n 5 1.0 1.0 1.0 1.0 1.0 &amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34; $ sed &amp;#39;s/.*/&amp;#34;&amp;amp;&amp;#34;/g&amp;#39; foo2.txt | head -n 5 &amp;#34;1.0&amp;#34; &amp;#34;1.0&amp;#34; &amp;#34;1.0&amp;#34; &amp;#34;1.0&amp;#34; &amp;#34;1.0&amp;#34; $ sed &amp;#39;s/.*/&amp;#34;&amp;amp;&amp;#34;/g&amp;#39; foo2.txt | tr &amp;#39;\n&amp;#39; &amp;#39;,&amp;#39; &amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;, $ paste -s -d &amp;#39;,&amp;#39; &amp;lt;(sed &amp;#39;s/.*/&amp;#34;&amp;amp;&amp;#34;/g&amp;#39; foo2.txt) &amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34;,&amp;#34;1.0&amp;#34; $ paste -s -d &amp;#39;,&amp;#39; &amp;lt;(sed &amp;#39;s/.*/&amp;#34;&amp;amp;&amp;#34;/g&amp;#39; foo2.txt) | pbcopy </description>
    </item>
    
    <item>
      <title>Netty: Testing encoders/decoders</title>
      <link>https://markhneedham.com/blog/2015/06/05/netty-testing-encodersdecoders/</link>
      <pubDate>Fri, 05 Jun 2015 21:25:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/05/netty-testing-encodersdecoders/</guid>
      <description>// Examples uses Netty 4.0.28.Final public static class MessageEncoder extends MessageToMessageEncoder&amp;lt;Foo&amp;gt; { @Override protected void encode( ChannelHandlerContext ctx, Foo msg, List&amp;lt;Object&amp;gt; out ) throws Exception { ByteBuf buf = ctx.alloc().buffer(); buf.writeInt( msg.value() ); out.add( buf ); } } public static class Foo { private Integer value; public Foo(Integer value) { this.value = value; } public int value() { return value; } } @Test public void shouldEncodeAndDecodeVoteRequest() { // given  EmbeddedChannel channel = new EmbeddedChannel( new MessageEncoder(), new MessageDecoder() ); // when  Foo foo = new Foo( 42 ); channel.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Step by step to creating a linked list of adjacent nodes using UNWIND</title>
      <link>https://markhneedham.com/blog/2015/06/04/neo4j-cypher-step-by-step-to-creating-a-linked-list-of-adjacent-nodes-using-unwind/</link>
      <pubDate>Thu, 04 Jun 2015 22:17:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/04/neo4j-cypher-step-by-step-to-creating-a-linked-list-of-adjacent-nodes-using-unwind/</guid>
      <description>CREATE (:Season {name: &amp;quot;2013/2014&amp;quot;, timestamp: 1375315200}) CREATE (:Season {name: &amp;quot;2012/2013&amp;quot;, timestamp: 1343779200}) CREATE (:Season {name: &amp;quot;2011/2012&amp;quot;, timestamp: 1312156800}) CREATE (:Season {name: &amp;quot;2010/2011&amp;quot;, timestamp: 1280620800}) CREATE (:Season {name: &amp;quot;2009/2010&amp;quot;, timestamp: 1249084800}) MATCH (s:Season) WITH s ORDER BY s.timestamp WITH COLLECT(s) AS seasons FOREACH(i in RANGE(0, length(seasons)-2) | FOREACH(si in [seasons[i]] | FOREACH(si2 in [seasons[i+1]] | MERGE (si)-[:NEXT]-&amp;gt;(si2)))) MATCH (s:Season) WITH s ORDER BY s.timestamp RETURN COLLECT(s) AS seasons ==&amp;gt; +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | seasons | ==&amp;gt; +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | [Node[1973]{timestamp:1249084800,name:&amp;quot;2009/2010&amp;quot;},Node[1972]{timestamp:1280620800,name:&amp;quot;2010/2011&amp;quot;},Node[1971]{timestamp:1312156800,name:&amp;quot;2011/2012&amp;quot;},Node[1970]{timestamp:1343779200,name:&amp;quot;2012/2013&amp;quot;},Node[1969]{timestamp:1375315200,name:&amp;quot;2013/2014&amp;quot;}] | ==&amp;gt; +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ 2009/2010	2010/2011 2010/2011	2011/2012 2011/2012	2012/2013 2012/2013	2013/2014 &amp;gt;&amp;gt;&amp;gt; seasons = [&amp;#34;2009/2010&amp;#34;, &amp;#34;2010/2011&amp;#34;, &amp;#34;2011/2012&amp;#34;, &amp;#34;2012/2013&amp;#34;, &amp;#34;2013/2014&amp;#34;] &amp;gt;&amp;gt;&amp;gt; zip(seasons, seasons[1:]) [(&amp;#39;2009/2010&amp;#39;, &amp;#39;2010/2011&amp;#39;), (&amp;#39;2010/2011&amp;#39;, &amp;#39;2011/2012&amp;#39;), (&amp;#39;2011/2012&amp;#39;, &amp;#39;2012/2013&amp;#39;), (&amp;#39;2012/2013&amp;#39;, &amp;#39;2013/2014&amp;#39;)] return RANGE(0,4) ==&amp;gt; +-------------+ ==&amp;gt; | RANGE(0,4) | ==&amp;gt; +-------------+ ==&amp;gt; | [0,1,2,3,4] | ==&amp;gt; +-------------+ UNWIND RANGE(0,4) as idx RETURN idx, idx +1; ==&amp;gt; +--------------+ ==&amp;gt; | idx | idx +1 | ==&amp;gt; +--------------+ ==&amp;gt; | 0 | 1 | ==&amp;gt; | 1 | 2 | ==&amp;gt; | 2 | 3 | ==&amp;gt; | 3 | 4 | ==&amp;gt; | 4 | 5 | ==&amp;gt; +--------------+ ==&amp;gt; 5 rows MATCH (s:Season) WITH s ORDER BY s.</description>
    </item>
    
    <item>
      <title>R: ggplot geom_density - Error in exists(name, envir = env, mode = mode) : argument &#34;env&#34; is missing, with no default</title>
      <link>https://markhneedham.com/blog/2015/06/03/r-ggplot-geom_density-error-in-existsname-envir-env-mode-mode-argument-env-is-missing-with-no-default/</link>
      <pubDate>Wed, 03 Jun 2015 05:52:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/03/r-ggplot-geom_density-error-in-existsname-envir-env-mode-mode-argument-env-is-missing-with-no-default/</guid>
      <description>library(dplyr) df2011 = read.csv(&amp;#34;~/projects/rLearning/showcases.2011.csv&amp;#34;, na.strings = c(&amp;#34;&amp;#34;, &amp;#34;NA&amp;#34;)) df2011 = df2011 %&amp;gt;% na.omit() &amp;gt; df2011 %&amp;gt;% head() X Sep..19 Sep..20 Sep..21 Sep..22 Sep..23 Sep..26 Sep..27 Sep..28 Sep..29 Sep..30 Oct..3 3 Showcase 1 50969 21901 32815 44432 24273 30554 20963 28941 25851 28800 37703 4 Showcase 2 45429 34061 53186 31428 22320 24337 41373 45437 41125 36319 38752 6 Bid 1 42000 14000 32000 27000 18750 27222 25000 35000 22500 21300 21567 7 Bid 2 34000 59900 45000 38000 23000 18525 32000 45000 32000 27500 23800 9 Difference 1 8969 7901 815 17432 5523 3332 -4037 -6059 3351 7500 16136 10 Difference 2 11429 -25839 8186 -6572 -680 5812 9373 437 9125 8819 14952 .</description>
    </item>
    
    <item>
      <title>R: dplyr - removing empty rows</title>
      <link>https://markhneedham.com/blog/2015/06/02/r-dplyr-removing-empty-rows/</link>
      <pubDate>Tue, 02 Jun 2015 06:49:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/06/02/r-dplyr-removing-empty-rows/</guid>
      <description>wget ￼http://www.greenteapress.com/thinkbayes/showcases.2011.csv￼ library(dplyr) df2011 = read.csv(&amp;#34;~/projects/rLearning/showcases.2011.csv&amp;#34;) &amp;gt; df2011 %&amp;gt;% head(10) X Sep..19 Sep..20 Sep..21 Sep..22 Sep..23 Sep..26 Sep..27 Sep..28 Sep..29 Sep..30 Oct..3 1 5631K 5632K 5633K 5634K 5635K 5641K 5642K 5643K 5644K 5645K 5681K 2 3 Showcase 1 50969 21901 32815 44432 24273 30554 20963 28941 25851 28800 37703 4 Showcase 2 45429 34061 53186 31428 22320 24337 41373 45437 41125 36319 38752 5 ... df2011 = read.csv(&amp;#34;~/projects/rLearning/showcases.2011.csv&amp;#34;, na.strings = c(&amp;#34;&amp;#34;, &amp;#34;NA&amp;#34;)) df2011 = df2011 %&amp;gt;% na.</description>
    </item>
    
    <item>
      <title>R: Think Bayes Euro Problem</title>
      <link>https://markhneedham.com/blog/2015/05/31/r-think-bayes-euro-problem/</link>
      <pubDate>Sun, 31 May 2015 23:11:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/31/r-think-bayes-euro-problem/</guid>
      <description>When spun on edge 250 times, a Belgian one-euro coin came up heads 140 times and tails 110. ‘It looks very suspicious to me,’ said Barry Blight, a statistics lecturer at the London School of Economics. ‘If the coin were unbiased, the chance of getting a result as extreme as that would be less than 7%.’
But do these data give evidence that the coin is biased rather than fair?</description>
    </item>
    
    <item>
      <title>Python: CSV writing - TypeError: &#39;builtin_function_or_method&#39; object has no attribute &#39;__getitem__&#39;</title>
      <link>https://markhneedham.com/blog/2015/05/31/python-csv-writing-typeerror-builtin_function_or_method-object-has-no-attribute-__getitem__/</link>
      <pubDate>Sun, 31 May 2015 22:33:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/31/python-csv-writing-typeerror-builtin_function_or_method-object-has-no-attribute-__getitem__/</guid>
      <description>import csv writer = csv.writer(file, delimiter=&amp;#34;,&amp;#34;) writer.writerow[&amp;#34;player&amp;#34;, &amp;#34;team&amp;#34;] TypeError: &amp;#39;builtin_function_or_method&amp;#39; object has no attribute &amp;#39;__getitem__&amp;#39; writer.writerow([&amp;#34;player&amp;#34;, &amp;#34;team&amp;#34;]) </description>
    </item>
    
    <item>
      <title>Neo4j: The BBC Champions League graph</title>
      <link>https://markhneedham.com/blog/2015/05/30/neo4j-the-bbc-champions-league-graph/</link>
      <pubDate>Sat, 30 May 2015 21:45:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/30/neo4j-the-bbc-champions-league-graph/</guid>
      <description>from bs4 import BeautifulSoup from soupselect import select import bs4 soup = BeautifulSoup(open(&amp;#34;data/results&amp;#34;, &amp;#34;r&amp;#34;)) matches = select(soup, &amp;#34;a.report&amp;#34;) for match in matches: print &amp;#34;http://www.bbc.co.uk/%s&amp;#34; %(match.get(&amp;#34;href&amp;#34;)) I then piped the output of running this script into wget:
find_all_matches.py | xargs wget -O data/raw match (a:Attempt)&amp;lt;-[:HAD_ATTEMPT]-(app)&amp;lt;-[:MADE_APPEARANCE]-(player), (app)-[:FOR_TEAM]-(team) WITH player, COUNT(*) as times, COLLECT(a) AS attempts, team WITH player, times, LENGTH([a in attempts WHERE a:Goal]) AS goals, team WHERE times &amp;gt; 10 RETURN player.</description>
    </item>
    
    <item>
      <title>Python: Look ahead multiple elements in an iterator/generator</title>
      <link>https://markhneedham.com/blog/2015/05/28/python-look-ahead-multiple-elements-in-an-iteratorgenerator/</link>
      <pubDate>Thu, 28 May 2015 20:56:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/28/python-look-ahead-multiple-elements-in-an-iteratorgenerator/</guid>
      <description>events = [ {&amp;#39;event&amp;#39;: u&amp;#39;Booking Pedro (Barcelona) is shown the yellow card for a bad foul.&amp;#39;, &amp;#39;sortable_time&amp;#39;: 5083, &amp;#39;match_id&amp;#39;: &amp;#39;32683310&amp;#39;, &amp;#39;formatted_time&amp;#39;: u&amp;#39;84:43&amp;#39;}, {&amp;#39;event&amp;#39;: u&amp;#39;Rafinha (FC Bayern M\xfcnchen) wins a free kick on the right wing.&amp;#39;, &amp;#39;sortable_time&amp;#39;: 5078, &amp;#39;match_id&amp;#39;: &amp;#39;32683310&amp;#39;, &amp;#39;formatted_time&amp;#39;: u&amp;#39;84:38&amp;#39;}, {&amp;#39;event&amp;#39;: u&amp;#39;Foul by Pedro (Barcelona).&amp;#39;, &amp;#39;sortable_time&amp;#39;: 5078, &amp;#39;match_id&amp;#39;: &amp;#39;32683310&amp;#39;, &amp;#39;formatted_time&amp;#39;: u&amp;#39;84:38&amp;#39;} ] def cards(events): events = iter(events) item = events.next() next = events.next() event_id = 0 for next_next in events: event = item[&amp;#34;event&amp;#34;] booking = re.</description>
    </item>
    
    <item>
      <title>Neo4j: The foul revenge graph</title>
      <link>https://markhneedham.com/blog/2015/05/26/neo4j-the-foul-revenge-graph/</link>
      <pubDate>Tue, 26 May 2015 07:03:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/26/neo4j-the-foul-revenge-graph/</guid>
      <description>MATCH (foul:Foul)-[:COMMITTED_IN_MATCH]-&amp;gt;(match) WITH foul,match ORDER BY match.id, foul.sortableTime WITH match, COLLECT(foul) AS fouls FOREACH(i in range(0, length(fouls) -2) | FOREACH(foul1 in [fouls[i]] | FOREACH (foul2 in [fouls[i+1]] | MERGE (foul1)-[:NEXT]-&amp;gt;(foul2) ))); match (foul1:Foul)-[:COMMITTED_AGAINST]-&amp;gt;(app1)-[:COMMITTED_FOUL]-&amp;gt;(foul2)-[:COMMITTED_AGAINST]-&amp;gt;(app2)-[:COMMITTED_FOUL]-&amp;gt;(foul1), (player1)-[:MADE_APPEARANCE]-&amp;gt;(app1), (player2)-[:MADE_APPEARANCE]-&amp;gt;(app2), (foul1)-[:COMMITTED_IN_MATCH]-&amp;gt;(match:Match {id: &amp;quot;32683310&amp;quot;})&amp;lt;-[:COMMITTED_IN_MATCH]-(foul2) WHERE (foul1)-[:NEXT*]-&amp;gt;(foul2) RETURN player2.name AS firstFouler, player1.name AS revengeFouler, foul1.time, foul1.location, foul2.time, foul2.location match (foul1:Foul)-[:COMMITTED_AGAINST]-&amp;gt;(app1)-[:COMMITTED_FOUL]-&amp;gt;(foul2)-[:COMMITTED_AGAINST]-&amp;gt;(app2)-[:COMMITTED_FOUL]-&amp;gt;(foul1), (player1)-[:MADE_APPEARANCE]-&amp;gt;(app1), (player2)-[:MADE_APPEARANCE]-&amp;gt;(app2), (foul1)-[:COMMITTED_IN_MATCH]-&amp;gt;(match:Match {id: &amp;quot;32683310&amp;quot;})&amp;lt;-[:COMMITTED_IN_MATCH]-(foul2), (foul1)-[:NEXT*]-&amp;gt;(foul2) RETURN * </description>
    </item>
    
    <item>
      <title>Python: Joining multiple generators/iterators</title>
      <link>https://markhneedham.com/blog/2015/05/24/python-joining-multiple-generatorsiterators/</link>
      <pubDate>Sun, 24 May 2015 23:51:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/24/python-joining-multiple-generatorsiterators/</guid>
      <description>In my previous blog post I described how I&amp;rsquo;d refactored some scraping code I&amp;rsquo;ve been working on to use iteratorsand ended up with a function which returned a generator containing all the events for one BBC live text match:
match_id = &amp;#34;32683310&amp;#34; events = extract_events(&amp;#34;data/raw/%s&amp;#34; % (match_id)) &amp;gt;&amp;gt;&amp;gt; print type(events) &amp;lt;type &amp;#39;generator&amp;#39;&amp;gt; Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted.</description>
    </item>
    
    <item>
      <title>Python: Refactoring to iterator</title>
      <link>https://markhneedham.com/blog/2015/05/23/python-refactoring-to-iterator/</link>
      <pubDate>Sat, 23 May 2015 10:14:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/23/python-refactoring-to-iterator/</guid>
      <description>import bs4 import re from bs4 import BeautifulSoup from soupselect import select def extract_events(file): match = open(file, &amp;#39;r&amp;#39;) soup = BeautifulSoup(match.read()) all_events = [] for event in select(soup, &amp;#39;div#live-text-commentary-wrapper div#live-text&amp;#39;): for child in event.children: if type(child) is bs4.element.Tag: all_events.append(child.getText().strip()) for event in select(soup, &amp;#39;div#live-text-commentary-wrapper div#more-live-text&amp;#39;): for child in event.children: if type(child) is bs4.element.Tag: all_events.append(child.getText().strip()) timed_events = [] for i in range(0, len(all_events)): event = all_events[i] time = re.findall(&amp;#34;\d{1,2}:\d{2}&amp;#34;, event) formatted_time = &amp;#34; +&amp;#34;.</description>
    </item>
    
    <item>
      <title>Python: UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode character u&#39;\xfc&#39; in position 11: ordinal not in range(128)</title>
      <link>https://markhneedham.com/blog/2015/05/21/python-unicodeencodeerror-ascii-codec-cant-encode-character-uxfc-in-position-11-ordinal-not-in-range128/</link>
      <pubDate>Thu, 21 May 2015 06:14:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/21/python-unicodeencodeerror-ascii-codec-cant-encode-character-uxfc-in-position-11-ordinal-not-in-range128/</guid>
      <description>$ python extract_players.py (u&amp;#39;Sergio Busquets&amp;#39;, u&amp;#39;Barcelona&amp;#39;) (u&amp;#39;Javier Mascherano&amp;#39;, u&amp;#39;Barcelona&amp;#39;) (u&amp;#39;Jordi Alba&amp;#39;, u&amp;#39;Barcelona&amp;#39;) (u&amp;#39;Bastian Schweinsteiger&amp;#39;, u&amp;#39;FC Bayern M\xfcnchen&amp;#39;) (u&amp;#39;Dani Alves&amp;#39;, u&amp;#39;Barcelona&amp;#39;) with open(&amp;#34;data/players.csv&amp;#34;, &amp;#34;w&amp;#34;) as file: writer = csv.writer(file, delimiter=&amp;#34;,&amp;#34;) writer.writerow([&amp;#34;player&amp;#34;, &amp;#34;team&amp;#34;]) for player, team in players: print player, team, type(player), type(team) writer.writerow([player, team]) $ python extract_players.py ... Bastian Schweinsteiger FC Bayern München &amp;lt;type &amp;#39;unicode&amp;#39;&amp;gt; &amp;lt;type &amp;#39;unicode&amp;#39;&amp;gt; Traceback (most recent call last): File &amp;#34;extract_players.py&amp;#34;, line 67, in &amp;lt;module&amp;gt; writer.writerow([player, team]) UnicodeEncodeError: &amp;#39;ascii&amp;#39; codec can&amp;#39;t encode character u&amp;#39;\xfc&amp;#39; in position 11: ordinal not in range(128) with open(&amp;#34;data/players.</description>
    </item>
    
    <item>
      <title>Neo4j: Finding all shortest paths</title>
      <link>https://markhneedham.com/blog/2015/05/19/neo4j-finding-all-shortest-paths/</link>
      <pubDate>Tue, 19 May 2015 22:45:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/19/neo4j-finding-all-shortest-paths/</guid>
      <description>MATCH (p1:Person)-[:ACTED_IN]-&amp;gt;()&amp;lt;-[:ACTED_IN]-(p2:Person) MERGE (p1)-[:KNOWS]-(p2) MATCH (p1:Person {name: &amp;quot;Tom Hanks&amp;quot;}), (p2:Person {name: &amp;quot;Tom Cruise&amp;quot;}), path = shortestpath((p1)-[:KNOWS*]-(p2)) RETURN path MATCH (p1:Person), (p2:Person), path = shortestpath((p1)-[:KNOWS*]-(p2)) RETURN path ORDER BY LENGTH(path) DESC LIMIT 1 MATCH (p1:Person)-[:ACTED_IN]-&amp;gt;() WITH p1, COUNT(*) AS appearances ORDER BY appearances DESC LIMIT 10 WITH p1 AS p1, p1 AS p2 MATCH path = shortestpath((p1)-[:KNOWS*]-(p2)) RETURN path ORDER BY LENGTH(path) DESC LIMIT 1 MATCH (p1:Person)-[:ACTED_IN]-&amp;gt;() WITH p1, COUNT(*) AS appearances ORDER BY appearances DESC LIMIT 10 WITH COLLECT(p1) AS ps UNWIND ps AS p1 UNWIND ps AS p2 MATCH path = shortestpath((p1)-[:KNOWS*]-(p2)) RETURN path ORDER BY LENGTH(path) DESC LIMIT 1 </description>
    </item>
    
    <item>
      <title>Neo4j: Refactoring the BBC football live text fouls graph</title>
      <link>https://markhneedham.com/blog/2015/05/17/neo4j-refactoring-the-bbc-football-live-text-fouls-graph/</link>
      <pubDate>Sun, 17 May 2015 11:04:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/17/neo4j-refactoring-the-bbc-football-live-text-fouls-graph/</guid>
      <description>First up let&amp;rsquo;s write a query to introduce the new structure.
match (foul:Foul)-[:COMMITTED_AGAINST]-&amp;gt;(fouledPlayer), (foul)&amp;lt;-[:COMMITTED_FOUL]-(foulingPlayer), (foul)-[:COMMITTED_IN_MATCH]-&amp;gt;(match:Match {id: &amp;quot;32683310&amp;quot;}), (foulingPlayer)-[:MADE_APPEARANCE]-(foulingPlayerApp)-[:IN_MATCH]-&amp;gt;(match), (fouledPlayer)-[:MADE_APPEARANCE]-(fouledPlayerApp)-[:IN_MATCH]-&amp;gt;(match) MERGE (foul)&amp;lt;-[:COMMITTED_FOUL]-(foulingPlayerApp) MERGE (foul)-[:COMMITTED_AGAINST]-&amp;gt;(fouledPlayerApp) match (match:Match {id: &amp;quot;32683310&amp;quot;})&amp;lt;-[:COMMITTED_IN_MATCH]-(foul) RETURN foul.location AS location, COUNT(*) as fouls ORDER BY fouls DESC match (match:Match {id: &amp;quot;32683310&amp;quot;})&amp;lt;-[:IN_MATCH]-()&amp;lt;-[]-(foul:Foul) RETURN foul.location AS location, COUNT(*) as fouls ORDER BY fouls DESC match (match:Match {id: &amp;quot;32683310&amp;quot;})&amp;lt;-[:COMMITTED_IN_MATCH]-(foul:Foul)&amp;lt;-[:COMMITTED_FOUL]-(fouler:Player) RETURN fouler.name AS fouler, COUNT(*) as fouls ORDER BY fouls DESC LIMIT 10; match (match:Match {id: &amp;quot;32683310&amp;quot;})&amp;lt;-[:IN_MATCH]-(appearance)-[:COMMITTED_FOUL]-&amp;gt;(foul:Foul), (appearance)&amp;lt;-[:MADE_APPEARANCE]-(fouler) RETURN fouler.</description>
    </item>
    
    <item>
      <title>Neo4j: BBC football live text fouls graph</title>
      <link>https://markhneedham.com/blog/2015/05/16/neo4j-bbc-football-live-text-fouls-graph/</link>
      <pubDate>Sat, 16 May 2015 21:13:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/16/neo4j-bbc-football-live-text-fouls-graph/</guid>
      <description>I find the feedback cycle with this type of work is dramatically improved if we have the source data available locally so the first step was to get the BBC web page downloaded:
$ wget http://www.bbc.co.uk/sport/0/football/32683310 $ head -n 10 data/events.csv matchId,foulId,freeKickId,time,foulLocation,fouledPlayer,fouledPlayerTeam,foulingPlayer,foulingPlayerTeam 32683310,3,2,90:00 +0:40,in the defensive half.,Xabi Alonso,FC Bayern München,Pedro,Barcelona 32683310,9,8,84:38,on the right wing.,Rafinha,FC Bayern München,Pedro,Barcelona 32683310,12,13,83:17,in the attacking half.,Lionel Messi,Barcelona,Sebastian Rode,FC Bayern München 32683310,15,14,82:43,in the defensive half.,Sebastian Rode,FC Bayern München,Neymar,Barcelona 32683310,17,18,80:41,in the attacking half.</description>
    </item>
    
    <item>
      <title>R: ggplot - Displaying multiple charts with a for loop</title>
      <link>https://markhneedham.com/blog/2015/05/14/r-ggplot-displaying-multiple-charts-with-a-for-loop/</link>
      <pubDate>Thu, 14 May 2015 00:17:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/14/r-ggplot-displaying-multiple-charts-with-a-for-loop/</guid>
      <description>library(RNeo4j) graph = startGraph(&amp;#34;http://127.0.0.1:7474/db/data/&amp;#34;) eventId = &amp;#34;220750415&amp;#34; query = &amp;#34;match (g:Group {name: &amp;#39;Neo4j - London User Group&amp;#39;})-[:HOSTED_EVENT]-&amp;gt; (e {id: {id}})&amp;lt;-[:TO]-(rsvp {response: &amp;#39;yes&amp;#39;})&amp;lt;-[:RSVPD]-(person) WITH rsvp, person MATCH (person)-[:RSVPD]-&amp;gt;(otherRSVP) WITH person, rsvp, otherRSVP ORDER BY person.id, otherRSVP.time WITH person, rsvp, COLLECT(otherRSVP)[0] AS earliestRSVP return rsvp.time, earliestRSVP.time, person.id&amp;#34; df = cypher(graph, query, id= eventId) &amp;gt; df %&amp;gt;% sample_n(10) rsvp.time earliestRSVP.time person.id 18 1.430819e+12 1.392726e+12 130976662 95 1.430069e+12 1.430069e+12 10286388 79 1.429035e+12 1.429035e+12 38344282 64 1.</description>
    </item>
    
    <item>
      <title>R: Cohort heatmap of Neo4j London meetup</title>
      <link>https://markhneedham.com/blog/2015/05/11/r-cohort-heatmap-of-neo4j-london-meetup/</link>
      <pubDate>Mon, 11 May 2015 23:16:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/11/r-cohort-heatmap-of-neo4j-london-meetup/</guid>
      <description>df = read.csv(&amp;#34;/tmp/df.csv&amp;#34;) &amp;gt; df %&amp;gt;% sample_n(5) rsvp.time person.id time date 255 1.354277e+12 12228948 2012-11-30 12:05:08 2012-11 2475 1.407342e+12 19057581 2014-08-06 16:26:04 2014-08 3988 1.421769e+12 66122172 2015-01-20 15:58:02 2015-01 4411 1.419377e+12 165750262 2014-12-23 23:27:44 2014-12 1010 1.383057e+12 74602292 2013-10-29 14:24:32 2013-10 firstMeetup = df %&amp;gt;% group_by(person.id) %&amp;gt;% summarise(firstEvent = min(time), count = n()) %&amp;gt;% arrange(desc(count)) firstMeetup$date = format(as.Date(firstMeetup$firstEvent), &amp;#34;%Y-%m&amp;#34;) countsForCohort = function(df, firstMeetup, cohort) { members = (firstMeetup %&amp;gt;% filter(date == cohort))$person.</description>
    </item>
    
    <item>
      <title>R: Neo4j London meetup group - How many events do people come to?</title>
      <link>https://markhneedham.com/blog/2015/05/09/r-neo4j-london-meetup-group-how-many-events-do-people-come-to/</link>
      <pubDate>Sat, 09 May 2015 22:33:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/09/r-neo4j-london-meetup-group-how-many-events-do-people-come-to/</guid>
      <description>How often do people come to meetups?
library(RNeo4j) library(dplyr) graph = startGraph(&amp;#34;http://localhost:7474/db/data/&amp;#34;) query = &amp;#34;MATCH (g:Group {name: &amp;#39;Neo4j - London User Group&amp;#39;})-[:HOSTED_EVENT]-&amp;gt;(event)&amp;lt;-[:TO]-({response: &amp;#39;yes&amp;#39;})&amp;lt;-[:RSVPD]-(profile)-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g) WHERE (event.time + event.utc_offset) &amp;lt; timestamp() RETURN event.id, event.time + event.utc_offset AS eventTime, profile.id, membership.joined&amp;#34; df = cypher(graph, query) &amp;gt; df %&amp;gt;% head() event.id eventTime profile.id membership.joined 1 20616111 1.309372e+12 6436797 1.307285e+12 2 20616111 1.309372e+12 12964956 1.307275e+12 3 20616111 1.309372e+12 14533478 1.307290e+12 4 20616111 1.309372e+12 10793775 1.307705e+12 5 24528711 1.</description>
    </item>
    
    <item>
      <title>Python: Selecting certain indexes in an array</title>
      <link>https://markhneedham.com/blog/2015/05/05/python-selecting-certain-indexes-in-an-array/</link>
      <pubDate>Tue, 05 May 2015 21:39:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/05/python-selecting-certain-indexes-in-an-array/</guid>
      <description>import requests from bs4 import BeautifulSoup from soupselect import select page = open(&amp;#34;constituencies.html&amp;#34;, &amp;#39;r&amp;#39;) soup = BeautifulSoup(page.read()) for row in select(soup, &amp;#34;table.wikitable tr&amp;#34;): if select(row, &amp;#34;th&amp;#34;): print [cell.text for cell in select(row, &amp;#34;th&amp;#34;)] if select(row, &amp;#34;td&amp;#34;): print [cell.text for cell in select(row, &amp;#34;td&amp;#34;)] $ python blog.py [u&amp;#39;Constituency&amp;#39;, u&amp;#39;Electorate (2000)&amp;#39;, u&amp;#39;Electorate (2010)&amp;#39;, u&amp;#39;Largest Local Authority&amp;#39;, u&amp;#39;Country of the UK&amp;#39;] [u&amp;#39;Aldershot&amp;#39;, u&amp;#39;66,499&amp;#39;, u&amp;#39;71,908&amp;#39;, u&amp;#39;Hampshire&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Aldridge-Brownhills&amp;#39;, u&amp;#39;58,695&amp;#39;, u&amp;#39;59,506&amp;#39;, u&amp;#39;West Midlands&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Altrincham and Sale West&amp;#39;, u&amp;#39;69,605&amp;#39;, u&amp;#39;72,008&amp;#39;, u&amp;#39;Greater Manchester&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Amber Valley&amp;#39;, u&amp;#39;66,406&amp;#39;, u&amp;#39;69,538&amp;#39;, u&amp;#39;Derbyshire&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Arundel and South Downs&amp;#39;, u&amp;#39;71,203&amp;#39;, u&amp;#39;76,697&amp;#39;, u&amp;#39;West Sussex&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Ashfield&amp;#39;, u&amp;#39;74,674&amp;#39;, u&amp;#39;77,049&amp;#39;, u&amp;#39;Nottinghamshire&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Ashford&amp;#39;, u&amp;#39;72,501&amp;#39;, u&amp;#39;81,947&amp;#39;, u&amp;#39;Kent&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Ashton-under-Lyne&amp;#39;, u&amp;#39;67,334&amp;#39;, u&amp;#39;68,553&amp;#39;, u&amp;#39;Greater Manchester&amp;#39;, u&amp;#39;England&amp;#39;] [u&amp;#39;Aylesbury&amp;#39;, u&amp;#39;72,023&amp;#39;, u&amp;#39;78,750&amp;#39;, u&amp;#39;Buckinghamshire&amp;#39;, u&amp;#39;England&amp;#39;] .</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - java.io.InputStreamReader there&#39;s a field starting with a quote and whereas it ends that quote there seems  to be character in that field after that ending quote. That isn&#39;t supported.</title>
      <link>https://markhneedham.com/blog/2015/05/04/neo4j-load-csv-java-io-inputstreamreader-theres-a-field-starting-with-a-quote-and-whereas-it-ends-that-quote-there-seems-to-be-character-in-that-field-after-that-ending-quote-that-isnt-suppor/</link>
      <pubDate>Mon, 04 May 2015 09:56:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/04/neo4j-load-csv-java-io-inputstreamreader-theres-a-field-starting-with-a-quote-and-whereas-it-ends-that-quote-there-seems-to-be-character-in-that-field-after-that-ending-quote-that-isnt-suppor/</guid>
      <description>LOAD CSV FROM &amp;quot;file:///Users/markneedham/projects/neo4j-recommendations/lastfm-dataset-360K/usersha1-artmbid-artname-plays.tsv&amp;quot; AS row FIELDTERMINATOR &amp;quot;\t&amp;quot; return COUNT(*) At java.io.InputStreamReader@4d307fda:6484 there&#39;s a field starting with a quote and whereas it ends that quote there seems to be character in that field after that ending quote. That isn&#39;t supported. This is what I read: &#39;weird al&amp;quot;&#39; $ grep &amp;#34;\&amp;#34;weird&amp;#34; lastfm-dataset-360K/usersha1-artmbid-artname-plays.tsv | head -n 1 0015371426d2cbef354b2f680340de38d0ebd2f0	7746d775-9550-4360-b8d5-c37bd448ce01	&amp;#34;weird al&amp;#34; yankovic	4099 $ tr &amp;#34;\&amp;#34;&amp;#34; &amp;#34;&amp;#39;&amp;#34; &amp;lt; lastfm-dataset-360K/usersha1-artmbid-artname-plays.tsv &amp;gt; lastfm-dataset-360K/clean.tsv LOAD CSV FROM &amp;quot;file:///Users/markneedham/projects/neo4j-recommendations/lastfm-dataset-360K/clean.</description>
    </item>
    
    <item>
      <title>Coding: Visualising a bitmap</title>
      <link>https://markhneedham.com/blog/2015/05/03/coding-visualising-a-bitmap/</link>
      <pubDate>Sun, 03 May 2015 00:19:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/05/03/coding-visualising-a-bitmap/</guid>
      <description>java&amp;gt; (1 &amp;lt;&amp;lt; 31) &amp;amp; 0x80000000 java.lang.Integer res5 = -2147483648 java&amp;gt; (1 &amp;lt;&amp;lt; 0) &amp;amp; 0x00000001 java.lang.Integer res7 = 0 java&amp;gt; (1 &amp;lt;&amp;lt; 0) &amp;amp; 0x00000001 java.lang.Integer res8 = 1 private String asString( int bitmap ) { StringBuilder sb = new StringBuilder(); sb.append( &amp;#34;[&amp;#34; ); for ( int i = Integer.SIZE - 1; i &amp;gt;= 0; i-- ) { int bitMask = 1 &amp;lt;&amp;lt; i; boolean bitIsSet = (bitmap &amp;amp; bitMask) !</description>
    </item>
    
    <item>
      <title>Deliberate Practice: Building confidence vs practicing</title>
      <link>https://markhneedham.com/blog/2015/04/30/deliberate-practice-building-confidence-vs-practicing/</link>
      <pubDate>Thu, 30 Apr 2015 07:48:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/30/deliberate-practice-building-confidence-vs-practicing/</guid>
      <description>me, April 2015</description>
    </item>
    
    <item>
      <title>R: dplyr - Error in (list: invalid subscript type &#39;double&#39;</title>
      <link>https://markhneedham.com/blog/2015/04/27/r-dplyr-error-in-list-invalid-subscript-type-double/</link>
      <pubDate>Mon, 27 Apr 2015 22:34:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/27/r-dplyr-error-in-list-invalid-subscript-type-double/</guid>
      <description>library(dplyr) df = data.frame(score = c(5,7,8,10,12,20), percentile = c(0.05,0.1,0.15,0.20,0.25,0.5)) &amp;gt; (df %&amp;gt;% filter(percentile &amp;gt; 0.05) %&amp;gt;% slice(1))$score [1] 7 targetPercentiles = c(0.05, 0.2) percentilesDf = data.frame(targetPercentile = targetPercentiles) &amp;gt; percentilesDf %&amp;gt;% group_by(targetPercentile) %&amp;gt;% mutate(x = (df %&amp;gt;% filter(percentile &amp;gt; targetPercentile) %&amp;gt;% slice(1))$score) Error in (list(score = c(5, 7, 8, 10, 12, 20), percentile = c(0.05, 0.1, : invalid subscript type &amp;#39;double&amp;#39; df = data.frame(score = c(5,7,8,10,12,20), percentile = c(0.05,0.1,0.15,0.20,0.25,0.5)) targetPercentiles = c(0.</description>
    </item>
    
    <item>
      <title>Deliberate Practice: Watching yourself fail</title>
      <link>https://markhneedham.com/blog/2015/04/25/deliberate-practice-watching-yourself-fail/</link>
      <pubDate>Sat, 25 Apr 2015 22:26:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/25/deliberate-practice-watching-yourself-fail/</guid>
      <description>It&amp;rsquo;s much easier to see the error in approach if there is an approach! On one occasion where I hadn&amp;rsquo;t planned out an approach I ended up staring at the question for 10 minutes and didn&amp;rsquo;t make any progress at all.
e.g. one exercise was to calculate the 5th percentile of a posterior distribution which I flailed around with for 15 minutes before giving up. Watching back on the video it was obvious that I hadn&amp;rsquo;t completely understood what a probability mass functionwas.</description>
    </item>
    
    <item>
      <title>R: Think Bayes Locomotive Problem - Posterior probabilities for different priors</title>
      <link>https://markhneedham.com/blog/2015/04/24/r-think-bayes-locomotive-problem-posterior-probabilities-for-different-priors/</link>
      <pubDate>Fri, 24 Apr 2015 23:53:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/24/r-think-bayes-locomotive-problem-posterior-probabilities-for-different-priors/</guid>
      <description>One day you see a locomotive with the number 60. Estimate how many loco- motives the railroad has.
library(dplyr) possibleValues = 1:1000 observations = c(60) l = list(value = possibleValues, observation = observations) df = expand.grid(l) &amp;gt; df %&amp;gt;% head() value observation 1 1 60 2 2 60 3 3 60 4 4 60 5 5 60 6 6 60 prior = 1 / length(possibleValues) df = df %&amp;gt;% mutate(score = ifelse(value &amp;lt; observation, 0, 1/value)) &amp;gt; df %&amp;gt;% sample_n(10) value observation score 179 179 60 0.</description>
    </item>
    
    <item>
      <title>R: Replacing for loops with data frames</title>
      <link>https://markhneedham.com/blog/2015/04/22/r-replacing-for-loops-with-data-frames/</link>
      <pubDate>Wed, 22 Apr 2015 22:18:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/22/r-replacing-for-loops-with-data-frames/</guid>
      <description>Suppose I select a die from the box at random, roll it, and get a 6. What is the probability that I rolled each die?
likelihoods = function(names, observations) { scores = rep(1.0 / length(names), length(names)) names(scores) = names for(name in names) { for(observation in observations) { if(name &amp;lt; observation) { scores[paste(name)] = 0 } else { scores[paste(name)] = scores[paste(name)] * (1.0 / name) } } } return(scores) } dice = c(4,6,8,12,20) l1 = likelihoods(dice, c(6)) &amp;gt; l1 / sum(l1) 4 6 8 12 20 0.</description>
    </item>
    
    <item>
      <title>R: Numeric keys in the nested list/dictionary</title>
      <link>https://markhneedham.com/blog/2015/04/21/r-numeric-keys-in-the-nested-listdictionary/</link>
      <pubDate>Tue, 21 Apr 2015 05:59:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/21/r-numeric-keys-in-the-nested-listdictionary/</guid>
      <description>Suppose I select a die from the box at random, roll it, and get a 6. What is the probability that I rolled each die?
dice = c(4,6,8,12,20) priors = rep(1.0 / length(dice), length(dice)) names(priors) = dice &amp;gt; priors 4 6 8 12 20 0.2 0.2 0.2 0.2 0.2 &amp;gt; priors[8] &amp;lt;NA&amp;gt; NA dice = c(4,6,8,12,20) priors = rep(1.0 / length(dice), length(dice)) names(priors) = sapply(dice, paste) &amp;gt; priors[&amp;#34;8&amp;#34;] 8 0.2 dice = c(4,6,8,12,20) priors = rep(1.</description>
    </item>
    
    <item>
      <title>R: non-numeric argument to binary operator</title>
      <link>https://markhneedham.com/blog/2015/04/19/r-non-numeric-argument-to-binary-operator/</link>
      <pubDate>Sun, 19 Apr 2015 23:08:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/19/r-non-numeric-argument-to-binary-operator/</guid>
      <description>names = c(1,2,3,4,5,6) &amp;gt; print(&amp;#34;names: &amp;#34; + names) Error in &amp;#34;names: &amp;#34; + names : non-numeric argument to binary operator &amp;gt; print(&amp;#34;names: &amp;#34;, names) [1] &amp;#34;names: &amp;#34; &amp;gt; print(paste(&amp;#34;names: &amp;#34;, names)) [1] &amp;#34;names: 1&amp;#34; &amp;#34;names: 2&amp;#34; &amp;#34;names: 3&amp;#34; &amp;#34;names: 4&amp;#34; &amp;#34;names: 5&amp;#34; &amp;#34;names: 6&amp;#34; &amp;gt; print(paste(&amp;#34;names: &amp;#34;, toString(names))) [1] &amp;#34;names: 1, 2, 3, 4, 5, 6&amp;#34; </description>
    </item>
    
    <item>
      <title>R: Removing for loops</title>
      <link>https://markhneedham.com/blog/2015/04/18/r-removing-for-loops/</link>
      <pubDate>Sat, 18 Apr 2015 23:53:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/18/r-removing-for-loops/</guid>
      <description>likelihoods = function(names, mixes, observations) { scores = rep(1, length(names)) names(scores) = names for(name in names) { for(observation in observations) { scores[name] = scores[name] * mixes[[name]][observation] } } return(scores) } Names = c(&amp;#34;Bowl 1&amp;#34;, &amp;#34;Bowl 2&amp;#34;) bowl1Mix = c(0.75, 0.25) names(bowl1Mix) = c(&amp;#34;vanilla&amp;#34;, &amp;#34;chocolate&amp;#34;) bowl2Mix = c(0.5, 0.5) names(bowl2Mix) = c(&amp;#34;vanilla&amp;#34;, &amp;#34;chocolate&amp;#34;) Mixes = list(&amp;#34;Bowl 1&amp;#34; = bowl1Mix, &amp;#34;Bowl 2&amp;#34; = bowl2Mix) Mixes Observations = c(&amp;#34;vanilla&amp;#34;, &amp;#34;vanilla&amp;#34;, &amp;#34;vanilla&amp;#34;, &amp;#34;chocolate&amp;#34;) l = likelihoods(Names, Mixes, Observations) &amp;gt; l / sum(l) Bowl 1 Bowl 2 0.</description>
    </item>
    
    <item>
      <title>R: Think Bayes - More posterior probability calculations</title>
      <link>https://markhneedham.com/blog/2015/04/16/r-think-bayes-more-posterior-probability-calculations/</link>
      <pubDate>Thu, 16 Apr 2015 20:57:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/16/r-think-bayes-more-posterior-probability-calculations/</guid>
      <description>f = function(names,likelihoods) { # Assume each option has an equal prior priors = rep(1, length(names)) / length(names) # create a data frame with all info you have dt = data.frame(names,priors,likelihoods) # calculate posterior probabilities dt$post = dt$priors*dt$likelihoods / sum(dt$priors*dt$likelihoods) # specify what you want the function to return list(names=dt$names, priors=dt$priors, likelihoods=dt$likelihoods, posteriors=dt$post) } mixes = { &amp;#39;Bowl 1&amp;#39;:dict(vanilla=0.75, chocolate=0.25), &amp;#39;Bowl 2&amp;#39;:dict(vanilla=0.5, chocolate=0.5), } Likelihoods = c(0.75,0.5) Names = c(&amp;#34;Bowl 1&amp;#34;, &amp;#34;Bowl 2&amp;#34;) res=f(Names,Likelihoods) &amp;gt; res$posteriors[res$name == &amp;#34;Bowl 1&amp;#34;] [1] 0.</description>
    </item>
    
    <item>
      <title>Spark: Generating CSV files to import into Neo4j</title>
      <link>https://markhneedham.com/blog/2015/04/14/spark-generating-csv-files-to-import-into-neo4j/</link>
      <pubDate>Tue, 14 Apr 2015 22:56:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/14/spark-generating-csv-files-to-import-into-neo4j/</guid>
      <description>$ head -n 10 ~/Downloads/Crimes_-_2001_to_present.csv ID,Case Number,Date,Block,IUCR,Primary Type,Description,Location Description,Arrest,Domestic,Beat,District,Ward,Community Area,FBI Code,X Coordinate,Y Coordinate,Year,Updated On,Latitude,Longitude,Location 9464711,HX114160,01/14/2014 05:00:00 AM,028XX E 80TH ST,0560,ASSAULT,SIMPLE,APARTMENT,false,true,0422,004,7,46,08A,1196652,1852516,2014,01/20/2014 12:40:05 AM,41.75017626412204,-87.55494559131228,&amp;#34;(41.75017626412204, -87.55494559131228)&amp;#34; 9460704,HX113741,01/14/2014 04:55:00 AM,091XX S JEFFERY AVE,031A,ROBBERY,ARMED: HANDGUN,SIDEWALK,false,false,0413,004,8,48,03,1191060,1844959,2014,01/18/2014 12:39:56 AM,41.729576153145636,-87.57568059471686,&amp;#34;(41.729576153145636, -87.57568059471686)&amp;#34; 9460339,HX113740,01/14/2014 04:44:00 AM,040XX W MAYPOLE AVE,1310,CRIMINAL DAMAGE,TO PROPERTY,RESIDENCE,false,true,1114,011,28,26,14,1149075,1901099,2014,01/16/2014 12:40:00 AM,41.884543798701515,-87.72803579358926,&amp;#34;(41.884543798701515, -87.72803579358926)&amp;#34; 9461467,HX114463,01/14/2014 04:43:00 AM,059XX S CICERO AVE,0820,THEFT,$500 AND UNDER,PARKING LOT/GARAGE(NON.RESID.),false,false,0813,008,13,64,06,1145661,1865031,2014,01/16/2014 12:40:00 AM,41.785633535413176,-87.74148516669783,&amp;#34;(41.785633535413176, -87.74148516669783)&amp;#34; 9460355,HX113738,01/14/2014 04:21:00 AM,070XX S PEORIA ST,0820,THEFT,$500 AND UNDER,STREET,true,false,0733,007,17,68,06,1171480,1858195,2014,01/16/2014 12:40:00 AM,41.766348042591375,-87.64702037047671,&amp;#34;(41.766348042591375, -87.64702037047671)&amp;#34; 9461140,HX113909,01/14/2014 03:17:00 AM,016XX W HUBBARD ST,0610,BURGLARY,FORCIBLE ENTRY,COMMERCIAL / BUSINESS OFFICE,false,false,1215,012,27,24,05,1165029,1903111,2014,01/16/2014 12:40:00 AM,41.</description>
    </item>
    
    <item>
      <title>R: Creating an object with functions to calculate conditional probability</title>
      <link>https://markhneedham.com/blog/2015/04/12/r-creating-an-object-with-functions-to-calculate-conditional-probability/</link>
      <pubDate>Sun, 12 Apr 2015 07:55:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/12/r-creating-an-object-with-functions-to-calculate-conditional-probability/</guid>
      <description>Now suppose you choose one of the bowls at random and, without looking, select a cookie at random. The cookie is vanilla.
What is the probability that it came from Bowl 1?
pmf = Pmf() pmf.Set(&amp;#39;Bowl 1&amp;#39;, 0.5) pmf.Set(&amp;#39;Bowl 2&amp;#39;, 0.5) pmf.Mult(&amp;#39;Bowl 1&amp;#39;, 0.75) pmf.Mult(&amp;#39;Bowl 2&amp;#39;, 0.5) pmf.Normalize() print pmf.Prob(&amp;#39;Bowl 1&amp;#39;) pBowl1 = 0.5 pBowl2 = 0.5 pVanillaGivenBowl1 = 0.75 pVanillaGivenBowl2 = 0.5 &amp;gt; (pBowl1 * pVanillaGivenBowl1) / ((pBowl1 * pVanillaGivenBowl1) + (PBowl2 * pVanillaGivenBowl2)) 0.</description>
    </item>
    
    <item>
      <title>R: Snakes and ladders markov chain</title>
      <link>https://markhneedham.com/blog/2015/04/09/r-snakes-and-ladders-markov-chain/</link>
      <pubDate>Thu, 09 Apr 2015 22:02:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/09/r-snakes-and-ladders-markov-chain/</guid>
      <description>n=100 # We have 6 extra columns because we want to represent throwing of the dice which results in a final square &amp;gt; 100 M=matrix(0,n+1,n+1+6) rownames(M)=0:n colnames(M)=0:(n+6) # set probabilities of landing on each square assuming that there aren&amp;#39;t any snakes or ladders for(i in 1:6){ diag(M[,(i+1):(i+1+n)])=1/6 } # account for &amp;#39;bounce back&amp;#39; if a dice roll leads to a final score &amp;gt; 100 for(i in 96:100) { for(c in 102:107) { idx = 101 - (c - 101) M[i, idx] = M[i, idx] + M[i, c] } } &amp;gt; M[95:100,95:101] 94 95 96 97 98 99 100 94 0 0.</description>
    </item>
    
    <item>
      <title>Neo4j: The learning to cycle dependency graph</title>
      <link>https://markhneedham.com/blog/2015/04/07/neo4j-the-learning-to-cycle-dependency-graph/</link>
      <pubDate>Tue, 07 Apr 2015 20:59:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/07/neo4j-the-learning-to-cycle-dependency-graph/</guid>
      <description>MERGE (:Goal:Task {name: &amp;quot;Be able to cycle through a public park&amp;quot;}) MERGE (task:Task {name: &amp;quot;Take a few steps forward while standing over the bike&amp;quot;}) WITH task MATCH (goal:Goal:Task {name: &amp;quot;Be able to cycle through a public park&amp;quot;}) MERGE (goal)-[:DEPENDS_ON]-&amp;gt;(task) // First let&#39;s get rid of the relationship between our initial task and the goal MATCH (initialTask:Task {name: &amp;quot;Take a few steps forward while standing over the bike&amp;quot;}) MATCH (goal:Goal {name: &amp;quot;Be able to cycle through a public park&amp;quot;}) MATCH (goal)-[rel:DEPENDS_ON]-&amp;gt;(initialTask) DELETE rel WITH initialTask, goal, [&amp;quot;Get bike moving from standing start&amp;quot;, &amp;quot;Cycle forward while standing&amp;quot;, &amp;quot;Cycle forward while sitting&amp;quot;] AS newTasks // Create some nodes for our new tasks UNWIND newTasks AS newTask MERGE (t:Task {name: newTask}) WITH initialTask, goal, COLLECT(t) AS newTasks WITH initialTask, goal, newTasks, newTasks[0] AS firstTask, newTasks[-1] AS lastTask // Connect the last task to the goal MERGE (goal)-[:DEPENDS_ON]-&amp;gt;(lastTask) // And the first task to our initial task MERGE (firstTask)-[:DEPENDS_ON]-&amp;gt;(initialTask) // And all the tasks to each other FOREACH(i in RANGE(0, length(newTasks) - 2) | FOREACH(t1 in [newTasks[i]] | FOREACH(t2 in [newTasks[i+1]] | MERGE (t2)-[:DEPENDS_ON]-&amp;gt;(t1) ))) MATCH (sitting:Task {name: &amp;quot;Cycle forward while sitting&amp;quot;}) MATCH (moving:Task {name: &amp;quot;Get bike moving from standing start&amp;quot;}) MERGE (sitting)-[:DEPENDS_ON]-&amp;gt;(moving) WITH [ {skill: &amp;quot;Controlled stop using brakes/feet&amp;quot;, dependsOn: &amp;quot;Cycle forward while sitting&amp;quot;}, {skill: &amp;quot;Steer around stationary objects&amp;quot;, dependsOn: &amp;quot;Controlled stop using brakes/feet&amp;quot;}, {skill: &amp;quot;Steer around people&amp;quot;, dependsOn: &amp;quot;Steer around stationary objects&amp;quot;}, {skill: &amp;quot;Navigate a small circular circuit&amp;quot;, dependsOn: &amp;quot;Steer around stationary objects&amp;quot;}, {skill: &amp;quot;Navigate a loop of a section of the park&amp;quot;, dependsOn: &amp;quot;Navigate a small circular circuit&amp;quot;}, {skill: &amp;quot;Navigate a loop of a section of the park&amp;quot;, dependsOn: &amp;quot;Steer around people&amp;quot;}, {skill: &amp;quot;Be able to cycle through a public park&amp;quot;, dependsOn: &amp;quot;Navigate a loop of a section of the park&amp;quot;} ] AS newTasks FOREACH(newTask in newTasks | MERGE (t1:Task {name: newTask.</description>
    </item>
    
    <item>
      <title>R: Markov Chain Wikipedia Example</title>
      <link>https://markhneedham.com/blog/2015/04/05/r-markov-chain-wikipedia-example/</link>
      <pubDate>Sun, 05 Apr 2015 10:07:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/05/r-markov-chain-wikipedia-example/</guid>
      <description>It is required to possess a property that is usually characterized as &amp;ldquo;memoryless&amp;rdquo;: the probability distribution of the next state depends only on the current state and not on the sequence of events that preceded it.
M = matrix(c(0.9, 0.075, 0.025, 0.15, 0.8, 0.05, 0.25, 0.25, 0.5), nrow = 3, ncol = 3, byrow = TRUE) &amp;gt; M [,1] [,2] [,3] [1,] 0.90 0.075 0.025 [2,] 0.15 0.800 0.050 [3,] 0.</description>
    </item>
    
    <item>
      <title>How I met your mother: Story arcs</title>
      <link>https://markhneedham.com/blog/2015/04/03/how-i-met-your-mother-story-arcs/</link>
      <pubDate>Fri, 03 Apr 2015 23:31:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/03/how-i-met-your-mother-story-arcs/</guid>
      <description>#!/bin/bash find_term() { arc=${1} searchTerm=${2} episodes=$(grep --color -iE &amp;#34;${searchTerm}&amp;#34; data/import/sentences.csv | awk -F&amp;#34;,&amp;#34; &amp;#39;{ print $2 }&amp;#39; | sort | uniq) for episode in ${episodes}; do echo ${arc},${episode} done } find_term &amp;#34;Bro Code&amp;#34; &amp;#34;bro code&amp;#34; find_term &amp;#34;Legendary&amp;#34; &amp;#34;legen(.*)ary&amp;#34; find_term &amp;#34;Slutty Pumpkin&amp;#34; &amp;#34;slutty pumpkin&amp;#34; find_term &amp;#34;Magician&amp;#39;s Code&amp;#34; &amp;#34;magician&amp;#39;s code&amp;#34; find_term &amp;#34;Thanksgiving&amp;#34; &amp;#34;thanksgiving&amp;#34; find_term &amp;#34;The Playbook&amp;#34; &amp;#34;playbook&amp;#34; find_term &amp;#34;Slap Bet&amp;#34; &amp;#34;slap bet&amp;#34; find_term &amp;#34;Wrestlers and Robots&amp;#34; &amp;#34;wrestlers&amp;#34; find_term &amp;#34;Robin Sparkles&amp;#34; &amp;#34;sparkles&amp;#34; find_term &amp;#34;Blue French Horn&amp;#34; &amp;#34;blue french horn&amp;#34; find_term &amp;#34;Olive Theory&amp;#34; &amp;#34;olive&amp;#34; find_term &amp;#34;Thank You Linus&amp;#34; &amp;#34;thank you, linus&amp;#34; find_term &amp;#34;Have you met.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Building the query for a movie&#39;s profile page</title>
      <link>https://markhneedham.com/blog/2015/04/01/neo4j-cypher-building-the-query-for-a-movies-profile-page/</link>
      <pubDate>Wed, 01 Apr 2015 11:54:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/04/01/neo4j-cypher-building-the-query-for-a-movies-profile-page/</guid>
      <description>match (movie:Movie {title: &amp;quot;The Matrix&amp;quot;}) return movie.title ==&amp;gt; +--------------+ ==&amp;gt; | movie.title | ==&amp;gt; +--------------+ ==&amp;gt; | &amp;quot;The Matrix&amp;quot; | ==&amp;gt; +--------------+ ==&amp;gt; 1 row Easy enough. Now let&amp;rsquo;s get back the producers:
match (movie:Movie {title: &amp;quot;The Matrix&amp;quot;}) optional match (producer)-[:PRODUCED]-&amp;gt;(movie) RETURN movie.title, COLLECT(producer.name) AS producers ==&amp;gt; +--------------------------------+ ==&amp;gt; | movie.title | producers | ==&amp;gt; +--------------------------------+ ==&amp;gt; | &amp;quot;The Matrix&amp;quot; | [&amp;quot;Joel Silver&amp;quot;] | ==&amp;gt; +--------------------------------+ ==&amp;gt; 1 row match (movie:Movie {title: &amp;quot;The Matrix&amp;quot;}) optional match (director)-[:DIRECTED]-&amp;gt;(movie) RETURN movie.</description>
    </item>
    
    <item>
      <title>Python: Creating a skewed random discrete distribution</title>
      <link>https://markhneedham.com/blog/2015/03/30/python-creating-a-skewed-random-discrete-distribution/</link>
      <pubDate>Mon, 30 Mar 2015 22:28:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/30/python-creating-a-skewed-random-discrete-distribution/</guid>
      <description>import math import numpy as np values = range(1, 209) probs = [1.0 / 208] * 208 for idx, prob in enumerate(probs): if idx &amp;gt; 3 and idx &amp;lt; 20: probs[idx] = probs[idx] * (1 + math.log(idx + 1)) if idx &amp;gt; 20 and idx &amp;lt; 40: probs[idx] = probs[idx] * (1 + math.log((40 - idx) + 1)) probs = [p / sum(probs) for p in probs] sample = np.random.choice(values, 1000, p=probs) &amp;gt;&amp;gt;&amp;gt; print sample[:10] [ 33 9 22 126 54 4 20 17 45 56] import matplotlib matplotlib.</description>
    </item>
    
    <item>
      <title>InetAddressImpl#lookupAllHostAddr slow/hangs</title>
      <link>https://markhneedham.com/blog/2015/03/29/inetaddressimpllookupallhostaddr-slowhangs/</link>
      <pubDate>Sun, 29 Mar 2015 00:31:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/29/inetaddressimpllookupallhostaddr-slowhangs/</guid>
      <description>$ cat /etc/hosts ## # Host Database # # localhost is used to configure the loopback interface # when the system is booting. Do not change this entry. ## 127.0.0.1	localhost 255.255.255.255	broadcasthost ::1 localhost #fe80::1%lo0	localhost 127.0.0.1	wuqour.local 127.0.0.1 teetotal import java.net.InetAddress; import java.net.UnknownHostException; public class LocalhostResolution { public static void main( String[] args ) throws UnknownHostException { long start = System.currentTimeMillis(); InetAddress localHost = InetAddress.getLocalHost(); System.out.println(localHost); System.out.println(System.currentTimeMillis() - start); } } Exception in thread &amp;#34;main&amp;#34; java.</description>
    </item>
    
    <item>
      <title>Neo4j: Generating real time recommendations with Cypher</title>
      <link>https://markhneedham.com/blog/2015/03/27/neo4j-generating-real-time-recommendations-with-cypher/</link>
      <pubDate>Fri, 27 Mar 2015 06:59:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/27/neo4j-generating-real-time-recommendations-with-cypher/</guid>
      <description>CREATE (m:Person:Male {name:&#39;Michal&#39;, age:30}), (d:Person:Female {name:&#39;Daniela&#39;, age:20}), (v:Person:Male {name:&#39;Vince&#39;, age:40}), (a:Person:Male {name:&#39;Adam&#39;, age:30}), (l:Person:Female {name:&#39;Luanne&#39;, age:25}), (c:Person:Male {name:&#39;Christophe&#39;, age:60}), (lon:City {name:&#39;London&#39;}), (mum:City {name:&#39;Mumbai&#39;}), (m)-[:FRIEND_OF]-&amp;gt;(d), (m)-[:FRIEND_OF]-&amp;gt;(l), (m)-[:FRIEND_OF]-&amp;gt;(a), (m)-[:FRIEND_OF]-&amp;gt;(v), (d)-[:FRIEND_OF]-&amp;gt;(v), (c)-[:FRIEND_OF]-&amp;gt;(v), (d)-[:LIVES_IN]-&amp;gt;(lon), (v)-[:LIVES_IN]-&amp;gt;(lon), (m)-[:LIVES_IN]-&amp;gt;(lon), (l)-[:LIVES_IN]-&amp;gt;(mum); MATCH (me:Person {name: &amp;quot;Adam&amp;quot;}) MATCH (me)-[:FRIEND_OF]-()-[:FRIEND_OF]-(potentialFriend) RETURN me, potentialFriend, COUNT(*) AS friendsInCommon ==&amp;gt; +--------------------------------------------------------------------------------------+ ==&amp;gt; | me | potentialFriend | friendsInCommon | ==&amp;gt; +--------------------------------------------------------------------------------------+ ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1006]{name:&amp;quot;Vince&amp;quot;,age:40} | 1 | ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1005]{name:&amp;quot;Daniela&amp;quot;,age:20} | 1 | ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1008]{name:&amp;quot;Luanne&amp;quot;,age:25} | 1 | ==&amp;gt; +--------------------------------------------------------------------------------------+ ==&amp;gt; 3 rows MATCH (me:Person {name: &amp;quot;Adam&amp;quot;}) MATCH (me)-[:FRIEND_OF]-()-[:FRIEND_OF]-(potentialFriend) WITH me, potentialFriend, COUNT(*) AS friendsInCommon RETURN me, potentialFriend, SIZE((potentialFriend)-[:LIVES_IN]-&amp;gt;()&amp;lt;-[:LIVES_IN]-(me)) AS sameLocation ==&amp;gt; +-----------------------------------------------------------------------------------+ ==&amp;gt; | me | potentialFriend | sameLocation | ==&amp;gt; +-----------------------------------------------------------------------------------+ ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1006]{name:&amp;quot;Vince&amp;quot;,age:40} | 0 | ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1005]{name:&amp;quot;Daniela&amp;quot;,age:20} | 0 | ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1008]{name:&amp;quot;Luanne&amp;quot;,age:25} | 0 | ==&amp;gt; +-----------------------------------------------------------------------------------+ ==&amp;gt; 3 rows MATCH (me:Person {name: &amp;quot;Adam&amp;quot;}) MATCH (me)-[:FRIEND_OF]-()-[:FRIEND_OF]-(potentialFriend) WITH me, potentialFriend, COUNT(*) AS friendsInCommon RETURN me, potentialFriend, SIZE((potentialFriend)-[:LIVES_IN]-&amp;gt;()&amp;lt;-[:LIVES_IN]-(me)) AS sameLocation, LABELS(me) = LABELS(potentialFriend) AS gender ==&amp;gt; +--------------------------------------------------------------------------------------------+ ==&amp;gt; | me | potentialFriend | sameLocation | gender | ==&amp;gt; +--------------------------------------------------------------------------------------------+ ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1006]{name:&amp;quot;Vince&amp;quot;,age:40} | 0 | true | ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1005]{name:&amp;quot;Daniela&amp;quot;,age:20} | 0 | false | ==&amp;gt; | Node[1007]{name:&amp;quot;Adam&amp;quot;,age:30} | Node[1008]{name:&amp;quot;Luanne&amp;quot;,age:25} | 0 | false | ==&amp;gt; +--------------------------------------------------------------------------------------------+ ==&amp;gt; 3 rows MATCH (me:Person {name: &amp;quot;Adam&amp;quot;}) MATCH (me)-[:FRIEND_OF]-()-[:FRIEND_OF]-(potentialFriend) WITH me, potentialFriend, COUNT(*) AS friendsInCommon RETURN me, potentialFriend, SIZE((potentialFriend)-[:LIVES_IN]-&amp;gt;()&amp;lt;-[:LIVES_IN]-(me)) AS sameLocation, abs( me.</description>
    </item>
    
    <item>
      <title>Python: matplotlib hangs and shows nothing (Mac OS X)</title>
      <link>https://markhneedham.com/blog/2015/03/26/python-matplotlib-hangs-and-shows-nothing-mac-os-x/</link>
      <pubDate>Thu, 26 Mar 2015 00:02:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/26/python-matplotlib-hangs-and-shows-nothing-mac-os-x/</guid>
      <description>import numpy as np import matplotlib.pyplot as plt N = 5 ind = np.arange(N) fig, ax = plt.subplots() menMeans = (20, 35, 30, 35, 27) menStd = (2, 3, 4, 1, 2) width = 0.35 # the width of the bars rects1 = ax.bar(ind, menMeans, width, color=&amp;#39;r&amp;#39;, yerr=menStd) plt.show() import numpy as np import matplotlib matplotlib.use(&amp;#39;TkAgg&amp;#39;) import matplotlib.pyplot as plt N = 5 ind = np.arange(N) fig, ax = plt.subplots() menMeans = (20, 35, 30, 35, 27) menStd = (2, 3, 4, 1, 2) width = 0.</description>
    </item>
    
    <item>
      <title>Topic Modelling: Working out the optimal number of topics</title>
      <link>https://markhneedham.com/blog/2015/03/24/topic-modelling-working-out-the-optimal-number-of-topics/</link>
      <pubDate>Tue, 24 Mar 2015 22:33:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/24/topic-modelling-working-out-the-optimal-number-of-topics/</guid>
      <description>There are computational ways of searching for this, including using MALLETs hlda command, but for the reader of this tutorial, it is probably just quicker to cycle through a number of iterations (but for more see Griffiths, T. L., &amp;amp; Steyvers, M. (2004). Finding scientific topics. Proceedings of the National Academy of Science, 101, 5228-5235).
As I understand it, the idea is to try and get a uniform spread of topics -&amp;gt; documents i.</description>
    </item>
    
    <item>
      <title>Python: Equivalent to flatMap for flattening an array of arrays</title>
      <link>https://markhneedham.com/blog/2015/03/23/python-equivalent-to-flatmap-for-flattening-an-array-of-arrays/</link>
      <pubDate>Mon, 23 Mar 2015 00:45:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/23/python-equivalent-to-flatmap-for-flattening-an-array-of-arrays/</guid>
      <description>episodes = [ {&amp;#34;id&amp;#34;: 1, &amp;#34;topics&amp;#34;: [1,2,3]}, {&amp;#34;id&amp;#34;: 2, &amp;#34;topics&amp;#34;: [4,5,6]} ] flattened_episodes = [] for episode in episodes: for topic in episode[&amp;#34;topics&amp;#34;]: flattened_episodes.append({&amp;#34;id&amp;#34;: episode[&amp;#34;id&amp;#34;], &amp;#34;topic&amp;#34;: topic}) for episode in flattened_episodes: print episode $ python flatten.py {&amp;#39;topic&amp;#39;: 1, &amp;#39;id&amp;#39;: 1} {&amp;#39;topic&amp;#39;: 2, &amp;#39;id&amp;#39;: 1} {&amp;#39;topic&amp;#39;: 3, &amp;#39;id&amp;#39;: 1} {&amp;#39;topic&amp;#39;: 4, &amp;#39;id&amp;#39;: 2} {&amp;#39;topic&amp;#39;: 5, &amp;#39;id&amp;#39;: 2} {&amp;#39;topic&amp;#39;: 6, &amp;#39;id&amp;#39;: 2} flattened_episodes = [{&amp;#34;id&amp;#34;: episode[&amp;#34;id&amp;#34;], &amp;#34;topic&amp;#34;: topic} for episode in episodes for topic in episode[&amp;#34;topics&amp;#34;]] for episode in flattened_episodes: print episode from itertools import chain, imap flattened_episodes = chain.</description>
    </item>
    
    <item>
      <title>Python: Simplifying the creation of a stop word list with defaultdict</title>
      <link>https://markhneedham.com/blog/2015/03/22/python-simplifying-the-creation-of-a-stop-word-list-with-defaultdict/</link>
      <pubDate>Sun, 22 Mar 2015 01:51:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/22/python-simplifying-the-creation-of-a-stop-word-list-with-defaultdict/</guid>
      <description>import csv from sklearn.feature_extraction.text import CountVectorizer from collections import defaultdict episodes = defaultdict(str) with open(&amp;#34;sentences.csv&amp;#34;, &amp;#34;r&amp;#34;) as file: reader = csv.reader(file, delimiter = &amp;#34;,&amp;#34;) reader.next() for row in reader: episodes[row[1]] += row[4] vectorizer = CountVectorizer(analyzer=&amp;#39;word&amp;#39;, min_df = 0, stop_words = &amp;#39;english&amp;#39;) matrix = vectorizer.fit_transform(episodes.values()) features = vectorizer.get_feature_names() words = {} for doc_id, doc in enumerate(matrix.todense()): for word_id, score in enumerate(doc.tolist()[0]): word = features[word_id] if not words.get(word): words[word] = {} if not words[word].</description>
    </item>
    
    <item>
      <title>Python: Forgetting to use enumerate</title>
      <link>https://markhneedham.com/blog/2015/03/22/python-forgetting-to-use-enumerate/</link>
      <pubDate>Sun, 22 Mar 2015 01:28:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/22/python-forgetting-to-use-enumerate/</guid>
      <description>words = [&amp;#34;mark&amp;#34;, &amp;#34;neo4j&amp;#34;, &amp;#34;michael&amp;#34;] word_position = 0 for word in words: print word_position, word word_position +=1 for word_position, word in enumerate(words): print word_position, word </description>
    </item>
    
    <item>
      <title>Badass: Making users awesome - Kathy Sierra: Book Review</title>
      <link>https://markhneedham.com/blog/2015/03/20/badass-making-users-awesome-kathy-sierra-book-review/</link>
      <pubDate>Fri, 20 Mar 2015 07:30:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/20/badass-making-users-awesome-kathy-sierra-book-review/</guid>
      <description>Extract topics for HIMYM corpus -&amp;gt; Train a topic model with mallet -&amp;gt; Tweak an existing topic model that uses mallet -&amp;gt; Run an existing topic model that uses mallet -&amp;gt; Install mallet </description>
    </item>
    
    <item>
      <title>Neo4j: Detecting potential typos using EXPLAIN</title>
      <link>https://markhneedham.com/blog/2015/03/17/neo4j-detecting-potential-typos-using-explain/</link>
      <pubDate>Tue, 17 Mar 2015 22:46:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/17/neo4j-detecting-potential-typos-using-explain/</guid>
      <description>MATCH (actor:Person)-[:ACTED_IN]-&amp;gt;(movie)&amp;lt;-[:DIRECTED]-(director) RETURN actor.name, director.name, COLLECT(movie.title) AS movies ORDER BY LENGTH(movies) DESC LIMIT 5 ==&amp;gt; +-----------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | actor.name | director.name | movies | ==&amp;gt; +-----------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | &amp;#34;Hugo Weaving&amp;#34; | &amp;#34;Andy Wachowski&amp;#34; | [&amp;#34;Cloud Atlas&amp;#34;,&amp;#34;The Matrix Revolutions&amp;#34;,&amp;#34;The Matrix Reloaded&amp;#34;,&amp;#34;The Matrix&amp;#34;] | ==&amp;gt; | &amp;#34;Hugo Weaving&amp;#34; | &amp;#34;Lana Wachowski&amp;#34; | [&amp;#34;Cloud Atlas&amp;#34;,&amp;#34;The Matrix Revolutions&amp;#34;,&amp;#34;The Matrix Reloaded&amp;#34;,&amp;#34;The Matrix&amp;#34;] | ==&amp;gt; | &amp;#34;Laurence Fishburne&amp;#34; | &amp;#34;Lana Wachowski&amp;#34; | [&amp;#34;The Matrix Revolutions&amp;#34;,&amp;#34;The Matrix Reloaded&amp;#34;,&amp;#34;The Matrix&amp;#34;] | ==&amp;gt; | &amp;#34;Keanu Reeves&amp;#34; | &amp;#34;Lana Wachowski&amp;#34; | [&amp;#34;The Matrix Revolutions&amp;#34;,&amp;#34;The Matrix Reloaded&amp;#34;,&amp;#34;The Matrix&amp;#34;] | ==&amp;gt; | &amp;#34;Carrie-Anne Moss&amp;#34; | &amp;#34;Lana Wachowski&amp;#34; | [&amp;#34;The Matrix Revolutions&amp;#34;,&amp;#34;The Matrix Reloaded&amp;#34;,&amp;#34;The Matrix&amp;#34;] | ==&amp;gt; +-----------------------------------------------------------------------------------------------------------------------+ MATCH (actor:Person)-[:ACTED_IN]-&amp;gt;(movie)&amp;lt;-[:DIRECTED_IN]-(director) RETURN actor.</description>
    </item>
    
    <item>
      <title>One month of mini habits</title>
      <link>https://markhneedham.com/blog/2015/03/17/one-month-of-mini-habits/</link>
      <pubDate>Tue, 17 Mar 2015 01:32:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/17/one-month-of-mini-habits/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python: Transforming Twitter datetime string to timestamp (z&#39; is a bad directive in format)</title>
      <link>https://markhneedham.com/blog/2015/03/15/python-transforming-twitter-datetime-string-to-timestamp-z-is-a-bad-directive-in-format/</link>
      <pubDate>Sun, 15 Mar 2015 22:43:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/15/python-transforming-twitter-datetime-string-to-timestamp-z-is-a-bad-directive-in-format/</guid>
      <description>from datetime import datetime date = &amp;#34;Sat Mar 14 18:43:19 +0000 2015&amp;#34; &amp;gt;&amp;gt;&amp;gt; datetime.strptime(date, &amp;#34;%a %b %d%H:%M:%S %z %Y&amp;#34;) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_strptime.py&amp;#34;, line 317, in _strptime (bad_directive, format)) ValueError: &amp;#39;z&amp;#39; is a bad directive in format &amp;#39;%a %b %d%H:%M:%S %z %Y&amp;#39; $ pip install python-dateutil from dateutil import parser parsed_date = parser.parse(date) &amp;gt;&amp;gt;&amp;gt; parsed_date datetime.datetime(2015, 3, 14, 18, 43, 19, tzinfo=tzutc()) import calendar timestamp = calendar.</description>
    </item>
    
    <item>
      <title>Python: Checking any value in a list exists in a line of text</title>
      <link>https://markhneedham.com/blog/2015/03/14/python-checking-any-value-in-a-list-exists-in-a-line-of-text/</link>
      <pubDate>Sat, 14 Mar 2015 02:52:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/14/python-checking-any-value-in-a-list-exists-in-a-line-of-text/</guid>
      <description>$ cat blog.txt MATCH n RETURN n MERGE (n:Person {name: &amp;#34;Mark&amp;#34;}) RETURN n MATCH (n:Person {name: &amp;#34;Mark&amp;#34;}) ON MATCH SET n.counter = 1 RETURN n with open(&amp;#34;blog.txt&amp;#34;, &amp;#34;r&amp;#34;) as ins: for line in ins: if &amp;#34;MERGE&amp;#34; in line or &amp;#34;DELETE&amp;#34; in line or &amp;#34;SET&amp;#34; in line or &amp;#34;CREATE&amp;#34; in line: print line.strip() mutating_commands = [&amp;#34;SET&amp;#34;, &amp;#34;DELETE&amp;#34;, &amp;#34;MERGE&amp;#34;, &amp;#34;CREATE&amp;#34;] with open(&amp;#34;blog.txt&amp;#34;, &amp;#34;r&amp;#34;) as ins: for line in ins: if any(command in line for command in mutating_commands): print line.</description>
    </item>
    
    <item>
      <title>Python/Neo4j: Finding interesting computer sciency people to follow on Twitter</title>
      <link>https://markhneedham.com/blog/2015/03/11/pythonneo4j-finding-interesting-computer-sciency-people-to-follow-on-twitter/</link>
      <pubDate>Wed, 11 Mar 2015 21:13:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/11/pythonneo4j-finding-interesting-computer-sciency-people-to-follow-on-twitter/</guid>
      <description>import tweepy import csv from collections import Counter, deque auth = tweepy.OAuthHandler(consumer_key, consumer_secret) auth.set_access_token(access_token, access_token_secret) api = tweepy.API(auth, wait_on_rate_limit = True, wait_on_rate_limit_notify = True) counter = Counter() users_to_process = deque() USERS_TO_PROCESS = 50 def extract_tweet(tweet): user_mentions = &amp;#34;,&amp;#34;.join([user[&amp;#34;screen_name&amp;#34;].encode(&amp;#34;utf-8&amp;#34;) for user in tweet.entities[&amp;#34;user_mentions&amp;#34;]]) urls = &amp;#34;,&amp;#34;.join([url[&amp;#34;expanded_url&amp;#34;] for url in tweet.entities[&amp;#34;urls&amp;#34;]]) return [tweet.user.screen_name.encode(&amp;#34;utf-8&amp;#34;), tweet.id, tweet.text.encode(&amp;#34;utf-8&amp;#34;), user_mentions, urls] starting_user = &amp;#34;chvest&amp;#34; with open(&amp;#34;tweets.csv&amp;#34;, &amp;#34;a&amp;#34;) as tweets: writer = csv.writer(tweets, delimiter=&amp;#34;,&amp;#34;, escapechar=&amp;#34;\\&amp;#34;, doublequote = False) for tweet in tweepy.</description>
    </item>
    
    <item>
      <title>Python: Streaming/Appending to a file</title>
      <link>https://markhneedham.com/blog/2015/03/09/python-streamingappending-to-a-file/</link>
      <pubDate>Mon, 09 Mar 2015 23:00:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/09/python-streamingappending-to-a-file/</guid>
      <description>import csv import time with open(&amp;#34;rows.csv&amp;#34;, &amp;#34;a&amp;#34;) as file: writer = csv.writer(file, delimiter = &amp;#34;,&amp;#34;) end = time.time() + 10 while True: if time.time() &amp;gt; end: break else: writer.writerow([&amp;#34;mark&amp;#34;, &amp;#34;123&amp;#34;]) time.sleep(1) $ date &amp;amp;&amp;amp; wc -l rows.csv Mon 9 Mar 2015 22:54:27 GMT 0 rows.csv $ date &amp;amp;&amp;amp; wc -l rows.csv Mon 9 Mar 2015 22:54:31 GMT 0 rows.csv $ date &amp;amp;&amp;amp; wc -l rows.csv Mon 9 Mar 2015 22:54:34 GMT 0 rows.</description>
    </item>
    
    <item>
      <title>Neo4j: TF/IDF (and variants) with cypher</title>
      <link>https://markhneedham.com/blog/2015/03/08/neo4j-tfidf-and-variants-with-cypher/</link>
      <pubDate>Sun, 08 Mar 2015 13:24:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/08/neo4j-tfidf-and-variants-with-cypher/</guid>
      <description>WITH 3 as termFrequency, 2 AS numberOfDocuments, 1 as numberOfDocumentsWithTerm WITH termFrequency, log10(numberOfDocuments / numberOfDocumentsWithTerm) AS inverseDocumentFrequency return termFrequency * inverseDocumentFrequency 0.9030899869919435 $ head -n 10 data/import/words_scikit.csv EpisodeId,Phrase,Count 1,2005,1 1,2005 seven,1 1,2005 seven just,1 1,2030,3 1,2030 kids,1 1,2030 kids intently,1 1,2030 narrator,1 1,2030 narrator kids,1 1,2030 son,1 // phrases USING PERIODIC COMMIT 1000 LOAD CSV WITH HEADERS FROM &amp;quot;file:///Users/markneedham/projects/neo4j-himym/data/import/words_scikit.csv&amp;quot; AS row MERGE (phrase:Phrase {value: row.Phrase}); // episode -&amp;gt; phrase USING PERIODIC COMMIT 1000 LOAD CSV WITH HEADERS FROM &amp;quot;file:///Users/markneedham/projects/neo4j-himym/data/import/words_scikit.</description>
    </item>
    
    <item>
      <title>Python: scikit-learn/lda: Extracting topics from QCon talk abstracts</title>
      <link>https://markhneedham.com/blog/2015/03/05/python-scikit-learnlda-extracting-topics-from-qcon-talk-abstracts/</link>
      <pubDate>Thu, 05 Mar 2015 08:52:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/05/python-scikit-learnlda-extracting-topics-from-qcon-talk-abstracts/</guid>
      <description>import csv from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer from sklearn.decomposition import NMF from collections import defaultdict from bs4 import BeautifulSoup, NavigableString from soupselect import select def uri_to_file_name(uri): return uri.replace(&amp;#34;/&amp;#34;, &amp;#34;-&amp;#34;) sessions = {} with open(&amp;#34;data/sessions.csv&amp;#34;, &amp;#34;r&amp;#34;) as sessions_file: reader = csv.reader(sessions_file, delimiter = &amp;#34;,&amp;#34;) reader.next() # header for row in reader: session_id = int(row[0]) filename = &amp;#34;data/sessions/&amp;#34; + uri_to_file_name(row[4]) page = open(filename).read() soup = BeautifulSoup(page) abstract = select(soup, &amp;#34;div.brenham-main-content p&amp;#34;) if abstract: sessions[session_id] = {&amp;#34;abstract&amp;#34; : abstract[0].</description>
    </item>
    
    <item>
      <title>Python: scikit-learn - Training a classifier with non numeric features</title>
      <link>https://markhneedham.com/blog/2015/03/02/python-scikit-learn-training-a-classifier-with-non-numeric-features/</link>
      <pubDate>Mon, 02 Mar 2015 07:48:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/02/python-scikit-learn-training-a-classifier-with-non-numeric-features/</guid>
      <description>import json import nltk import collections from himymutil.ml import pos_features from sklearn import tree from sklearn.cross_validation import train_test_split with open(&amp;#34;data/import/trained_sentences.json&amp;#34;, &amp;#34;r&amp;#34;) as json_file: json_data = json.load(json_file) tagged_sents = [] for sentence in json_data: tagged_sents.append([(word[&amp;#34;word&amp;#34;], word[&amp;#34;speaker&amp;#34;]) for word in sentence[&amp;#34;words&amp;#34;]]) featuresets = [] for tagged_sent in tagged_sents: untagged_sent = nltk.tag.untag(tagged_sent) sentence_pos = nltk.pos_tag(untagged_sent) for i, (word, tag) in enumerate(tagged_sent): featuresets.append((pos_features(untagged_sent, sentence_pos, i), tag) ) clf = tree.DecisionTreeClassifier() train_data, test_data = train_test_split(featuresets, test_size=0.</description>
    </item>
    
    <item>
      <title>Python: Detecting the speaker in HIMYM using Parts of Speech (POS) tagging</title>
      <link>https://markhneedham.com/blog/2015/03/01/python-detecting-the-speaker-in-himym-using-parts-of-speech-pos-tagging/</link>
      <pubDate>Sun, 01 Mar 2015 02:36:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/03/01/python-detecting-the-speaker-in-himym-using-parts-of-speech-pos-tagging/</guid>
      <description>def pos_features(sentence, sentence_pos, i): features = {} features[&amp;#34;word&amp;#34;] = sentence[i] features[&amp;#34;word-pos&amp;#34;] = sentence_pos[i][1] if i == 0: features[&amp;#34;prev-word&amp;#34;] = &amp;#34;&amp;lt;START&amp;gt;&amp;#34; features[&amp;#34;prev-word-pos&amp;#34;] = &amp;#34;&amp;lt;START&amp;gt;&amp;#34; else: features[&amp;#34;prev-word&amp;#34;] = sentence[i-1] features[&amp;#34;prev-word-pos&amp;#34;] = sentence_pos[i-1][1] if i == len(sentence) - 1: features[&amp;#34;next-word&amp;#34;] = &amp;#34;&amp;lt;END&amp;gt;&amp;#34; features[&amp;#34;next-word-pos&amp;#34;] = &amp;#34;&amp;lt;END&amp;gt;&amp;#34; else: features[&amp;#34;next-word&amp;#34;] = sentence[i+1] features[&amp;#34;next-word-pos&amp;#34;] = sentence_pos[i+1][1] return features featuresets = [] for tagged_sent in tagged_sents: untagged_sent = nltk.tag.untag(tagged_sent) sentence_pos = nltk.pos_tag(untagged_sent) for i, (word, tag) in enumerate(tagged_sent): featuresets.</description>
    </item>
    
    <item>
      <title>R/ggplot: Controlling X axis order</title>
      <link>https://markhneedham.com/blog/2015/02/27/rggplot-controlling-x-axis-order/</link>
      <pubDate>Fri, 27 Feb 2015 00:49:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/27/rggplot-controlling-x-axis-order/</guid>
      <description>df = read.csv(&amp;#34;/tmp/friends.csv&amp;#34;) top = df %&amp;gt;% head(20) ggplot(aes(x = p.name, y = colleagues), data = top) + geom_bar(fill = &amp;#34;dark blue&amp;#34;, stat = &amp;#34;identity&amp;#34;) ggplot(aes(x = p.name, y = colleagues), data = top) + geom_bar(fill = &amp;#34;dark blue&amp;#34;, stat = &amp;#34;identity&amp;#34;) + scale_x_discrete(limits= top$p.name) </description>
    </item>
    
    <item>
      <title>R: Conditionally updating rows of a data frame</title>
      <link>https://markhneedham.com/blog/2015/02/26/r-conditionally-updating-rows-of-a-data-frame/</link>
      <pubDate>Thu, 26 Feb 2015 00:45:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/26/r-conditionally-updating-rows-of-a-data-frame/</guid>
      <description>library(zoo) library(dplyr) monthNumber = function(cohort, date) { cohortAsDate = as.yearmon(cohort) dateAsDate = as.yearmon(date) if(cohortAsDate &amp;gt; dateAsDate) { &amp;#34;NA&amp;#34; } else { paste(round((dateAsDate - cohortAsDate) * 12), sep=&amp;#34;&amp;#34;) } } cohortAttendance %&amp;gt;% group_by(row_number()) %&amp;gt;% mutate(monthNumber = monthNumber(cohort, date)) %&amp;gt;% filter(monthNumber != &amp;#34;NA&amp;#34;) %&amp;gt;% filter(monthNumber != &amp;#34;0&amp;#34;) %&amp;gt;% mutate(monthNumber = as.numeric(monthNumber)) %&amp;gt;% arrange(monthNumber) system.time(cohortAttendance %&amp;gt;% group_by(row_number()) %&amp;gt;% mutate(monthNumber = monthNumber(cohort, date)) %&amp;gt;% filter(monthNumber != &amp;#34;NA&amp;#34;) %&amp;gt;% filter(monthNumber != &amp;#34;0&amp;#34;) %&amp;gt;% mutate(monthNumber = as.</description>
    </item>
    
    <item>
      <title>Python/nltk: Naive vs Naive Bayes vs Decision Tree</title>
      <link>https://markhneedham.com/blog/2015/02/24/pythonnltk-naive-vs-naive-bayes-vs-decision-tree/</link>
      <pubDate>Tue, 24 Feb 2015 22:39:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/24/pythonnltk-naive-vs-naive-bayes-vs-decision-tree/</guid>
      <description>import nltk from nltk import ClassifierI class NaiveClassifier(ClassifierI): def classify(self, featureset): if featureset[&amp;#39;next-word&amp;#39;] == &amp;#34;:&amp;#34;: return True else: return False import nltk import collections def assess_classifier(classifier, test_data, text): refsets = collections.defaultdict(set) testsets = collections.defaultdict(set) for i, (feats, label) in enumerate(test_data): refsets[label].add(i) observed = classifier.classify(feats) testsets[observed].add(i) speaker_precision = nltk.metrics.precision(refsets[True], testsets[True]) speaker_recall = nltk.metrics.recall(refsets[True], testsets[True]) non_speaker_precision = nltk.metrics.precision(refsets[False], testsets[False]) non_speaker_recall = nltk.metrics.recall(refsets[False], testsets[False]) return [text, speaker_precision, speaker_recall, non_speaker_precision, non_speaker_recall] import json from sklearn.</description>
    </item>
    
    <item>
      <title>R: Cohort analysis of Neo4j meetup members</title>
      <link>https://markhneedham.com/blog/2015/02/24/r-cohort-analysis-of-neo4j-meetup-members/</link>
      <pubDate>Tue, 24 Feb 2015 01:19:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/24/r-cohort-analysis-of-neo4j-meetup-members/</guid>
      <description>library(RNeo4j) graph = startGraph(&amp;#34;http://127.0.0.1:7474/db/data/&amp;#34;) query = &amp;#34;MATCH (g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;})-[:HOSTED_EVENT]-&amp;gt;(e), (e)&amp;lt;-[:TO]-(rsvp {response: \&amp;#34;yes\&amp;#34;})&amp;lt;-[:RSVPD]-(person) RETURN rsvp.time, person.id&amp;#34; timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;, tz = &amp;#34;GMT&amp;#34;) df = cypher(graph, query) df$time = timestampToDate(df$rsvp.time) df$date = format(as.Date(df$time), &amp;#34;%Y-%m&amp;#34;) &amp;gt; df %&amp;gt;% head() ## rsvp.time person.id time date ## 612 1.404857e+12 23362191 2014-07-08 22:00:29 2014-07 ## 1765 1.380049e+12 112623332 2013-09-24 18:58:00 2013-09 ## 1248 1.390563e+12 9746061 2014-01-24 11:24:35 2014-01 ## 1541 1.</description>
    </item>
    
    <item>
      <title>R/dplyr: Extracting data frame column value for filtering with %in%</title>
      <link>https://markhneedham.com/blog/2015/02/22/rdplyr-extracting-data-frame-column-value-for-filtering-with-in/</link>
      <pubDate>Sun, 22 Feb 2015 08:58:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/22/rdplyr-extracting-data-frame-column-value-for-filtering-with-in/</guid>
      <description>library(dplyr) df = data.frame(userId = c(1,2,3,4,5), score = c(2,3,4,5,5)) highScoringPeople = df %&amp;gt;% filter(score &amp;gt; 3) %&amp;gt;% select(userId) &amp;gt; highScoringPeople userId 1 3 2 4 3 5 &amp;gt; df %&amp;gt;% filter(userId %in% highScoringPeople) [1] userId score &amp;lt;0 rows&amp;gt; (or 0-length row.names) &amp;gt; df %&amp;gt;% filter(userId %in% c(3,4,5)) userId score 1 3 4 2 4 5 3 5 5 &amp;gt; str(c(3,4,5)) num [1:3] 3 4 5 &amp;gt; str(highScoringPeople) &amp;#39;data.frame&amp;#39;:	3 obs. of 1 variable: $ userId: num 3 4 5 highScoringPeople = (df %&amp;gt;% filter(score &amp;gt; 3))$userId &amp;gt; str(highScoringPeople) num [1:3] 3 4 5 &amp;gt; df %&amp;gt;% filter(userId %in% highScoringPeople) userId score 1 3 4 2 4 5 3 5 5 highScoringPeople = (df %&amp;gt;% filter(score &amp;gt; 3) %&amp;gt;% select(userId))[[1]] &amp;gt; str(highScoringPeople) num [1:3] 3 4 5 </description>
    </item>
    
    <item>
      <title>Python/scikit-learn: Detecting which sentences in a transcript contain a speaker</title>
      <link>https://markhneedham.com/blog/2015/02/20/pythonscikit-learn-detecting-which-sentences-in-a-transcript-contain-a-speaker/</link>
      <pubDate>Fri, 20 Feb 2015 22:42:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/20/pythonscikit-learn-detecting-which-sentences-in-a-transcript-contain-a-speaker/</guid>
      <description>&amp;lt;speaker&amp;gt;: &amp;lt;sentence&amp;gt; import json with open(&amp;#34;data/import/trained_sentences.json&amp;#34;, &amp;#34;r&amp;#34;) as json_file: json_data = json.load(json_file) &amp;gt;&amp;gt;&amp;gt; json_data[0] {u&amp;#39;words&amp;#39;: [{u&amp;#39;word&amp;#39;: u&amp;#39;You&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;ca&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#34;n&amp;#39;t&amp;#34;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;be&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;friends&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;with&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;Robin&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;.&amp;#39;, u&amp;#39;speaker&amp;#39;: False}]} &amp;gt;&amp;gt;&amp;gt; json_data[1] {u&amp;#39;words&amp;#39;: [{u&amp;#39;word&amp;#39;: u&amp;#39;Robin&amp;#39;, u&amp;#39;speaker&amp;#39;: True}, {u&amp;#39;word&amp;#39;: u&amp;#39;:&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;Well&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;...&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;it&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#34;&amp;#39;s&amp;#34;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;a&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;bit&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;early&amp;#39;, u&amp;#39;speaker&amp;#39;: False}, {u&amp;#39;word&amp;#39;: u&amp;#39;.</description>
    </item>
    
    <item>
      <title>Python&#39;s pandas vs Neo4j&#39;s cypher: Exploring popular phrases in How I met your mother transcripts</title>
      <link>https://markhneedham.com/blog/2015/02/19/pythons-pandas-vs-neo4js-cypher-exploring-popular-phrases-in-how-i-met-your-mother-transcripts/</link>
      <pubDate>Thu, 19 Feb 2015 00:52:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/19/pythons-pandas-vs-neo4js-cypher-exploring-popular-phrases-in-how-i-met-your-mother-transcripts/</guid>
      <description>To do anything with Neo4j we need to first load the CSV file into the database. The easiest way to do that is with Cypher&amp;rsquo;s LOAD CSV command.
First we&amp;rsquo;ll load the phrases in and then we&amp;rsquo;ll connect them to the episodes which were previously loaded:
USING PERIODIC COMMIT 1000 LOAD CSV WITH HEADERS FROM &amp;quot;file:///Users/markneedham/projects/neo4j-himym/data/import/tfidf_scikit.csv&amp;quot; AS row MERGE (phrase:Phrase {value: row.Phrase}); USING PERIODIC COMMIT 1000 LOAD CSV WITH HEADERS FROM &amp;quot;file:///Users/markneedham/projects/neo4j-himym/data/import/tfidf_scikit.</description>
    </item>
    
    <item>
      <title>Python/pandas: Column value in list (ValueError: The truth value of a Series is ambiguous.)</title>
      <link>https://markhneedham.com/blog/2015/02/16/pythonpandas-column-value-in-list-valueerror-the-truth-value-of-a-series-is-ambiguous/</link>
      <pubDate>Mon, 16 Feb 2015 21:39:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/16/pythonpandas-column-value-in-list-valueerror-the-truth-value-of-a-series-is-ambiguous/</guid>
      <description>$ cat foo.csv &amp;#34;Foo&amp;#34; 1 2 3 4 5 6 7 8 9 10 import pandas as pd df = pd.read_csv(&amp;#39;foo.csv&amp;#39;, index_col=False, header=0) &amp;gt;&amp;gt;&amp;gt; df Foo 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 &amp;gt;&amp;gt;&amp;gt; df[df[&amp;#34;Foo&amp;#34;] == 1] Foo 0 1 &amp;gt;&amp;gt;&amp;gt; df[df[&amp;#34;Foo&amp;#34;] &amp;lt; 7] Foo 0 1 1 2 2 3 3 4 4 5 5 6 odds = [i for i in range(1,10) if i % 2 &amp;lt;&amp;gt; 0] &amp;gt;&amp;gt;&amp;gt; odds [1, 3, 5, 7, 9] &amp;gt;&amp;gt;&amp;gt; df[df[&amp;#34;Foo&amp;#34;] in odds] Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/Users/markneedham/projects/neo4j-himym/himym/lib/python2.</description>
    </item>
    
    <item>
      <title>Python/scikit-learn: Calculating TF/IDF on How I met your mother transcripts</title>
      <link>https://markhneedham.com/blog/2015/02/15/pythonscikit-learn-calculating-tfidf-on-how-i-met-your-mother-transcripts/</link>
      <pubDate>Sun, 15 Feb 2015 15:56:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/15/pythonscikit-learn-calculating-tfidf-on-how-i-met-your-mother-transcripts/</guid>
      <description>It is often used as a weighting factor in information retrieval and text mining.
The tf-idf value increases proportionally to the number of times a word appears in the document, but is offset by the frequency of the word in the corpus, which helps to adjust for the fact that some words appear more frequently in general.
from collections import defaultdict import csv episodes = defaultdict(list) with open(&amp;#34;data/import/sentences.csv&amp;#34;, &amp;#34;r&amp;#34;) as sentences_file: reader = csv.</description>
    </item>
    
    <item>
      <title>Neo4j: Building a topic graph with Prismatic Interest Graph API</title>
      <link>https://markhneedham.com/blog/2015/02/13/neo4j-building-a-topic-graph-with-prismatic-interest-graph-api/</link>
      <pubDate>Fri, 13 Feb 2015 23:38:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/13/neo4j-building-a-topic-graph-with-prismatic-interest-graph-api/</guid>
      <description>import requests payload = { &amp;#39;title&amp;#39;: &amp;#34;insert title of article here&amp;#34;, &amp;#39;body&amp;#39;: &amp;#34;insert body of text here&amp;#34;), &amp;#39;api-token&amp;#39;: &amp;#34;insert token sent by email here&amp;#34;} r = requests.post(&amp;#34;http://interest-graph.getprismatic.com/text/topic&amp;#34;, data=payload) import time def RateLimited(maxPerSecond): minInterval = 1.0 / float(maxPerSecond) def decorate(func): lastTimeCalled = [0.0] def rateLimitedFunction(*args,**kargs): elapsed = time.clock() - lastTimeCalled[0] leftToWait = minInterval - elapsed if leftToWait&amp;gt;0: time.sleep(leftToWait) ret = func(*args,**kargs) lastTimeCalled[0] = time.clock() return ret return rateLimitedFunction return decorate @RateLimited(0.3) def topics(title, body): payload = { &amp;#39;title&amp;#39;: title, &amp;#39;body&amp;#39;: body, &amp;#39;api-token&amp;#39;: &amp;#34;insert token sent by email here&amp;#34;} r = requests.</description>
    </item>
    
    <item>
      <title>Python/gensim: Creating bigrams over How I met your mother transcripts</title>
      <link>https://markhneedham.com/blog/2015/02/12/pythongensim-creating-bigrams-over-how-i-met-your-mother-transcripts/</link>
      <pubDate>Thu, 12 Feb 2015 23:45:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/12/pythongensim-creating-bigrams-over-how-i-met-your-mother-transcripts/</guid>
      <description>$ head -n 15 data/import/sentences.csv | tail 5,1,1,1,Son: Are we being punished for something? 6,1,1,1,Narrator: No 7,1,1,1,&amp;#34;Daughter: Yeah, is this going to take a while?&amp;#34; 8,1,1,1,&amp;#34;Narrator: Yes. (Kids are annoyed) Twenty-five years ago, before I was dad, I had this whole other life.&amp;#34; 9,1,1,1,&amp;#34;(Music Plays, Title &amp;#34;&amp;#34;How I Met Your Mother&amp;#34;&amp;#34; appears)&amp;#34; 10,1,1,1,&amp;#34;Narrator: It was way back in 2005. I was twenty-seven just starting to make it as an architect and living in New York with my friend Marshall, my best friend from college.</description>
    </item>
    
    <item>
      <title>R: Weather vs attendance at NoSQL meetups</title>
      <link>https://markhneedham.com/blog/2015/02/11/r-weather-vs-attendance-at-nosql-meetups/</link>
      <pubDate>Wed, 11 Feb 2015 07:09:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/02/11/r-weather-vs-attendance-at-nosql-meetups/</guid>
      <description>library(weatherData) # London City Airport getDetailedWeatherForYear = function(year) { getWeatherForDate(&amp;#34;LCY&amp;#34;, start_date= paste(sep=&amp;#34;&amp;#34;, year, &amp;#34;-01-01&amp;#34;), end_date = paste(sep=&amp;#34;&amp;#34;, year, &amp;#34;-12-31&amp;#34;), opt_detailed = FALSE, opt_all_columns = TRUE) } df = rbind(getDetailedWeatherForYear(2011), getDetailedWeatherForYear(2012), getDetailedWeatherForYear(2013), getDetailedWeatherForYear(2014), getWeatherForDate(&amp;#34;LCY&amp;#34;, start_date=&amp;#34;2015-01-01&amp;#34;, end_date = &amp;#34;2015-01-25&amp;#34;, opt_detailed = FALSE, opt_all_columns = TRUE)) write.csv(df, &amp;#39;weather/temp_data.csv&amp;#39;, row.names = FALSE) &amp;#34;Date&amp;#34;,&amp;#34;GMT&amp;#34;,&amp;#34;Max_TemperatureC&amp;#34;,&amp;#34;Mean_TemperatureC&amp;#34;,&amp;#34;Min_TemperatureC&amp;#34;,&amp;#34;Dew_PointC&amp;#34;,&amp;#34;MeanDew_PointC&amp;#34;,&amp;#34;Min_DewpointC&amp;#34;,&amp;#34;Max_Humidity&amp;#34;,&amp;#34;Mean_Humidity&amp;#34;,&amp;#34;Min_Humidity&amp;#34;,&amp;#34;Max_Sea_Level_PressurehPa&amp;#34;,&amp;#34;Mean_Sea_Level_PressurehPa&amp;#34;,&amp;#34;Min_Sea_Level_PressurehPa&amp;#34;,&amp;#34;Max_VisibilityKm&amp;#34;,&amp;#34;Mean_VisibilityKm&amp;#34;,&amp;#34;Min_VisibilitykM&amp;#34;,&amp;#34;Max_Wind_SpeedKm_h&amp;#34;,&amp;#34;Mean_Wind_SpeedKm_h&amp;#34;,&amp;#34;Max_Gust_SpeedKm_h&amp;#34;,&amp;#34;Precipitationmm&amp;#34;,&amp;#34;CloudCover&amp;#34;,&amp;#34;Events&amp;#34;,&amp;#34;WindDirDegrees&amp;#34; 2011-01-01,&amp;#34;2011-1-1&amp;#34;,7,6,4,5,3,1,93,85,76,1027,1025,1023,10,9,3,14,10,NA,0,7,&amp;#34;Rain&amp;#34;,312 2011-01-02,&amp;#34;2011-1-2&amp;#34;,4,3,2,1,0,-1,87,81,75,1029,1028,1027,10,10,10,11,8,NA,0,7,&amp;#34;&amp;#34;,321 2011-01-03,&amp;#34;2011-1-3&amp;#34;,4,2,1,0,-2,-5,87,74,56,1028,1024,1019,10,10,10,8,5,NA,0,6,&amp;#34;Rain-Snow&amp;#34;,249 2011-01-04,&amp;#34;2011-1-4&amp;#34;,6,3,1,3,1,-1,93,83,65,1019,1013,1008,10,10,10,21,6,NA,0,5,&amp;#34;Rain&amp;#34;,224 2011-01-05,&amp;#34;2011-1-5&amp;#34;,8,7,5,6,3,0,93,80,61,1008,1000,994,10,9,4,26,16,45,0,4,&amp;#34;Rain&amp;#34;,200 2011-01-06,&amp;#34;2011-1-6&amp;#34;,7,4,3,6,3,1,93,90,87,1002,996,993,10,9,5,13,6,NA,0,5,&amp;#34;Rain&amp;#34;,281 2011-01-07,&amp;#34;2011-1-7&amp;#34;,11,6,2,9,5,2,100,91,82,1003,999,996,10,7,2,24,11,NA,0,5,&amp;#34;Rain-Snow&amp;#34;,124 2011-01-08,&amp;#34;2011-1-8&amp;#34;,11,7,4,8,4,-1,87,77,65,1004,997,987,10,10,5,39,23,50,0,5,&amp;#34;Rain&amp;#34;,230 2011-01-09,&amp;#34;2011-1-9&amp;#34;,7,4,3,1,0,-1,87,74,57,1018,1012,1004,10,10,10,24,16,NA,0,NA,&amp;#34;&amp;#34;,242 weather = read.csv(&amp;#34;weather/temp_data.csv&amp;#34;) weather$Date = as.POSIXct(weather$Date) &amp;gt; weather %&amp;gt;% sample_n(10) %&amp;gt;% select(Date, Min_TemperatureC, Mean_TemperatureC, Max_TemperatureC) Date Min_TemperatureC Mean_TemperatureC Max_TemperatureC 1471 2015-01-10 5 9 14 802 2013-03-12 -2 1 4 1274 2014-06-27 14 18 22 848 2013-04-27 5 8 10 832 2013-04-11 6 8 10 717 2012-12-17 6 7 9 1463 2015-01-02 6 9 13 1090 2013-12-25 4 6 7 560 2012-07-13 15 18 20 1230 2014-05-14 9 14 19 timestampToDate &amp;lt;- function(x) as.</description>
    </item>
    
    <item>
      <title>Python/matpotlib: Plotting occurrences of the main characters in How I Met Your Mother</title>
      <link>https://markhneedham.com/blog/2015/01/30/pythonmatpotlib-plotting-occurrences-of-the-main-characters-in-how-i-met-your-mother/</link>
      <pubDate>Fri, 30 Jan 2015 21:29:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/30/pythonmatpotlib-plotting-occurrences-of-the-main-characters-in-how-i-met-your-mother/</guid>
      <description>$ head -n 10 data/import/sentences.csv SentenceId,EpisodeId,Season,Episode,Sentence 1,1,1,1,Pilot 2,1,1,1,Scene One 3,1,1,1,[Title: The Year 2030] 4,1,1,1,&amp;#34;Narrator: Kids, I&amp;#39;m going to tell you an incredible story. The story of how I met your mother&amp;#34; 5,1,1,1,Son: Are we being punished for something? 6,1,1,1,Narrator: No 7,1,1,1,&amp;#34;Daughter: Yeah, is this going to take a while?&amp;#34; 8,1,1,1,&amp;#34;Narrator: Yes. (Kids are annoyed) Twenty-five years ago, before I was dad, I had this whole other life.&amp;#34; 9,1,1,1,&amp;#34;(Music Plays, Title &amp;#34;&amp;#34;How I Met Your Mother&amp;#34;&amp;#34; appears)&amp;#34; import csv from collections import defaultdict episodes = defaultdict(list) with open(&amp;#34;data/import/sentences.</description>
    </item>
    
    <item>
      <title>R: ggplot2 - Each group consist of only one observation. Do you need to adjust the group aesthetic?</title>
      <link>https://markhneedham.com/blog/2015/01/30/r-ggplot2-each-group-consist-of-only-one-observation-do-you-need-to-adjust-the-group-aesthetic/</link>
      <pubDate>Fri, 30 Jan 2015 00:27:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/30/r-ggplot2-each-group-consist-of-only-one-observation-do-you-need-to-adjust-the-group-aesthetic/</guid>
      <description>$ cat /tmp/averageTemperatureByMonth.csv &amp;#34;month&amp;#34;,&amp;#34;aveTemperature&amp;#34; &amp;#34;January&amp;#34;,6.02684563758389 &amp;#34;February&amp;#34;,5.89380530973451 &amp;#34;March&amp;#34;,7.54838709677419 &amp;#34;April&amp;#34;,10.875 &amp;#34;May&amp;#34;,13.3064516129032 &amp;#34;June&amp;#34;,15.9666666666667 &amp;#34;July&amp;#34;,18.8387096774194 &amp;#34;August&amp;#34;,18.3709677419355 &amp;#34;September&amp;#34;,16.2583333333333 &amp;#34;October&amp;#34;,13.4596774193548 &amp;#34;November&amp;#34;,9.19166666666667 &amp;#34;December&amp;#34;,7.01612903225806 df = read.csv(&amp;quot;/tmp/averageTemperatureByMonth.csv&amp;quot;) df$month = factor(df$month, month.name) ggplot(aes(x = month, y = aveTemperature), data = df) + geom_line( ) + ggtitle(&amp;quot;Temperature by month&amp;quot;) geom_path: Each group consist of only one observation. Do you need to adjust the group aesthetic? ggplot(aes(x = as.numeric(month), y = aveTemperature), data = df) + geom_line( ) + ggtitle(&amp;quot;Temperature by month&amp;quot;) ggplot(aes(x = month, y = aveTemperature, group=1), data = df) + geom_line( ) + ggtitle(&amp;quot;Temperature by month&amp;quot;) </description>
    </item>
    
    <item>
      <title>Python: Find the highest value in a group</title>
      <link>https://markhneedham.com/blog/2015/01/25/python-find-the-highest-value-in-a-group/</link>
      <pubDate>Sun, 25 Jan 2015 12:47:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/25/python-find-the-highest-value-in-a-group/</guid>
      <description>$ head -n 10 data/import/episodes.csv NumberOverall,NumberInSeason,Episode,Season,DateAired,Timestamp 1,1,/wiki/Pilot,1,&amp;#34;September 19, 2005&amp;#34;,1127084400 2,2,/wiki/Purple_Giraffe,1,&amp;#34;September 26, 2005&amp;#34;,1127689200 3,3,/wiki/Sweet_Taste_of_Liberty,1,&amp;#34;October 3, 2005&amp;#34;,1128294000 4,4,/wiki/Return_of_the_Shirt,1,&amp;#34;October 10, 2005&amp;#34;,1128898800 5,5,/wiki/Okay_Awesome,1,&amp;#34;October 17, 2005&amp;#34;,1129503600 6,6,/wiki/Slutty_Pumpkin,1,&amp;#34;October 24, 2005&amp;#34;,1130108400 7,7,/wiki/Matchmaker,1,&amp;#34;November 7, 2005&amp;#34;,1131321600 8,8,/wiki/The_Duel,1,&amp;#34;November 14, 2005&amp;#34;,1131926400 9,9,/wiki/Belly_Full_of_Turkey,1,&amp;#34;November 21, 2005&amp;#34;,1132531200 import csv from collections import defaultdict seasons = defaultdict(list) with open(&amp;#34;data/import/episodes.csv&amp;#34;, &amp;#34;r&amp;#34;) as episodesfile: reader = csv.reader(episodesfile, delimiter = &amp;#34;,&amp;#34;) reader.next() for row in reader: seasons[int(row[3])].append(int(row[0])) print seasons $ python blog.py defaultdict(&amp;lt;type &amp;#39;list&amp;#39;&amp;gt;, { 1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], 2: [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], 3: [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], 4: [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], 5: [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], 6: [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], 7: [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], 8: [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], 9: [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208]}) for season, episode_ids in seasons.</description>
    </item>
    
    <item>
      <title>Python/pdfquery: Scraping the FIFA World Player of the Year votes PDF into shape</title>
      <link>https://markhneedham.com/blog/2015/01/22/pythonpdfquery-scraping-the-fifa-world-player-of-the-year-votes-pdf-into-shape/</link>
      <pubDate>Thu, 22 Jan 2015 00:25:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/22/pythonpdfquery-scraping-the-fifa-world-player-of-the-year-votes-pdf-into-shape/</guid>
      <description>import pdfquery pdf = pdfquery.PDFQuery(&amp;#34;fboaward_menplayer2014_neutral.pdf&amp;#34;) pdf.load() pdf.tree.write(&amp;#34;/tmp/yadda&amp;#34;, pretty_print=True) $ head -n 10 /tmp/yadda &amp;lt;pdfxml ModDate=&amp;#34;D:20150110224554+01&amp;#39;00&amp;#39;&amp;#34; CreationDate=&amp;#34;D:20150110224539+01&amp;#39;00&amp;#39;&amp;#34; Producer=&amp;#34;Microsoft&amp;amp;#174; Excel&amp;amp;#174; 2010&amp;#34; Creator=&amp;#34;Microsoft&amp;amp;#174; Excel&amp;amp;#174; 2010&amp;#34;&amp;gt; &amp;lt;LTPage bbox=&amp;#34;[0, 0, 841.8, 595.2]&amp;#34; height=&amp;#34;595.2&amp;#34; pageid=&amp;#34;1&amp;#34; rotate=&amp;#34;0&amp;#34; width=&amp;#34;841.8&amp;#34; x0=&amp;#34;0&amp;#34; x1=&amp;#34;841.8&amp;#34; y0=&amp;#34;0&amp;#34; y1=&amp;#34;595.2&amp;#34; page_index=&amp;#34;0&amp;#34; page_label=&amp;#34;&amp;#34;&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;lt;LTTextLineHorizontal bbox=&amp;#34;[31.08, 546.15, 122.524, 556.59]&amp;#34; height=&amp;#34;10.44&amp;#34; width=&amp;#34;91.444&amp;#34; word_margin=&amp;#34;0.1&amp;#34; x0=&amp;#34;31.08&amp;#34; x1=&amp;#34;122.524&amp;#34; y0=&amp;#34;546.15&amp;#34; y1=&amp;#34;556.59&amp;#34;&amp;gt;&amp;lt;LTTextBoxHorizontal bbox=&amp;#34;[31.08, 546.15, 122.524, 556.59]&amp;#34; height=&amp;#34;10.44&amp;#34; index=&amp;#34;0&amp;#34; width=&amp;#34;91.444&amp;#34; x0=&amp;#34;31.08&amp;#34; x1=&amp;#34;122.524&amp;#34; y0=&amp;#34;546.15&amp;#34; y1=&amp;#34;556.59&amp;#34;&amp;gt;FIFA Ballon d&amp;#39;Or 2014 &amp;lt;/LTTextBoxHorizontal&amp;gt;&amp;lt;/LTTextLineHorizontal&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;lt;LTAnon&amp;gt; &amp;lt;/LTAnon&amp;gt; &amp;gt;&amp;gt;&amp;gt; name_element = pdf.</description>
    </item>
    
    <item>
      <title>Python/NLTK: Finding the most common phrases in How I Met Your Mother</title>
      <link>https://markhneedham.com/blog/2015/01/19/pythonnltk-finding-the-most-common-phrases-in-how-i-met-your-mother/</link>
      <pubDate>Mon, 19 Jan 2015 00:24:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/19/pythonnltk-finding-the-most-common-phrases-in-how-i-met-your-mother/</guid>
      <description>Following on from last week&amp;rsquo;s blog postwhere I found the most popular words in How I met your mother transcripts, in this post we&amp;rsquo;ll have a look at how we can pull out sentences and then phrases from our corpus.
The first thing I did was tweak the scraping script to pull out the sentences spoken by characters in the transcripts.import csv import nltk import re import bs4 from bs4 import BeautifulSoup, NavigableString from soupselect import select from nltk.</description>
    </item>
    
    <item>
      <title>Python: Counter - ValueError: too many values to unpack</title>
      <link>https://markhneedham.com/blog/2015/01/12/python-counter-valueerror-too-many-values-to-unpack/</link>
      <pubDate>Mon, 12 Jan 2015 23:16:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/12/python-counter-valueerror-too-many-values-to-unpack/</guid>
      <description>&amp;gt;&amp;gt; from collections import Counter &amp;gt;&amp;gt; counter = Counter([&amp;#34;word1&amp;#34;, &amp;#34;word2&amp;#34;, &amp;#34;word3&amp;#34;, &amp;#34;word1&amp;#34;]) &amp;gt;&amp;gt; print counter Counter({&amp;#39;word1&amp;#39;: 2, &amp;#39;word3&amp;#39;: 1, &amp;#39;word2&amp;#39;: 1}) &amp;gt;&amp;gt;&amp;gt; for key, value in counter: ... print key, value ... Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; ValueError: too many values to unpack &amp;gt;&amp;gt;&amp;gt; for key, value in counter.iteritems(): ... print key, value ... word1 2 word3 1 word2 1 </description>
    </item>
    
    <item>
      <title>Python: scikit-learn: ImportError: cannot import name __check_build</title>
      <link>https://markhneedham.com/blog/2015/01/10/python-scikit-learn-importerror-cannot-import-name-__check_build/</link>
      <pubDate>Sat, 10 Jan 2015 08:48:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/10/python-scikit-learn-importerror-cannot-import-name-__check_build/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; from sklearn.feature_extraction.text import CountVectorizer Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/Users/markneedham/projects/neo4j-himym/himym/lib/python2.7/site-packages/sklearn/__init__.py&amp;#34;, line 37, in &amp;lt;module&amp;gt; from . import __check_build ImportError: cannot import name __check_build &amp;gt;&amp;gt;&amp;gt; from sklearn.feature_extraction.text import CountVectorizer Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/Users/markneedham/projects/neo4j-himym/himym/lib/python2.7/site-packages/sklearn/__init__.py&amp;#34;, line 38, in &amp;lt;module&amp;gt; from .base import clone File &amp;#34;/Users/markneedham/projects/neo4j-himym/himym/lib/python2.7/site-packages/sklearn/base.py&amp;#34;, line 10, in &amp;lt;module&amp;gt; from scipy import sparse ImportError: No module named scipy $ pip install scipy $ python Python 2.</description>
    </item>
    
    <item>
      <title>Python: gensim - clang: error: unknown argument: &#39;-mno-fused-madd&#39; [-Wunused-command-line-argument-hard-error-in-future]</title>
      <link>https://markhneedham.com/blog/2015/01/10/python-gensim-clang-error-unknown-argument-mno-fused-madd-wunused-command-line-argument-hard-error-in-future/</link>
      <pubDate>Sat, 10 Jan 2015 08:39:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/10/python-gensim-clang-error-unknown-argument-mno-fused-madd-wunused-command-line-argument-hard-error-in-future/</guid>
      <description>$ pip install gensim ... cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -mno-fused-madd -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch x86_64 -arch i386 -pipe -I/Users/markneedham/projects/neo4j-himym/himym/build/gensim/gensim/models -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -I/Users/markneedham/projects/neo4j-himym/himym/lib/python2.7/site-packages/numpy/core/include -c ./gensim/models/word2vec_inner.c -o build/temp.macosx-10.9-intel-2.7/./gensim/models/word2vec_inner.o clang: error: unknown argument: &amp;#39;-mno-fused-madd&amp;#39; [-Wunused-command-line-argument-hard-error-in-future] clang: note: this will be a hard error (cannot be downgraded to a warning) in the future command &amp;#39;cc&amp;#39; failed with exit status 1 an integer is required Traceback (most recent call last): File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/Users/markneedham/projects/neo4j-himym/himym/build/gensim/setup.</description>
    </item>
    
    <item>
      <title>Python NLTK/Neo4j: Analysing the transcripts of How I Met Your Mother</title>
      <link>https://markhneedham.com/blog/2015/01/10/python-nltkneo4j-analysing-the-transcripts-of-how-i-met-your-mother/</link>
      <pubDate>Sat, 10 Jan 2015 01:22:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2015/01/10/python-nltkneo4j-analysing-the-transcripts-of-how-i-met-your-mother/</guid>
      <description>import requests from bs4 import BeautifulSoup from soupselect import select episodes = {} for i in range(1,3): page = open(&amp;#34;data/transcripts/page-&amp;#34; + str(i) + &amp;#34;.html&amp;#34;, &amp;#39;r&amp;#39;) soup = BeautifulSoup(page.read()) for row in select(soup, &amp;#34;td.topic-titles a&amp;#34;): parts = row.text.split(&amp;#34; - &amp;#34;) episodes[parts[0]] = {&amp;#34;title&amp;#34;: parts[1], &amp;#34;link&amp;#34;: row.get(&amp;#34;href&amp;#34;)} for key, value in episodes.iteritems(): parts = key.split(&amp;#34;x&amp;#34;) season = int(parts[0]) episode = int(parts[1]) filename = &amp;#34;data/transcripts/S%d-Ep%d&amp;#34; %(season, episode) print filename with open(filename, &amp;#39;wb&amp;#39;) as handle: headers = {&amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.</description>
    </item>
    
    <item>
      <title>R: Featuring engineering for a linear model</title>
      <link>https://markhneedham.com/blog/2014/12/28/r-featuring-engineering-for-a-linear-model/</link>
      <pubDate>Sun, 28 Dec 2014 21:55:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/28/r-featuring-engineering-for-a-linear-model/</guid>
      <description>&amp;gt; df = read.csv(&amp;#34;/tmp/membersWithGroupCounts.csv&amp;#34;) &amp;gt; df$eventTime = as.POSIXct(df$eventTime) &amp;gt; df %&amp;gt;% sample_n(10) %&amp;gt;% select(event.name, g.name, eventTime, groupMembers, rsvps) event.name g.name eventTime groupMembers rsvps 23 Scoring Models, Apache Drill for querying structured &amp;amp; unstructured data Data Science London 2014-09-18 18:30:00 3466 159 421 London Office Hours London MongoDB User Group 2012-08-22 17:00:00 468 6 304 MongoDB University Study Group London Meet up London MongoDB User Group 2014-07-16 17:00:00 1256 23 43 December Meetup London ElasticSearch User Group 2014-12-10 18:30:00 721 126 222 Intro to Graphs Neo4j - London User Group 2014-09-03 18:30:00 1453 39 207 Intro to Machine Learning with Scikit-Learn Women in Data 2014-11-11 18:15:00 574 41 168 NoSQL panel and LevelDB + Node.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.6 - Cypher: FOREACH slowness</title>
      <link>https://markhneedham.com/blog/2014/12/28/neo4j-2-1-6-cypher-foreach-slowness/</link>
      <pubDate>Sun, 28 Dec 2014 04:28:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/28/neo4j-2-1-6-cypher-foreach-slowness/</guid>
      <description>A common problem that people have when using Neo4j for social network applications is updating a person with their newly imported friends.
 We&amp;#8217;ll have an array of friends that we want to connect to a single Person node. Assuming the following schema&amp;#8230;&amp;#8203;
 $ schema Indexes ON :Person(id) ONLINE No constraints   &amp;#8230;&amp;#8203;a simplified version would look like this:
 WITH range (2,1002) AS friends MERGE (p:Person {id: 1}) FOREACH(f IN friends | MERGE (friend:Person {id: f}) MERGE (friend)-[:FRIENDS]-&amp;gt;p);   If we execute that on an empty database we&amp;#8217;ll see something like this:</description>
    </item>
    
    <item>
      <title>R: Vectorising all the things</title>
      <link>https://markhneedham.com/blog/2014/12/22/r-vectorising-all-the-things/</link>
      <pubDate>Mon, 22 Dec 2014 11:46:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/22/r-vectorising-all-the-things/</guid>
      <description>library(dplyr) library(lubridate) library(geosphere) options(&amp;#34;scipen&amp;#34;=100, &amp;#34;digits&amp;#34;=4) times = ymd_hms(&amp;#34;2002-01-01 17:00:00&amp;#34;) + c(0:99) * hours(1) data = data.frame(time = times) &amp;gt; data %&amp;gt;% head() time 1 2002-01-01 17:00:00 2 2002-01-01 18:00:00 3 2002-01-01 19:00:00 4 2002-01-01 20:00:00 5 2002-01-01 21:00:00 6 2002-01-01 22:00:00 distanceFromWeekend = function(dateToLookup) { before = floor_date(dateToLookup, &amp;#34;week&amp;#34;) + hours(23) + minutes(59) + seconds(59) after = ceiling_date(dateToLookup, &amp;#34;week&amp;#34;) - days(1) timeToBefore = dateToLookup - before timeToAfter = after - dateToLookup if(timeToBefore &amp;lt; 0 || timeToAfter &amp;lt; 0) { 0 } else { if(timeToBefore &amp;lt; timeToAfter) { timeToBefore / dhours(1) } else { timeToAfter / dhours(1) } } } &amp;gt; system.</description>
    </item>
    
    <item>
      <title>R: Time to/from the weekend</title>
      <link>https://markhneedham.com/blog/2014/12/13/r-time-tofrom-the-weekend/</link>
      <pubDate>Sat, 13 Dec 2014 20:38:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/13/r-time-tofrom-the-weekend/</guid>
      <description>&amp;gt; library(lubridate) &amp;gt; floor_date(ymd(&amp;#34;2014-12-18&amp;#34;), &amp;#34;week&amp;#34;) [1] &amp;#34;2014-12-14 UTC&amp;#34; &amp;gt; ceiling_date(ymd(&amp;#34;2014-12-18&amp;#34;), &amp;#34;week&amp;#34;) [1] &amp;#34;2014-12-21 UTC&amp;#34; &amp;gt; ceiling_date(ymd(&amp;#34;2014-12-18&amp;#34;), &amp;#34;week&amp;#34;) - days(1) [1] &amp;#34;2014-12-20 UTC&amp;#34; findClosestWeekendDay = function(dateToLookup) { before = floor_date(dateToLookup, &amp;#34;week&amp;#34;) + hours(23) + minutes(59) + seconds(59) after = ceiling_date(dateToLookup, &amp;#34;week&amp;#34;) - days(1) if((dateToLookup - before) &amp;lt; (after - dateToLookup)) { before } else { after } } &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-13 13:33:29&amp;#34;)) [1] &amp;#34;2014-12-13 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-14 18:33:29&amp;#34;)) [1] &amp;#34;2014-12-14 23:59:59 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-15 18:33:29&amp;#34;)) [1] &amp;#34;2014-12-14 23:59:59 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-17 11:33:29&amp;#34;)) [1] &amp;#34;2014-12-14 23:59:59 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-17 13:33:29&amp;#34;)) [1] &amp;#34;2014-12-20 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-19 13:33:29&amp;#34;)) [1] &amp;#34;2014-12-20 UTC&amp;#34; distanceFromWeekend = function(dateToLookup) { before = floor_date(dateToLookup, &amp;#34;week&amp;#34;) + hours(23) + minutes(59) + seconds(59) after = ceiling_date(dateToLookup, &amp;#34;week&amp;#34;) - days(1) timeToBefore = dateToLookup - before timeToAfter = after - dateToLookup if(timeToBefore &amp;lt; 0 || timeToAfter &amp;lt; 0) { 0 } else { if(timeToBefore &amp;lt; timeToAfter) { timeToBefore / dhours(1) } else { timeToAfter / dhours(1) } } } &amp;gt; distanceFromWeekend(ymd_hms(&amp;#34;2014-12-13 13:33:29&amp;#34;)) [1] 0 &amp;gt; distanceFromWeekend(ymd_hms(&amp;#34;2014-12-14 18:33:29&amp;#34;)) [1] 0 &amp;gt; distanceFromWeekend(ymd_hms(&amp;#34;2014-12-15 18:33:29&amp;#34;)) [1] 18.</description>
    </item>
    
    <item>
      <title>R: Numeric representation of date time</title>
      <link>https://markhneedham.com/blog/2014/12/13/r-numeric-representation-of-date-time/</link>
      <pubDate>Sat, 13 Dec 2014 19:58:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/13/r-numeric-representation-of-date-time/</guid>
      <description>&amp;gt; december13 = as.POSIXlt(&amp;#34;2014-12-13 17:30:00&amp;#34;) &amp;gt; as.numeric(december13 - trunc(december13, &amp;#34;day&amp;#34;), units=&amp;#34;hours&amp;#34;) [1] 17.5 &amp;gt; (december13 - floor_date(december13, &amp;#34;day&amp;#34;)) Time difference of 17.5 hours &amp;gt; class((december13 - floor_date(december13, &amp;#34;day&amp;#34;))) [1] &amp;#34;difftime&amp;#34; &amp;gt; diff = (december13 - floor_date(december13, &amp;#34;day&amp;#34;)) &amp;gt; diff / dhours(1) [1] 17.5 &amp;gt; diff / ddays(1) [1] 0.7291667 &amp;gt; diff / dminutes(1) [1] 1050 &amp;gt; ymd_hms(&amp;#34;2014-12-13 17:00:00&amp;#34;) [1] &amp;#34;2014-12-13 17:00:00 UTC&amp;#34; &amp;gt; ymd_hm(&amp;#34;2014-12-13 17:00&amp;#34;) [1] &amp;#34;2014-12-13 17:00:00 UTC&amp;#34; &amp;gt; ymd_h(&amp;#34;2014-12-13 17&amp;#34;) [1] &amp;#34;2014-12-13 17:00:00 UTC&amp;#34; &amp;gt; ymd(&amp;#34;2014-12-13&amp;#34;) [1] &amp;#34;2014-12-13 UTC&amp;#34; &amp;gt; with_tz(ymd(&amp;#34;2014-12-13&amp;#34;), &amp;#34;GMT&amp;#34;) [1] &amp;#34;2014-12-13 GMT&amp;#34; </description>
    </item>
    
    <item>
      <title>R: data.table/dplyr/lubridate - Error in wday(date, label = TRUE, abbr = FALSE) :  unused arguments (label = TRUE, abbr = FALSE)</title>
      <link>https://markhneedham.com/blog/2014/12/11/r-data-tabledplyrlubridate-error-in-wdaydate-label-true-abbr-false-unused-arguments-label-true-abbr-false/</link>
      <pubDate>Thu, 11 Dec 2014 19:03:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/11/r-data-tabledplyrlubridate-error-in-wdaydate-label-true-abbr-false-unused-arguments-label-true-abbr-false/</guid>
      <description>&amp;gt; library(lubridate) &amp;gt; library(dplyr) &amp;gt; dates = data.frame(date = seq( dmy(&amp;#34;01-01-2010&amp;#34;), to=dmy(&amp;#34;01-01-2015&amp;#34;), by=&amp;#34;day&amp;#34; )) &amp;gt; dates = dates %&amp;gt;% filter(wday(date, label = TRUE, abbr = FALSE) %in% c(&amp;#34;Saturday&amp;#34;, &amp;#34;Sunday&amp;#34;)) &amp;gt; dates %&amp;gt;% head() date 1: 2010-01-02 2: 2010-01-03 3: 2010-01-09 4: 2010-01-10 5: 2010-01-16 6: 2010-01-17 &amp;gt; library(data.table) &amp;gt; dates = data.table(date = seq( dmy(&amp;#34;01-01-2010&amp;#34;), to=dmy(&amp;#34;01-01-2015&amp;#34;), by=&amp;#34;day&amp;#34; )) &amp;gt; dates = dates %&amp;gt;% filter(wday(date, label = TRUE, abbr = FALSE) %in% c(&amp;#34;Saturday&amp;#34;, &amp;#34;Sunday&amp;#34;)) Error in wday(date, label = TRUE, abbr = FALSE) : unused arguments (label = TRUE, abbr = FALSE) &amp;gt; dates = data.</description>
    </item>
    
    <item>
      <title>R: Cleaning up and plotting Google Trends data</title>
      <link>https://markhneedham.com/blog/2014/12/09/r-cleaning-up-plotting-google-trends-data/</link>
      <pubDate>Tue, 09 Dec 2014 18:14:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/09/r-cleaning-up-plotting-google-trends-data/</guid>
      <description>While I&amp;rsquo;m writing the scripts, I&amp;rsquo;m often jumping around, selectively executing individual lines or code blocks, running commands to inspect the data in the REPL (read-evaluate-print-loop, where each command is executed as soon as you type enter, in the picture above it&amp;rsquo;s the pane to the right), etc.
But I try to make sure that when I finish up, the script is runnable by itself.
&amp;gt; library(dplyr) &amp;gt; googleTrends = read.</description>
    </item>
    
    <item>
      <title>R: dplyr - mutate with strptime (incompatible size/wrong result size)</title>
      <link>https://markhneedham.com/blog/2014/12/08/r-dplyr-mutate-with-strptime-incompatible-sizewrong-result-size/</link>
      <pubDate>Mon, 08 Dec 2014 19:02:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/08/r-dplyr-mutate-with-strptime-incompatible-sizewrong-result-size/</guid>
      <description>data = data.frame(x = c(&amp;#34;2014-01-01&amp;#34;, &amp;#34;2014-02-01&amp;#34;, &amp;#34;foo&amp;#34;)) &amp;gt; data x 1 2014-01-01 2 2014-02-01 3 foo &amp;gt; data %&amp;gt;% mutate(y = strptime(x, &amp;#34;%Y-%m-%d&amp;#34;)) Error: wrong result size (11), expected 3 or 1 &amp;gt; data %&amp;gt;% mutate(y = strptime(x, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% as.character()) x y 1 2014-01-01 2014-01-01 2 2014-02-01 2014-02-01 3 foo &amp;lt;NA&amp;gt; &amp;gt; data %&amp;gt;% mutate(y = strptime(x, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% as.character()) %&amp;gt;% filter(!is.na(y)) x y 1 2014-01-01 2014-01-01 2 2014-02-01 2014-02-01 &amp;gt; data %&amp;gt;% mutate(y = x %&amp;gt;% strptime(&amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% as.</description>
    </item>
    
    <item>
      <title>R: String to Date or NA</title>
      <link>https://markhneedham.com/blog/2014/12/07/r-string-to-date-or-na/</link>
      <pubDate>Sun, 07 Dec 2014 19:29:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/07/r-string-to-date-or-na/</guid>
      <description>&amp;gt; as.Date(&amp;#34;2014-01-01&amp;#34;) [1] &amp;#34;2014-01-01&amp;#34; &amp;gt; as.Date(&amp;#34;foo&amp;#34;) Error in charToDate(x) : character string is not in a standard unambiguous format &amp;gt; strptime(&amp;#34;2014-01-01&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) [1] &amp;#34;2014-01-01 GMT&amp;#34; &amp;gt; strptime(&amp;#34;foo&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) [1] NA &amp;gt; strptime(&amp;#34;2014-01-01&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% is.na() [1] FALSE &amp;gt; strptime(&amp;#34;foo&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% is.na() [1] TRUE </description>
    </item>
    
    <item>
      <title>R: Applying a function to every row of a data frame</title>
      <link>https://markhneedham.com/blog/2014/12/04/r-applying-a-function-to-every-row-of-a-data-frame/</link>
      <pubDate>Thu, 04 Dec 2014 06:31:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/04/r-applying-a-function-to-every-row-of-a-data-frame/</guid>
      <description>library(dplyr) # https://gist.github.com/mneedham/7e926a213bf76febf5ed venues = read.csv(&amp;#34;/tmp/venues.csv&amp;#34;) venues %&amp;gt;% head() ## venue lat lon ## 1 Skills Matter 51.52482 -0.099109 ## 2 Skinkers 51.50492 -0.083870 ## 3 Theodore Bullfrog 51.50878 -0.123749 ## 4 The Skills Matter eXchange 51.52452 -0.099231 ## 5 The Guardian 51.53373 -0.122340 ## 6 White Bear Yard 51.52227 -0.109804 options(&amp;#34;scipen&amp;#34;=100, &amp;#34;digits&amp;#34;=4) library(geosphere) centre = c(-0.129581, 51.516578) aVenue = venues %&amp;gt;% slice(1) aVenue ## venue lat lon ## 1 Skills Matter 51.</description>
    </item>
    
    <item>
      <title>Spark: Write to CSV file with header using saveAsFile</title>
      <link>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file-with-header-using-saveasfile/</link>
      <pubDate>Sun, 30 Nov 2014 08:21:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file-with-header-using-saveasfile/</guid>
      <description>import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.*; import org.apache.hadoop.io.IOUtils; import java.io.IOException; public class MyFileUtil { public static boolean copyMergeWithHeader(FileSystem srcFS, Path srcDir, FileSystem dstFS, Path dstFile, boolean deleteSource, Configuration conf, String header) throws IOException { dstFile = checkDest(srcDir.getName(), dstFS, dstFile, false); if(!srcFS.getFileStatus(srcDir).isDir()) { return false; } else { FSDataOutputStream out = dstFS.create(dstFile); if(header != null) { out.write((header + &amp;#34;\n&amp;#34;).getBytes(&amp;#34;UTF-8&amp;#34;)); } try { FileStatus[] contents = srcFS.listStatus(srcDir); for(int i = 0; i &amp;lt; contents.length; ++i) { if(!</description>
    </item>
    
    <item>
      <title>Spark: Write to CSV file</title>
      <link>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file/</link>
      <pubDate>Sun, 30 Nov 2014 07:40:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file/</guid>
      <description>import au.com.bytecode.opencsv.CSVParser import org.apache.spark.rdd.RDD import org.apache.spark.SparkContext._ def dropHeader(data: RDD[String]): RDD[String] = { data.mapPartitionsWithIndex((idx, lines) =&amp;gt; { if (idx == 0) { lines.drop(1) } lines }) } // https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-present/ijzp-q8t2 val crimeFile = &amp;#34;/Users/markneedham/Downloads/Crimes_-_2001_to_present.csv&amp;#34; val crimeData = sc.textFile(crimeFile).cache() val withoutHeader: RDD[String] = dropHeader(crimeData) val file = &amp;#34;/tmp/primaryTypes.csv&amp;#34; FileUtil.fullyDelete(new File(file)) val partitions: RDD[(String, Int)] = withoutHeader.mapPartitions(lines =&amp;gt; { val parser = new CSVParser(&amp;#39;,&amp;#39;) lines.map(line =&amp;gt; { val columns = parser.parseLine(line) (columns(5), 1) }) }) val counts = partitions.</description>
    </item>
    
    <item>
      <title>Docker/Neo4j: Port forwarding on Mac OS X not working</title>
      <link>https://markhneedham.com/blog/2014/11/27/dockerneo4j-port-forwarding-on-mac-os-x-not-working/</link>
      <pubDate>Thu, 27 Nov 2014 12:28:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/27/dockerneo4j-port-forwarding-on-mac-os-x-not-working/</guid>
      <description>$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c62f8601e557 tpires/neo4j:latest &amp;#34;/bin/bash -c /launc About an hour ago Up About an hour 0.0.0.0:49153-&amp;gt;1337/tcp, 0.0.0.0:49154-&amp;gt;7474/tcp neo4j $ curl -v http://localhost:49154 * Adding handle: conn: 0x7ff369803a00 * Adding handle: send: 0 * Adding handle: recv: 0 * Curl_addHandleToPipeline: length: 1 * - Conn 0 (0x7ff369803a00) send_pipe: 1, recv_pipe: 0 * About to connect() to localhost port 49154 (#0) * Trying ::1.</description>
    </item>
    
    <item>
      <title>R: dplyr - Select &#39;random&#39; rows from a data frame</title>
      <link>https://markhneedham.com/blog/2014/11/26/r-dplyr-select-random-rows-from-a-data-frame/</link>
      <pubDate>Wed, 26 Nov 2014 00:01:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/26/r-dplyr-select-random-rows-from-a-data-frame/</guid>
      <description>data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; randomRows = sample(1:length(data[,1]), 10, replace=T) &amp;gt; randomRows [1] 8723 18772 4964 36134 27467 31890 16313 12841 49214 15621 &amp;gt; data %&amp;gt;% slice(randomRows) letter number 1 Z 4 2 F 1 3 Y 6 4 R 6 5 Y 4 6 V 10 7 R 6 8 D 6 9 J 7 10 E 2 pickRandomRows = function(df, numberOfRows = 10) { df %&amp;gt;% slice(runif(numberOfRows,0, length(df[,1]))) } &amp;gt; data %&amp;gt;% pickRandomRows() letter number 1 W 5 2 Y 3 3 E 6 4 Q 8 5 M 9 6 H 9 7 E 10 8 T 2 9 I 5 10 V 4 &amp;gt; data %&amp;gt;% pickRandomRows(7) letter number 1 V 7 2 N 4 3 W 1 4 N 8 5 G 7 6 V 1 7 N 7 &amp;gt; data %&amp;gt;% sample_n(10) letter number 29771 U 1 48666 T 10 30635 A 1 34865 X 7 20140 A 3 41715 T 10 43786 E 10 18284 A 7 21406 S 8 35542 J 8 </description>
    </item>
    
    <item>
      <title>R: dplyr - &#34;Variables not shown&#34;</title>
      <link>https://markhneedham.com/blog/2014/11/23/r-dplyr-variables-not-shown/</link>
      <pubDate>Sun, 23 Nov 2014 01:02:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/23/r-dplyr-variables-not-shown/</guid>
      <description>words = function(numberOfWords, lengthOfWord) { w = c(1:numberOfWords) for(i in 1:numberOfWords) { w[i] = paste(sample(letters, lengthOfWord, replace=TRUE), collapse = &amp;#34;&amp;#34;) } w } numberOfRows = 100 df = data.frame(a = sample (1:numberOfRows, 10, replace = TRUE), b = sample (1:numberOfRows, 10, replace = TRUE), name = words(numberOfRows, 10)) &amp;gt; df %&amp;gt;% group_by(a,b) %&amp;gt;% summarise(n = n(), words = paste(name, collapse = &amp;#34;,&amp;#34;)) %&amp;gt;% arrange(desc(n)) %&amp;gt;% head(5) Source: local data frame [5 x 4] Groups: a a b n 1 19 90 10 2 24 36 10 3 29 20 10 4 29 80 10 5 62 54 10 Variables not shown: words (chr) &amp;gt; df %&amp;gt;% group_by(a,b) %&amp;gt;% summarise(n = n(), words = paste(name, collapse = &amp;#34;,&amp;#34;)) %&amp;gt;% arrange(desc(n)) %&amp;gt;% head(5) %&amp;gt;% print(width = Inf) &amp;gt; options(dplyr.</description>
    </item>
    
    <item>
      <title>R: ggmap - Overlay shapefile with filled polygon of regions</title>
      <link>https://markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/</link>
      <pubDate>Mon, 17 Nov 2014 00:53:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/</guid>
      <description>&amp;gt; library(ggmap) &amp;gt; sfMap = map = get_map(location = &amp;#39;San Francisco&amp;#39;, zoom = 12) &amp;gt; library(rgdal) &amp;gt; library(ggplot2) &amp;gt; sfn = readOGR(&amp;#34;.&amp;#34;,&amp;#34;sfzipcodes&amp;#34;) %&amp;gt;% spTransform(CRS(&amp;#34;+proj=longlat +datum=WGS84&amp;#34;)) &amp;gt; ggplot(data = sfn, aes(x = long, y = lat, group = group)) + geom_path() &amp;gt; class(sfn) [1] &amp;#34;SpatialPolygonsDataFrame&amp;#34; attr(,&amp;#34;package&amp;#34;) [1] &amp;#34;sp&amp;#34; &amp;gt; names(sfn) [1] &amp;#34;OBJECTID&amp;#34; &amp;#34;ZIP_CODE&amp;#34; &amp;#34;ID&amp;#34; &amp;gt; sfn.f = sfn %&amp;gt;% fortify(region = &amp;#39;ZIP_CODE&amp;#39;) SFNeighbourhoods = merge(sfn.f, sfn@data, by.x = &amp;#39;id&amp;#39;, by.y = &amp;#39;ZIP_CODE&amp;#39;) &amp;gt; library(dplyr) &amp;gt; postcodes = SFNeighbourhoods %&amp;gt;% select(id) %&amp;gt;% distinct() &amp;gt; values = data.</description>
    </item>
    
    <item>
      <title>Spark: Parse CSV file and group by column value</title>
      <link>https://markhneedham.com/blog/2014/11/16/spark-parse-csv-file-and-group-by-column-value/</link>
      <pubDate>Sun, 16 Nov 2014 22:53:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/16/spark-parse-csv-file-and-group-by-column-value/</guid>
      <description>$ ls -alh ~/Downloads/Crimes_-_2001_to_present.csv -rw-r--r--@ 1 markneedham staff 1.0G 16 Nov 12:14 /Users/markneedham/Downloads/Crimes_-_2001_to_present.csv $ wc -l ~/Downloads/Crimes_-_2001_to_present.csv 4193441 /Users/markneedham/Downloads/Crimes_-_2001_to_present.csv $ head -n 2 ~/Downloads/Crimes_-_2001_to_present.csv ID,Case Number,Date,Block,IUCR,Primary Type,Description,Location Description,Arrest,Domestic,Beat,District,Ward,Community Area,FBI Code,X Coordinate,Y Coordinate,Year,Updated On,Latitude,Longitude,Location 9464711,HX114160,01/14/2014 05:00:00 AM,028XX E 80TH ST,0560,ASSAULT,SIMPLE,APARTMENT,false,true,0422,004,7,46,08A,1196652,1852516,2014,01/20/2014 12:40:05 AM,41.75017626412204,-87.55494559131228,&amp;#34;(41.75017626412204, -87.55494559131228)&amp;#34; $ time tail +2 ~/Downloads/Crimes_-_2001_to_present.csv | cut -d, -f6 | sort | uniq -c | sort -rn 859197 THEFT 757530 BATTERY 489528 NARCOTICS 488209 CRIMINAL DAMAGE 257310 BURGLARY 253964 OTHER OFFENSE 247386 ASSAULT 197404 MOTOR VEHICLE THEFT 157706 ROBBERY 137538 DECEPTIVE PRACTICE 124974 CRIMINAL TRESPASS 47245 PROSTITUTION 40361 WEAPONS VIOLATION 31585 PUBLIC PEACE VIOLATION 26524 OFFENSE INVOLVING CHILDREN 14788 CRIM SEXUAL ASSAULT 14283 SEX OFFENSE 10632 GAMBLING 8847 LIQUOR LAW VIOLATION 6443 ARSON 5178 INTERFERE WITH PUBLIC OFFICER 4846 HOMICIDE 3585 KIDNAPPING 3147 INTERFERENCE WITH PUBLIC OFFICER 2471 INTIMIDATION 1985 STALKING 355 OFFENSES INVOLVING CHILDREN 219 OBSCENITY 86 PUBLIC INDECENCY 80 OTHER NARCOTIC VIOLATION 12 RITUALISM 12 NON-CRIMINAL 6 OTHER OFFENSE 2 NON-CRIMINAL (SUBJECT SPECIFIED) 2 NON - CRIMINAL real	2m37.</description>
    </item>
    
    <item>
      <title>R: dplyr - Sum for group_by multiple columns</title>
      <link>https://markhneedham.com/blog/2014/11/11/r-dplyr-sum-for-group_by-multiple-columns/</link>
      <pubDate>Tue, 11 Nov 2014 00:17:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/11/r-dplyr-sum-for-group_by-multiple-columns/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number) %&amp;gt;% head(20) Source: local data frame [20 x 3] Groups: letter letter number n 1 A 1 184 2 A 2 192 3 A 3 183 4 A 4 193 5 A 5 214 6 A 6 172 7 A 7 196 8 A 8 198 9 A 9 174 10 A 10 196 11 B 1 212 12 B 2 198 13 B 3 194 14 B 4 181 15 B 5 203 16 B 6 234 17 B 7 221 18 B 8 179 19 B 9 182 20 B 10 170 &amp;gt; data %&amp;gt;% count(letter) Source: local data frame [26 x 2] letter n 1 A 1902 2 B 1974 3 C 1911 4 D 1948 5 E 1888 6 F 1975 7 G 1914 8 H 1886 9 I 1910 10 J 1924 11 K 1974 12 L 1891 13 M 1894 14 N 1946 15 O 1956 16 P 1934 17 Q 1865 18 R 1992 19 S 1946 20 T 1854 21 U 1919 22 V 1913 23 W 1928 24 X 1934 25 Y 1908 26 Z 1914 &amp;gt; data %&amp;gt;% count(letter, number) %&amp;gt;% ungroup %&amp;gt;% group_by(letter) %&amp;gt;% mutate(sum.</description>
    </item>
    
    <item>
      <title>R: dplyr - Maximum value row in each group</title>
      <link>https://markhneedham.com/blog/2014/11/10/r-maximum-value-row-in-each-group/</link>
      <pubDate>Mon, 10 Nov 2014 22:06:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/10/r-maximum-value-row-in-each-group/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number) Source: local data frame [260 x 3] Groups: letter letter number n 1 A 1 184 2 A 2 192 3 A 3 183 4 A 4 193 5 A 5 214 6 A 6 172 7 A 7 196 8 A 8 198 9 A 9 174 10 A 10 196 .</description>
    </item>
    
    <item>
      <title>R: dplyr - Ordering by count after multiple column group_by</title>
      <link>https://markhneedham.com/blog/2014/11/09/r-dplyr-ordering-by-count-after-multiple-column-group_by/</link>
      <pubDate>Sun, 09 Nov 2014 09:30:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/09/r-dplyr-ordering-by-count-after-multiple-column-group_by/</guid>
      <description>library(dplyr) data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number, sort = TRUE) Source: local data frame [260 x 3] Groups: letter letter number n 1 A 4 205 2 A 9 201 3 A 3 197 4 A 1 195 5 A 10 191 6 A 2 189 7 A 8 184 8 A 7 183 9 A 5 181 10 A 6 173 .</description>
    </item>
    
    <item>
      <title>R: Refactoring to dplyr</title>
      <link>https://markhneedham.com/blog/2014/11/09/r-refactoring-to-dplyr/</link>
      <pubDate>Sun, 09 Nov 2014 00:11:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/09/r-refactoring-to-dplyr/</guid>
      <description>library(dplyr) data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data[1:5,] letter number 1 R 7 2 Q 3 3 B 8 4 R 3 5 U 2 &amp;gt; data %&amp;gt;% head(5) letter number 1 R 7 2 Q 3 3 B 8 4 R 3 5 U 2 &amp;gt; data[order(-(data$number)),][1:5,] letter number 14 H 10 17 G 10 63 L 10 66 W 10 73 R 10 &amp;gt; data %&amp;gt;% arrange(desc(number)) %&amp;gt;% head(5) letter number 1 H 10 2 G 10 3 L 10 4 W 10 5 R 10 &amp;gt; length(data[,1]) [1] 50000 &amp;gt; data %&amp;gt;% count() Source: local data frame [1 x 1] n 1 50000 &amp;gt; length(subset(data, number == 1)[, 1]) [1] 4928 &amp;gt; data %&amp;gt;% filter(number == 1) %&amp;gt;% count() Source: local data frame [1 x 1] n 1 4928 &amp;gt; aggregate(data, by= list(data$number), function(x) length(x)) Group.</description>
    </item>
    
    <item>
      <title>R: dplyr - Group by field dynamically (&#39;regroup&#39; is deprecated / no applicable method for &#39;as.lazy&#39; applied to an object of class &#34;list&#34; )</title>
      <link>https://markhneedham.com/blog/2014/11/08/r-dplyr-group-by-field-dynamically-regroup-is-deprecated-no-applicable-method-for-as-lazy-applied-to-an-object-of-class-list/</link>
      <pubDate>Sat, 08 Nov 2014 22:29:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/08/r-dplyr-group-by-field-dynamically-regroup-is-deprecated-no-applicable-method-for-as-lazy-applied-to-an-object-of-class-list/</guid>
      <description>library(dplyr) groupBy = function(df, field) { df %.% regroup(list(field)) %.% summarise(n = n()) } &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; groupBy(data, &amp;#39;letter&amp;#39;) %&amp;gt;% head(5) Source: local data frame [5 x 2] letter n 1 A 1951 2 B 1903 3 C 1954 4 D 1923 5 E 1886 Warning messages: 1: %.% is deprecated. Please use %&amp;gt;% 2: %.</description>
    </item>
    
    <item>
      <title>R: Joining multiple data frames</title>
      <link>https://markhneedham.com/blog/2014/11/07/r-joining-multiple-data-frames/</link>
      <pubDate>Fri, 07 Nov 2014 01:29:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/07/r-joining-multiple-data-frames/</guid>
      <description>df &amp;lt;- read.csv(&amp;#39;http://www.football-data.co.uk/mmz4281/1314/E0.csv&amp;#39;) # munge data into format compatible with glm function df &amp;lt;- apply(df, 1, function(row){ data.frame(team=c(row[&amp;#39;HomeTeam&amp;#39;], row[&amp;#39;AwayTeam&amp;#39;]), opponent=c(row[&amp;#39;AwayTeam&amp;#39;], row[&amp;#39;HomeTeam&amp;#39;]), goals=c(row[&amp;#39;FTHG&amp;#39;], row[&amp;#39;FTAG&amp;#39;]), home=c(1, 0)) }) df &amp;lt;- do.call(rbind, df) &amp;gt; library(dplyr) &amp;gt; df %&amp;gt;% select(HomeTeam, AwayTeam, FTHG, FTAG) %&amp;gt;% head(1) HomeTeam AwayTeam FTHG FTAG 1 Arsenal Aston Villa 1 3~~~ &amp;lt;p&amp;gt;And we want to get it to look like this:&amp;lt;/p&amp;gt; ~~~r &amp;gt; head(df, 2) team opponent goals home HomeTeam Arsenal Aston Villa 1 1 AwayTeam Aston Villa Arsenal 3 0 df %&amp;gt;% select(team = HomeTeam, opponent = AwayTeam, goals = FTHG) %&amp;gt;% mutate(home = 1) df %&amp;gt;% select(team = AwayTeam, opponent = HomeTeam, goals = FTAG) %&amp;gt;% mutate(home = 0) # load data into data.</description>
    </item>
    
    <item>
      <title>R: Converting a named vector to a data frame</title>
      <link>https://markhneedham.com/blog/2014/10/31/r-converting-a-named-vector-to-a-data-frame/</link>
      <pubDate>Fri, 31 Oct 2014 23:47:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/31/r-converting-a-named-vector-to-a-data-frame/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; data %&amp;gt;% arrange(desc(times)) %&amp;gt;% head(10) p.name other.name times 1 Amit Nandi Anish Mohammed 51 2 Amit Nandi Enzo Martoglio 49 3 louis zheng 46 4 louis Raja Kolli 45 5 Raja Kolli Enzo Martoglio 43 6 Amit Nandi Raja Kolli 42 7 zheng Anish Mohammed 42 8 Raja Kolli Rohit 41 9 Amit Nandi zheng 40 10 louis Rohit 40 &amp;gt; length(data[,1]) [1] 985664 g = graph.data.frame(data, directed = F) pr = page.</description>
    </item>
    
    <item>
      <title>hdiutil: could not access / create failed - Operation canceled</title>
      <link>https://markhneedham.com/blog/2014/10/31/hdiutil-could-not-access-create-failed-operation-canceled/</link>
      <pubDate>Fri, 31 Oct 2014 09:45:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/31/hdiutil-could-not-access-create-failed-operation-canceled/</guid>
      <description>$ hdiutil create -volname &amp;#34;DemoBench&amp;#34; -size 100m -srcfolder dmg/ -ov -format UDZO pack.temp.dmg ...could not access /Volumes/DemoBench/DemoBench.app/Contents/Resources/app/database-agent.jar - Operation canceled hdiutil: create failed - Operation canceled $ hdiutil create -volname &amp;#34;DemoBench&amp;#34; -size 150m -srcfolder dmg/ -ov -format UDZO pack.temp.dmg .................................................................................................... .......................................................................... created: /Users/markneedham/projects/neo-technology/quality-tasks/park-bench/database-agent-desktop/target/pack.temp.dmg </description>
    </item>
    
    <item>
      <title>Data Modelling: The Thin Model</title>
      <link>https://markhneedham.com/blog/2014/10/27/data-modelling-the-thin-model/</link>
      <pubDate>Mon, 27 Oct 2014 06:55:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/27/data-modelling-the-thin-model/</guid>
      <description>While this is syntactically okay, when we revisited those entities asking, What else is memorable here?the users had lots to say.
When there was flesh on the bones, the uncertainty abated and the session took a positive course.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Avoiding the Eager</title>
      <link>https://markhneedham.com/blog/2014/10/23/neo4j-cypher-avoiding-the-eager/</link>
      <pubDate>Thu, 23 Oct 2014 05:56:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/23/neo4j-cypher-avoiding-the-eager/</guid>
      <description>That was not related to commit sizes, so it happened even with PERIODIC COMMIT of small batches.
That is where the “pull in all data” happens.
$ head -n 2 data/customerDb.csv OrderID,CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry,CustomerID,CustomerCompanyName,ContactName,ContactTitle,Address,City,Region,PostalCode,Country,Phone,Fax,EmployeeID,LastName,FirstName,Title,TitleOfCourtesy,BirthDate,HireDate,Address,City,Region,PostalCode,Country,HomePhone,Extension,Photo,Notes,ReportsTo,PhotoPath,OrderID,ProductID,UnitPrice,Quantity,Discount,ProductID,ProductName,SupplierID,CategoryID,QuantityPerUnit,UnitPrice,UnitsInStock,UnitsOnOrder,ReorderLevel,Discontinued,SupplierID,SupplierCompanyName,ContactName,ContactTitle,Address,City,Region,PostalCode,Country,Phone,Fax,HomePage,CategoryID,CategoryName,Description,Picture 10248,VINET,5,1996-07-04,1996-08-01,1996-07-16,3,32.38,Vins et alcools Chevalier,59 rue de l&amp;#39;Abbaye,Reims,,51100,France,VINET,Vins et alcools Chevalier,Paul Henriot,Accounting Manager,59 rue de l&amp;#39;Abbaye,Reims,,51100,France,26.47.15.10,26.47.15.11,5,Buchanan,Steven,Sales Manager,Mr.,1955-03-04,1993-10-17,14 Garrett Hill,London,,SW1 8JR,UK,(71) 555-4848,3453,\x,&amp;#34;Steven Buchanan graduated from St. Andrews University, Scotland, with a BSC degree in 1976. Upon joining the company as a sales representative in 1992, he spent 6 months in an orientation program at the Seattle office and then returned to his permanent post in London.</description>
    </item>
    
    <item>
      <title>Neo4j: Modelling sub types</title>
      <link>https://markhneedham.com/blog/2014/10/20/neo4j-modelling-sub-types/</link>
      <pubDate>Mon, 20 Oct 2014 23:08:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/20/neo4j-modelling-sub-types/</guid>
      <description>LOAD CSV WITH HEADERS FROM &amp;quot;file:/Users/markneedham/projects/neo4j-subtypes/data/dogs.csv&amp;quot; AS line MERGE (animalType:AnimalType {name: &amp;quot;Dog&amp;quot;}) MERGE (breedGroup:BreedGroup {name: line.BreedGroup}) MERGE (breed:Breed {name: line.PrimaryBreed}) MERGE (animal:Animal {id: line.TagIdentity, primaryColour: line.PrimaryColour, size: line.Size}) MERGE (animalType)&amp;lt;-[:PARENT]-(breedGroup) MERGE (breedGroup)&amp;lt;-[:PARENT]-(breed) MERGE (breed)&amp;lt;-[:PARENT]-(animal) MATCH (animalType:AnimalType)&amp;lt;-[:PARENT*]-(animal) RETURN animalType, COUNT(*) AS animals ORDER BY animals DESC ==&amp;gt; +--------------------------------+ ==&amp;gt; | animalType | animals | ==&amp;gt; +--------------------------------+ ==&amp;gt; | Node[89]{name:&amp;#34;Dog&amp;#34;} | 131 | ==&amp;gt; +--------------------------------+ ==&amp;gt; 1 row MATCH path = (animalType:AnimalType)&amp;lt;-[:PARENT]-(breedGroup)&amp;lt;-[:PARENT*]-(animal) RETURN [node IN nodes(path) | node.</description>
    </item>
    
    <item>
      <title>Python: Converting a date string to timestamp</title>
      <link>https://markhneedham.com/blog/2014/10/20/python-converting-a-date-string-to-timestamp/</link>
      <pubDate>Mon, 20 Oct 2014 15:53:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/20/python-converting-a-date-string-to-timestamp/</guid>
      <description>date_text = &amp;#34;13SEP2014&amp;#34; import datetime date_text = &amp;#34;13SEP2014&amp;#34; date = datetime.datetime.strptime(date_text, &amp;#34;%d%b%Y&amp;#34;) print(date) $ python dates.py 2014-09-13 00:00:00 import datetime import calendar date_text = &amp;#34;13SEP2014&amp;#34; date = datetime.datetime.strptime(date_text, &amp;#34;%d%b%Y&amp;#34;) print(date) print(calendar.timegm(date.utctimetuple())) $ python dates.py 2014-09-13 00:00:00 1410566400 </description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - The sneaky null character</title>
      <link>https://markhneedham.com/blog/2014/10/18/neo4j-load-csv-the-sneaky-null-character/</link>
      <pubDate>Sat, 18 Oct 2014 10:49:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/18/neo4j-load-csv-the-sneaky-null-character/</guid>
      <description>$ cat foo.csv foo,bar,baz 1,2,3 load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/foo.csv&amp;quot; AS line RETURN line.foo, line.bar, line.bar = &amp;quot;2&amp;quot; ==&amp;gt; +--------------------------------------+ ==&amp;gt; | line.foo | line.bar | line.bar = &amp;#34;2&amp;#34; | ==&amp;gt; +--------------------------------------+ ==&amp;gt; | &amp;lt;null&amp;gt; | &amp;#34;2&amp;#34; | false | ==&amp;gt; +--------------------------------------+ ==&amp;gt; 1 row load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/foo.csv&amp;quot; AS line RETURN line.foo, line.bar, line.bar = &amp;quot;2&amp;quot;, length(line.bar) ==&amp;gt; +---------------------------------------------------------+ ==&amp;gt; | line.foo | line.bar | line.bar = &amp;#34;2&amp;#34; | length(line.</description>
    </item>
    
    <item>
      <title>R: Linear models with the lm function, NA values and Collinearity</title>
      <link>https://markhneedham.com/blog/2014/10/18/r-linear-models-with-the-lm-function-na-values-and-collinearity/</link>
      <pubDate>Sat, 18 Oct 2014 06:35:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/18/r-linear-models-with-the-lm-function-na-values-and-collinearity/</guid>
      <description>library(datasets); data(swiss); require(stats); require(graphics) z &amp;lt;- swiss$Agriculture + swiss$Education fit = lm(Fertility ~ . + z, data = swiss) &amp;gt; alias(fit) Model : Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality + z Complete : (Intercept) Agriculture Examination Education Catholic Infant.Mortality z 0 1 0 1 0 0 &amp;gt; require(dplyr) &amp;gt; summary(lm(Fertility ~ . + z, data = swiss))$coefficients Estimate Std. Error t value Pr(&amp;gt;|t|) (Intercept) 66.9151817 10.</description>
    </item>
    
    <item>
      <title>The Hard Thing About Hard Things - Ben Horowitz: Book Review</title>
      <link>https://markhneedham.com/blog/2014/10/13/the-hard-thing-about-hard-things-ben-horowitz-book-review/</link>
      <pubDate>Mon, 13 Oct 2014 23:59:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/13/the-hard-thing-about-hard-things-ben-horowitz-book-review/</guid>
      <description>Horowitz suggests that he used to be too positive and would shield bad news from his employees as he thought he&amp;rsquo;d make the problem worse by transferring the burden onto them.
He came to the realisation that this was counter productive since he often wasn&amp;rsquo;t the best placed person to fix a problem e.g. if it was a problem with the product then the engineering team needed to know so they could write the code to fix it.</description>
    </item>
    
    <item>
      <title>Lessons from running Neo4j based &#39;hackathons&#39;</title>
      <link>https://markhneedham.com/blog/2014/10/11/lessons-from-running-neo4j-based-hackathons/</link>
      <pubDate>Sat, 11 Oct 2014 10:52:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/11/lessons-from-running-neo4j-based-hackathons/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Conceptual Model vs Graph Model</title>
      <link>https://markhneedham.com/blog/2014/10/06/conceptual-model-vs-graph-model/</link>
      <pubDate>Mon, 06 Oct 2014 07:11:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/06/conceptual-model-vs-graph-model/</guid>
      <description>CREATE (ian:Person {name: &amp;quot;Ian&amp;quot;}) CREATE (alan:Person {name: &amp;quot;Alan&amp;quot;}) CREATE (gg:Person:Author {name: &amp;quot;Graham Greene&amp;quot;}) CREATE (jlc:Person:Author {name: &amp;quot;John Le Carre&amp;quot;}) CREATE (omih:Book {name: &amp;quot;Our Man in Havana&amp;quot;}) CREATE (ttsp:Book {name: &amp;quot;Tinker Tailor, Soldier, Spy&amp;quot;}) CREATE (gg)-[:WROTE]-&amp;gt;(omih) CREATE (jlc)-[:WROTE]-&amp;gt;(ttsp) CREATE (ian)-[:PURCHASED {date: &amp;quot;05-02-2011&amp;quot;}]-&amp;gt;(ttsp) CREATE (ian)-[:PURCHASED {date: &amp;quot;08-09-2011&amp;quot;}]-&amp;gt;(omih) CREATE (alan)-[:PURCHASED {date: &amp;quot;05-07-2014&amp;quot;}]-&amp;gt;(ttsp) </description>
    </item>
    
    <item>
      <title>R: A first attempt at linear regression</title>
      <link>https://markhneedham.com/blog/2014/09/30/r-a-first-attempt-at-linear-regression/</link>
      <pubDate>Tue, 30 Sep 2014 22:20:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/30/r-a-first-attempt-at-linear-regression/</guid>
      <description>library(RNeo4j) officeEventsQuery = &amp;#34;MATCH (g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;})-[:HOSTED_EVENT]-&amp;gt;(event)&amp;lt;-[:TO]-({response: &amp;#39;yes&amp;#39;})&amp;lt;-[:RSVPD]-(), (event)-[:HELD_AT]-&amp;gt;(venue) WHERE (event.time + event.utc_offset) &amp;lt; timestamp() AND venue.name IN [\&amp;#34;Neo Technology\&amp;#34;, \&amp;#34;OpenCredo\&amp;#34;] RETURN event.time + event.utc_offset AS eventTime,event.announced_at AS announcedAt, event.name, COUNT(*) AS rsvps&amp;#34; events = subset(cypher(graph, officeEventsQuery), !is.na(announcedAt)) events$eventTime &amp;lt;- timestampToDate(events$eventTime) events$day &amp;lt;- format(events$eventTime, &amp;#34;%A&amp;#34;) events$monthYear &amp;lt;- format(events$eventTime, &amp;#34;%m-%Y&amp;#34;) events$month &amp;lt;- format(events$eventTime, &amp;#34;%m&amp;#34;) events$year &amp;lt;- format(events$eventTime, &amp;#34;%Y&amp;#34;) events$announcedAt&amp;lt;- timestampToDate(events$announcedAt) events$timeDiff = as.numeric(events$eventTime - events$announcedAt, units = &amp;#34;days&amp;#34;) &amp;gt; head(events) eventTime announcedAt event.</description>
    </item>
    
    <item>
      <title>Neo4j: Generic/Vague relationship names</title>
      <link>https://markhneedham.com/blog/2014/09/30/neo4j-genericvague-relationship-names/</link>
      <pubDate>Tue, 30 Sep 2014 16:47:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/30/neo4j-genericvague-relationship-names/</guid>
      <description>Using a generic relationship type and then filtering by end node label 50%ile: 6.0 75%ile: 6.0 99%ile: 402.60999999999825 Using a generic relationship type and then filtering by relationship property 50%ile: 21.0 75%ile: 22.0 99%ile: 504.85999999999785 Using a generic relationship type and then filtering by end node label 50%ile: 4.0 75%ile: 4.0 99%ile: 145.65999999999931 Using a specific relationship type 50%ile: 0.0 75%ile: 1.0 99%ile: 25.749999999999872 Using a specific relationship typeneo4j-sh (?)$ profile match (n) where id(n) = 0 match (n)-[:HAS_ADDRESS]-&amp;gt;() return count(n); +----------+ | count(n) | +----------+ | 10000 | +----------+ 1 row ColumnFilter | +EagerAggregation | +SimplePatternMatcher | +NodeByIdOrEmpty +----------------------+-------+--------+-----------------------------+-----------------------+ | Operator | Rows | DbHits | Identifiers | Other | +----------------------+-------+--------+-----------------------------+-----------------------+ | ColumnFilter | 1 | 0 | | keep columns count(n) | | EagerAggregation | 1 | 0 | | | | SimplePatternMatcher | 10000 | 10000 | n, UNNAMED53, UNNAMED35 | | | NodeByIdOrEmpty | 1 | 1 | n, n | { AUTOINT0} | +----------------------+-------+--------+-----------------------------+-----------------------+ Total database accesses: 10001 Using a generic relationship type and then filtering by end node labelneo4j-sh (?</description>
    </item>
    
    <item>
      <title>PostgreSQL: ERROR:  column does not exist</title>
      <link>https://markhneedham.com/blog/2014/09/29/postgresql-error-column-does-not-exist/</link>
      <pubDate>Mon, 29 Sep 2014 22:40:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/postgresql-error-column-does-not-exist/</guid>
      <description>postgres=# select * from employees limit 1; EmployeeID | LastName | FirstName | Title | TitleOfCourtesy | BirthDate | HireDate | Address | City | Region | PostalCode | Country | HomePhone | Extension | Photo | Notes | ReportsTo | PhotoPath ------------+----------+-----------+----------------------+-----------------+------------+------------+-----------------------------+---------+--------+------------+---------+----------------+-----------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+--------------------------------------  1 | Davolio | Nancy | Sales Representative | Ms. | 1948-12-08 | 1992-05-01 | 507 - 20th Ave. E.\nApt. 2A | Seattle | WA | 98122 | USA | (206) 555-9857 | 5467 | \x | Education includes a BA in psychology from Colorado State University in 1970.</description>
    </item>
    
    <item>
      <title>R: Deriving a new data frame column based on containing string</title>
      <link>https://markhneedham.com/blog/2014/09/29/r-deriving-a-new-data-frame-column-based-on-containing-string/</link>
      <pubDate>Mon, 29 Sep 2014 21:37:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/r-deriving-a-new-data-frame-column-based-on-containing-string/</guid>
      <description>&amp;gt; x = data.frame(name = c(&amp;#34;Java Hackathon&amp;#34;, &amp;#34;Intro to Graphs&amp;#34;, &amp;#34;Hands on Cypher&amp;#34;)) &amp;gt; x name 1 Java Hackathon 2 Intro to Graphs 3 Hands on Cypher &amp;gt; grepl(&amp;#34;Hackathon|Hands on|Hands On&amp;#34;, x$name) [1] TRUE FALSE TRUE x$practical = grepl(&amp;#34;Hackathon|Hands on|Hands On&amp;#34;, x$name) &amp;gt; x name practical 1 Java Hackathon TRUE 2 Intro to Graphs FALSE 3 Hands on Cypher TRUE </description>
    </item>
    
    <item>
      <title>R: Filtering data frames by column type (&#39;x&#39; must be numeric)</title>
      <link>https://markhneedham.com/blog/2014/09/29/r-filtering-data-frames-by-column-type-x-must-be-numeric/</link>
      <pubDate>Mon, 29 Sep 2014 05:46:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/r-filtering-data-frames-by-column-type-x-must-be-numeric/</guid>
      <description>&amp;gt; install.packages(&amp;#34;ISLR&amp;#34;) &amp;gt; library(ISLR) &amp;gt; head(Carseats) Sales CompPrice Income Advertising Population Price ShelveLoc Age Education Urban US 1 9.50 138 73 11 276 120 Bad 42 17 Yes Yes 2 11.22 111 48 16 260 83 Good 65 10 Yes Yes 3 10.06 113 35 10 269 80 Medium 59 12 Yes Yes 4 7.40 117 100 4 466 97 Medium 55 14 Yes Yes 5 4.15 141 64 3 340 128 Bad 38 13 Yes No 6 10.</description>
    </item>
    
    <item>
      <title>Neo4j: COLLECTing multiple values (Too many parameters for function &#39;collect&#39;)</title>
      <link>https://markhneedham.com/blog/2014/09/26/neo4j-collecting-multiple-values-too-many-parameters-for-function-collect/</link>
      <pubDate>Fri, 26 Sep 2014 20:46:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/26/neo4j-collecting-multiple-values-too-many-parameters-for-function-collect/</guid>
      <description>create (p:Person {name: &amp;quot;Mark&amp;quot;}) create (e1:Event {name: &amp;quot;Event1&amp;quot;, timestamp: 1234}) create (e2:Event {name: &amp;quot;Event2&amp;quot;, timestamp: 4567}) create (p)-[:EVENT]-&amp;gt;(e1) create (p)-[:EVENT]-&amp;gt;(e2) $ MATCH (p:Person)-[:EVENT]-&amp;gt;(e) &amp;gt; RETURN p, COLLECT(e.name); +--------------------------------------------+ | p | COLLECT(e.name) | +--------------------------------------------+ | Node[0]{name:&amp;quot;Mark&amp;quot;} | [&amp;quot;Event1&amp;quot;,&amp;quot;Event2&amp;quot;] | +--------------------------------------------+ 1 row MATCH (p:Person)-[:EVENT]-&amp;gt;(e) RETURN p, COLLECT(e.name, e.timestamp) SyntaxException: Too many parameters for function &amp;#39;collect&amp;#39; (line 2, column 11) &amp;#34;RETURN p, COLLECT(e.name, e.timestamp)&amp;#34; ^ $ MATCH (p:Person)-[:EVENT]-&amp;gt;(e) &amp;gt; RETURN p, COLLECT([e.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Column is null</title>
      <link>https://markhneedham.com/blog/2014/09/24/neo4j-load-csv-column-is-null/</link>
      <pubDate>Wed, 24 Sep 2014 20:21:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/24/neo4j-load-csv-column-is-null/</guid>
      <description>$ cat ~/Downloads/dodgy.csv userId,movieId 1,2 $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.csv&amp;quot; as line return line; +----------------------------------+ | line | +----------------------------------+ | {userId -&amp;gt; &amp;quot;1&amp;quot;, movieId -&amp;gt; &amp;quot;2&amp;quot;} | +----------------------------------+ 1 row $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.csv&amp;quot; as line return line.userId; +-------------+ | line.userId | +-------------+ | &amp;lt;null&amp;gt; | +-------------+ 1 row $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.csv&amp;quot; as line return line.movieId; +--------------+ | line.movieId | +--------------+ | &amp;quot;2&amp;quot; | +--------------+ 1 row $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting multiple variables on a line chart</title>
      <link>https://markhneedham.com/blog/2014/09/16/r-ggplot-plotting-multiple-variables-on-a-line-chart/</link>
      <pubDate>Tue, 16 Sep 2014 16:59:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/16/r-ggplot-plotting-multiple-variables-on-a-line-chart/</guid>
      <description>&amp;gt; head(byWeek) Source: local data frame [6 x 2] week n 1 2011-06-02 8 2 2011-06-09 4 3 2011-06-30 2 4 2011-07-14 1 5 2011-07-21 1 6 2011-08-18 1 library(zoo) joinsByWeek = data.frame(actual = byWeek$n, week = byWeek$week, rolling = rollmean(byWeek$n, 4, fill = NA, align=c(&amp;#34;right&amp;#34;))) &amp;gt; head(joinsByWeek, 10) actual week rolling 1 8 2011-06-02 NA 2 4 2011-06-09 NA 3 2 2011-06-30 NA 4 1 2011-07-14 3.75 5 1 2011-07-21 2.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting a single variable line chart (geom_line requires the following missing aesthetics: y)</title>
      <link>https://markhneedham.com/blog/2014/09/13/r-ggplot-plotting-a-single-variable-line-chart-geom_line-requires-the-following-missing-aesthetics-y/</link>
      <pubDate>Sat, 13 Sep 2014 11:41:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/13/r-ggplot-plotting-a-single-variable-line-chart-geom_line-requires-the-following-missing-aesthetics-y/</guid>
      <description>&amp;gt; rollmean(byWeek$n, 4) [1] 3.75 2.00 1.25 1.00 1.25 1.25 1.75 1.75 1.75 2.50 2.25 2.75 3.50 2.75 2.75 [16] 2.25 1.50 1.50 2.00 2.00 2.00 2.00 1.25 1.50 2.25 2.50 3.00 3.25 2.75 4.00 [31] 4.25 5.25 7.50 6.50 5.75 5.00 3.50 4.00 5.75 6.25 6.25 6.00 5.25 6.25 7.25 [46] 7.75 7.00 4.75 2.75 1.75 2.00 4.00 5.25 5.50 11.50 11.50 12.75 14.50 12.50 11.75 [61] 11.00 9.25 5.</description>
    </item>
    
    <item>
      <title>R: Calculating rolling or moving averages</title>
      <link>https://markhneedham.com/blog/2014/09/13/r-calculating-rolling-or-moving-averages/</link>
      <pubDate>Sat, 13 Sep 2014 08:15:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/13/r-calculating-rolling-or-moving-averages/</guid>
      <description>mav &amp;lt;- function(x,n=5){filter(x,rep(1/n,n), sides=2)} &amp;gt; mav(c(4,5,4,6), 3) Time Series: Start = 1 End = 4 Frequency = 1 [1] NA 4.333333 5.000000 NA sides	for convolution filters only. If sides = 1 the filter coefficients are for past values only; if sides = 2 they are centred around lag 0. In this case the length of the filter should be odd, but if it is even, more of the filter is forward in time than backward.</description>
    </item>
    
    <item>
      <title>R: ggplot - Cumulative frequency graphs</title>
      <link>https://markhneedham.com/blog/2014/08/31/r-ggplot-cumulative-frequency-graphs/</link>
      <pubDate>Sun, 31 Aug 2014 22:10:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/31/r-ggplot-cumulative-frequency-graphs/</guid>
      <description>&amp;gt; head(meetupMembers) joinTimestamp joinDate monthYear quarterYear week dayMonthYear 1 1.376572e+12 2013-08-15 13:13:40 2013-08-01 2013-07-01 2013-08-15 2013-08-15 2 1.379491e+12 2013-09-18 07:55:11 2013-09-01 2013-07-01 2013-09-12 2013-09-18 3 1.349454e+12 2012-10-05 16:28:04 2012-10-01 2012-10-01 2012-10-04 2012-10-05 4 1.383127e+12 2013-10-30 09:59:03 2013-10-01 2013-10-01 2013-10-24 2013-10-30 5 1.372239e+12 2013-06-26 09:27:40 2013-06-01 2013-04-01 2013-06-20 2013-06-26 6 1.330295e+12 2012-02-26 22:27:00 2012-02-01 2012-01-01 2012-02-23 2012-02-26 library(dplyr) &amp;gt; head(meetupMembers %.% group_by(dayMonthYear) %.% summarise(n = n())) Source: local data frame [6 x 2] dayMonthYear n 1 2011-06-05 7 2 2011-06-07 1 3 2011-06-10 1 4 2011-06-12 1 5 2011-06-13 1 6 2011-06-15 1 ggplot(data = meetupMembers %.</description>
    </item>
    
    <item>
      <title>R: dplyr - group_by dynamic or programmatic field / variable (Error: index out of bounds)</title>
      <link>https://markhneedham.com/blog/2014/08/29/r-dplyr-group_by-dynamic-or-programmatic-field-variable-error-index-out-of-bounds/</link>
      <pubDate>Fri, 29 Aug 2014 09:13:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/29/r-dplyr-group_by-dynamic-or-programmatic-field-variable-error-index-out-of-bounds/</guid>
      <description>library(RNeo4j) library(zoo) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;, tz = &amp;#34;GMT&amp;#34;) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinTimestamp&amp;#34; meetupMembers = cypher(graph, query) meetupMembers$joinDate &amp;lt;- timestampToDate(meetupMembers$joinTimestamp) meetupMembers$monthYear &amp;lt;- as.Date(as.yearmon(meetupMembers$joinDate)) meetupMembers$quarterYear &amp;lt;- as.Date(as.yearqtr(meetupMembers$joinDate)) meetupMembers %.% group_by(week) %.% summarise(n = n()) meetupMembers %.% group_by(monthYear) %.% summarise(n = n()) meetupMembers %.% group_by(quarterYear) %.% summarise(n = n()) groupMembersBy = function(field) { meetupMembers %.% group_by(field) %.% summarise(n = n()) } &amp;gt; groupMembersBy(&amp;#34;week&amp;#34;) Show Traceback Rerun with Debug Error: index out of bounds groupMembersBy = function(field) { meetupMembers %.</description>
    </item>
    
    <item>
      <title>R: Grouping by week, month, quarter</title>
      <link>https://markhneedham.com/blog/2014/08/29/r-grouping-by-week-month-quarter/</link>
      <pubDate>Fri, 29 Aug 2014 00:25:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/29/r-grouping-by-week-month-quarter/</guid>
      <description>library(RNeo4j) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinTimestamp&amp;#34; meetupMembers = cypher(graph, query) &amp;gt; head(meetupMembers) joinTimestamp 1 1.376572e+12 2 1.379491e+12 3 1.349454e+12 4 1.383127e+12 5 1.372239e+12 6 1.330295e+12 timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;, tz = &amp;#34;GMT&amp;#34;) meetupMembers$joinDate &amp;lt;- timestampToDate(meetupMembers$joinTimestamp) &amp;gt; head(meetupMembers) joinTimestamp joinDate 1 1.376572e+12 2013-08-15 13:13:40 2 1.379491e+12 2013-09-18 07:55:11 3 1.349454e+12 2012-10-05 16:28:04 4 1.383127e+12 2013-10-30 09:59:03 5 1.372239e+12 2013-06-26 09:27:40 6 1.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Handling empty columns</title>
      <link>https://markhneedham.com/blog/2014/08/22/neo4j-load-csv-handling-empty-columns/</link>
      <pubDate>Fri, 22 Aug 2014 12:51:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/22/neo4j-load-csv-handling-empty-columns/</guid>
      <description>$ cat /tmp/foo.csv a,b,c mark,, load csv with headers from &amp;quot;file:/tmp/foo.csv&amp;quot; as row MERGE (p:Person {a: row.a}) SET p.b = row.b, p.c = row.c RETURN p ==&amp;gt; +-----------------------------+ ==&amp;gt; | p | ==&amp;gt; +-----------------------------+ ==&amp;gt; | Node[5]{a:&amp;quot;mark&amp;quot;,b:&amp;quot;&amp;quot;,c:&amp;quot;&amp;quot;} | ==&amp;gt; +-----------------------------+ ==&amp;gt; 1 row ==&amp;gt; Nodes created: 1 ==&amp;gt; Properties set: 3 ==&amp;gt; Labels added: 1 ==&amp;gt; 26 ms load csv with headers from &amp;quot;file:/tmp/foo.csv&amp;quot; as row MERGE (p:Person {a: row.a}) FOREACH(ignoreMe IN CASE WHEN trim(row.</description>
    </item>
    
    <item>
      <title>R: Rook - Hello world example - &#39;Cannot find a suitable app in file&#39;</title>
      <link>https://markhneedham.com/blog/2014/08/22/r-rook-hello-world-example-cannot-find-a-suitable-app-in-file/</link>
      <pubDate>Fri, 22 Aug 2014 11:05:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/22/r-rook-hello-world-example-cannot-find-a-suitable-app-in-file/</guid>
      <description>library(Rook) s &amp;lt;- Rhttpd$new() s$add(name=&amp;#39;MyApp&amp;#39;,app=&amp;#39;helloworld.R&amp;#39;) s$start() s$browse(&amp;#34;MyApp&amp;#34;) function(env){ list( status=200, headers = list( &amp;#39;Content-Type&amp;#39; = &amp;#39;text/html&amp;#39; ), body = paste(&amp;#39;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&amp;#39;) ) } &amp;gt; s$add(name=&amp;#39;MyApp&amp;#39;,app=&amp;#39;helloworld.R&amp;#39;) Error in .Object$initialize(...) : Cannot find a suitable app in file helloworld.R app &amp;lt;- function(env){ list( status=200, headers = list( &amp;#39;Content-Type&amp;#39; = &amp;#39;text/html&amp;#39; ), body = paste(&amp;#39;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&amp;#39;) ) } &amp;gt; s Server started on 127.0.0.1:27120 [1] MyApp http://127.0.0.1:27120/custom/MyApp Call browse() with an index number or name to run an application.</description>
    </item>
    
    <item>
      <title>Ruby: Create and share Google Drive Spreadsheet</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-create-and-share-google-drive-spreadsheet/</link>
      <pubDate>Sun, 17 Aug 2014 21:42:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-create-and-share-google-drive-spreadsheet/</guid>
      <description>require &amp;#39;sinatra&amp;#39; require &amp;#39;json&amp;#39; require &amp;#34;google_drive&amp;#34; require &amp;#39;google/api_client&amp;#39; CLIENT_ID = &amp;#39;my client id&amp;#39; CLIENT_SECRET = &amp;#39;my client secret&amp;#39; OAUTH_SCOPE = &amp;#39;https://www.googleapis.com/auth/drive https://docs.google.com/feeds/ https://docs.googleusercontent.com/ https://spreadsheets.google.com/feeds/&amp;#39; REDIRECT_URI = &amp;#39;http://localhost:9393/oauth2callback&amp;#39; helpers do def partial (template, locals = {}) haml(template, :layout =&amp;gt; false, :locals =&amp;gt; locals) end end enable :sessions get &amp;#39;/&amp;#39; do haml :index end configure do google_client = Google::APIClient.new google_client.authorization.client_id = CLIENT_ID google_client.authorization.client_secret = CLIENT_SECRET google_client.authorization.scope = OAUTH_SCOPE google_client.authorization.redirect_uri = REDIRECT_URI set :google_client, google_client set :google_client_driver, google_client.</description>
    </item>
    
    <item>
      <title>Ruby: Receive JSON in request body</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-receive-json-in-request-body/</link>
      <pubDate>Sun, 17 Aug 2014 12:21:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-receive-json-in-request-body/</guid>
      <description>require &amp;#39;sinatra&amp;#39; require &amp;#39;json&amp;#39; post &amp;#39;/somewhere/&amp;#39; do request.body.rewind request_payload = JSON.parse request.body.read p request_payload &amp;#34;win&amp;#34; end dummy.json{&amp;#34;i&amp;#34;: &amp;#34;am json&amp;#34;} $ curl -H &amp;#34;Content-Type: application/json&amp;#34; -XPOST http://localhost:9393/somewhere/ -d @dummy.json {&amp;#34;i&amp;#34;=&amp;gt;&amp;#34;am json&amp;#34;} </description>
    </item>
    
    <item>
      <title>Ruby: Google Drive - Error=BadAuthentication (GoogleDrive::AuthenticationError) Info=InvalidSecondFactor</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/</link>
      <pubDate>Sun, 17 Aug 2014 01:49:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/</guid>
      <description>require &amp;#34;rubygems&amp;#34; require &amp;#34;google_drive&amp;#34; session = GoogleDrive.login(&amp;#34;me@mydomain.com&amp;#34;, &amp;#34;mypassword&amp;#34;) /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive/session.rb:93:in `rescue in login&amp;#39;: Authentication failed for me@mydomain.com: Response code 403 for post https://www.google.com/accounts/ClientLogin: Error=BadAuthentication (GoogleDrive::AuthenticationError) Info=InvalidSecondFactor from /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive/session.rb:86:in `login&amp;#39; from /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive/session.rb:38:in `login&amp;#39; from /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive.rb:18:in `login&amp;#39; from src/gdoc.rb:15:in `&amp;lt;main&amp;gt;&amp;#39; require &amp;#34;rubygems&amp;#34; require &amp;#34;google_drive&amp;#34; session = GoogleDrive.login(&amp;#34;me@mydomain.com&amp;#34;, &amp;#34;tuceuttkvxbvrblf&amp;#34;) </description>
    </item>
    
    <item>
      <title>Where does r studio install packages/libraries?</title>
      <link>https://markhneedham.com/blog/2014/08/14/where-does-r-studio-install-packageslibraries/</link>
      <pubDate>Thu, 14 Aug 2014 10:24:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/14/where-does-r-studio-install-packageslibraries/</guid>
      <description>&amp;gt; .libPaths() [1] &amp;#34;/Library/Frameworks/R.framework/Versions/3.1/Resources/library&amp;#34; &amp;gt; list.files(&amp;#34;/Library/Frameworks/R.framework/Versions/3.1/Resources/library&amp;#34;) [1] &amp;#34;alr3&amp;#34; &amp;#34;assertthat&amp;#34; &amp;#34;base&amp;#34; &amp;#34;bitops&amp;#34; &amp;#34;boot&amp;#34; &amp;#34;brew&amp;#34; [7] &amp;#34;car&amp;#34; &amp;#34;class&amp;#34; &amp;#34;cluster&amp;#34; &amp;#34;codetools&amp;#34; &amp;#34;colorspace&amp;#34; &amp;#34;compiler&amp;#34; [13] &amp;#34;data.table&amp;#34; &amp;#34;datasets&amp;#34; &amp;#34;devtools&amp;#34; &amp;#34;dichromat&amp;#34; &amp;#34;digest&amp;#34; &amp;#34;dplyr&amp;#34; [19] &amp;#34;evaluate&amp;#34; &amp;#34;foreign&amp;#34; &amp;#34;formatR&amp;#34; &amp;#34;Formula&amp;#34; &amp;#34;gclus&amp;#34; &amp;#34;ggplot2&amp;#34; [25] &amp;#34;graphics&amp;#34; &amp;#34;grDevices&amp;#34; &amp;#34;grid&amp;#34; &amp;#34;gridExtra&amp;#34; &amp;#34;gtable&amp;#34; &amp;#34;hflights&amp;#34; [31] &amp;#34;highr&amp;#34; &amp;#34;Hmisc&amp;#34; &amp;#34;httr&amp;#34; &amp;#34;KernSmooth&amp;#34; &amp;#34;knitr&amp;#34; &amp;#34;labeling&amp;#34; [37] &amp;#34;Lahman&amp;#34; &amp;#34;lattice&amp;#34; &amp;#34;latticeExtra&amp;#34; &amp;#34;magrittr&amp;#34; &amp;#34;manipulate&amp;#34; &amp;#34;markdown&amp;#34; [43] &amp;#34;MASS&amp;#34; &amp;#34;Matrix&amp;#34; &amp;#34;memoise&amp;#34; &amp;#34;methods&amp;#34; &amp;#34;mgcv&amp;#34; &amp;#34;mime&amp;#34; [49] &amp;#34;munsell&amp;#34; &amp;#34;nlme&amp;#34; &amp;#34;nnet&amp;#34; &amp;#34;openintro&amp;#34; &amp;#34;parallel&amp;#34; &amp;#34;plotrix&amp;#34; [55] &amp;#34;plyr&amp;#34; &amp;#34;proto&amp;#34; &amp;#34;RColorBrewer&amp;#34; &amp;#34;Rcpp&amp;#34; &amp;#34;RCurl&amp;#34; &amp;#34;reshape2&amp;#34; [61] &amp;#34;RJSONIO&amp;#34; &amp;#34;RNeo4j&amp;#34; &amp;#34;Rook&amp;#34; &amp;#34;rpart&amp;#34; &amp;#34;rstudio&amp;#34; &amp;#34;scales&amp;#34; [67] &amp;#34;seriation&amp;#34; &amp;#34;spatial&amp;#34; &amp;#34;splines&amp;#34; &amp;#34;stats&amp;#34; &amp;#34;stats4&amp;#34; &amp;#34;stringr&amp;#34; [73] &amp;#34;survival&amp;#34; &amp;#34;swirl&amp;#34; &amp;#34;tcltk&amp;#34; &amp;#34;testthat&amp;#34; &amp;#34;tools&amp;#34; &amp;#34;translations&amp;#34; [79] &amp;#34;TSP&amp;#34; &amp;#34;utils&amp;#34; &amp;#34;whisker&amp;#34; &amp;#34;xts&amp;#34; &amp;#34;yaml&amp;#34; &amp;#34;zoo&amp;#34; $ cat /Library/Frameworks/R.</description>
    </item>
    
    <item>
      <title>R: Grouping by two variables</title>
      <link>https://markhneedham.com/blog/2014/08/11/r-grouping-by-two-variables/</link>
      <pubDate>Mon, 11 Aug 2014 16:47:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/11/r-grouping-by-two-variables/</guid>
      <description>&amp;gt; head(eventsOf2014, 20) eventTime event.name rsvps datetime day monthYear 16 1.393351e+12 Intro to Graphs 38 2014-02-25 18:00:00 Tuesday 02-2014 17 1.403635e+12 Intro to Graphs 44 2014-06-24 18:30:00 Tuesday 06-2014 19 1.404844e+12 Intro to Graphs 38 2014-07-08 18:30:00 Tuesday 07-2014 28 1.398796e+12 Intro to Graphs 45 2014-04-29 18:30:00 Tuesday 04-2014 31 1.395772e+12 Intro to Graphs 56 2014-03-25 18:30:00 Tuesday 03-2014 41 1.406054e+12 Intro to Graphs 12 2014-07-22 18:30:00 Tuesday 07-2014 49 1.</description>
    </item>
    
    <item>
      <title>4 types of user</title>
      <link>https://markhneedham.com/blog/2014/07/29/4-types-of-user/</link>
      <pubDate>Tue, 29 Jul 2014 19:07:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/29/4-types-of-user/</guid>
      <description></description>
    </item>
    
    <item>
      <title>R: ggplot  - Plotting back to back charts using facet_wrap</title>
      <link>https://markhneedham.com/blog/2014/07/25/r-ggplot-plotting-back-to-back-charts-using-facet_wrap/</link>
      <pubDate>Fri, 25 Jul 2014 21:57:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/25/r-ggplot-plotting-back-to-back-charts-using-facet_wrap/</guid>
      <description>timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;quot;1970-01-01&amp;quot;, tz = &amp;quot;GMT&amp;quot;) query = &amp;quot;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &#39;yes&#39;}) WITH e, COLLECT(response) AS yeses MATCH (e)&amp;lt;-[:TO]-(response {response: &#39;no&#39;})&amp;lt;-[:NEXT]-() WITH e, COLLECT(response) + yeses AS responses UNWIND responses AS response RETURN response.time AS time, e.time + e.utc_offset AS eventTime, response.response AS response&amp;quot; allRSVPs = cypher(graph, query) allRSVPs$time = timestampToDate(allRSVPs$time) allRSVPs$eventTime = timestampToDate(allRSVPs$eventTime) allRSVPs$difference = as.numeric(allRSVPs$eventTime - allRSVPs$time, units=&amp;quot;days&amp;quot;) &amp;gt; allRSVPs[1:10,] time eventTime response difference 1 2014-06-13 21:49:20 2014-07-22 18:30:00 no 38.</description>
    </item>
    
    <item>
      <title>Java: Determining the status of data import using kill signals</title>
      <link>https://markhneedham.com/blog/2014/07/23/java-determining-the-status-of-data-import-using-kill-signals/</link>
      <pubDate>Wed, 23 Jul 2014 22:20:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/23/java-determining-the-status-of-data-import-using-kill-signals/</guid>
      <description>class Kill3Handler implements SignalHandler { private AtomicInteger linesProcessed; private AtomicReference&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; lastRowProcessed; public Kill3Handler( AtomicInteger linesProcessed, AtomicReference&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; lastRowProcessed ) { this.linesProcessed = linesProcessed; this.lastRowProcessed = lastRowProcessed; } @Override public void handle( Signal signal ) { System.out.println(&amp;#34;Last Line Processed: &amp;#34; + linesProcessed.get() + &amp;#34; &amp;#34; + lastRowProcessed.get()); } } AtomicInteger linesProcessed = new AtomicInteger( 0 ); AtomicReference&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; lastRowProcessed = new AtomicReference&amp;lt;&amp;gt;( ); Kill3Handler kill3Handler = new Kill3Handler( linesProcessed, lastRowProcessed ); Signal.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting back to back bar charts</title>
      <link>https://markhneedham.com/blog/2014/07/20/r-ggplot-plotting-back-to-back-bar-charts/</link>
      <pubDate>Sun, 20 Jul 2014 16:50:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/r-ggplot-plotting-back-to-back-bar-charts/</guid>
      <description>query = &amp;#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &amp;#39;yes&amp;#39;}) RETURN response.time AS time, e.time + e.utc_offset AS eventTime&amp;#34; allYesRSVPs = cypher(graph, query) allYesRSVPs$time = timestampToDate(allYesRSVPs$time) allYesRSVPs$eventTime = timestampToDate(allYesRSVPs$eventTime) allYesRSVPs$difference = as.numeric(allYesRSVPs$eventTime - allYesRSVPs$time, units=&amp;#34;days&amp;#34;) ggplot(allYesRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;green&amp;#34;) query = &amp;#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &amp;#39;no&amp;#39;})&amp;lt;-[:NEXT]-() RETURN response.time AS time, e.time + e.utc_offset AS eventTime&amp;#34; allNoRSVPs = cypher(graph, query) allNoRSVPs$time = timestampToDate(allNoRSVPs$time) allNoRSVPs$eventTime = timestampToDate(allNoRSVPs$eventTime) allNoRSVPs$difference = as.numeric(allNoRSVPs$eventTime - allNoRSVPs$time, units=&amp;#34;days&amp;#34;) ggplot(allNoRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;red&amp;#34;) yes = ggplot(allYesRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;green&amp;#34;) no = ggplot(allNoRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;red&amp;#34;) + scale_y_reverse() library(gridExtra) grid.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.2: Finding where I am in a linked list</title>
      <link>https://markhneedham.com/blog/2014/07/20/neo4j-2-1-2-finding-where-i-am-in-a-linked-list/</link>
      <pubDate>Sun, 20 Jul 2014 15:13:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/neo4j-2-1-2-finding-where-i-am-in-a-linked-list/</guid>
      <description>public class Chains { public static void main(String[] args) { String simpleChains = &amp;#34;/tmp/longchains&amp;#34;; populate( simpleChains, 10000 ); } private static void populate( String path, int chainSize ) { GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); try(Transaction tx = db.beginTx()) { Node currentNode = null; for ( int i = 0; i &amp;lt; chainSize; i++ ) { Node node = db.createNode(); if(currentNode != null) { currentNode.createRelationshipTo( node, NEXT ); } currentNode = node; } tx.</description>
    </item>
    
    <item>
      <title>R: ggplot - Don&#39;t know how to automatically pick scale for object of type difftime - Discrete value supplied to continuous scale</title>
      <link>https://markhneedham.com/blog/2014/07/20/r-ggplot-dont-know-how-to-automatically-pick-scale-for-object-of-type-difftime-discrete-value-supplied-to-continuous-scale/</link>
      <pubDate>Sun, 20 Jul 2014 00:21:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/r-ggplot-dont-know-how-to-automatically-pick-scale-for-object-of-type-difftime-discrete-value-supplied-to-continuous-scale/</guid>
      <description>library(Rneo4j) query = &amp;#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &amp;#39;yes&amp;#39;}) RETURN response.time AS time, e.time + e.utc_offset AS eventTime&amp;#34; allYesRSVPs = cypher(graph, query) allYesRSVPs$time = timestampToDate(allYesRSVPs$time) allYesRSVPs$eventTime = timestampToDate(allYesRSVPs$eventTime) &amp;gt; allYesRSVPs[1:10,] time eventTime 1 2011-06-05 12:12:27 2011-06-29 18:30:00 2 2011-06-05 14:49:04 2011-06-29 18:30:00 3 2011-06-10 11:22:47 2011-06-29 18:30:00 4 2011-06-07 15:27:07 2011-06-29 18:30:00 5 2011-06-06 20:21:45 2011-06-29 18:30:00 6 2011-07-04 19:49:04 2011-07-27 19:00:00 7 2011-07-05 16:40:10 2011-07-27 19:00:00 8 2011-08-19 07:41:10 2011-08-31 18:30:00 9 2011-08-24 12:47:40 2011-08-31 18:30:00 10 2011-08-18 09:56:53 2011-08-31 18:30:00 allYesRSVPs$difference = allYesRSVPs$eventTime - allYesRSVPs$time &amp;gt; allYesRSVPs[1:10,] time eventTime difference 1 2011-06-05 12:12:27 2011-06-29 18:30:00 34937.</description>
    </item>
    
    <item>
      <title>R: Apply a custom function across multiple lists</title>
      <link>https://markhneedham.com/blog/2014/07/16/r-apply-a-custom-function-across-multiple-lists/</link>
      <pubDate>Wed, 16 Jul 2014 05:04:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/16/r-apply-a-custom-function-across-multiple-lists/</guid>
      <description>&amp;gt; c(10,9,8,7,6,5,4,3,2,1) - c(5,4,3,4,3,2,2,1,2,1) [1] 5 5 5 3 3 3 2 2 0 0 &amp;gt; mapply(function(x, y) { if((x-y) &amp;gt;= 5) { &amp;#34;5 or more&amp;#34; } else if((x-y) &amp;gt;= 3) { &amp;#34;3 to 5&amp;#34; } else { &amp;#34;less than 5&amp;#34; } }, c(10,9,8,7,6,5,4,3,2,1),c(5,4,3,4,3,2,2,1,2,1)) [1] &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;less than 5&amp;#34; [8] &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; summarisedDifference &amp;lt;- function(one, two) { mapply(function(x, y) { if((x-y) &amp;gt;= 5) { &amp;#34;5 or more&amp;#34; } else if((x-y) &amp;gt;= 3) { &amp;#34;3 to 5&amp;#34; } else { &amp;#34;less than 5&amp;#34; } }, one, two) } &amp;gt; summarisedDifference(c(10,9,8,7,6,5,4,3,2,1),c(5,4,3,4,3,2,2,1,2,1)) [1] &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;less than 5&amp;#34; [8] &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;gt; summarisedDifference(c(10,9,8,7,6,5,4,3,2,1), 1) [1] &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; [8] &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;gt; library(plyr) &amp;gt; df = data.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Processing hidden arrays in your CSV documents</title>
      <link>https://markhneedham.com/blog/2014/07/10/neo4j-load-csv-processing-hidden-arrays-in-your-csv-documents/</link>
      <pubDate>Thu, 10 Jul 2014 14:54:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/10/neo4j-load-csv-processing-hidden-arrays-in-your-csv-documents/</guid>
      <description>name,friends &amp;#34;Mark&amp;#34;,&amp;#34;Michael,Peter&amp;#34; &amp;#34;Michael&amp;#34;,&amp;#34;Peter,Kenny&amp;#34; &amp;#34;Kenny&amp;#34;,&amp;#34;Anders,Michael&amp;#34; $ load csv with headers from &amp;quot;file:/Users/markneedham/Desktop/friends.csv&amp;quot; AS row RETURN row; +------------------------------------------------+ | row | +------------------------------------------------+ | {name -&amp;gt; &amp;quot;Mark&amp;quot;, friends -&amp;gt; &amp;quot;Michael,Peter&amp;quot;} | | {name -&amp;gt; &amp;quot;Michael&amp;quot;, friends -&amp;gt; &amp;quot;Peter,Kenny&amp;quot;} | | {name -&amp;gt; &amp;quot;Kenny&amp;quot;, friends -&amp;gt; &amp;quot;Anders,Michael&amp;quot;} | +------------------------------------------------+ 3 rows $ load csv with headers from &amp;quot;file:/Users/markneedham/Desktop/friends.csv&amp;quot; AS row RETURN row, split(row.friends, &amp;quot;,&amp;quot;) AS friends; +-----------------------------------------------------------------------+ | row | friends | +-----------------------------------------------------------------------+ | {name -&amp;gt; &amp;quot;Mark&amp;quot;, friends -&amp;gt; &amp;quot;Michael,Peter&amp;quot;} | [&amp;quot;Michael&amp;quot;,&amp;quot;Peter&amp;quot;] | | {name -&amp;gt; &amp;quot;Michael&amp;quot;, friends -&amp;gt; &amp;quot;Peter,Kenny&amp;quot;} | [&amp;quot;Peter&amp;quot;,&amp;quot;Kenny&amp;quot;] | | {name -&amp;gt; &amp;quot;Kenny&amp;quot;, friends -&amp;gt; &amp;quot;Anders,Michael&amp;quot;} | [&amp;quot;Anders&amp;quot;,&amp;quot;Michael&amp;quot;] | +-----------------------------------------------------------------------+ 3 rows $ load csv with headers from &amp;quot;file:/Users/markneedham/Desktop/friends.</description>
    </item>
    
    <item>
      <title>R/plyr: ddply - Error in vector(type, length) : vector: cannot make a vector of mode &#39;closure&#39;.</title>
      <link>https://markhneedham.com/blog/2014/07/07/rplyr-ddply-error-in-vectortype-length-vector-cannot-make-a-vector-of-mode-closure/</link>
      <pubDate>Mon, 07 Jul 2014 06:07:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/07/rplyr-ddply-error-in-vectortype-length-vector-cannot-make-a-vector-of-mode-closure/</guid>
      <description>n = c(2, 3, 5) s = c(&amp;#34;aa&amp;#34;, &amp;#34;bb&amp;#34;, &amp;#34;cc&amp;#34;) b = c(TRUE, FALSE, TRUE) df = data.frame(n, s, b) ddply(df, &amp;#34;b&amp;#34;, function(x) { countr &amp;lt;- length(x$n) data.frame(count = count) }) Error in vector(type, length) : vector: cannot make a vector of mode &amp;#39;closure&amp;#39;. &amp;gt; count = 10 &amp;gt; ddply(df, &amp;#34;b&amp;#34;, function(x) { + countr &amp;lt;- length(x$n) + data.frame(count = count) + }) b count 1 FALSE 4 2 TRUE 4 &amp;gt; ddply(df, &amp;#34;b&amp;#34;, function(x) { + count &amp;lt;- length(x$n) + data.</description>
    </item>
    
    <item>
      <title>R/plyr: ddply - Renaming the grouping/generated column when grouping by date</title>
      <link>https://markhneedham.com/blog/2014/07/02/rplyr-ddply-renaming-the-groupinggenerate-column-when-grouping-by-date/</link>
      <pubDate>Wed, 02 Jul 2014 06:30:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/02/rplyr-ddply-renaming-the-groupinggenerate-column-when-grouping-by-date/</guid>
      <description>library(Rneo4j) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinDate&amp;#34; meetupMembers = cypher(graph, query) meetupMembers$joined &amp;lt;- timestampToDate(meetupMembers$joinDate) dd = aggregate(meetupMembers$joined, by=list(format(meetupMembers$joined, &amp;#34;%A&amp;#34;)), function(x) length(x)) colnames(dd) = c(&amp;#34;dayOfWeek&amp;#34;, &amp;#34;count&amp;#34;) &amp;gt; dd dayOfWeek count 1 Friday 135 2 Monday 287 3 Saturday 80 4 Sunday 102 5 Thursday 187 6 Tuesday 286 7 Wednesday 211 &amp;gt; meetupMembers[1:10,] joinDate joined 1 1.</description>
    </item>
    
    <item>
      <title>R: Aggregate by different functions and join results into one data frame</title>
      <link>https://markhneedham.com/blog/2014/06/30/r-aggregate-by-different-functions-and-join-results-into-one-data-frame/</link>
      <pubDate>Mon, 30 Jun 2014 22:47:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/r-aggregate-by-different-functions-and-join-results-into-one-data-frame/</guid>
      <description>library(Rneo4j) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) query = &amp;#34;MATCH (g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;})-[:HOSTED_EVENT]-&amp;gt;(event)&amp;lt;-[:TO]-({response: &amp;#39;yes&amp;#39;})&amp;lt;-[:RSVPD]-() WHERE (event.time + event.utc_offset) &amp;lt; timestamp() RETURN event.time + event.utc_offset AS eventTime, COUNT(*) AS rsvps&amp;#34; events = cypher(graph, query) events$datetime &amp;lt;- timestampToDate(events$eventTime) eventTime rsvps datetime 1 1.314815e+12 3 2011-08-31 19:30:00 2 1.337798e+12 13 2012-05-23 19:30:00 3 1.383070e+12 29 2013-10-29 18:00:00 4 1.362474e+12 5 2013-03-05 09:00:00 5 1.369852e+12 66 2013-05-29 19:30:00 6 1.</description>
    </item>
    
    <item>
      <title>R: Order by data frame column and take top 10 rows</title>
      <link>https://markhneedham.com/blog/2014/06/30/r-order-by-data-frame-column-and-take-top-10-rows/</link>
      <pubDate>Mon, 30 Jun 2014 21:44:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/r-order-by-data-frame-column-and-take-top-10-rows/</guid>
      <description>library(Rneo4j) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinDate&amp;#34; timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) meetupMembers = cypher(graph, query) meetupMembers$joined &amp;lt;- timestampToDate(meetupMembers$joinDate) groupBy = function(dates, format) { dd = aggregate(dates, by= list(format(dates, format)), function(x) length(x)) colnames(dd) = c(&amp;#34;key&amp;#34;, &amp;#34;count&amp;#34;) dd } byDayTime = groupBy(meetupMembers$joined, &amp;#34;%A %H:00&amp;#34;) &amp;gt; byDayTime[12:25,] key count 12 Friday 14:00 12 13 Friday 15:00 8 14 Friday 16:00 11 15 Friday 17:00 10 16 Friday 18:00 3 17 Friday 19:00 1 18 Friday 20:00 3 19 Friday 21:00 4 20 Friday 22:00 7 21 Friday 23:00 2 22 Monday 00:00 3 23 Monday 01:00 1 24 Monday 03:00 1 25 Monday 05:00 3 &amp;gt; byDayTime[order(byDayTime$count),][1:10,] key count 2 Friday 03:00 1 3 Friday 04:00 1 4 Friday 05:00 1 5 Friday 07:00 1 17 Friday 19:00 1 23 Monday 01:00 1 24 Monday 03:00 1 46 Saturday 03:00 1 66 Sunday 06:00 1 67 Sunday 07:00 1 &amp;gt; order(byDayTime$count) [1] 2 3 4 5 17 23 24 46 66 67 109 128 129 1 21 44 47 48 81 86 87 88 108 130 16 18 22 25 45 53 64 71 75 107 19 26 49 51 55 56 58 59 61 [44] 65 68 77 79 85 106 110 143 50 52 54 82 84 101 127 146 27 57 60 62 63 69 70 73 99 103 126 145 6 20 76 83 89 105 122 131 144 7 13 40 43 72 80 [87] 102 39 78 100 132 147 15 94 121 123 142 14 42 74 104 137 140 12 38 92 93 111 124 8 9 11 90 96 125 139 10 32 34 36 95 97 98 28 135 136 33 35 112 [130] 113 116 134 91 141 41 115 120 133 37 119 138 31 117 118 30 114 29 key count 2 Friday 03:00 1 3 Friday 04:00 1 4 Friday 05:00 1 5 Friday 07:00 1 &amp;gt; byDayTime[order(-byDayTime$count),][1:10,] key count 29 Monday 09:00 34 30 Monday 10:00 28 114 Tuesday 11:00 28 31 Monday 11:00 27 117 Tuesday 14:00 27 118 Tuesday 15:00 27 138 Wednesday 14:00 23 119 Tuesday 16:00 22 37 Monday 17:00 21 115 Tuesday 12:00 20 </description>
    </item>
    
    <item>
      <title>Neo4j/R: Grouping meetup members by join timestamp</title>
      <link>https://markhneedham.com/blog/2014/06/30/neo4jr-grouping-meetup-members-by-join-timestamp/</link>
      <pubDate>Mon, 30 Jun 2014 00:06:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/neo4jr-grouping-meetup-members-by-join-timestamp/</guid>
      <description>&amp;gt; library(Rneo4j) &amp;gt; query = &amp;#34;match (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinDate&amp;#34; &amp;gt; meetupMembers = cypher(graph, query) &amp;gt; meetupMembers[1:5,] [1] 1.389107e+12 1.376572e+12 1.379491e+12 1.349454e+12 1.383127e+12 &amp;gt; timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) &amp;gt; meetupMembers$joined &amp;lt;- timestampToDate(meetupMembers$joinDate) &amp;gt; meetupMembers[1:5,] joinDate joined 1 1.389107e+12 2014-01-07 15:08:40 2 1.376572e+12 2013-08-15 14:13:40 3 1.379491e+12 2013-09-18 08:55:11 4 1.349454e+12 2012-10-05 17:28:04 5 1.383127e+12 2013-10-30 09:59:03 &amp;gt; dd = aggregate(meetupMembers$joined, by=list(format(meetupMembers$joined, &amp;#34;%m-%Y&amp;#34;)), function(x) length(x)) &amp;gt; colnames(dd) = c(&amp;#34;month&amp;#34;, &amp;#34;count&amp;#34;) &amp;gt; dd month count 1 01-2012 4 2 01-2013 52 3 01-2014 88 4 02-2012 7 5 02-2013 52 6 02-2014 91 7 03-2012 12 8 03-2013 23 9 03-2014 93 10 04-2012 3 11 04-2013 34 12 04-2014 119 13 05-2012 9 14 05-2013 69 15 05-2014 102 16 06-2011 14 17 06-2012 5 18 06-2013 39 19 06-2014 114 20 07-2011 4 21 07-2012 16 22 07-2013 20 23 08-2011 2 24 08-2012 34 25 08-2013 50 26 09-2012 14 27 09-2013 52 28 10-2011 2 29 10-2012 29 30 10-2013 42 31 11-2011 2 32 11-2012 31 33 11-2013 34 34 12-2012 7 35 12-2013 19 groupBy = function(dates, format) { dd = aggregate(dates, by= list(format(dates, format)), function(x) length(x)) colnames(dd) = c(&amp;#34;key&amp;#34;, &amp;#34;count&amp;#34;) dd } &amp;gt; groupBy(meetupMembers$joined, &amp;#34;%Y&amp;#34;) key count 1 2011 24 2 2012 171 3 2013 486 4 2014 607 &amp;gt; groupBy(meetupMembers$joined, &amp;#34;%A&amp;#34;) key count 1 Friday 135 2 Monday 287 3 Saturday 80 4 Sunday 102 5 Thursday 187 6 Tuesday 286 7 Wednesday 211 &amp;gt; groupBy(meetupMembers$joined, &amp;#34;%m&amp;#34;) key count 1 01 144 2 02 150 3 03 128 4 04 156 5 05 180 6 06 172 7 07 40 8 08 86 9 09 66 10 10 73 11 11 67 12 12 26 &amp;gt; groupBy(meetupMembers$joined[format(meetupMembers$joined, &amp;#34;%Y&amp;#34;) !</description>
    </item>
    
    <item>
      <title>Neo4j: Set Based Operations with the experimental Cypher optimiser</title>
      <link>https://markhneedham.com/blog/2014/06/29/neo4j-set-based-operations-with-the-experimental-cypher-optimiser/</link>
      <pubDate>Sun, 29 Jun 2014 08:45:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/29/neo4j-set-based-operations-with-the-experimental-cypher-optimiser/</guid>
      <description>MATCH (p:Person {name: &amp;quot;me&amp;quot;})-[:MEMBER_OF]-&amp;gt;(office {name: &amp;quot;London Office&amp;quot;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague) MATCH (p:Person {name: &amp;quot;me&amp;quot;})-[:COLLEAGUES]-&amp;gt;(colleague) WITH p, COLLECT(colleague) as marksColleagues MATCH (colleague)-[:MEMBER_OF]-&amp;gt;(office {name: &amp;quot;London Office&amp;quot;})&amp;lt;-[:MEMBER_OF]-(p) WHERE NOT (colleague IN marksColleagues) RETURN COUNT(colleague) cypher 2.1.experimental MATCH (p:Person {name: &amp;quot;me&amp;quot;})-[:MEMBER_OF]-&amp;gt;(office {name: &amp;quot;London Office&amp;quot;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague) $ python set-based.py cypher 2.1.experimental MATCH (p:Person {name: &amp;#34;me&amp;#34;})-[:MEMBER_OF]-&amp;gt;(office {name: &amp;#34;London Office&amp;#34;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague) Min 0.719580888748 50% 0.723278999329 95% 0.741609430313 Max 0.</description>
    </item>
    
    <item>
      <title>Neo4j&#39;s Cypher vs Clojure - Group by and Sorting</title>
      <link>https://markhneedham.com/blog/2014/06/29/neo4j-cypher-vs-clojure-for-group-by-and-sorting/</link>
      <pubDate>Sun, 29 Jun 2014 02:56:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/29/neo4j-cypher-vs-clojure-for-group-by-and-sorting/</guid>
      <description>CREATE (event1:Event {name: &amp;quot;Future Event 1&amp;quot;, timestamp: 1414002772427 }) CREATE (event2:Event {name: &amp;quot;Future Event 2&amp;quot;, timestamp: 1424002772427 }) CREATE (event3:Event {name: &amp;quot;Future Event 3&amp;quot;, timestamp: 1416002772427 }) CREATE (event4:Event {name: &amp;quot;Past Event 1&amp;quot;, timestamp: 1403002772427 }) CREATE (event5:Event {name: &amp;quot;Past Event 2&amp;quot;, timestamp: 1402002772427 }) $ MATCH (e:Event) RETURN e; ==&amp;gt; +------------------------------------------------------------+ ==&amp;gt; | e | ==&amp;gt; +------------------------------------------------------------+ ==&amp;gt; | Node[15414]{name:&amp;quot;Future Event 1&amp;quot;,timestamp:1414002772427} | ==&amp;gt; | Node[15415]{name:&amp;quot;Future Event 2&amp;quot;,timestamp:1424002772427} | ==&amp;gt; | Node[15416]{name:&amp;quot;Future Event 3&amp;quot;,timestamp:1416002772427} | ==&amp;gt; | Node[15417]{name:&amp;quot;Past Event 1&amp;quot;,timestamp:1403002772427} | ==&amp;gt; | Node[15418]{name:&amp;quot;Past Event 2&amp;quot;,timestamp:1402002772427} | ==&amp;gt; +------------------------------------------------------------+ ==&amp;gt; 5 rows ==&amp;gt; 13 ms (def sorted-query &amp;#34;MATCH (e:Event) WITH COLLECT(e) AS events WITH [e IN events WHERE e.</description>
    </item>
    
    <item>
      <title>Data Science: Mo&#39; Data Mo&#39; Problems</title>
      <link>https://markhneedham.com/blog/2014/06/28/data-science-mo-data-mo-problems/</link>
      <pubDate>Sat, 28 Jun 2014 23:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/28/data-science-mo-data-mo-problems/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Finding movies by decade</title>
      <link>https://markhneedham.com/blog/2014/06/28/neo4j-cypher-finding-movies-by-decade/</link>
      <pubDate>Sat, 28 Jun 2014 11:12:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/28/neo4j-cypher-finding-movies-by-decade/</guid>
      <description>:play movies MATCH (movie:Movie) WHERE movie.released &amp;gt;= 1990 and movie.released &amp;lt;= 1999 RETURN 1990 + &amp;quot;-&amp;quot; + 1999 as years, count(movie) AS movies ORDER BY years ==&amp;gt; +----------------------+ ==&amp;gt; | years | movies | ==&amp;gt; +----------------------+ ==&amp;gt; | &amp;#34;1990-1999&amp;#34; | 21 | ==&amp;gt; +----------------------+ ==&amp;gt; 1 row WITH 1990 AS startDecade, 1999 AS endDecade MATCH (movie:Movie) WHERE movie.released &amp;gt;= startDecade and movie.released &amp;lt;= endDecade RETURN startDecade + &amp;quot;-&amp;quot; + endDecade as years, count(movie) ORDER BY years UNWIND [{start: 1970, end: 1979}, {start: 1980, end: 1989}, {start: 1980, end: 1989}, {start: 1990, end: 1999}, {start: 2000, end: 2009}, {start: 2010, end: 2019}] AS row WITH row.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Separation of concerns</title>
      <link>https://markhneedham.com/blog/2014/06/27/neo4j-cypher-separation-of-concerns/</link>
      <pubDate>Fri, 27 Jun 2014 10:51:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/27/neo4j-cypher-separation-of-concerns/</guid>
      <description>MATCH (event:Event {id: {eventId}})-[:HELD_AT]-&amp;gt;(venue) OPTIONAL MATCH (event)&amp;lt;-[:TO]-(rsvp)&amp;lt;-[:RSVPD]-(person) OPTIONAL MATCH (person)-[:INTERESTED_IN]-&amp;gt;(topic) WHERE ()-[:HAS_TOPIC]-&amp;gt;(topic) WITH event, venue, rsvp, person, COLLECT(topic) as topics ORDER BY rsvp.time OPTIONAL MATCH (rsvp)&amp;lt;-[:NEXT]-(initial) WITH event, venue, COLLECT({rsvp: rsvp, initial: initial, person: person, topics: topics}) AS responses WITH event, venue, [response in responses WHERE response.initial is null AND response.rsvp.response = &amp;quot;yes&amp;quot;] as attendees, [response in responses WHERE NOT response.initial is null] as dropouts, responses UNWIND([response in attendees | response.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Handling conditionals</title>
      <link>https://markhneedham.com/blog/2014/06/17/neo4j-load-csv-handling-conditionals/</link>
      <pubDate>Tue, 17 Jun 2014 23:41:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/17/neo4j-load-csv-handling-conditionals/</guid>
      <description>match_id,player,player_id,time,type &amp;#34;1012&amp;#34;,&amp;#34;Antonin Panenka&amp;#34;,&amp;#34;174835&amp;#34;,21,&amp;#34;penalty&amp;#34; &amp;#34;1012&amp;#34;,&amp;#34;Faisal Al Dakhil&amp;#34;,&amp;#34;2204&amp;#34;,57,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Roger Milla&amp;#34;,&amp;#34;79318&amp;#34;,106,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Roger Milla&amp;#34;,&amp;#34;79318&amp;#34;,108,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Bernardo Redin&amp;#34;,&amp;#34;44555&amp;#34;,115,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Andre Kana-biyik&amp;#34;,&amp;#34;174649&amp;#34;,44,&amp;#34;yellow&amp;#34; LOAD CSV WITH HEADERS FROM &amp;quot;https://raw.githubusercontent.com/mneedham/neo4j-worldcup/master/data/import/events.csv&amp;quot; AS csvLine // removed for conciseness // goals FOREACH(n IN (CASE WHEN csvLine.type IN [&amp;quot;penalty&amp;quot;, &amp;quot;goal&amp;quot;, &amp;quot;owngoal&amp;quot;] THEN [1] else [] END) | FOREACH(t IN CASE WHEN team = home THEN [home] ELSE [away] END | MERGE (stats)-[:SCORED_GOAL]-&amp;gt;(penalty:Goal {time: csvLine.time, type: csvLine.type}) )	) // cards FOREACH(n IN (CASE WHEN csvLine.</description>
    </item>
    
    <item>
      <title>Ruby: Regex - Matching the Trademark ™ character</title>
      <link>https://markhneedham.com/blog/2014/06/08/ruby-regex-matching-the-trademark-character/</link>
      <pubDate>Sun, 08 Jun 2014 01:34:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/08/ruby-regex-matching-the-trademark-character/</guid>
      <description>1930 FIFA World Cup Uruguay ™ p text.match(/\d{4} FIFA World Cup (.*?) ™/)[1] tm.rb:4: syntax error, unexpected $end, expecting &amp;#39;)&amp;#39; p text.match(/\d{4} FIFA World Cup (.*?) ™/)[1] ^ p text.match(/\d{4} FIFA World Cup (.*?) \u2122/)[1] # encoding: utf-8 # ... p text.match(/\d{4} FIFA World Cup (.*?) ™/)[1] # returns &amp;#34;Uruguay&amp;#34; </description>
    </item>
    
    <item>
      <title>Neo4j Meetup Coding Dojo Style</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-meetup-coding-dojo-style/</link>
      <pubDate>Sat, 31 May 2014 22:55:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-meetup-coding-dojo-style/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j/R: Analysing London NoSQL meetup membership</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/</link>
      <pubDate>Sat, 31 May 2014 21:32:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/</guid>
      <description>MATCH (group1:Group), (group2:Group) OPTIONAL MATCH (group1)&amp;lt;-[:MEMBER_OF]-()-[:MEMBER_OF]-&amp;gt;(group2) WITH group1, group2, COUNT(*) as commonMembers MATCH (group1)&amp;lt;-[:MEMBER_OF]-(group1Member) WITH group1, group2, commonMembers, COLLECT(id(group1Member)) AS group1Members MATCH (group2)&amp;lt;-[:MEMBER_OF]-(group2Member) WITH group1, group2, commonMembers, group1Members, COLLECT(id(group2Member)) AS group2Members WITH group1, group2, commonMembers, group1Members, group2Members UNWIND(group1Members + group2Members) AS combinedMember WITH DISTINCT group1, group2, commonMembers, combinedMember WITH group1, group2, commonMembers, COUNT(combinedMember) AS combinedMembers RETURN group1.name, group2.name, toInt(round(100.0 * commonMembers / combinedMembers)) AS percentage	ORDER BY group1.name, group1.name install.packages(&amp;#34;devtools&amp;#34;) devtools::install_github(&amp;#34;nicolewhite/Rneo4j&amp;#34;) install.</description>
    </item>
    
    <item>
      <title>Thoughts on meetups</title>
      <link>https://markhneedham.com/blog/2014/05/31/thoughts-on-meetups/</link>
      <pubDate>Sat, 31 May 2014 19:50:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/thoughts-on-meetups/</guid>
      <description>At a university, students who have questions about the lecture content or coursework can visit the professor and have a one-on-one conversation.
&amp;hellip;
At the beginning of every meetup, we give everyone a name tag, and provide a whiteboard with two columns, “teachers” and “students”.
Attendees are encouraged to put their name and interests in both columns. From there, everyone can [&amp;hellip;] go in search of someone from the opposite column who shares their interests.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - UNWIND vs FOREACH</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-unwind-vs-foreach/</link>
      <pubDate>Sat, 31 May 2014 14:19:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-unwind-vs-foreach/</guid>
      <description>I&amp;#8217;ve written a couple of posts about the new UNWIND clause in Neo4j&amp;#8217;s cypher query language but I forgot about my favourite use of UNWIND, which is to get rid of some uses of FOREACH from our queries.
 Let&amp;#8217;s say we&amp;#8217;ve created a timetree up front and now have a series of events coming in that we want to create in the database and attach to the appropriate part of the timetree.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Neo.ClientError.Statement.ParameterMissing and neo4j-shell</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-neo-clienterror-statement-parametermissing-and-neo4j-shell/</link>
      <pubDate>Sat, 31 May 2014 12:44:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-neo-clienterror-statement-parametermissing-and-neo4j-shell/</guid>
      <description>CREATE (u:User {name: &amp;quot;Mark&amp;quot;}) MATCH (u:User {name: {name}}) RETURN u Expected a parameter named name Neo.ClientError.Statement.ParameterMissing $ MATCH (u:User {name: {name}}) RETURN u; ParameterNotFoundException: Expected a parameter named name $ export name=&amp;quot;Mark&amp;quot; $ MATCH (u:User {name: {name}}) RETURN u; +-------------------------+ | u | +-------------------------+ | Node[1923]{name:&amp;quot;Mark&amp;quot;} | +-------------------------+ 1 row $ export name = &amp;#34;Mark&amp;#34; name is no valid variable name. May only contain alphanumeric characters and underscores. $ export params={ name: &amp;#34;Mark&amp;#34; } $ MATCH (u:User {name: {params}.</description>
    </item>
    
    <item>
      <title>Clojure: Destructuring group-by&#39;s output</title>
      <link>https://markhneedham.com/blog/2014/05/31/clojure-destructuring-group-bys-output/</link>
      <pubDate>Sat, 31 May 2014 00:03:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/clojure-destructuring-group-bys-output/</guid>
      <description>user&amp;gt; (def events [{:name &amp;#34;e1&amp;#34; :timestamp 123} {:name &amp;#34;e2&amp;#34; :timestamp 456} {:name &amp;#34;e3&amp;#34; :timestamp 789}]) user&amp;gt; (group-by #(&amp;gt; (-&amp;gt;&amp;gt; % :timestamp) 123) events) {false [{:name &amp;#34;e1&amp;#34;, :timestamp 123}], true [{:name &amp;#34;e2&amp;#34;, :timestamp 456} {:name &amp;#34;e3&amp;#34;, :timestamp 789}]} user&amp;gt; (let [{upcoming true past false} (group-by #(&amp;gt; (-&amp;gt;&amp;gt; % :timestamp) 123) events)] (println upcoming) (println past)) [{:name e2, :timestamp 456} {:name e3, :timestamp 789}] [{:name e1, :timestamp 123}] nil </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Rounding a float value to decimal places</title>
      <link>https://markhneedham.com/blog/2014/05/25/neo4j-cypher-rounding-a-float-value-to-decimal-places/</link>
      <pubDate>Sun, 25 May 2014 22:17:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/25/neo4j-cypher-rounding-a-float-value-to-decimal-places/</guid>
      <description>RETURN toFloat(&amp;quot;12.336666&amp;quot;) AS value WITH toFloat(&amp;quot;12.336666&amp;quot;) AS value RETURN round(100 * value) / 100 AS value 12.34 WITH 2 as precision WITH toFloat(&amp;quot;12.336666&amp;quot;) AS value, 10^precision AS factor RETURN round(factor * value)/factor AS value WITH 4 as precision WITH toFloat(&amp;quot;12.336666&amp;quot;) AS value, 10^precision AS factor RETURN round(factor * value)/factor AS value 12.3367 </description>
    </item>
    
    <item>
      <title>Neo4j 2.1:  Passing around node ids vs UNWIND</title>
      <link>https://markhneedham.com/blog/2014/05/25/neo4j-2-1-passing-around-node-ids-vs-unwind/</link>
      <pubDate>Sun, 25 May 2014 10:48:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/25/neo4j-2-1-passing-around-node-ids-vs-unwind/</guid>
      <description>MATCH (g:Group) WITH g ORDER BY g.name LIMIT 5 WITH COLLECT(id(g)) AS groups MATCH (g1) WHERE id(g1) IN groups MATCH (g2) WHERE id(g2) IN groups OPTIONAL MATCH path = (g1)&amp;lt;-[:MEMBER_OF]-()-[:MEMBER_OF]-&amp;gt;(g2) RETURN g1.name, g2.name, CASE WHEN path is null THEN 0 ELSE COUNT(path) END AS overlap MATCH (g:Group) WITH g ORDER BY g.name LIMIT 5 WITH COLLECT(g) AS groups MATCH (g1) WHERE g1 IN groups MATCH (g2) WHERE g2 IN groups OPTIONAL MATCH path = (g1)&amp;lt;-[:MEMBER_OF]-()-[:MEMBER_OF]-&amp;gt;(g2) RETURN g1.</description>
    </item>
    
    <item>
      <title>Clojure: Create a directory</title>
      <link>https://markhneedham.com/blog/2014/05/24/clojure-create-a-directory/</link>
      <pubDate>Sat, 24 May 2014 00:12:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/24/clojure-create-a-directory/</guid>
      <description>(.mkdir (java.io.File. &amp;#34;/path/to/dir/to/create&amp;#34;)) (ns neo4j-meetup.core (:require [clj-time.format :as f])) (def format-as-year-month-day (f/formatter &amp;#34;yyyy-MM-dd&amp;#34;)) (defn create-directory-for-today [] (let [date (f/unparse format-as-year-month-day (t/now))] (.mkdir (java.io.File. (str &amp;#34;data/members-&amp;#34; date))))) </description>
    </item>
    
    <item>
      <title>Neo4j 2.1: Creating adjacency matrices</title>
      <link>https://markhneedham.com/blog/2014/05/20/neo4j-2-0-creating-adjacency-matrices/</link>
      <pubDate>Tue, 20 May 2014 23:14:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/20/neo4j-2-0-creating-adjacency-matrices/</guid>
      <description>About 9 months ago I wrote a blog post showing how to export an adjacency matrix from a Neo4j 1.9 database using the cypher query language and I thought it deserves an update to use 2.0 syntax.
 I&amp;#8217;ve been spending some of my free time working on an application that runs on top of meetup.com&amp;#8217;s API and one of the queries I wanted to write was to find the common members between 2 meetup groups.</description>
    </item>
    
    <item>
      <title>Jersey/Jax RS: Streaming JSON</title>
      <link>https://markhneedham.com/blog/2014/04/30/jerseyjax-rs-streaming-json/</link>
      <pubDate>Wed, 30 Apr 2014 01:24:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/30/jerseyjax-rs-streaming-json/</guid>
      <description>@Path(&amp;#34;/resource&amp;#34;) public class MadeUpResource { private final ObjectMapper objectMapper; public MadeUpResource() { objectMapper = new ObjectMapper(); } @GET @Produces(MediaType.APPLICATION_JSON) public Response loadHierarchy(@PathParam( &amp;#34;pkPerson&amp;#34; ) String pkPerson) { final Map&amp;lt;Integer, String&amp;gt; people = new HashMap&amp;lt;&amp;gt;(); people.put(1, &amp;#34;Michael&amp;#34;); people.put(2, &amp;#34;Mark&amp;#34;); StreamingOutput stream = new StreamingOutput() { @Override public void write(OutputStream os) throws IOException, WebApplicationException { JsonGenerator jg = objectMapper.getJsonFactory().createJsonGenerator( os, JsonEncoding.UTF8 ); jg.writeStartArray(); for ( Map.Entry&amp;lt;Integer, String&amp;gt; person : people.entrySet() ) { jg.</description>
    </item>
    
    <item>
      <title>Clojure: Paging meetup data using lazy sequences</title>
      <link>https://markhneedham.com/blog/2014/04/30/clojure-paging-meetup-data-using-lazy-sequences/</link>
      <pubDate>Wed, 30 Apr 2014 00:20:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/30/clojure-paging-meetup-data-using-lazy-sequences/</guid>
      <description>(defn unchunk [s] (when (seq s) (lazy-seq (cons (first s) (unchunk (next s)))))) (defn offsets [] (unchunk (range))) (defn get-all [api-fn] (flatten (take-while seq (map #(api-fn {:perpage 200 :offset % :orderby &amp;#34;name&amp;#34;}) (offsets))))) (:require [clj-http.client :as client]) (defn members [{perpage :perpage offset :offset orderby :orderby}] (-&amp;gt;&amp;gt; (client/get (str &amp;#34;https://api.meetup.com/2/members?page=&amp;#34; perpage &amp;#34;&amp;amp;offset=&amp;#34; offset &amp;#34;&amp;amp;orderby=&amp;#34; orderby &amp;#34;&amp;amp;group_urlname=&amp;#34; MEETUP_NAME &amp;#34;&amp;amp;key=&amp;#34; MEETUP_KEY) {:as :json}) :body :results)) (defn all-members [] (get-all members)) </description>
    </item>
    
    <item>
      <title>Clojure: clj-time - Formatting a date / timestamp with day suffixes e.g. 1st, 2nd, 3rd</title>
      <link>https://markhneedham.com/blog/2014/04/26/clojure-clj-time-formatting-a-date-timestamp-with-day-suffixes-e-g-1st-2nd-3rd/</link>
      <pubDate>Sat, 26 Apr 2014 07:50:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/26/clojure-clj-time-formatting-a-date-timestamp-with-day-suffixes-e-g-1st-2nd-3rd/</guid>
      <description>1309368600000 user&amp;gt; (require &amp;#39;[clj-time.coerce :as c]) user&amp;gt; (c/from-long 1309368600000) #&amp;lt;DateTime 2011-06-29T17:30:00.000Z&amp;gt; 29th June 2011 user&amp;gt; (require &amp;#39;[clj-time.format :as f]) nil user&amp;gt; (f/unparse (f/formatter &amp;#34;d MMMM yyyy&amp;#34;) (c/from-long 1309368600000)) &amp;#34;29 June 2011&amp;#34; (defn day-suffix [day] (let [stripped-day (if (&amp;lt; day 20) day (mod day 10))] (cond (= stripped-day 1) &amp;#34;st&amp;#34; (= stripped-day 2) &amp;#34;nd&amp;#34; (= stripped-day 3) &amp;#34;rd&amp;#34; :else &amp;#34;th&amp;#34;))) user&amp;gt; (def my-time (c/from-long 1309368600000)) #&amp;#39;user/my-time user&amp;gt; (def day (read-string (f/unparse (f/formatter &amp;#34;d&amp;#34;) my-time))) #&amp;#39;user/day user&amp;gt; (str day (day-suffix day) &amp;#34; &amp;#34; (f/unparse (f/formatter &amp;#34;MMMM yyyy&amp;#34;) my-time)) &amp;#34;29th June 2011&amp;#34; </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Flatten a collection</title>
      <link>https://markhneedham.com/blog/2014/04/23/neo4j-cypher-flatten-a-collection/</link>
      <pubDate>Wed, 23 Apr 2014 22:02:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/23/neo4j-cypher-flatten-a-collection/</guid>
      <description>$ RETURN [[1,2,3], [4,5,6], [7,8,9]] AS result; ==&amp;gt; +---------------------------+ ==&amp;gt; | result | ==&amp;gt; +---------------------------+ ==&amp;gt; | [[1,2,3],[4,5,6],[7,8,9]] | ==&amp;gt; +---------------------------+ ==&amp;gt; 1 row $ WITH [[1,2,3], [4,5,6], [7,8,9]] AS result RETURN REDUCE(output = [], r IN result | output + r) AS flat; ==&amp;gt; +---------------------+ ==&amp;gt; | flat | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8,9] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row ==&amp;gt; SyntaxException: Type mismatch: expected Any, Collection&amp;lt;Any&amp;gt; or Collection&amp;lt;Collection&amp;lt;Any&amp;gt;&amp;gt; but was Integer (line 1, column 148) WITH [[1,2,3], [4,5,6], [7,8,9]] AS result RETURN REDUCE(output = range(0,-1), r IN result | output + r); $ RETURN [[1,2,3], [4], [5, [6, 7]], [8,9]] AS result; ==&amp;gt; +-------------------------------+ ==&amp;gt; | result | ==&amp;gt; +-------------------------------+ ==&amp;gt; | [[1,2,3],[4],[5,[6,7]],[8,9]] | ==&amp;gt; +-------------------------------+ ==&amp;gt; 1 row $ WITH [[1,2,3], [4], [5, [6, 7]], [8,9]] AS result RETURN REDUCE(output = [], r IN result | output + REDUCE(innerOutput = [], innerR in r | innerOutput + innerR)) AS flat; ==&amp;gt; +---------------------+ ==&amp;gt; | flat | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8,9] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating a time tree down to the day</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-a-time-tree-down-to-the-day/</link>
      <pubDate>Sat, 19 Apr 2014 21:15:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-a-time-tree-down-to-the-day/</guid>
      <description>WITH range(2011, 2014) AS years, range(1,12) as months FOREACH(year IN years | MERGE (y:Year {year: year}) FOREACH(month IN months | CREATE (m:Month {month: month}) MERGE (y)-[:HAS_MONTH]-&amp;gt;(m) FOREACH(day IN (CASE WHEN month IN [1,3,5,7,8,10,12] THEN range(1,31) WHEN month = 2 THEN CASE WHEN year % 4 &amp;lt;&amp;gt; 0 THEN range(1,28) WHEN year % 100 &amp;lt;&amp;gt; 0 THEN range(1,29) WHEN year % 400 = 0 THEN range(1,29) ELSE range(1,28) END ELSE range(1,30) END) | CREATE (d:Day {day: day}) MERGE (m)-[:HAS_DAY]-&amp;gt;(d)))) (jan31)-[:NEXT]-&amp;gt;(feb1)-[:NEXT]-&amp;gt;(feb2) MATCH (year:Year)-[:HAS_MONTH]-&amp;gt;(month)-[:HAS_DAY]-&amp;gt;(day) WITH year,month,day ORDER BY year.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.1: Cypher - Concatenating an empty collection / Type mismatch: expected Integer, Collection&amp;lt;Integer&amp;gt; or Collection&amp;lt;Collection&amp;lt;Integer&amp;gt;&amp;gt; but was Collection&amp;lt;Any&amp;gt;</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-2-0-1-cypher-concatenating-an-empty-collection-type-mismatch-expected-integer-collection-or-collection-but-was-collection/</link>
      <pubDate>Sat, 19 Apr 2014 19:51:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-2-0-1-cypher-concatenating-an-empty-collection-type-mismatch-expected-integer-collection-or-collection-but-was-collection/</guid>
      <description>$ RETURN [1,2,3,4] + [5,6,7]; ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4] + [5,6,7] | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row $ RETURN [1,2,3,4] + []; ==&amp;gt; SyntaxException: Type mismatch: expected Integer, Collection&amp;lt;Integer&amp;gt; or Collection&amp;lt;Collection&amp;lt;Integer&amp;gt;&amp;gt; but was Collection&amp;lt;Any&amp;gt; (line 1, column 20) ==&amp;gt; &amp;quot;RETURN [1,2,3,4] + []&amp;quot; ==&amp;gt; ^ $ RETURN [1,2,3,4] + RANGE(0,-1); ==&amp;gt; +-------------------------+ ==&amp;gt; | [1,2,3,4] + RANGE(0,-1) | ==&amp;gt; +-------------------------+ ==&amp;gt; | [1,2,3,4] | ==&amp;gt; +-------------------------+ ==&amp;gt; 1 row $ RETURN [1,2,3,4] + []; ==&amp;gt; +----------------+ ==&amp;gt; | [1,2,3,4] + [] | ==&amp;gt; +----------------+ ==&amp;gt; | [1,2,3,4] | ==&amp;gt; +----------------+ ==&amp;gt; 1 row </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating relationships between a collection of nodes / Invalid input &#39;[&#39;:</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-relationships-between-a-collection-of-nodes-invalid-input/</link>
      <pubDate>Sat, 19 Apr 2014 06:33:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-relationships-between-a-collection-of-nodes-invalid-input/</guid>
      <description>MERGE (day1:Day {day:1 }) MERGE (day2:Day {day:2 }) MERGE (day3:Day {day:3 }) RETURN day1, day2, day3 (day1)-[:NEXT]-&amp;gt;(day2)-[:NEXT]-&amp;gt;(day3) MATCH (day:Day) WITH day ORDER BY day.day WITH COLLECT(day) AS days FOREACH(i in RANGE(0, length(days)-2) | CREATE UNIQUE (days[i])-[:NEXT]-&amp;gt;(days[i+1])) Invalid input &amp;#39;[&amp;#39;: expected an identifier character, node labels, a property map, whitespace, &amp;#39;)&amp;#39; or a relationship pattern (line 6, column 32) &amp;#34; CREATE UNIQUE (days[i])-[:NEXT]-&amp;gt;(days[i+1]))&amp;#34; ^ MATCH (day:Day) WITH day ORDER BY day.day WITH COLLECT(day) AS days FOREACH(i in RANGE(0, length(days)-2) | FOREACH(day1 in [days[i]] | FOREACH(day2 in [days[i+1]] | CREATE UNIQUE (day1)-[:NEXT]-&amp;gt;(day2)))) </description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Query not prepared correctly / Type mismatch: expected Map</title>
      <link>https://markhneedham.com/blog/2014/04/13/neo4j-2-0-0-query-not-prepared-correctly-type-mismatch-expected-map/</link>
      <pubDate>Sun, 13 Apr 2014 17:40:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/13/neo4j-2-0-0-query-not-prepared-correctly-type-mismatch-expected-map/</guid>
      <description>WITH {person: {id: 1}} AS params MERGE (p:Person {id: params.person.id}) RETURN p ==&amp;gt; SyntaxException: Type mismatch: expected Map but was Boolean, Number, String or Collection&amp;lt;Any&amp;gt; (line 1, column 62) ==&amp;gt; &amp;#34;WITH {person: {id: 1}} AS params MERGE (p:Person {id: params.person.id}) RETURN p&amp;#34; ==&amp;gt; +---------------+ ==&amp;gt; | p | ==&amp;gt; +---------------+ ==&amp;gt; | Node[1]{id:} | ==&amp;gt; +---------------+ ==&amp;gt; 1 row ==&amp;gt; Nodes created: 1 ==&amp;gt; Properties set: 1 ==&amp;gt; Labels added: 1 ==&amp;gt; 47 ms WITH {topics: [{name: &amp;quot;Java&amp;quot;}, {name: &amp;quot;Neo4j&amp;quot;}]} AS params MERGE (p:Person {id: 2}) FOREACH(t IN params.</description>
    </item>
    
    <item>
      <title>install4j and AppleScript: Creating a Mac OS X Application Bundle for a Java application</title>
      <link>https://markhneedham.com/blog/2014/04/07/install4j-and-applescript-creating-a-mac-os-x-application-bundle-for-a-java-application/</link>
      <pubDate>Mon, 07 Apr 2014 00:04:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/07/install4j-and-applescript-creating-a-mac-os-x-application-bundle-for-a-java-application/</guid>
      <description>#!/bin/bash rm target/DBench_macos_1_0_0.tgz /Applications/install4j\ 5/bin/install4jc TestBench.install4j title=&amp;#34;DemoBench&amp;#34; backgroundPictureName=&amp;#34;graphs.png&amp;#34; applicationName=&amp;#34;DemoBench&amp;#34; finalDMGName=&amp;#34;DemoBench.dmg&amp;#34; rm -rf target/dmg &amp;amp;&amp;amp; mkdir -p target/dmg tar -C target/dmg -xvf target/DBench_macos_1_0_0.tgz cp -r src/packaging/.background target/dmg ln -s /Applications target/dmg cd target rm &amp;#34;${finalDMGName}&amp;#34; umount -f /Volumes/&amp;#34;${title}&amp;#34; hdiutil create -volname ${title} -size 100m -srcfolder dmg/ -ov -format UDRW pack.temp.dmg device=$(hdiutil attach -readwrite -noverify -noautoopen &amp;#34;pack.temp.dmg&amp;#34; | egrep &amp;#39;^/dev/&amp;#39; | sed 1q | awk &amp;#39;{print $1}&amp;#39;) sleep 5 echo &amp;#39; tell application &amp;#34;Finder&amp;#34; tell disk &amp;#34;&amp;#39;${title}&amp;#39;&amp;#34; open set current view of container window to icon view set toolbar visible of container window to false set statusbar visible of container window to false set the bounds of container window to {400, 100, 885, 430} set theViewOptions to the icon view options of container window set arrangement of theViewOptions to not arranged set icon size of theViewOptions to 72 set background picture of theViewOptions to file &amp;#34;.</description>
    </item>
    
    <item>
      <title>Clojure: Not so lazy sequences a.k.a chunking behaviour</title>
      <link>https://markhneedham.com/blog/2014/04/06/clojure-not-so-lazy-sequences-a-k-a-chunking-behaviour/</link>
      <pubDate>Sun, 06 Apr 2014 22:07:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/06/clojure-not-so-lazy-sequences-a-k-a-chunking-behaviour/</guid>
      <description>&amp;gt; (take 1 (map (fn [x] (println (str &amp;#34;printing...&amp;#34; x))) (range))) (printing...0 printing...1 printing...2 printing...3 printing...4 printing...5 printing...6 printing...7 printing...8 printing...9 printing...10 printing...11 printing...12 printing...13 printing...14 printing...15 printing...16 printing...17 printing...18 printing...19 printing...20 printing...21 printing...22 printing...23 printing...24 printing...25 printing...26 printing...27 printing...28 printing...29 printing...30 printing...31 nil) (defn unchunk [s] (when (seq s) (lazy-seq (cons (first s) (unchunk (next s)))))) &amp;gt; (take 1 (map (fn [x] (println (str &amp;#34;printing...&amp;#34; x))) (unchunk (range)))) (printing...0 nil) </description>
    </item>
    
    <item>
      <title>Soulver: For all your random calculations</title>
      <link>https://markhneedham.com/blog/2014/03/30/soulver-for-all-your-random-calculations/</link>
      <pubDate>Sun, 30 Mar 2014 14:48:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/30/soulver-for-all-your-random-calculations/</guid>
      <description>Calculating how much memory Neo4j memory mapping will take up800 mb + 2660mb + 6600mb + 9500mb + 40mb in GB = 19.6 GB How long would it take to cover 20,000 km at 100 km / day?20,000 km / 100 km/day in months = 6.57097681677241832481 months How long did an import of some data using the Neo4j shell take?4550855 ms in minutes = 75.84758333333333333333 minutes Bit shift 1 by 32 places1 &amp;lt;&amp;lt; 32 = 4,294,967,296 Translating into easier to digest units32381KB / second in MB per minute = 1,942.</description>
    </item>
    
    <item>
      <title>Remote profiling Neo4j using yourkit</title>
      <link>https://markhneedham.com/blog/2014/03/24/remote-profiling-neo4j-using-yourkit/</link>
      <pubDate>Mon, 24 Mar 2014 23:44:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/24/remote-profiling-neo4j-using-yourkit/</guid>
      <description>wrapper.java.additional=-agentpath:/Users/markhneedham/Downloads/YourKit_Java_Profiler_2013_build_13074.app/bin/mac/libyjpagent.jnilib=port=8888 java 4388 markhneedham 20u IPv6 0x901df453b4e9a125 0t0 TCP *:8888 (LISTEN) ... </description>
    </item>
    
    <item>
      <title>Functional Programming in Java - Venkat Subramaniam: Book Review</title>
      <link>https://markhneedham.com/blog/2014/03/23/functional-programming-in-java-venkat-subramaniam-book-review/</link>
      <pubDate>Sun, 23 Mar 2014 21:18:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/23/functional-programming-in-java-venkat-subramaniam-book-review/</guid>
      <description>List&amp;lt;Person&amp;gt; people = Arrays.asList(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.stream().sorted(comparing(p -&amp;gt; p.getAge())).forEach(System.out::println) Sequence&amp;lt;Person&amp;gt; people = sequence(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.sortBy(new Callable1&amp;lt;Person, Integer&amp;gt;() { @Override public Integer call(Person person) throws Exception { return person.getAge(); } }); Sequence&amp;lt;Person&amp;gt; people = sequence(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); System.out.println(people.sortBy(Person::getAge)); Sequence&amp;lt;Person&amp;gt; people = sequence(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.sortBy(Person::getAge).forEach((Consumer&amp;lt;? super Person&amp;gt;) System.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.0-M01: LOAD CSV with Rik Van Bruggen&#39;s Tube Graph</title>
      <link>https://markhneedham.com/blog/2014/03/03/neo4j-2-1-0-m01-load-csv-with-rik-van-bruggens-tube-graph/</link>
      <pubDate>Mon, 03 Mar 2014 16:34:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/03/neo4j-2-1-0-m01-load-csv-with-rik-van-bruggens-tube-graph/</guid>
      <description>CREATE INDEX on :Station(stationName) LOAD CSV FROM &amp;quot;file:/Users/markhneedham/code/tube/runtimes.csv&amp;quot; AS csvLine WITH csvLine[0] AS lineName, csvLine[1] AS direction, csvLine[2] AS startStationName, csvLine[3] AS destinationStationName, toFloat(csvLine[4]) AS distance, toFloat(csvLine[5]) AS runningTime MERGE (start:Station { stationName: startStationName}) MERGE (destination:Station { stationName: destinationStationName}) MERGE (line:Line { lineName: lineName}) MERGE (line) - [:DIRECTION] -&amp;gt; (dir:Direction { direction: direction}) CREATE (inPlatform:InPlatform {name: &amp;quot;In: &amp;quot; + destinationStationName + &amp;quot; &amp;quot; + lineName + &amp;quot; &amp;quot; + direction}) CREATE (outPlatform:OutPlatform {name: &amp;quot;Out: &amp;quot; + startStationName + &amp;quot; &amp;quot; + lineName + &amp;quot; &amp;quot; + direction}) CREATE (inPlatform) - [:AT] -&amp;gt; (destination) CREATE (outPlatform) - [:AT] -&amp;gt; (start) CREATE (inPlatform) - [:ON] -&amp;gt; (dir) CREATE (outPlatform) - [:ON] -&amp;gt; (dir) CREATE (outPlatform) - [r:TRAIN {distance: distance, runningTime: runningTime}] -&amp;gt; (inPlatform) MATCH (station:Station) &amp;lt;-[:AT]- (platformIn:InPlatform), (station:Station) &amp;lt;-[:AT]- (platformOut:OutPlatform), (direction:Direction) &amp;lt;-[:ON]- (platformIn:InPlatform), (direction:Direction) &amp;lt;-[:ON]- (platformOut:OutPlatform) CREATE (platformIn) -[:WAIT {runningTime: 0.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Finding directors who acted in their own movie</title>
      <link>https://markhneedham.com/blog/2014/02/28/neo4j-cypher-finding-directors-who-acted-in-their-own-movie/</link>
      <pubDate>Fri, 28 Feb 2014 22:57:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/28/neo4j-cypher-finding-directors-who-acted-in-their-own-movie/</guid>
      <description>MATCH (a)-[:ACTED_IN]-&amp;gt;(m)&amp;lt;-[:DIRECTED]-(d) WHERE a.name = d.name RETURN a MATCH (a)-[:ACTED_IN]-&amp;gt;(m)&amp;lt;-[:DIRECTED]-(d) WHERE a = d RETURN a MATCH (a)-[:ACTED_IN]-&amp;gt;(m)&amp;lt;-[:DIRECTED]-(a) RETURN a </description>
    </item>
    
    <item>
      <title>Java 8: Lambda Expressions vs Auto Closeable</title>
      <link>https://markhneedham.com/blog/2014/02/26/java-8-lambda-expressions-vs-auto-closeable/</link>
      <pubDate>Wed, 26 Feb 2014 07:32:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/26/java-8-lambda-expressions-vs-auto-closeable/</guid>
      <description>public class StylesOfTx { public static void main( String[] args ) throws IOException { String path = &amp;#34;/tmp/tx-style-test&amp;#34;; FileUtils.deleteRecursively(new File(path)); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); Transaction tx = db.beginTx(); try { db.createNode(); tx.success(); } finally { tx.close(); } } } public class StylesOfTx { public static void main( String[] args ) throws IOException { String path = &amp;#34;/tmp/tx-style-test&amp;#34;; FileUtils.deleteRecursively(new File(path)); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); try ( Transaction tx = db.</description>
    </item>
    
    <item>
      <title>Jersey: Ignoring SSL certificate - javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException</title>
      <link>https://markhneedham.com/blog/2014/02/26/jersey-ignoring-ssl-certificate-javax-net-ssl-sslhandshakeexception-java-security-cert-certificateexception/</link>
      <pubDate>Wed, 26 Feb 2014 00:12:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/26/jersey-ignoring-ssl-certificate-javax-net-ssl-sslhandshakeexception-java-security-cert-certificateexception/</guid>
      <description>Client client = Client.create(); client.resource(&amp;#34;https://some-aws-host.compute-1.amazonaws.com&amp;#34;).post(); // and so on com.sun.jersey.api.client.ClientHandlerException: javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching some-aws-host.compute-1.amazonaws.com found. at com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:149) at com.sun.jersey.api.client.Client.handle(Client.java:648) at com.sun.jersey.api.client.WebResource.handle(WebResource.java:670) at com.sun.jersey.api.client.WebResource.post(WebResource.java:241) at com.neotechnology.testlab.manager.bootstrap.ManagerAdmin.takeBackup(ManagerAdmin.java:33) at com.neotechnology.testlab.manager.bootstrap.ManagerAdminTest.foo(ManagerAdminTest.java:11) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222) at org.junit.runners.ParentRunner.run(ParentRunner.java:300) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74) at com.</description>
    </item>
    
    <item>
      <title>Java 8: Group by with collections</title>
      <link>https://markhneedham.com/blog/2014/02/23/java-8-group-by-with-collections/</link>
      <pubDate>Sun, 23 Feb 2014 19:16:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/23/java-8-group-by-with-collections/</guid>
      <description>static class Person { private String name; private int age; Person(String name, int age) { this.name = name; this.age = age; } @Override public String toString() { return String.format(&amp;#34;Person{name=&amp;#39;%s&amp;#39;, age=%d}&amp;#34;, name, age); } } Stream&amp;lt;Person&amp;gt; people = Stream.of(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); Map&amp;lt;Integer, List&amp;lt;String&amp;gt;&amp;gt; peopleByAge = people .collect(groupingBy(p -&amp;gt; p.age, mapping((Person p) -&amp;gt; p.name, toList()))); System.out.println(peopleByAge); {24=[Paul], 28=[Will], 30=[Mark]} &amp;gt; people = [ {:name =&amp;gt; &amp;#34;Paul&amp;#34;, :age =&amp;gt; 24}, {:name =&amp;gt; &amp;#34;Mark&amp;#34;, :age =&amp;gt; 30}, {:name =&amp;gt; &amp;#34;Will&amp;#34;, :age =&amp;gt; 28}] &amp;gt; people.</description>
    </item>
    
    <item>
      <title>Java 8: Sorting values in collections</title>
      <link>https://markhneedham.com/blog/2014/02/23/java-8-sorting-values-in-collections/</link>
      <pubDate>Sun, 23 Feb 2014 14:43:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/23/java-8-sorting-values-in-collections/</guid>
      <description>static class Person { private String name; private int age; Person(String name, int age) { this.name = name; this.age = age; } @Override public String toString() { return String.format(&amp;#34;Person{name=&amp;#39;%s&amp;#39;, age=%d}&amp;#34;, name, age); } } List&amp;lt;Person&amp;gt; people = Arrays.asList(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.stream().sorted((p1, p2) -&amp;gt; p1.age - p2.age).forEach(System.out::println); Person{name=&amp;#39;Paul&amp;#39;, age=24} Person{name=&amp;#39;Will&amp;#39;, age=28} Person{name=&amp;#39;Mark&amp;#39;, age=30} Collections.sort(people, new Comparator&amp;lt;Person&amp;gt;() { @Override public int compare(Person o1, Person o2) { return o1.</description>
    </item>
    
    <item>
      <title>Automating Skype&#39;s &#39;This message has been removed&#39;</title>
      <link>https://markhneedham.com/blog/2014/02/20/automating-skypes-this-message-has-been-removed/</link>
      <pubDate>Thu, 20 Feb 2014 23:16:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/20/automating-skypes-this-message-has-been-removed/</guid>
      <description>on run {input, parameters} tell application &amp;#34;Skype&amp;#34; activate end tell tell application &amp;#34;System Events&amp;#34; set message to &amp;#34;now you see me, now you don&amp;#39;t&amp;#34; keystroke message keystroke return keystroke (ASCII character 30) --up arrow repeat length of message times keystroke (ASCII character 8) --backspace end repeat keystroke return end tell return input end run </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Set Based Operations</title>
      <link>https://markhneedham.com/blog/2014/02/20/neo4j-cypher-set-based-operations/</link>
      <pubDate>Thu, 20 Feb 2014 18:22:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/20/neo4j-cypher-set-based-operations/</guid>
      <description>public class SetBasedOperations { private static final Label PERSON = DynamicLabel.label( &amp;#34;Person&amp;#34; ); private static final Label OFFICE = DynamicLabel.label( &amp;#34;Office&amp;#34; ); private static final DynamicRelationshipType COLLEAGUES = DynamicRelationshipType.withName( &amp;#34;COLLEAGUES&amp;#34; ); private static final DynamicRelationshipType MEMBER_OF = DynamicRelationshipType.withName( &amp;#34;MEMBER_OF&amp;#34; ); public static void main( String[] args ) throws IOException { Random random = new Random(); String path = &amp;#34;/tmp/set-based-operations&amp;#34;; FileUtils.deleteRecursively( new File( path ) ); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); Transaction tx = db.</description>
    </item>
    
    <item>
      <title>Neo4j: Creating nodes and relationships from a list of maps</title>
      <link>https://markhneedham.com/blog/2014/02/17/neo4j-creating-nodes-and-relationships-from-a-list-of-maps/</link>
      <pubDate>Mon, 17 Feb 2014 14:11:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/17/neo4j-creating-nodes-and-relationships-from-a-list-of-maps/</guid>
      <description>MERGE (me:User {userId: 1} ) SET me.name = &amp;quot;Mark&amp;quot; FOREACH (f IN [{userId: 2, name: &amp;quot;Michael&amp;quot;}, {userId: 3, name: &amp;quot;Peter&amp;quot;}] | MERGE (u:User {userId: f.userId}) SET u = f MERGE (me)-[:FRIENDS_WITH]-&amp;gt;(u)) MERGE (me:User { userId: {userId} }) SET me.name = {name} FOREACH(f IN {friends} | MERGE (u:User {userId: f.userId }) SET u = f MERGE (me)-[:FRIENDS_WITH]-&amp;gt;(u)) public class ListsOfMapsCypher { public static void main( String[] args ) { ObjectNode request = JsonNodeFactory.</description>
    </item>
    
    <item>
      <title>Neo4j: Value in relationships, but value in nodes too!</title>
      <link>https://markhneedham.com/blog/2014/02/13/neo4j-value-in-relationships-but-value-in-nodes-too/</link>
      <pubDate>Thu, 13 Feb 2014 00:10:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/13/neo4j-value-in-relationships-but-value-in-nodes-too/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jython/Neo4j: java.lang.ExceptionInInitializerError: java.lang.ExceptionInInitializerError</title>
      <link>https://markhneedham.com/blog/2014/02/05/jythonneo4j-java-lang-exceptionininitializererror-java-lang-exceptionininitializererror/</link>
      <pubDate>Wed, 05 Feb 2014 12:21:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/05/jythonneo4j-java-lang-exceptionininitializererror-java-lang-exceptionininitializererror/</guid>
      <description>$ jython -Dpython.path /path/to/neo4j.jar Jython 2.5.3 (2.5:c56500f08d34+, Aug 13 2012, 14:48:36) [Java HotSpot(TM) 64-Bit Server VM (Oracle Corporation)] on java1.7.0_45 Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information. &amp;gt;&amp;gt;&amp;gt; import org.neo4j.graphdb.factory &amp;gt;&amp;gt;&amp;gt; org.neo4j.graphdb.factory.GraphDatabaseFactory().newEmbeddedDatabase(&amp;#34;/tmp/foo&amp;#34;) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:83) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:198) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) java.lang.ExceptionInInitializerError: java.lang.ExceptionInInitializerError &amp;gt;&amp;gt;&amp;gt; import org.neo4j.graphdb.factory.GraphDatabaseSettings Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; java.</description>
    </item>
    
    <item>
      <title>Java: Handling a RuntimeException in a Runnable</title>
      <link>https://markhneedham.com/blog/2014/01/31/java-handling-a-runtimeexception-in-a-runnable/</link>
      <pubDate>Fri, 31 Jan 2014 23:59:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/java-handling-a-runtimeexception-in-a-runnable/</guid>
      <description>import java.util.ArrayList; import java.util.List; import java.util.concurrent.*; public class RunnableBlog { public static void main(String[] args) throws ExecutionException, InterruptedException { ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor(); executor.scheduleAtFixedRate(new Runnable() { @Override public void run() { System.out.println(Thread.currentThread().getName() + &amp;#34; -&amp;gt; &amp;#34; + System.currentTimeMillis()); throw new RuntimeException(&amp;#34;game over&amp;#34;); } }, 0, 1000, TimeUnit.MILLISECONDS).get(); System.out.println(&amp;#34;exit&amp;#34;); executor.shutdown(); } } Exception in thread &amp;#34;main&amp;#34; pool-1-thread-1 -&amp;gt; 1391212558074 java.util.concurrent.ExecutionException: java.lang.RuntimeException: game over at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:252) at java.util.concurrent.FutureTask.get(FutureTask.java:111) at RunnableBlog.main(RunnableBlog.java:11) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Optimising a football query</title>
      <link>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-optimising-a-football-query/</link>
      <pubDate>Fri, 31 Jan 2014 22:41:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-optimising-a-football-query/</guid>
      <description>MATCH (game)&amp;lt;-[:contains_match]-(season:Season), (team)&amp;lt;-[:away_team]-(game), (stats)-[:in]-&amp;gt;(game), (team)&amp;lt;-[:for]-(stats)&amp;lt;-[:played]-(player) WHERE season.name = &amp;quot;2012-2013&amp;quot; RETURN player.name, COLLECT(DISTINCT team.name), SUM(stats.goals) as goals ORDER BY goals DESC LIMIT 10 MATCH (game)&amp;lt;-[:contains_match]-(season:Season) MATCH (team)&amp;lt;-[:away_team]-(game) MATCH (stats)-[:in]-&amp;gt;(game) MATCH (team)&amp;lt;-[:for]-(stats)&amp;lt;-[:played]-(player) WHERE season.name = &amp;quot;2012-2013&amp;quot; RETURN player.name, COLLECT(DISTINCT team.name), SUM(stats.goals) as goals ORDER BY goals DESC LIMIT 10 MATCH (game)&amp;lt;-[:contains_match]-(season:Season) WHERE season.name = &amp;quot;2012-2013&amp;quot; MATCH (team)&amp;lt;-[:away_team]-(game) MATCH (stats)-[:in]-&amp;gt;(game) MATCH (team)&amp;lt;-[:for]-(stats)&amp;lt;-[:played]-(player) RETURN player.name, COLLECT(DISTINCT team.name), SUM(stats.goals) as goals ORDER BY goals DESC LIMIT 10 MATCH (team)&amp;lt;-[:away_team]-(game) MATCH (game)&amp;lt;-[:contains_match]-(season:Season) WHERE season.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Cypher - Index Hints and Neo.ClientError.Schema.NoSuchIndex</title>
      <link>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-cypher-index-hints-and-neo-clienterror-schema-nosuchindex/</link>
      <pubDate>Fri, 31 Jan 2014 07:14:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-cypher-index-hints-and-neo-clienterror-schema-nosuchindex/</guid>
      <description>CREATE INDEX ON :Player(name) MATCH p USING INDEX p:Player(name) WHERE p.name = &amp;quot;Wayne Rooney&amp;quot; RETURN p Cannot use index hint in this context. The label and property comparison must be specified on a non-optional node Label: `Player` Property name: `name` Neo.ClientError.Schema.NoSuchIndex MATCH (p:Player) USING INDEX p:Player(name) WHERE p.name = &amp;quot;Wayne Rooney&amp;quot; RETURN p MATCH (p:Player) USING INDEX p:Player(name) WHERE p.name = &amp;quot;Wayne Rooney&amp;quot; OR p.name = &amp;quot;Robin Van Persie&amp;quot; RETURN p Cannot use index hint in this context.</description>
    </item>
    
    <item>
      <title>Java: Work out the serialVersionUID of a class</title>
      <link>https://markhneedham.com/blog/2014/01/31/java-work-out-the-serialversionuid-of-a-class/</link>
      <pubDate>Fri, 31 Jan 2014 06:51:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/java-work-out-the-serialversionuid-of-a-class/</guid>
      <description>import java.io.Serializable; public class SerialiseMe implements Serializable { } $ serialver -classpath target/serialiser-0.0.1-SNAPSHOT.jar SerialiseMe SerialiseMe: static final long serialVersionUID = -6060222249255158490L; public class Serialiser { public static void main( String[] args ) throws IOException, ClassNotFoundException { ByteArrayOutputStream bout = new ByteArrayOutputStream( ); ObjectOutputStream oout = new ObjectOutputStream( bout ); Object value = new SerialiseMe(); oout.writeObject( value ); oout.close(); byte[] bytes = bout.toByteArray(); FileOutputStream fileOuputStream = new FileOutputStream(&amp;#34;/tmp/foo.txt&amp;#34;); fileOuputStream.write(bytes); fileOuputStream.close(); } } public class Deserialiser { public static void main( String[] args ) throws IOException, ClassNotFoundException { FileInputStream fileInputStream = new FileInputStream( new File( &amp;#34;/tmp/foo.</description>
    </item>
    
    <item>
      <title>Neo4j: org.eclipse.jetty.io.EofException - Caused by: java.io.IOException: Broken pipe</title>
      <link>https://markhneedham.com/blog/2014/01/27/neo4j-org-eclipse-jetty-io-eofexception-caused-by-java-io-ioexception-broken-pipe/</link>
      <pubDate>Mon, 27 Jan 2014 11:32:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/27/neo4j-org-eclipse-jetty-io-eofexception-caused-by-java-io-ioexception-broken-pipe/</guid>
      <description>SEVERE: The response of the WebApplicationException cannot be utilized as the response is already committed. Re-throwing to the HTTP container javax.ws.rs.WebApplicationException: javax.ws.rs.WebApplicationException: org.eclipse.jetty.io.EofException at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:174) at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506) at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136) at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) at org.</description>
    </item>
    
    <item>
      <title>Neo4j HA: org.neo4j.graphdb.TransactionFailureException: Timeout waiting for database to allow new transactions. Blocking components (1): []</title>
      <link>https://markhneedham.com/blog/2014/01/27/neo4j-ha-org-neo4j-graphdb-transactionfailureexception-timeout-waiting-for-database-to-allow-new-transactions-blocking-components-1/</link>
      <pubDate>Mon, 27 Jan 2014 09:42:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/27/neo4j-ha-org-neo4j-graphdb-transactionfailureexception-timeout-waiting-for-database-to-allow-new-transactions-blocking-components-1/</guid>
      <description>org.neo4j.graphdb.TransactionFailureException: Timeout waiting for database to allow new transactions. Blocking components (1): [] at org.neo4j.kernel.ha.HighlyAvailableGraphDatabase.beginTx(HighlyAvailableGraphDatabase.java:199) at org.neo4j.kernel.TransactionBuilderImpl.begin(TransactionBuilderImpl.java:43) at org.neo4j.kernel.InternalAbstractGraphDatabase.beginTx(InternalAbstractGraphDatabase.java:949) at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:52) at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:288) at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108) at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147) at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1469) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1400) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506) at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136) at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) at org.</description>
    </item>
    
    <item>
      <title>Neo4j HA: Election could not pick a winner</title>
      <link>https://markhneedham.com/blog/2014/01/24/neo4j-ha-election-could-not-pick-a-winner/</link>
      <pubDate>Fri, 24 Jan 2014 10:30:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/24/neo4j-ha-election-could-not-pick-a-winner/</guid>
      <description>2014-01-23 11:17:24.510+0000 INFO [o.n.c.p.a.m.MultiPaxosContext$ElectionContextImpl]: Doing elections for role coordinator 2014-01-23 11:17:24.510+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[performRoleElections]-&amp;gt;election from:cluster://10.239.8.251:5001 conversation-id:3/13# 2014-01-23 11:17:24.513+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[vote:coordinator]-&amp;gt;election from:cluster://10.151.24.237:5001 conversation-id:3/13# 2014-01-23 11:17:24.515+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[voted]-&amp;gt;election from:cluster://10.138.29.197:5001 conversation-id:3/13# 2014-01-23 11:17:24.516+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[voted]-&amp;gt;election from:cluster://10.151.24.237:5001 conversation-id:3/13# 2014-01-23 11:17:24.519+0000 DEBUG [o.n.c.p.a.m.MultiPaxosContext$ElectionContextImpl$2]: Elections ended up with list [] 2014-01-23 11:17:24.519+0000 WARN [o.n.c.p.e.ElectionState]: Election could not pick a winner </description>
    </item>
    
    <item>
      <title>Neo4j Backup: Store copy and consistency check</title>
      <link>https://markhneedham.com/blog/2014/01/22/neo4j-backup-store-copy-and-consistency-check/</link>
      <pubDate>Wed, 22 Jan 2014 17:36:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/22/neo4j-backup-store-copy-and-consistency-check/</guid>
      <description>$ pwd /Users/markneedham/Downloads/neo4j-enterprise-2.0.0 $ ./bin/neo4j-backup -from single://127.0.0.1 -to /tmp/foo -verify false Performing full backup from &amp;#39;single://127.0.0.1&amp;#39; Files copied ................ done Done $ ./bin/neo4j-backup -from single://127.0.0.1 -to /tmp/foo Performing full backup from &amp;#39;single://127.0.0.1&amp;#39; Files copied ................ done Full consistency check .................... 10% .................... 20% .................... 30% .................... 40% .................... 50% .................... 60% .................... 70% .................... 80% .................... 90% .................... 100% Done $ java -cp &amp;#39;lib/*:system/lib/*&amp;#39; org.neo4j.consistency.ConsistencyCheckTool /tmp/foo Full consistency check .................... 10% .</description>
    </item>
    
    <item>
      <title>Neo4j Backup: java.lang.ClassCastException: org.jboss.netty.buffer.BigEndianHeapChannelBuffer cannot be cast to org.neo4j.cluster.com.message.Message</title>
      <link>https://markhneedham.com/blog/2014/01/19/neo4j-backup-java-lang-classcastexception-org-jboss-netty-buffer-bigendianheapchannelbuffer-cannot-be-cast-to-org-neo4j-cluster-com-message-message/</link>
      <pubDate>Sun, 19 Jan 2014 19:29:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/19/neo4j-backup-java-lang-classcastexception-org-jboss-netty-buffer-bigendianheapchannelbuffer-cannot-be-cast-to-org-neo4j-cluster-com-message-message/</guid>
      <description>./neo4j-backup -from single://192.168.1.34 -to /mnt/backup/neo4j-backup online_backup_server=192.168.1.34:6363 ./neo4j-backup -from single://192.168.1.34:6363 -to /mnt/backup/neo4j-backup ./neo4j-backup -from ha://192.168.1.34 -to /mnt/backup/neo4j-backup ha.cluster_server=192.168.1.34:5002 ./neo4j-backup -from ha://192.168.1.34:5002 -to /mnt/backup/neo4j-backup ./neo4j-backup -from ha://192.168.1.34:6362 -to /mnt/backup/neo4j-backup 2014-01-19 19:24:30.842+0000 ERROR [o.n.c.c.NetworkSender]: Receive exception: java.lang.ClassCastException: org.jboss.netty.buffer.BigEndianHeapChannelBuffer cannot be cast to org.neo4j.cluster.com.message.Message at org.neo4j.cluster.com.NetworkSender$NetworkMessageSender.messageReceived(NetworkSender.java:409) ~[neo4j-cluster-2.0.0.jar:2.0.0] at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:107) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:88) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) ~[netty-3.6.3.Final.jar:na] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_45] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_45] at java.</description>
    </item>
    
    <item>
      <title>Learning about bitmaps</title>
      <link>https://markhneedham.com/blog/2014/01/12/learning-about-bitmaps/</link>
      <pubDate>Sun, 12 Jan 2014 17:44:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/12/learning-about-bitmaps/</guid>
      <description>java&amp;gt; int bitmap = 1 &amp;lt;&amp;lt; 31; int bitmap = -2147483648 java&amp;gt; 0X80000000; Integer res16 = -2147483648 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 31); Integer res10 = -2147483648 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 0); Integer res11 = 0 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 1); Integer res12 = 0 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 30); Integer res13 = 0 java&amp;gt; bitmap |= (1 &amp;lt;&amp;lt; 30); Integer res14 = -1073741824 java&amp;gt; 0XC0000000; Integer res15 = -1073741824 java&amp;gt; bitmap ^= (1 &amp;lt;&amp;lt; 30); Integer res2 = -2147483648 </description>
    </item>
    
    <item>
      <title>RxJava: From Future to Observable</title>
      <link>https://markhneedham.com/blog/2013/12/28/rxjava-from-future-to-observable/</link>
      <pubDate>Sat, 28 Dec 2013 21:46:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/12/28/rxjava-from-future-to-observable/</guid>
      <description>public class MergeTimeRx { public static void main( final String[] args ) throws InterruptedException, IOException { String pathToDb = &amp;#34;/tmp/foo&amp;#34;; FileUtils.deleteRecursively( new File( pathToDb ) ); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( pathToDb ); final ExecutionEngine engine = new ExecutionEngine( db ); int numberOfThreads = 50; int numberOfUsers = 10; int numberOfEvents = 50; int iterations = 100; Observable&amp;lt;ExecutionResult&amp;gt; events = processEvents( engine, numberOfUsers, numberOfEvents, numberOfThreads, iterations ); events.subscribe( new Action1&amp;lt;ExecutionResult&amp;gt;() { @Override public void call( ExecutionResult result ) { for ( Map&amp;lt;String, Object&amp;gt; row : result ) { } } } ); .</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Using MERGE with schema indexes/constraints</title>
      <link>https://markhneedham.com/blog/2013/12/23/neo4j-cypher-using-merge-with-schema-indexesconstraints/</link>
      <pubDate>Mon, 23 Dec 2013 13:30:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/12/23/neo4j-cypher-using-merge-with-schema-indexesconstraints/</guid>
      <description>MERGE (u:User {id: {userId}}) MERGE (e:Event {id: {eventId}}) MERGE (u)-[:CREATED_EVENT]-&amp;gt;(m) RETURN u, e import org.neo4j.cypher.javacompat.ExecutionEngine; import org.neo4j.cypher.javacompat.ExecutionResult; import org.neo4j.graphdb.GraphDatabaseService; import org.neo4j.graphdb.factory.GraphDatabaseFactory; import org.neo4j.helpers.collection.MapUtil; import org.neo4j.kernel.impl.util.FileUtils; ... public class MergeTime { public static void main(String[] args) throws Exception { String pathToDb = &amp;#34;/tmp/foo&amp;#34;; FileUtils.deleteRecursively(new File(pathToDb)); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( pathToDb ); final ExecutionEngine engine = new ExecutionEngine( db ); ExecutorService executor = Executors.newFixedThreadPool( 50 ); final Random random = new Random(); final int numberOfUsers = 10; final int numberOfEvents = 50; int iterations = 100; final List&amp;lt;Integer&amp;gt; userIds = generateIds( numberOfUsers ); final List&amp;lt;Integer&amp;gt; eventIds = generateIds( numberOfEvents ); List&amp;lt;Future&amp;gt; merges = new ArrayList&amp;lt;&amp;gt;( ); for ( int i = 0; i &amp;lt; iterations; i++ ) { Integer userId = userIds.</description>
    </item>
    
    <item>
      <title>Supporting production code: Start with the simple things</title>
      <link>https://markhneedham.com/blog/2013/12/20/supporting-production-code-start-with-the-simple-things/</link>
      <pubDate>Fri, 20 Dec 2013 18:07:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/12/20/supporting-production-code-start-with-the-simple-things/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Getting the hang of MERGE</title>
      <link>https://markhneedham.com/blog/2013/12/10/neo4j-cypher-getting-the-hang-of-merge/</link>
      <pubDate>Tue, 10 Dec 2013 23:46:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/12/10/neo4j-cypher-getting-the-hang-of-merge/</guid>
      <description>public class Merge { private static Label PERSON = DynamicLabel.label(&amp;#34;Person&amp;#34;); public static void main(String[] args) throws IOException { File dbFile = new File(&amp;#34;/tmp/test-db&amp;#34;); FileUtils.deleteRecursively(dbFile); Faker faker = new Faker(); Random random = new Random(); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase(dbFile.getPath()); Transaction tx = db.beginTx(); for (int i = 0; i &amp;lt; 100000; i++) { Node person = db.createNode(PERSON); person.setProperty(&amp;#34;name&amp;#34;, faker.name()); person.setProperty(&amp;#34;firstName&amp;#34;, faker.firstName()); person.setProperty(&amp;#34;lastName&amp;#34;, faker.lastName()); person.setProperty(&amp;#34;country&amp;#34;, faker.country()); person.setProperty(&amp;#34;age&amp;#34;, random.nextInt(50)); } tx.success(); tx.close(); } } $ MATCH (p:Person) RETURN p LIMIT 5; ==&amp;gt; +------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | p | ==&amp;gt; +------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | Node[1344]{name:&amp;quot;Benton Swaniawski&amp;quot;,firstName:&amp;quot;Rossie&amp;quot;,lastName:&amp;quot;Ankunding&amp;quot;,country:&amp;quot;Guadeloupe&amp;quot;,age:30} | ==&amp;gt; | Node[1345]{name:&amp;quot;Dagmar Bartell&amp;quot;,firstName:&amp;quot;Ashlynn&amp;quot;,lastName:&amp;quot;Watsica&amp;quot;,country:&amp;quot;French Guiana&amp;quot;,age:35} | ==&amp;gt; | Node[1346]{name:&amp;quot;Ms.</description>
    </item>
    
    <item>
      <title>Neo4j: What is a node?</title>
      <link>https://markhneedham.com/blog/2013/11/29/neo4j-what-is-a-node/</link>
      <pubDate>Fri, 29 Nov 2013 19:50:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/29/neo4j-what-is-a-node/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; nltk.pos_tag(nltk.word_tokenize(&amp;#34;Female friends of friends that somebody could go out with&amp;#34;)) [(&amp;#39;Female&amp;#39;, &amp;#39;NNP&amp;#39;), (&amp;#39;friends&amp;#39;, &amp;#39;NNS&amp;#39;), (&amp;#39;of&amp;#39;, &amp;#39;IN&amp;#39;), (&amp;#39;friends&amp;#39;, &amp;#39;NNS&amp;#39;), (&amp;#39;that&amp;#39;, &amp;#39;WDT&amp;#39;), (&amp;#39;somebody&amp;#39;, &amp;#39;NN&amp;#39;), (&amp;#39;could&amp;#39;, &amp;#39;MD&amp;#39;), (&amp;#39;go&amp;#39;, &amp;#39;VB&amp;#39;), (&amp;#39;out&amp;#39;, &amp;#39;RP&amp;#39;), (&amp;#39;with&amp;#39;, &amp;#39;IN&amp;#39;)] &amp;gt;&amp;gt;&amp;gt; nouns = [&amp;#39;NNS&amp;#39;, &amp;#39;NN&amp;#39;, &amp;#39;NP&amp;#39;, &amp;#39;NNP&amp;#39;] &amp;gt;&amp;gt;&amp;gt; [(word, grammar) for (word, grammar) in nltk.pos_tag(nltk.word_tokenize(&amp;#34;Female friends of friends that somebody could go out with&amp;#34;)) if grammar in nouns] [(&amp;#39;Female&amp;#39;, &amp;#39;NNP&amp;#39;), (&amp;#39;friends&amp;#39;, &amp;#39;NNS&amp;#39;), (&amp;#39;friends&amp;#39;, &amp;#39;NNS&amp;#39;), (&amp;#39;somebody&amp;#39;, &amp;#39;NN&amp;#39;)] &amp;gt;&amp;gt;&amp;gt; sentence = &amp;#34;Goals scored by Arsenal players in a particular season&amp;#34; &amp;gt;&amp;gt;&amp;gt; [(word, grammar) for (word, grammar) in nltk.</description>
    </item>
    
    <item>
      <title>Neo4j: The case of neo4j-shell and the invisible text ft. Windows and the neo4j-desktop </title>
      <link>https://markhneedham.com/blog/2013/11/29/neo4j-the-case-of-windows-neo4j-desktop-and-the-invisible-text/</link>
      <pubDate>Fri, 29 Nov 2013 17:08:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/29/neo4j-the-case-of-windows-neo4j-desktop-and-the-invisible-text/</guid>
      <description>C:\Users\Mark&amp;gt; cd &amp;#34;C:\Program Files\Neo4j Community&amp;#34; C:\Program Files\Neo4j Community&amp;gt;jre\bin\java -cp bin\neo4j-desktop-2.0.0-RC1.jar org.neo4j.shell.StartClient Welcome to the Neo4j Shell! Enter &amp;#39;help&amp;#39; for a list of commands NOTE: Remote Neo4j graph database service &amp;#39;shell&amp;#39; at port 1337 Want bash-like features? throw in jLine (http://jline.sourceforge.net) on the classpath START n = node(*) RETURN COUNT(n); </description>
    </item>
    
    <item>
      <title>Neo4j: Modelling &#39;series&#39; of events</title>
      <link>https://markhneedham.com/blog/2013/11/29/neo4j-modelling-series-of-events/</link>
      <pubDate>Fri, 29 Nov 2013 00:51:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/29/neo4j-modelling-series-of-events/</guid>
      <description>MATCH (g:Game)&amp;lt;-[:in]-(playerInMatch)&amp;lt;-[:played]-(player) WHERE g.name = &amp;quot;Match 4&amp;quot; AND player.name = &amp;quot;Robin Van Persie&amp;quot; WITH playerInMatch MATCH (playerInMatch)&amp;lt;-[:NEXT*1..2]-(previousPlayerInMatch)-[:in]-&amp;gt;(previousGame) RETURN previousGame, previousPlayerInMatch MATCH (g:Game)&amp;lt;-[:in]-(playerInMatch)&amp;lt;-[:played]-(player) WHERE g.name = &amp;quot;Match 4&amp;quot; AND player.name = &amp;quot;Robin Van Persie&amp;quot; WITH playerInMatch MATCH (playerInMatch)&amp;lt;-[n:NEXT*1..2]-(previousPlayerInMatch)-[:in]-&amp;gt;(previousGame) WHERE n.series = &amp;quot;CL&amp;quot; RETURN previousGame, previousPlayerInMatch CREATE (robin:Player {name: &amp;quot;Robin Van Persie&amp;quot;}) CREATE (manUtd:Team {name: &amp;quot;Man Utd&amp;quot;}) CREATE (arsenal:Team {name: &amp;quot;Arsenal&amp;quot;}) CREATE (realSociedad:Team {name: &amp;quot;Real Sociedad&amp;quot;}) CREATE (fulham:Team {name: &amp;quot;Fulham&amp;quot;}) CREATE (stoke:Team {name: &amp;quot;Stoke&amp;quot;}) CREATE (southampton:Team {name: &amp;quot;Southampton&amp;quot;}) CREATE (netherlands:Team {name: &amp;quot;Netherlands&amp;quot;}) CREATE (turkey:Team {name: &amp;quot;Turkey&amp;quot;}) CREATE (hungary:Team {name: &amp;quot;Hungary&amp;quot;}) CREATE (sunderland:Team {name: &amp;quot;Sunderland&amp;quot;}) CREATE (shakhtar:Team {name: &amp;quot;Shakhtar Donetsk&amp;quot;}) CREATE (westBrom:Team {name: &amp;quot;West Brom&amp;quot;}) CREATE (leverkusen:Team {name: &amp;quot;Bayer Leverkusen&amp;quot;}) CREATE (estonia:Team {name: &amp;quot;Estonia&amp;quot;}) CREATE (andorra:Team {name: &amp;quot;Andorra&amp;quot;}) CREATE (premierLeague:Competition {name: &amp;quot;Barclays Premier League&amp;quot;}) CREATE (championsLeague:Competition {name: &amp;quot;Champions League&amp;quot;}) CREATE (worldCupQualifiers:Competition {name: &amp;quot;World Cup Qualifiers&amp;quot;}) CREATE (manUtdVsArsenal:Game {name: &amp;quot;Man Utd vs Arsenal&amp;quot;, date: 1384041600, home_goals: 1, away_goals: 0}) CREATE (robinManUtdVsArsenal {name: &amp;quot;RVP in Man Utd vs Arsenal&amp;quot;, goals: 1}) CREATE UNIQUE (manUtdVsArsenal)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinManUtdVsArsenal)-[:in]-&amp;gt;(manUtdVsArsenal) CREATE UNIQUE (robinManUtdVsArsenal)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (arsenal)&amp;lt;-[:away_team]-(manUtdVsArsenal)-[:home_team]-&amp;gt;(manUtd) CREATE (realSociedadVsManUtd:Game {name: &amp;quot;Real Sociedad vs Man Utd&amp;quot;, date: 1383609600, home_goals: 0, away_goals: 0}) CREATE (robinRealSociedadVsManUtd {name: &amp;quot;RVP in Real Sociedad vs Man Utd&amp;quot;, goals: 0}) CREATE UNIQUE (realSociedadVsManUtd)-[:in_competition]-&amp;gt;(championsLeague) CREATE UNIQUE (robin)-[:played]-(robinRealSociedadVsManUtd)-[:in]-&amp;gt;(realSociedadVsManUtd) CREATE UNIQUE (robinRealSociedadVsManUtd)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (manUtd)&amp;lt;-[:away_team]-(realSociedadVsManUtd)-[:home_team]-&amp;gt;(realSociedad) CREATE (fulhamVsManUtd:Game {name: &amp;quot;Fulham vs Man Utd&amp;quot;, date: 1383350400, home_goals: 1, away_goals: 3}) CREATE (robinFulhamVsManUtd {name: &amp;quot;RVP in Fulham vs Man Utd&amp;quot;, goals: 1}) CREATE UNIQUE (fulhamVsManUtd)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinFulhamVsManUtd)-[:in]-&amp;gt;(fulhamVsManUtd) CREATE UNIQUE (fulhamVsManUtd)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (manUtd)&amp;lt;-[:away_team]-(fulhamVsManUtd)-[:home_team]-&amp;gt;(fulham) CREATE (manUtdVsStoke:Game {name: &amp;quot;Man Utd vs Stoke&amp;quot;, date: 1382745600, home_goals: 3, away_goals: 2}) CREATE (robinManUtdVsStoke {name: &amp;quot;RVP in Man Utd vs Stoke&amp;quot;, goals: 1}) CREATE UNIQUE (manUtdVsStoke)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinManUtdVsStoke)-[:in]-&amp;gt;(manUtdVsStoke) CREATE UNIQUE (manUtdVsStoke)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (stoke)&amp;lt;-[:away_team]-(manUtdVsStoke)-[:home_team]-&amp;gt;(manUtd) CREATE (manUtdVsSouthampton:Game {name: &amp;quot;Man Utd vs Southampton&amp;quot;, date: 1382140800, home_goals: 1, away_goals: 1}) CREATE (robinManUtdVsSouthampton {name: &amp;quot;RVP in Man Utd vs Southampton&amp;quot;, goals: 1}) CREATE UNIQUE (manUtdVsSouthampton)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinManUtdVsSouthampton)-[:in]-&amp;gt;(manUtdVsSouthampton) CREATE UNIQUE (manUtdVsSouthampton)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (southampton)&amp;lt;-[:away_team]-(manUtdVsSouthampton)-[:home_team]-&amp;gt;(manUtd) CREATE (turkeyVsNetherlands:Game {name: &amp;quot;Turkey vs Netherlands&amp;quot;, date: 1381795200, home_goals: 0, away_goals: 2}) CREATE (robinTurkeyVsNetherlands {name: &amp;quot;RVP in Turkey vs Netherlands&amp;quot;, goals: 0}) CREATE UNIQUE (turkeyVsNetherlands)-[:in_competition]-&amp;gt;(worldCupQualifiers) CREATE UNIQUE (robin)-[:played]-(robinTurkeyVsNetherlands)-[:in]-&amp;gt;(turkeyVsNetherlands) CREATE UNIQUE (turkeyVsNetherlands)-[:for]-&amp;gt;(netherlands) CREATE UNIQUE (netherlands)&amp;lt;-[:away_team]-(turkeyVsNetherlands)-[:home_team]-&amp;gt;(turkey) CREATE (netherlandsVsHungary:Game {name: &amp;quot;Netherlands vs Hungary&amp;quot;, date: 1381449600, home_goals: 8, away_goals: 1}) CREATE (robinNetherlandsVsHungary {name: &amp;quot;RVP in Netherlands vs Hungary&amp;quot;, goals: 3}) CREATE UNIQUE (netherlandsVsHungary)-[:in_competition]-&amp;gt;(worldCupQualifiers) CREATE UNIQUE (robin)-[:played]-(robinNetherlandsVsHungary)-[:in]-&amp;gt;(netherlandsVsHungary) CREATE UNIQUE (netherlandsVsHungary)-[:for]-&amp;gt;(netherlands) CREATE UNIQUE (hungary)&amp;lt;-[:away_team]-(netherlandsVsHungary)-[:home_team]-&amp;gt;(netherlands) CREATE (sunderlandVsManUtd:Game {name: &amp;quot;Sunderland vs Man Utd&amp;quot;, date: 1380931200, home_goals: 1, away_goals: 2}) CREATE (robinSunderlandVsManUtd {name: &amp;quot;RVP in Sunderland vs Man Utd&amp;quot;, goals: 0}) CREATE UNIQUE (sunderlandVsManUtd)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinSunderlandVsManUtd)-[:in]-&amp;gt;(sunderlandVsManUtd) CREATE UNIQUE (sunderlandVsManUtd)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (manUtd)&amp;lt;-[:away_team]-(sunderlandVsManUtd)-[:home_team]-&amp;gt;(sunderland) CREATE (shakhtarVsManUtd:Game {name: &amp;quot;Shaktar Donetsk vs Man Utd&amp;quot;, date: 1380672000, home_goals: 1, away_goals: 1}) CREATE (robinShaktarVsManUtd {name: &amp;quot;RVP in Shaktar Donetsk vs Man Utd&amp;quot;, goals: 0}) CREATE UNIQUE (shakhtarVsManUtd)-[:in_competition]-&amp;gt;(championsLeague) CREATE UNIQUE (robin)-[:played]-(robinShaktarVsManUtd)-[:in]-&amp;gt;(shakhtarVsManUtd) CREATE UNIQUE (shakhtarVsManUtd)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (manUtd)&amp;lt;-[:away_team]-(shakhtarVsManUtd)-[:home_team]-&amp;gt;(shakhtar) CREATE (manUtdVsWestBrom:Game {name: &amp;quot;Man Utd vs West Brom&amp;quot;, date: 1380326400, home_goals: 1, away_goals: 2}) CREATE (robinManUtdVsWestBrom {name: &amp;quot;RVP in Man Utd vs West Brom&amp;quot;, goals: 0}) CREATE UNIQUE (manUtdVsWestBrom)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinManUtdVsWestBrom)-[:in]-&amp;gt;(manUtdVsWestBrom) CREATE UNIQUE (manUtdVsWestBrom)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (westBrom)&amp;lt;-[:away_team]-(manUtdVsWestBrom)-[:home_team]-&amp;gt;(manUtd) CREATE (manUtdVsLeverkusen:Game {name: &amp;quot;Man Utd vs Bayer Leverkusen&amp;quot;, date: 1379376000, home_goals: 4, away_goals: 2}) CREATE (robinManUtdVsLeverkusen {name: &amp;quot;RVP in Man Utd vs Bayer Leverkusen&amp;quot;, goals: 1}) CREATE UNIQUE (manUtdVsLeverkusen)-[:in_competition]-&amp;gt;(championsLeague) CREATE UNIQUE (robin)-[:played]-(robinManUtdVsLeverkusen)-[:in]-&amp;gt;(manUtdVsLeverkusen) CREATE UNIQUE (robinManUtdVsLeverkusen)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (leverkusen)&amp;lt;-[:away_team]-(manUtdVsLeverkusen)-[:home_team]-&amp;gt;(manUtd) CREATE (manUtdVsPalace:Game {name: &amp;quot;Man Utd vs Crystal Palace&amp;quot;, date: 1379116800, home_goals: 2, away_goals: 0}) CREATE (robinManUtdVsPalace {name: &amp;quot;RVP in Man Utd vs Crystal Palace&amp;quot;, goals: 1}) CREATE UNIQUE (manUtdVsPalace)-[:in_competition]-&amp;gt;(premierLeague) CREATE UNIQUE (robin)-[:played]-(robinManUtdVsPalace)-[:in]-&amp;gt;(manUtdVsPalace) CREATE UNIQUE (manUtdVsPalace)-[:for]-&amp;gt;(manUtd) CREATE UNIQUE (palace)&amp;lt;-[:away_team]-(manUtdVsPalace)-[:home_team]-&amp;gt;(manUtd) CREATE (andorraVsNetherlands:Game {name: &amp;quot;Andorra vs Netherlands&amp;quot;, date: 1378771200, home_goals: 0, away_goals: 2}) CREATE (robinAndorraVsNetherlands {name: &amp;quot;RVP in Andorra vs Netherlands&amp;quot;, goals: 2}) CREATE UNIQUE (andorraVsNetherlands)-[:in_competition]-&amp;gt;(worldCupQualifiers) CREATE UNIQUE (robin)-[:played]-(robinAndorraVsNetherlands)-[:in]-&amp;gt;(andorraVsNetherlands) CREATE UNIQUE (andorraVsNetherlands)-[:for]-&amp;gt;(netherlands) CREATE UNIQUE (netherlands)&amp;lt;-[:away_team]-(andorraVsNetherlands)-[:home_team]-&amp;gt;(andorra) CREATE (netherlandsVsEstonia:Game {name: &amp;quot;Netherlands vs Estonia&amp;quot;, date: 1378425600, home_goals: 2, away_goals: 2}) CREATE (robinNetherlandsVsEstonia {name: &amp;quot;RVP in Netherlands vs Estonia&amp;quot;, goals: 1}) CREATE UNIQUE (netherlandsVsEstonia)-[:in_competition]-&amp;gt;(worldCupQualifiers) CREATE UNIQUE (robin)-[:played]-(robinNetherlandsVsEstonia)-[:in]-&amp;gt;(netherlandsVsEstonia) CREATE UNIQUE (netherlandsVsEstonia)-[:for]-&amp;gt;(netherlands) CREATE UNIQUE (estonia)&amp;lt;-[:away_team]-(netherlandsVsEstonia)-[:home_team]-&amp;gt;(netherlands) MATCH (p:Player)-[:played]-&amp;gt;(stats)-[:in]-&amp;gt;(game)-[:in_competition]-&amp;gt;(c) WHERE p.</description>
    </item>
    
    <item>
      <title>Neo4j: The &#39;thinking in graphs&#39; curve</title>
      <link>https://markhneedham.com/blog/2013/11/27/neo4j-the-thinking-in-graphs-curve/</link>
      <pubDate>Wed, 27 Nov 2013 23:09:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/27/neo4j-the-thinking-in-graphs-curve/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j: Using aliases to handle messy data</title>
      <link>https://markhneedham.com/blog/2013/11/26/neo4j-using-aliases-to-handle-messy-data/</link>
      <pubDate>Tue, 26 Nov 2013 00:12:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/26/neo4j-using-aliases-to-handle-messy-data/</guid>
      <description>MATCH (stadium:Stadium)&amp;lt;-[:in_stadium]-(game) RETURN stadium.name, count(game) AS games ORDER BY games DESC ==&amp;gt; +-------------------------------+ ==&amp;gt; | stadium.name | games | ==&amp;gt; +-------------------------------+ ==&amp;gt; | &amp;#34;Craven Cottage&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Villa Park&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Anfield&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Stamford Bridge&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Britannia Stadium&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Emirates Stadium&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Etihad Stadium&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Stadium of Light&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Old Trafford&amp;#34; | 57 | ==&amp;gt; | &amp;#34;The Hawthorns&amp;#34; | 57 | ==&amp;gt; | &amp;#34;White Hart Lane&amp;#34; | 57 | ==&amp;gt; | &amp;#34;Goodison Park&amp;#34; | 57 | ==&amp;gt; | &amp;#34;DW Stadium&amp;#34; | 39 | ==&amp;gt; | &amp;#34;Molineux Stadium&amp;#34; | 38 | ==&amp;gt; | &amp;#34;Liberty Stadium&amp;#34; | 38 | ==&amp;gt; | &amp;#34;Ewood Park&amp;#34; | 38 | ==&amp;gt; | &amp;#34;Carrow Road&amp;#34; | 38 | ==&amp;gt; | &amp;#34;Reebok Stadium&amp;#34; | 38 | ==&amp;gt; | &amp;#34;Loftus Road Stadium&amp;#34; | 37 | ==&amp;gt; | &amp;#34;St James&amp;#39; Park&amp;#34; | 34 | ==&amp;gt; | &amp;#34;Upton Park&amp;#34; | 33 | ==&amp;gt; | &amp;#34;Bloomfield Road&amp;#34; | 19 | ==&amp;gt; | &amp;#34;Madejski Stadium&amp;#34; | 19 | ==&amp;gt; | &amp;#34;St.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0-M06 -&gt; 2.0.0-RC1: Optional relationships with OPTIONAL MATCH</title>
      <link>https://markhneedham.com/blog/2013/11/23/neo4j-2-0-0-m06-2-0-0-rc1-optional-relationships-with-optional-match/</link>
      <pubDate>Sat, 23 Nov 2013 22:54:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/23/neo4j-2-0-0-m06-2-0-0-rc1-optional-relationships-with-optional-match/</guid>
      <description>CREATE (steve:Person {name: &amp;quot;Steve&amp;quot;}) CREATE (john:Person {name: &amp;quot;John&amp;quot;}) CREATE (david:Person {name: &amp;quot;David&amp;quot;}) CREATE (paul:Person {name: &amp;quot;Paul&amp;quot;}) CREATE (sam:Person {name: &amp;quot;Sam&amp;quot;}) CREATE (londonOffice:Office {name: &amp;quot;London Office&amp;quot;}) CREATE UNIQUE (steve)-[:WORKS_IN]-&amp;gt;(londonOffice) CREATE UNIQUE (john)-[:WORKS_IN]-&amp;gt;(londonOffice) CREATE UNIQUE (david)-[:WORKS_IN]-&amp;gt;(londonOffice) CREATE UNIQUE (paul)-[:WORKS_IN]-&amp;gt;(londonOffice) CREATE UNIQUE (sam)-[:WORKS_IN]-&amp;gt;(londonOffice) CREATE UNIQUE (steve)-[:COLLEAGUES_WITH]-&amp;gt;(john) CREATE UNIQUE (steve)-[:COLLEAGUES_WITH]-&amp;gt;(david) MATCH (person:Person)-[:WORKS_IN]-&amp;gt;(office)&amp;lt;-[:WORKS_IN]-(potentialColleague) WHERE person.name = &amp;quot;Steve&amp;quot; AND office.name = &amp;quot;London Office&amp;quot; WITH person, potentialColleague MATCH (potentialColleague)-[c?:COLLEAGUES_WITH]-(person) WHERE c IS null RETURN potentialColleague ==&amp;gt; +----------------------+ ==&amp;gt; | potentialColleague | ==&amp;gt; +----------------------+ ==&amp;gt; | Node[4]{name:&amp;#34;Paul&amp;#34;} | ==&amp;gt; | Node[5]{name:&amp;#34;Sam&amp;#34;} | ==&amp;gt; +----------------------+ ==&amp;gt; SyntaxException: Question mark is no longer used for optional patterns - use OPTIONAL MATCH instead (line 1, column 199) ==&amp;gt; &amp;#34;MATCH (person:Person)-[:WORKS_IN]-&amp;gt;(office)&amp;lt;-[:WORKS_IN]-(potentialColleague) WHERE person.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0-M06 -&gt; 2.0.0-RC1: Working with path expressions</title>
      <link>https://markhneedham.com/blog/2013/11/23/neo4j-2-0-0-m06-2-0-0-rc1-working-with-path-expressions/</link>
      <pubDate>Sat, 23 Nov 2013 10:30:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/23/neo4j-2-0-0-m06-2-0-0-rc1-working-with-path-expressions/</guid>
      <description>MATCH (player:Player)-[:played|subbed_on]-&amp;gt;stats WITH stats.goals AS goals, player, stats-[:in]-&amp;gt;()-[:on_tv]-() as onTv RETURN player.name, SUM(CASE WHEN onTv = FALSE THEN goals ELSE 0 END) as nonTvGoals, SUM(CASE WHEN onTv = TRUE THEN goals ELSE 0 END) as tvGoals, SUM(goals) as allGoals ORDER BY tvGoals DESC LIMIT 10 ==&amp;gt; +------------------------------------------------------+ ==&amp;gt; | player.name | nonTvGoals | tvGoals | allGoals | ==&amp;gt; +------------------------------------------------------+ ==&amp;gt; | &amp;#34;Robin Van Persie&amp;#34; | 11 | 15 | 26 | ==&amp;gt; | &amp;#34;Gareth Bale&amp;#34; | 8 | 13 | 21 | ==&amp;gt; | &amp;#34;Luis Suárez&amp;#34; | 12 | 11 | 23 | ==&amp;gt; | &amp;#34;Theo Walcott&amp;#34; | 5 | 9 | 14 | ==&amp;gt; | &amp;#34;Demba Ba&amp;#34; | 7 | 8 | 15 | ==&amp;gt; | &amp;#34;Santi Cazorla&amp;#34; | 5 | 7 | 12 | ==&amp;gt; | &amp;#34;Edin Dzeko&amp;#34; | 7 | 7 | 14 | ==&amp;gt; | &amp;#34;Carlos Tevez&amp;#34; | 5 | 6 | 11 | ==&amp;gt; | &amp;#34;Juan Mata&amp;#34; | 6 | 6 | 12 | ==&amp;gt; | &amp;#34;Steven Gerrard&amp;#34; | 3 | 6 | 9 | ==&amp;gt; +------------------------------------------------------+ ==&amp;gt; +--------------------------------------------------------+ ==&amp;gt; | player.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating relationships between nodes from adjacent rows in a query</title>
      <link>https://markhneedham.com/blog/2013/11/22/neo4j-cypher-creating-relationships-between-nodes-from-adjacent-rows-in-a-query/</link>
      <pubDate>Fri, 22 Nov 2013 22:45:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/22/neo4j-cypher-creating-relationships-between-nodes-from-adjacent-rows-in-a-query/</guid>
      <description>CREATE (:Season {name: &amp;quot;2013/2014&amp;quot;, timestamp: 1375315200}) CREATE (:Season {name: &amp;quot;2012/2013&amp;quot;, timestamp: 1343779200}) CREATE (:Season {name: &amp;quot;2011/2012&amp;quot;, timestamp: 1312156800}) CREATE (:Season {name: &amp;quot;2010/2011&amp;quot;, timestamp: 1280620800}) CREATE (:Season {name: &amp;quot;2009/2010&amp;quot;, timestamp: 1249084800}) // return all the matches for 2010/2011, 2011/2012, 2012/2013 MATCH (base:Season)&amp;lt;-[:NEXT*0..2]-(s) WHERE base.name = &amp;quot;2012/2013&amp;quot; MATCH s-[:contains]-&amp;gt;game RETURN game MATCH (s:Season) WITH s ORDER BY s.timestamp RETURN s ==&amp;gt; +------------------------------------------------+ ==&amp;gt; | s | ==&amp;gt; +------------------------------------------------+ ==&amp;gt; | Node[0]{name:&amp;#34;2009/2010&amp;#34;,timestamp:1249084800} | ==&amp;gt; | Node[1]{name:&amp;#34;2010/2011&amp;#34;,timestamp:1280620800} | ==&amp;gt; | Node[2]{name:&amp;#34;2011/2012&amp;#34;,timestamp:1312156800} | ==&amp;gt; | Node[3]{name:&amp;#34;2012/2013&amp;#34;,timestamp:1343779200} | ==&amp;gt; | Node[4]{name:&amp;#34;2013/2014&amp;#34;,timestamp:1375315200} | ==&amp;gt; +------------------------------------------------+ MATCH (s:Season) WITH s ORDER BY s.</description>
    </item>
    
    <item>
      <title>Java: Schedule a job to run on a time interval</title>
      <link>https://markhneedham.com/blog/2013/11/17/java-schedule-a-job-to-run-on-a-time-interval/</link>
      <pubDate>Sun, 17 Nov 2013 22:58:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/17/java-schedule-a-job-to-run-on-a-time-interval/</guid>
      <description>public class MyUpgradeTest { @Test public void shouldUpgradeFromOneVersionToAnother() throws InterruptedException { ScheduledExecutorService scheduledExecutorService = Executors.newSingleThreadScheduledExecutor(); scheduledExecutorService.scheduleAtFixedRate( new LogAllTheThings(), 0, 1, TimeUnit.SECONDS ); Thread.sleep(10000); // do upgrade of cluster  scheduledExecutorService.shutdown(); } static class LogAllTheThings implements Runnable { @Override public void run() { Date time = new Date( System.currentTimeMillis() ); try { Map&amp;lt;String, Object&amp;gt; masterProperties = selectedProperties( client(), URI.create( &amp;#34;http://localhost:7474/&amp;#34; ) ); System.out.println( String.format( &amp;#34;%s: %s&amp;#34;, time, masterProperties ) ); } catch ( Exception ignored ) { ignored.</description>
    </item>
    
    <item>
      <title>Git: Viewing the last commit on all the tags</title>
      <link>https://markhneedham.com/blog/2013/11/16/git-viewing-the-last-commit-on-all-the-tags/</link>
      <pubDate>Sat, 16 Nov 2013 21:58:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/16/git-viewing-the-last-commit-on-all-the-tags/</guid>
      <description>$ git clone git@github.com:neo4j/neo4j.git $ git fetch -t remote: Counting objects: 542, done. remote: Compressing objects: 100% (231/231), done. remote: Total 287 (delta 247), reused 84 (delta 50) Receiving objects: 100% (287/287), 42.85 KiB, done. Resolving deltas: 100% (247/247), completed with 191 local objects. From github.com:neo4j/neo4j * [new tag] 1.9.2 -&amp;gt; 1.9.2 * [new tag] 1.9.5 -&amp;gt; 1.9.5 * [new tag] 2.0.0-M06 -&amp;gt; 2.0.0-M06 $ git tag | head -n5 1.</description>
    </item>
    
    <item>
      <title>Python: Making scikit-learn and pandas play nice</title>
      <link>https://markhneedham.com/blog/2013/11/09/python-making-scikit-learn-and-pandas-play-nice/</link>
      <pubDate>Sat, 09 Nov 2013 13:58:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/09/python-making-scikit-learn-and-pandas-play-nice/</guid>
      <description>import pandas as pd from sklearn.ensemble import ExtraTreesClassifier from sklearn.cross_validation import cross_val_score train_df = pd.read_csv(&amp;#34;train.csv&amp;#34;) et = ExtraTreesClassifier(n_estimators=100, max_depth=None, min_samples_split=1, random_state=0) columns = [&amp;#34;Fare&amp;#34;, &amp;#34;Pclass&amp;#34;] labels = train_df[&amp;#34;Survived&amp;#34;].values features = train_df[list(columns)].values et_score = cross_val_score(et, features, labels, n_jobs=-1).mean() print(&amp;#34;{0} -&amp;gt; ET: {1})&amp;#34;.format(columns, et_score)) $ head -n5 train.csv PassengerId,Survived,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked 1,0,3,&amp;#34;Braund, Mr. Owen Harris&amp;#34;,male,22,1,0,A/5 21171,7.25,,S 2,1,1,&amp;#34;Cumings, Mrs. John Bradley (Florence Briggs Thayer)&amp;#34;,female,38,1,0,PC 17599,71.2833,C85,C 3,1,3,&amp;#34;Heikkinen, Miss. Laina&amp;#34;,female,26,0,0,STON/O2. 3101282,7.925,,S 4,1,1,&amp;#34;Futrelle, Mrs. Jacques Heath (Lily May Peel)&amp;#34;,female,35,1,0,113803,53.</description>
    </item>
    
    <item>
      <title>Python: Scoping variables to use with timeit</title>
      <link>https://markhneedham.com/blog/2013/11/09/python-scoping-variables-to-use-with-timeit/</link>
      <pubDate>Sat, 09 Nov 2013 11:01:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/09/python-scoping-variables-to-use-with-timeit/</guid>
      <description>import query_profiler as qp attempts = [ {&amp;#34;query&amp;#34;: &amp;#39;&amp;#39;&amp;#39;MATCH (player:Player)-[:played]-&amp;gt;stats-[:in]-&amp;gt;game, stats-[:for]-&amp;gt;team WHERE game&amp;lt;-[:away_team]-team RETURN player.name, SUM(stats.goals) AS goals ORDER BY goals DESC LIMIT 10&amp;#39;&amp;#39;&amp;#39;} ] qp.profile(attempts, iterations=5, runs=3) from py2neo import neo4j import timeit graph_db = neo4j.GraphDatabaseService() def run_query(query, params): query = neo4j.CypherQuery(graph_db, query) return query.execute(**params).data def profile(attempts, iterations=10, runs=3): print &amp;#34;&amp;#34; for attempt in attempts: query = attempt[&amp;#34;query&amp;#34;] potential_params = attempt.get(&amp;#34;params&amp;#34;) params = {} if potential_params == None else potential_params timings = timeit.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0-M06: Applying Wes Freeman&#39;s Cypher Optimisation tricks</title>
      <link>https://markhneedham.com/blog/2013/11/08/neo4j-2-0-0-m06-applying-wes-freemans-cypher-optimisation-tricks/</link>
      <pubDate>Fri, 08 Nov 2013 09:40:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/08/neo4j-2-0-0-m06-applying-wes-freemans-cypher-optimisation-tricks/</guid>
      <description>MATCH (player:Player)-[:played]-&amp;gt;stats-[:in]-&amp;gt;game, stats-[:for]-&amp;gt;team WHERE game&amp;lt;-[:away_team]-team RETURN player.name, SUM(stats.goals) AS goals ORDER BY goals DESC LIMIT 10 import query_profiler as qp attempts = [ {&amp;#34;query&amp;#34;: &amp;#39;&amp;#39;&amp;#39;MATCH (player:Player)-[:played]-&amp;gt;stats-[:in]-&amp;gt;game, stats-[:for]-&amp;gt;team WHERE game&amp;lt;-[:away_team]-team RETURN player.name, SUM(stats.goals) AS goals ORDER BY goals DESC LIMIT 10&amp;#39;&amp;#39;&amp;#39;} ] qp.profile(attempts, iterations=5, runs=3) $ python top-away-scorers.py MATCH (player:Player)-[:played]-&amp;gt;stats-[:in]-&amp;gt;game, stats-[:for]-&amp;gt;team WHERE game&amp;lt;-[:away_team]-team RETURN player.name, SUM(stats.goals) AS goals ORDER BY goals DESC LIMIT 10 Min 0.682677030563 Mean 0.689069747925 95% 0.697918820381 Max 0.</description>
    </item>
    
    <item>
      <title>Python: Generate all combinations of a list</title>
      <link>https://markhneedham.com/blog/2013/11/06/python-generate-all-combinations-of-a-list/</link>
      <pubDate>Wed, 06 Nov 2013 07:25:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/06/python-generate-all-combinations-of-a-list/</guid>
      <description>all_columns = [&amp;#34;Fare&amp;#34;, &amp;#34;Sex&amp;#34;, &amp;#34;Pclass&amp;#34;, &amp;#39;Embarked&amp;#39;] &amp;gt;&amp;gt;&amp;gt; import itertools as it &amp;gt;&amp;gt;&amp;gt; list(it.combinations(all_columns, 3)) [(&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;)] &amp;gt;&amp;gt;&amp;gt; list(it.combinations(all_columns, 2)) + list(it.combinations(all_columns, 3)) [(&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;)] all_the_features = [] for r in range(1, len(all_columns) + 1): all_the_features + list(it.combinations(all_columns, r)) &amp;gt;&amp;gt;&amp;gt; all_the_features [(&amp;#39;Fare&amp;#39;,), (&amp;#39;Sex&amp;#39;,), (&amp;#39;Pclass&amp;#39;,), (&amp;#39;Embarked&amp;#39;,), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;), (&amp;#39;Fare&amp;#39;, &amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;Embarked&amp;#39;)] &amp;gt;&amp;gt;&amp;gt; reduce(lambda acc, x: acc + list(it.</description>
    </item>
    
    <item>
      <title>Python: matplotlib -  Import error ft2font Symbol not found: _FT_Attach_File (Mac OS X 10.8.3/Mountain Lion)</title>
      <link>https://markhneedham.com/blog/2013/11/03/python-matplotlib-import-error-ft2font-symbol-not-found-_ft_attach_file-mac-os-x-10-8-3mountain-lion/</link>
      <pubDate>Sun, 03 Nov 2013 11:14:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/03/python-matplotlib-import-error-ft2font-symbol-not-found-_ft_attach_file-mac-os-x-10-8-3mountain-lion/</guid>
      <description>import pylab as pl ImportError: dlopen(/Library/Python/2.7/site-packages/matplotlib/ft2font.so, 2): Symbol not found: _FT_Attach_File matplotlib 1.2.1 can&amp;#39;t be installed on this disk. matplotlib requires System Python 2.7 to install. sudo brew install pkgconfig cd /tmp git clone git://github.com/matplotlib/matplotlib.git cd matplotlib/ python setup.py build sudo python setup.py install &amp;gt;&amp;gt;&amp;gt; from sklearn.tree import DecisionTreeRegressor Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 2, in &amp;lt;module&amp;gt; ImportError: No module named sklearn.tree $ sudo easy_install scikit-learn &amp;gt;&amp;gt;&amp;gt; from sklearn.</description>
    </item>
    
    <item>
      <title>Neo4j: A first attempt at retail product substitution</title>
      <link>https://markhneedham.com/blog/2013/11/01/neo4j-a-first-attempt-at-retail-product-substitution/</link>
      <pubDate>Fri, 01 Nov 2013 20:41:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/11/01/neo4j-a-first-attempt-at-retail-product-substitution/</guid>
      <description>CREATE (bakedBeans :Category {name: &amp;quot;Baked Beans&amp;quot;} ) CREATE (fruit :Category {name: &amp;quot;Fruit&amp;quot;} ) CREATE (hbb :Product {name: &amp;quot;Heinz Baked Beans&amp;quot;, type: &amp;quot;brand&amp;quot;} ) CREATE (bbb :Product {name: &amp;quot;Branstone Baked Beans&amp;quot;, type: &amp;quot;brand&amp;quot;} ) CREATE (sbb :Product {name: &amp;quot;Sainsbury&#39;s Baked Beans&amp;quot;, type: &amp;quot;own&amp;quot;} ) CREATE (apple :Product {name: &amp;quot;Bag of Apples&amp;quot;} ) CREATE UNIQUE (hbb)-[:HAS_CATEGORY]-&amp;gt;(bakedBeans) CREATE UNIQUE (bbb)-[:HAS_CATEGORY]-&amp;gt;(bakedBeans) CREATE UNIQUE (sbb)-[:HAS_CATEGORY]-&amp;gt;(bakedBeans) CREATE (southwark :Store {name: &amp;quot;Southwark&amp;quot;}) CREATE UNIQUE (southwark)-[:HAS_IN_STOCK {availability: 0}]-&amp;gt;(hbb) CREATE UNIQUE (southwark)-[:HAS_IN_STOCK {availability: 2}]-&amp;gt;(bbb) CREATE UNIQUE (southwark)-[:HAS_IN_STOCK {availability: 10}]-&amp;gt;(sbb) CREATE UNIQUE (southwark)-[:HAS_IN_STOCK {availability: 10}]-&amp;gt;(apple) CREATE (mark :Person {name: &amp;quot;Mark&amp;quot;}) CREATE (order1 :Order {id: 1, date: 1380884632}) CREATE UNIQUE (order1)-[:CONTAINS {count: 1}]-&amp;gt;(hbb) CREATE UNIQUE (order1)-[:CONTAINS {count: 5}]-&amp;gt;(apple) CREATE UNIQUE (mark)-[:PLACED_ORDER]-&amp;gt;(order1) CREATE (order2 :Order {id: 2, date: 1380885051}) CREATE UNIQUE (order2)-[:CONTAINS {count: 1}]-&amp;gt;bbb CREATE UNIQUE (mark)-[:PLACED_ORDER]-&amp;gt;(order2) // Create the order CREATE (order3:Order {id: 3, date: 1380895051}) WITH order3 // Assign the order to Mark MATCH (p:Person) WHERE p.</description>
    </item>
    
    <item>
      <title>Kaggle Titanic: Python pandas attempt</title>
      <link>https://markhneedham.com/blog/2013/10/30/kaggle-titanic-python-pandas-attempt/</link>
      <pubDate>Wed, 30 Oct 2013 07:26:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/30/kaggle-titanic-python-pandas-attempt/</guid>
      <description>import pandas as pd def addrow(df, row): return df.append(pd.DataFrame(row), ignore_index=True) def fare_in_bucket(fare, fare_bracket_size, bucket): return (fare &amp;gt; bucket * fare_bracket_size) &amp;amp; (fare &amp;lt;= ((bucket+1) * fare_bracket_size)) def build_survival_table(training_file): fare_ceiling = 40 train_df = pd.read_csv(training_file) train_df[train_df[&amp;#39;Fare&amp;#39;] &amp;gt;= 39.0] = 39.0 fare_bracket_size = 10 number_of_price_brackets = fare_ceiling / fare_bracket_size number_of_classes = 3 #There were 1st, 2nd and 3rd classes on board  survival_table = pd.DataFrame(columns=[&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;PriceDist&amp;#39;, &amp;#39;Survived&amp;#39;, &amp;#39;NumberOfPeople&amp;#39;]) for pclass in range(1, number_of_classes + 1): # add 1 to handle 0 start for bucket in range(0, number_of_price_brackets): for sex in [&amp;#39;female&amp;#39;, &amp;#39;male&amp;#39;]: survival = train_df[(train_df[&amp;#39;Sex&amp;#39;] == sex) &amp;amp; (train_df[&amp;#39;Pclass&amp;#39;] == pclass) &amp;amp; fare_in_bucket(train_df[&amp;#34;Fare&amp;#34;], fare_bracket_size, bucket)] row = [dict(Pclass=pclass, Sex=sex, PriceDist = bucket, Survived = round(survival[&amp;#39;Survived&amp;#39;].</description>
    </item>
    
    <item>
      <title>pandas: Adding a column to a DataFrame (based on another DataFrame)</title>
      <link>https://markhneedham.com/blog/2013/10/30/pandas-adding-a-column-to-a-dataframe-based-on-another-dataframe/</link>
      <pubDate>Wed, 30 Oct 2013 06:12:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/30/pandas-adding-a-column-to-a-dataframe-based-on-another-dataframe/</guid>
      <description>def addrow(df, row): return df.append(pd.DataFrame(row), ignore_index=True) customers = pd.DataFrame(columns=[&amp;#39;PassengerId&amp;#39;,&amp;#39;Pclass&amp;#39;,&amp;#39;Name&amp;#39;,&amp;#39;Sex&amp;#39;,&amp;#39;Fare&amp;#39;]) customers = addrow(customers, [dict(PassengerId=892, Pclass=3, Name=&amp;#34;Kelly, Mr. James&amp;#34;, Sex=&amp;#34;male&amp;#34;, Fare=7.8292)]) customers = addrow(customers, [dict(PassengerId=893, Pclass=3, Name=&amp;#34;Wilkes, Mrs. James (Ellen Needs)&amp;#34;, Sex=&amp;#34;female&amp;#34;, Fare=7)]) &amp;gt;&amp;gt;&amp;gt; customers Fare Name PassengerId Pclass Sex 0 7.8292 Kelly, Mr. James 892 3 male 1 7.0000 Wilkes, Mrs. James (Ellen Needs) 893 3 female survival_table = pd.DataFrame(columns=[&amp;#39;Sex&amp;#39;, &amp;#39;Pclass&amp;#39;, &amp;#39;PriceDist&amp;#39;, &amp;#39;Survived&amp;#39;]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;female&amp;#34;, PriceDist = 0, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;male&amp;#34;, PriceDist = 0, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;female&amp;#34;, PriceDist = 1, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;male&amp;#34;, PriceDist = 1, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;female&amp;#34;, PriceDist = 2, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;male&amp;#34;, PriceDist = 2, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;female&amp;#34;, PriceDist = 3, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=1, Sex=&amp;#34;male&amp;#34;, PriceDist = 3, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;female&amp;#34;, PriceDist = 0, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;male&amp;#34;, PriceDist = 0, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;female&amp;#34;, PriceDist = 1, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;male&amp;#34;, PriceDist = 1, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;female&amp;#34;, PriceDist = 2, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;male&amp;#34;, PriceDist = 2, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;female&amp;#34;, PriceDist = 3, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=2, Sex=&amp;#34;male&amp;#34;, PriceDist = 3, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;female&amp;#34;, PriceDist = 0, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;male&amp;#34;, PriceDist = 0, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;female&amp;#34;, PriceDist = 1, Survived = 1)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;male&amp;#34;, PriceDist = 1, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;female&amp;#34;, PriceDist = 2, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;male&amp;#34;, PriceDist = 2, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;female&amp;#34;, PriceDist = 3, Survived = 0)]) survival_table = addrow(survival_table, [dict(Pclass=3, Sex=&amp;#34;male&amp;#34;, PriceDist = 3, Survived = 0)]) &amp;gt;&amp;gt;&amp;gt; survival_table Pclass PriceDist Sex Survived 0 1 0 female 0 1 1 0 male 0 2 1 1 female 0 3 1 1 male 0 4 1 2 female 1 5 1 2 male 0 6 1 3 female 1 7 1 3 male 0 8 2 0 female 0 9 2 0 male 0 10 2 1 female 1 11 2 1 male 0 12 2 2 female 1 13 2 2 male 0 14 2 3 female 1 15 2 3 male 0 16 3 0 female 1 17 3 0 male 0 18 3 1 female 1 19 3 1 male 0 20 3 2 female 0 21 3 2 male 0 22 3 3 female 0 23 3 3 male 0 def select_bucket(fare): if (fare &amp;gt;= 0 and fare &amp;lt; 10): return 0 elif (fare &amp;gt;= 10 and fare &amp;lt; 20): return 1 elif (fare &amp;gt;= 20 and fare &amp;lt; 30): return 2 else: return 3 def calculate_survival(survival_table, customer): survival_row = survival_table[(survival_table[&amp;#34;Sex&amp;#34;] == customer[&amp;#34;Sex&amp;#34;]) &amp;amp; (survival_table[&amp;#34;Pclass&amp;#34;] == customer[&amp;#34;Pclass&amp;#34;]) &amp;amp; (survival_table[&amp;#34;PriceDist&amp;#34;] == select_bucket(customer[&amp;#34;Fare&amp;#34;]))] return survival_row[&amp;#34;Survived&amp;#34;] &amp;gt;&amp;gt;&amp;gt; customers[&amp;#34;Survived&amp;#34;] = customers.</description>
    </item>
    
    <item>
      <title>Thinking Fast and Slow - Daniel Kahneman: Book Review</title>
      <link>https://markhneedham.com/blog/2013/10/27/thinking-fast-and-slow-daniel-kahneman-book-review/</link>
      <pubDate>Sun, 27 Oct 2013 22:53:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/27/thinking-fast-and-slow-daniel-kahneman-book-review/</guid>
      <description>Kahneman points out that we only remember the intuitions which turned out to be true, noone talks about those intuitions which turned out to be false. He also cautions us to consider the role that luck plays in any success.In the world of software this reliance on intuition is often used when interviewing people for jobs and choosing who to hire based on an intuitive judgement. Kahneman suggests making a list of about 6 traits that are pre-requisites for the position and then ranking each candidate against those.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Profiling ORDER BY LIMIT vs LIMIT</title>
      <link>https://markhneedham.com/blog/2013/10/27/neo4j-cypher-profiling-order-by-limit-vs-limit/</link>
      <pubDate>Sun, 27 Oct 2013 00:33:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/27/neo4j-cypher-profiling-order-by-limit-vs-limit/</guid>
      <description>$ MATCH n RETURN COUNT(n); ==&amp;gt; +----------+ ==&amp;gt; | COUNT(n) | ==&amp;gt; +----------+ ==&amp;gt; | 11442 | ==&amp;gt; +----------+ ==&amp;gt; 1 row ==&amp;gt; 1384 ms $ MATCH n RETURN n LIMIT 5; ==&amp;gt; +-------------------------------------------+ ==&amp;gt; | n | ==&amp;gt; +-------------------------------------------+ ==&amp;gt; | Node[0]{} | ==&amp;gt; | Node[1]{name:&amp;#34;Africa&amp;#34;,node_id:&amp;#34;1&amp;#34;} | ==&amp;gt; | Node[2]{name:&amp;#34;Asia&amp;#34;,node_id:&amp;#34;2&amp;#34;} | ==&amp;gt; | Node[3]{name:&amp;#34;Europe&amp;#34;,node_id:&amp;#34;3&amp;#34;} | ==&amp;gt; | Node[4]{name:&amp;#34;North America&amp;#34;,node_id:&amp;#34;4&amp;#34;} | ==&amp;gt; +-------------------------------------------+ ==&amp;gt; 5 rows ==&amp;gt; 38 ms $ MATCH n RETURN n ORDER BY ID(n) LIMIT 5; ==&amp;gt; +-------------------------------------------+ ==&amp;gt; | n | ==&amp;gt; +-------------------------------------------+ ==&amp;gt; | Node[0]{} | ==&amp;gt; | Node[1]{name:&amp;#34;Africa&amp;#34;,node_id:&amp;#34;1&amp;#34;} | ==&amp;gt; | Node[2]{name:&amp;#34;Asia&amp;#34;,node_id:&amp;#34;2&amp;#34;} | ==&amp;gt; | Node[3]{name:&amp;#34;Europe&amp;#34;,node_id:&amp;#34;3&amp;#34;} | ==&amp;gt; | Node[4]{name:&amp;#34;North America&amp;#34;,node_id:&amp;#34;4&amp;#34;} | ==&amp;gt; +-------------------------------------------+ ==&amp;gt; 5 rows ==&amp;gt; 157 ms $ PROFILE MATCH n RETURN n ORDER BY ID(n) LIMIT 5; ==&amp;gt; ColumnFilter(symKeys=[&amp;#34;n&amp;#34;, &amp;#34; UNNAMEDS1215244997&amp;#34;], returnItemNames=[&amp;#34;n&amp;#34;], _rows=5, _db_hits=0) ==&amp;gt; Top(orderBy=[&amp;#34;SortItem(Cached( UNNAMEDS1215244997 of type Long),true)&amp;#34;], limit=&amp;#34;Literal(5)&amp;#34;, _rows=5, _db_hits=0) ==&amp;gt; Extract(symKeys=[&amp;#34;n&amp;#34;], exprKeys=[&amp;#34; UNNAMEDS1215244997&amp;#34;], _rows=11442, _db_hits=0) ==&amp;gt; AllNodes(identifier=&amp;#34;n&amp;#34;, _rows=11442, _db_hits=11442) if (input.</description>
    </item>
    
    <item>
      <title>Neo4j: Making implicit relationships explicit &amp; bidirectional relationships</title>
      <link>https://markhneedham.com/blog/2013/10/25/neo4j-making-implicit-relationships-explicit-bidirectional-relationships/</link>
      <pubDate>Fri, 25 Oct 2013 16:03:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/25/neo4j-making-implicit-relationships-explicit-bidirectional-relationships/</guid>
      <description>CREATE (mark:Person {name: &amp;quot;Mark&amp;quot;}) CREATE (dave:Person {name: &amp;quot;Dave&amp;quot;}) CREATE (john:Person {name: &amp;quot;John&amp;quot;}) CREATE (projectA:Project {name: &amp;quot;Project A&amp;quot;}) CREATE (projectB:Project {name: &amp;quot;Project B&amp;quot;}) CREATE (projectC:Project {name: &amp;quot;Project C&amp;quot;}) CREATE (mark)-[:WORKED_ON]-&amp;gt;(projectA) CREATE (mark)-[:WORKED_ON]-&amp;gt;(projectB) CREATE (dave)-[:WORKED_ON]-&amp;gt;(projectA) CREATE (dave)-[:WORKED_ON]-&amp;gt;(projectC) CREATE (john)-[:WORKED_ON]-&amp;gt;(projectC) CREATE (john)-[:WORKED_ON]-&amp;gt;(projectB) MATCH (person1:Person)-[:WORKED_ON]-()&amp;lt;-[:WORKED_ON]-(person2) RETURN person1, person2 ==&amp;gt; +-------------------------------------------------------+ ==&amp;gt; | person1 | person2 | ==&amp;gt; +-------------------------------------------------------+ ==&amp;gt; | Node[500363]{name:&amp;#34;Mark&amp;#34;} | Node[500364]{name:&amp;#34;Dave&amp;#34;} | ==&amp;gt; | Node[500363]{name:&amp;#34;Mark&amp;#34;} | Node[500365]{name:&amp;#34;John&amp;#34;} | ==&amp;gt; | Node[500364]{name:&amp;#34;Dave&amp;#34;} | Node[500363]{name:&amp;#34;Mark&amp;#34;} | ==&amp;gt; | Node[500364]{name:&amp;#34;Dave&amp;#34;} | Node[500365]{name:&amp;#34;John&amp;#34;} | ==&amp;gt; | Node[500365]{name:&amp;#34;John&amp;#34;} | Node[500364]{name:&amp;#34;Dave&amp;#34;} | ==&amp;gt; | Node[500365]{name:&amp;#34;John&amp;#34;} | Node[500363]{name:&amp;#34;Mark&amp;#34;} | ==&amp;gt; +-------------------------------------------------------+ ==&amp;gt; 6 rows MATCH (person1:Person)-[:WORKED_ON]-()&amp;lt;-[:WORKED_ON]-(person2) CREATE UNIQUE (person1)-[:KNOWS]-&amp;gt;(person2) RETURN person1, person2 MATCH path=(person1:Person)-[:KNOWS]-(person2) RETURN person1, person2, path ==&amp;gt; +--------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | person1 | person2 | path | ==&amp;gt; +--------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | Node[500363]{name:&amp;#34;Mark&amp;#34;} | Node[500364]{name:&amp;#34;Dave&amp;#34;} | [Node[500363]{name:&amp;#34;Mark&amp;#34;},:KNOWS[528536]{},Node[500364]{name:&amp;#34;Dave&amp;#34;}] | ==&amp;gt; | Node[500363]{name:&amp;#34;Mark&amp;#34;} | Node[500365]{name:&amp;#34;John&amp;#34;} | [Node[500363]{name:&amp;#34;Mark&amp;#34;},:KNOWS[528537]{},Node[500365]{name:&amp;#34;John&amp;#34;}] | ==&amp;gt; | Node[500363]{name:&amp;#34;Mark&amp;#34;} | Node[500364]{name:&amp;#34;Dave&amp;#34;} | [Node[500363]{name:&amp;#34;Mark&amp;#34;},:KNOWS[528538]{},Node[500364]{name:&amp;#34;Dave&amp;#34;}] | ==&amp;gt; | Node[500363]{name:&amp;#34;Mark&amp;#34;} | Node[500365]{name:&amp;#34;John&amp;#34;} | [Node[500363]{name:&amp;#34;Mark&amp;#34;},:KNOWS[528541]{},Node[500365]{name:&amp;#34;John&amp;#34;}] | ==&amp;gt; | Node[500364]{name:&amp;#34;Dave&amp;#34;} | Node[500363]{name:&amp;#34;Mark&amp;#34;} | [Node[500364]{name:&amp;#34;Dave&amp;#34;},:KNOWS[528538]{},Node[500363]{name:&amp;#34;Mark&amp;#34;}] | ==&amp;gt; | Node[500364]{name:&amp;#34;Dave&amp;#34;} | Node[500365]{name:&amp;#34;John&amp;#34;} | [Node[500364]{name:&amp;#34;Dave&amp;#34;},:KNOWS[528539]{},Node[500365]{name:&amp;#34;John&amp;#34;}] | ==&amp;gt; | Node[500364]{name:&amp;#34;Dave&amp;#34;} | Node[500363]{name:&amp;#34;Mark&amp;#34;} | [Node[500364]{name:&amp;#34;Dave&amp;#34;},:KNOWS[528536]{},Node[500363]{name:&amp;#34;Mark&amp;#34;}] | ==&amp;gt; | Node[500364]{name:&amp;#34;Dave&amp;#34;} | Node[500365]{name:&amp;#34;John&amp;#34;} | [Node[500364]{name:&amp;#34;Dave&amp;#34;},:KNOWS[528540]{},Node[500365]{name:&amp;#34;John&amp;#34;}] | ==&amp;gt; | Node[500365]{name:&amp;#34;John&amp;#34;} | Node[500364]{name:&amp;#34;Dave&amp;#34;} | [Node[500365]{name:&amp;#34;John&amp;#34;},:KNOWS[528540]{},Node[500364]{name:&amp;#34;Dave&amp;#34;}] | ==&amp;gt; | Node[500365]{name:&amp;#34;John&amp;#34;} | Node[500363]{name:&amp;#34;Mark&amp;#34;} | [Node[500365]{name:&amp;#34;John&amp;#34;},:KNOWS[528541]{},Node[500363]{name:&amp;#34;Mark&amp;#34;}] | ==&amp;gt; | Node[500365]{name:&amp;#34;John&amp;#34;} | Node[500363]{name:&amp;#34;Mark&amp;#34;} | [Node[500365]{name:&amp;#34;John&amp;#34;},:KNOWS[528537]{},Node[500363]{name:&amp;#34;Mark&amp;#34;}] | ==&amp;gt; | Node[500365]{name:&amp;#34;John&amp;#34;} | Node[500364]{name:&amp;#34;Dave&amp;#34;} | [Node[500365]{name:&amp;#34;John&amp;#34;},:KNOWS[528539]{},Node[500364]{name:&amp;#34;Dave&amp;#34;}] | ==&amp;gt; +--------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; 12 rows MATCH path=(person1:Person)-[:KNOWS]-(person2) WHERE person1.</description>
    </item>
    
    <item>
      <title>Neo4j: Modelling hyper edges in a property graph</title>
      <link>https://markhneedham.com/blog/2013/10/22/neo4j-modelling-hyper-edges-in-a-property-graph/</link>
      <pubDate>Tue, 22 Oct 2013 22:02:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/22/neo4j-modelling-hyper-edges-in-a-property-graph/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j 2.0: Labels, indexes and the like</title>
      <link>https://markhneedham.com/blog/2013/10/22/neo4j-2-0-labels-indexes-and-the-like/</link>
      <pubDate>Tue, 22 Oct 2013 20:20:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/22/neo4j-2-0-labels-indexes-and-the-like/</guid>
      <description>CREATE (randomPlayer:Player {name: &amp;quot;Random Player&amp;quot;}) MATCH (p:Player) WHERE p.name = &amp;quot;Random Player&amp;quot; RETURN p $ PROFILE MATCH (p:Player) WHERE p.name = &amp;quot;Random Player&amp;quot; RETURN p; ==&amp;gt; +-----------------------------------+ ==&amp;gt; | p | ==&amp;gt; +-----------------------------------+ ==&amp;gt; | Node[31382]{name:&amp;quot;Random Player&amp;quot;} | ==&amp;gt; +-----------------------------------+ ==&amp;gt; 1 row ==&amp;gt; ==&amp;gt; Filter(pred=&amp;quot;(Product(p,name(0),true) == Literal(Random Player) AND hasLabel(p:Player(8)))&amp;quot;, _rows=1, _db_hits=524) ==&amp;gt; NodeByLabel(label=&amp;quot;Player&amp;quot;, identifier=&amp;quot;p&amp;quot;, _rows=524, _db_hits=0) $ PROFILE MATCH p WHERE &amp;quot;Player&amp;quot; IN LABELS(p) AND p.name = &amp;quot;Random Player&amp;quot; RETURN p; ==&amp;gt; +-----------------------------------+ ==&amp;gt; | p | ==&amp;gt; +-----------------------------------+ ==&amp;gt; | Node[31382]{name:&amp;quot;Random Player&amp;quot;} | ==&amp;gt; +-----------------------------------+ ==&amp;gt; 1 row ==&amp;gt; ==&amp;gt; Filter(pred=&amp;quot;(any(-_-INNER-_- in LabelsFunction(p) where Literal(Player) == -_-INNER-_-) AND Product(p,name(0),true) == Literal(Random Player))&amp;quot;, _rows=1, _db_hits=524) ==&amp;gt; AllNodes(identifier=&amp;quot;p&amp;quot;, _rows=11443, _db_hits=11443) $ CREATE INDEX ON :Player(name); ==&amp;gt; +-------------------+ ==&amp;gt; | No data returned.</description>
    </item>
    
    <item>
      <title>Neo4j: Testing an unmanaged extension using CommunityServerBuilder</title>
      <link>https://markhneedham.com/blog/2013/10/20/neo4j-testing-an-unmanaged-extension-using-communitserverbuilder/</link>
      <pubDate>Sun, 20 Oct 2013 21:46:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/20/neo4j-testing-an-unmanaged-extension-using-communitserverbuilder/</guid>
      <description>package org.neo4j.unmanaged; @Path(&amp;#34;/dummy&amp;#34;) public class DummyResource { private final ExecutionEngine executionEngine; private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper(); public DummyResource( @Context GraphDatabaseService database ) { this.executionEngine = new ExecutionEngine(database); } @GET @Produces(MediaType.APPLICATION_JSON) @Path(&amp;#34;/all-nodes&amp;#34;) public Response uploadNodesFile( ) throws IOException { ExecutionResult result = executionEngine.execute(&amp;#34;START n = node(*) RETURN n.name ORDER BY n.name&amp;#34;); ObjectNode root = JsonNodeFactory.instance.objectNode(); for (String column : result.columns()) { ResourceIterator&amp;lt;Object&amp;gt; rows = result.columnAs(column); ArrayNode resultRows = JsonNodeFactory.</description>
    </item>
    
    <item>
      <title>Neo4j: Accessing JMX beans via HTTP</title>
      <link>https://markhneedham.com/blog/2013/10/20/neo4j-accessing-jmx-beans-via-http/</link>
      <pubDate>Sun, 20 Oct 2013 11:13:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/20/neo4j-accessing-jmx-beans-via-http/</guid>
      <description>$ curl -H &amp;#34;Content-Type:application/json&amp;#34; http://localhost:7474/db/manage/server/jmx/ { &amp;#34;resources&amp;#34; : { &amp;#34;kernelquery&amp;#34; : &amp;#34;http://localhost:7474/db/manage/server/jmx/kernelquery&amp;#34;, &amp;#34;bean&amp;#34; : &amp;#34;http://localhost:7474/db/manage/server/jmx/domain/{domain}/{objectName}&amp;#34;, &amp;#34;query&amp;#34; : &amp;#34;http://localhost:7474/db/manage/server/jmx/query&amp;#34;, &amp;#34;domains&amp;#34; : &amp;#34;http://localhost:7474/db/manage/server/jmx/domain&amp;#34;, &amp;#34;domain&amp;#34; : &amp;#34;http://localhost:7474/db/manage/server/jmx/domain/{domain}&amp;#34; } } $ curl -H &amp;#34;Content-Type:application/json&amp;#34; http://localhost:7474/db/manage/server/jmx/domain/*/* // cut for verbosity ... { &amp;#34;description&amp;#34; : &amp;#34;Estimates of the numbers of different kinds of Neo4j primitives&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;org.neo4j:instance=kernel#0,name=Primitive count&amp;#34;, &amp;#34;attributes&amp;#34; : [ { &amp;#34;description&amp;#34; : &amp;#34;An estimation of the number of nodes used in this Neo4j instance&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;NumberOfNodeIdsInUse&amp;#34;, &amp;#34;value&amp;#34; : 24117, &amp;#34;isReadable&amp;#34; : &amp;#34;true&amp;#34;, &amp;#34;type&amp;#34; : &amp;#34;long&amp;#34;, &amp;#34;isWriteable&amp;#34; : &amp;#34;false &amp;#34;, &amp;#34;isIs&amp;#34; : &amp;#34;false &amp;#34; }, { &amp;#34;description&amp;#34; : &amp;#34;An estimation of the number of relationships used in this Neo4j instance&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;NumberOfRelationshipIdsInUse&amp;#34;, &amp;#34;value&amp;#34; : 1, &amp;#34;isReadable&amp;#34; : &amp;#34;true&amp;#34;, &amp;#34;type&amp;#34; : &amp;#34;long&amp;#34;, &amp;#34;isWriteable&amp;#34; : &amp;#34;false &amp;#34;, &amp;#34;isIs&amp;#34; : &amp;#34;false &amp;#34; }, { &amp;#34;description&amp;#34; : &amp;#34;An estimation of the number of properties used in this Neo4j instance&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;NumberOfPropertyIdsInUse&amp;#34;, &amp;#34;value&amp;#34; : 19078, &amp;#34;isReadable&amp;#34; : &amp;#34;true&amp;#34;, &amp;#34;type&amp;#34; : &amp;#34;long&amp;#34;, &amp;#34;isWriteable&amp;#34; : &amp;#34;false &amp;#34;, &amp;#34;isIs&amp;#34; : &amp;#34;false &amp;#34; }, { &amp;#34;description&amp;#34; : &amp;#34;The number of relationship types used in this Neo4j instance&amp;#34;, &amp;#34;name&amp;#34; : &amp;#34;NumberOfRelationshipTypeIdsInUse&amp;#34;, &amp;#34;value&amp;#34; : 0, &amp;#34;isReadable&amp;#34; : &amp;#34;true&amp;#34;, &amp;#34;type&amp;#34; : &amp;#34;long&amp;#34;, &amp;#34;isWriteable&amp;#34; : &amp;#34;false &amp;#34;, &amp;#34;isIs&amp;#34; : &amp;#34;false &amp;#34; } ], &amp;#34;url&amp;#34; : &amp;#34;org.</description>
    </item>
    
    <item>
      <title>Neo4j: Exploring new data sets with help from Neo4j browser</title>
      <link>https://markhneedham.com/blog/2013/10/18/neo4j-exploring-new-data-sets-with-help-from-neo4j-browser/</link>
      <pubDate>Fri, 18 Oct 2013 11:43:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/18/neo4j-exploring-new-data-sets-with-help-from-neo4j-browser/</guid>
      <description></description>
    </item>
    
    <item>
      <title>neo4j: Setting query timeout</title>
      <link>https://markhneedham.com/blog/2013/10/17/neo4j-setting-query-timeout/</link>
      <pubDate>Thu, 17 Oct 2013 06:47:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/17/neo4j-setting-query-timeout/</guid>
      <description># timeout in milliseconds org.neo4j.server.webserver.limit.executiontime=1000 execution_guard_enabled=true $ start n = node(*) return n; ==&amp;gt; GuardTimeoutException: timeout occured (overtime=1718) $ curl -H &amp;#34;Content-Type:application/json&amp;#34; -H &amp;#34;max-execution-time: 500&amp;#34; -X POST -d &amp;#39;{&amp;#34;query&amp;#34; : &amp;#34;start n = node(*) return n&amp;#34;}&amp;#39; http://localhost:7474/db/data/cypher { &amp;#34;message&amp;#34; : &amp;#34;timeout occured (overtime=1)&amp;#34;, &amp;#34;exception&amp;#34; : &amp;#34;BadInputException&amp;#34;, &amp;#34;fullname&amp;#34; : &amp;#34;org.neo4j.server.rest.repr.BadInputException&amp;#34;, &amp;#34;stacktrace&amp;#34; : [ &amp;#34;org.neo4j.server.rest.repr.RepresentationExceptionHandlingIterable.exceptionOnNext(RepresentationExceptionHandlingIterable.java:39)&amp;#34;, &amp;#34;org.neo4j.helpers.collection.ExceptionHandlingIterable$1.next(ExceptionHandlingIterable.java:55)&amp;#34;, &amp;#34;org.neo4j.helpers.collection.IteratorWrapper.next(IteratorWrapper.java:47)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.ListRepresentation.serialize(ListRepresentation.java:58)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.Serializer.serialize(Serializer.java:75)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.MappingSerializer.putList(MappingSerializer.java:61)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.CypherResultRepresentation.serialize(CypherResultRepresentation.java:83)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:41)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.OutputFormat.assemble(OutputFormat.java:215)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.OutputFormat.formatRepresentation(OutputFormat.java:147)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.OutputFormat.response(OutputFormat.java:130)&amp;#34;, &amp;#34;org.neo4j.server.rest.repr.OutputFormat.ok(OutputFormat.java:67)&amp;#34;, &amp;#34;org.neo4j.server.rest.web.CypherService.cypher(CypherService.java:101)&amp;#34;, &amp;#34;java.lang.reflect.Method.invoke(Method.java:601)&amp;#34;, &amp;#34;org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)&amp;#34;, &amp;#34;org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)&amp;#34;, &amp;#34;org.neo4j.server.guard.GuardingRequestFilter.doFilter(GuardingRequestFilter.java:68)&amp;#34;, &amp;#34;java.lang.Thread.run(Thread.java:722)&amp;#34; ], &amp;#34;cause&amp;#34; : { &amp;#34;message&amp;#34; : &amp;#34;timeout occured (overtime=1)&amp;#34;, &amp;#34;exception&amp;#34; : &amp;#34;GuardTimeoutException&amp;#34;, &amp;#34;stacktrace&amp;#34; : [ &amp;#34;org.</description>
    </item>
    
    <item>
      <title>Java: Incrementally read/stream a CSV file</title>
      <link>https://markhneedham.com/blog/2013/10/14/java-incrementally-readstream-a-csv-file/</link>
      <pubDate>Mon, 14 Oct 2013 07:27:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/14/java-incrementally-readstream-a-csv-file/</guid>
      <description>public class ParseCSVFile { public static void main(String[] args) throws IOException { final CSVReader csvReader = new CSVReader( new BufferedReader( new FileReader( &amp;#34;/path/to/file.csv&amp;#34; ) ), &amp;#39;\t&amp;#39; ); final String[] fields = csvReader.readNext(); Iterator&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;() lazilyLoadedFile = return new Iterator&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;() { String[] data = csvReader.readNext(); @Override public boolean hasNext() { return data != null; } @Override public Map&amp;lt;String, Object&amp;gt; next() { final Map&amp;lt;String, Object&amp;gt; properties = new HashMap&amp;lt;String, Object&amp;gt;(); for ( int i = 0; i &amp;lt; data.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Getting rid of an optional match</title>
      <link>https://markhneedham.com/blog/2013/10/13/neo4jcypher-getting-rid-of-an-optional-match/</link>
      <pubDate>Sun, 13 Oct 2013 21:59:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/13/neo4jcypher-getting-rid-of-an-optional-match/</guid>
      <description>MATCH (player:Player) WITH player MATCH player-[:played|subbed_on]-&amp;gt;stats-[:in]-&amp;gt;game-[t?:on_tv]-&amp;gt;channel WITH COLLECT({goals: stats.goals, type: TYPE(t)}) AS games, player RETURN player.name, REDUCE(goals = 0, h IN [g IN games WHERE g.type IS NULL] | goals + h.goals) AS nonTvGoals, REDUCE(goals = 0, h IN [g IN games WHERE g.type &amp;lt;&amp;gt; NULL] | goals + h.goals) AS tvGoals, REDUCE(goals = 0, h in games | goals + h.goals) AS totalGoals ORDER BY tvGoals DESC LIMIT 10 ==&amp;gt; +--------------------------------------------------------+ ==&amp;gt; | player.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Converting queries from 1.9 to 2.0 -  &#39;Can&#39;t use optional patterns without explicit START clause&#39;</title>
      <link>https://markhneedham.com/blog/2013/10/03/neo4jcypher-converting-queries-from-1-9-to-2-0-cant-use-optional-patterns-without-explicit-start-clause/</link>
      <pubDate>Thu, 03 Oct 2013 16:16:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/10/03/neo4jcypher-converting-queries-from-1-9-to-2-0-cant-use-optional-patterns-without-explicit-start-clause/</guid>
      <description>START player=node:players(&#39;name:*&#39;) MATCH player-[:played|subbed_on]-&amp;gt;stats-[:in]-&amp;gt;game-[t?:on_tv]-&amp;gt;channel WITH COLLECT([stats.goals, TYPE(t)]) AS games, player RETURN player.name, REDUCE(goals = 0, g&#39; IN FILTER(g IN games WHERE HEAD(TAIL(g)) IS NULL)| goals + HEAD(g&#39;)) AS nonTvGoals, REDUCE(goals = 0, g&#39; IN FILTER(g IN games WHERE HEAD(TAIL(g)) &amp;lt;&amp;gt; NULL)| goals + HEAD(g&#39;)) AS tvGoals, REDUCE(goals = 0, g&#39; in games | goals + HEAD(g&#39;)) AS totalGoals ORDER BY tvGoals DESC LIMIT 10 ==&amp;gt; +--------------------------------------------------------+ ==&amp;gt; | player.name | nonTvGoals | tvGoals | totalGoals | ==&amp;gt; +--------------------------------------------------------+ ==&amp;gt; | &amp;#34;Robin Van Persie&amp;#34; | 11 | 15 | 26 | ==&amp;gt; | &amp;#34;Gareth Bale&amp;#34; | 8 | 13 | 21 | ==&amp;gt; | &amp;#34;Luis Suárez&amp;#34; | 12 | 11 | 23 | ==&amp;gt; | &amp;#34;Theo Walcott&amp;#34; | 5 | 9 | 14 | ==&amp;gt; | &amp;#34;Demba Ba&amp;#34; | 7 | 8 | 15 | ==&amp;gt; | &amp;#34;Edin Dzeko&amp;#34; | 7 | 7 | 14 | ==&amp;gt; | &amp;#34;Santi Cazorla&amp;#34; | 5 | 7 | 12 | ==&amp;gt; | &amp;#34;Juan Mata&amp;#34; | 6 | 6 | 12 | ==&amp;gt; | &amp;#34;Steven Gerrard&amp;#34; | 3 | 6 | 9 | ==&amp;gt; | &amp;#34;Carlos Tevez&amp;#34; | 5 | 6 | 11 | ==&amp;gt; +--------------------------------------------------------+ ==&amp;gt; 10 rows START player = node:players(&#39;name:*&#39;) SET player :Player RETURN player CREATE INDEX on :Player(name) MATCH (player:Player)-[:played|subbed_on]-&amp;gt;stats-[:in]-&amp;gt;game-[t?</description>
    </item>
    
    <item>
      <title>On Writing Well - William Zinsser: Book Review</title>
      <link>https://markhneedham.com/blog/2013/09/30/on-writing-well-william-zinsser-book-review/</link>
      <pubDate>Mon, 30 Sep 2013 22:48:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/30/on-writing-well-william-zinsser-book-review/</guid>
      <description>I&amp;rsquo;ve found this to be the case multiple times although you can achieve the same benefits by presenting a talk on a topic; the benefits aren&amp;rsquo;t unique to writing.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Translating 1.9 FILTER queries to use 2.0 list comprehensions</title>
      <link>https://markhneedham.com/blog/2013/09/30/neo4jcypher-translating-1-9-filter-queries-to-use-2-0-list-comprehensions/</link>
      <pubDate>Mon, 30 Sep 2013 21:34:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/30/neo4jcypher-translating-1-9-filter-queries-to-use-2-0-list-comprehensions/</guid>
      <description>START team = node:teams(&#39;name:*&#39;) MATCH team&amp;lt;-[:for]-like_this&amp;lt;-[:started|as_sub]-player-[r?:sent_off_in|booked_in]-&amp;gt;game&amp;lt;-[:in]-like_this WITH team, COLLECT(r) AS cards WITH team, FILTER(x IN cards: TYPE(x) = &amp;quot;sent_off_in&amp;quot;) AS reds, FILTER(x IN cards: TYPE(x) = &amp;quot;booked_in&amp;quot;) AS yellows RETURN team.name, LENGTH(reds) AS redCards, LENGTH(yellows) AS yellowCards ORDER BY (yellowCards*1 + redCards*3) DESC ==&amp;gt; +-------------------------------------------------+ ==&amp;gt; | team.name | redCards | yellowCards | ==&amp;gt; +-------------------------------------------------+ ==&amp;gt; | &amp;#34;Stoke City&amp;#34; | 4 | 81 | ==&amp;gt; | &amp;#34;Newcastle United&amp;#34; | 4 | 74 | ==&amp;gt; | &amp;#34;Aston Villa&amp;#34; | 3 | 74 | ==&amp;gt; | &amp;#34;West Ham United&amp;#34; | 1 | 74 | ==&amp;gt; | &amp;#34;West Bromwich Albion&amp;#34; | 4 | 63 | ==&amp;gt; | &amp;#34;Sunderland&amp;#34; | 3 | 63 | ==&amp;gt; | &amp;#34;Wigan Athletic&amp;#34; | 2 | 66 | ==&amp;gt; | &amp;#34;Manchester City&amp;#34; | 3 | 62 | ==&amp;gt; | &amp;#34;Everton&amp;#34; | 3 | 62 | ==&amp;gt; | &amp;#34;Queens Park Rangers&amp;#34; | 3 | 60 | ==&amp;gt; | &amp;#34;Swansea City&amp;#34; | 2 | 59 | ==&amp;gt; | &amp;#34;Norwich City&amp;#34; | 1 | 60 | ==&amp;gt; | &amp;#34;Chelsea&amp;#34; | 3 | 53 | ==&amp;gt; | &amp;#34;Liverpool&amp;#34; | 2 | 54 | ==&amp;gt; | &amp;#34;Manchester United&amp;#34; | 1 | 57 | ==&amp;gt; | &amp;#34;Tottenham Hotspur&amp;#34; | 2 | 54 | ==&amp;gt; | &amp;#34;Arsenal&amp;#34; | 5 | 44 | ==&amp;gt; | &amp;#34;Fulham&amp;#34; | 3 | 48 | ==&amp;gt; | &amp;#34;Southampton&amp;#34; | 2 | 44 | ==&amp;gt; | &amp;#34;Reading&amp;#34; | 1 | 45 | ==&amp;gt; +-------------------------------------------------+ ==&amp;gt; 20 rows ==&amp;gt; SyntaxException: Invalid input &amp;#39;(&amp;#39;: expected an identifier character, whitespace, NodeLabel, &amp;#39;.</description>
    </item>
    
    <item>
      <title>Elo Rating System: Ranking Champions League teams using Clojure Part 2</title>
      <link>https://markhneedham.com/blog/2013/09/30/elo-rating-system-ranking-champions-league-teams-using-clojure-part-2/</link>
      <pubDate>Mon, 30 Sep 2013 20:26:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/30/elo-rating-system-ranking-champions-league-teams-using-clojure-part-2/</guid>
      <description>(ns ranking-algorithms.uefa (:require [clj-time.format :as f]) (:require [clojure.data.json :as json])) (defn as-date [date-field] (f/parse (f/formatter &amp;#34;dd MMM YYYY&amp;#34;) date-field )) (defn date-aware-value-reader [key value] (if (= key :date) (as-date value) value)) (defn read-from-file [file] (json/read-str (slurp file) :value-fn date-aware-value-reader :key-fn keyword)) &amp;gt; (def the-matches (read-from-file &amp;#34;data/cl-matches-2013.json&amp;#34;)) #&amp;#39;ranking-algorithms.uefa/the-matches &amp;gt; (count the-matches) 213 (comment &amp;#34;other functions excluded for brevity&amp;#34;) (defn format-for-printing [all-matches idx [team ranking &amp;amp; [rd]]] (let [team-matches (show-matches team all-matches)] (merge {:rank (inc idx) :team team :ranking ranking :rd rd :round (performance team-matches)} (match-record team-matches)))) (defn print-top-teams ([number all-matches] (print-top-teams number all-matches {})) ([number all-matches base-rankings] (clojure.</description>
    </item>
    
    <item>
      <title>Clojure: Writing JSON to a file - &#34;Exception Don&#39;t know how to write JSON of class org.joda.time.DateTime&#34;</title>
      <link>https://markhneedham.com/blog/2013/09/26/clojure-writing-json-to-a-file-exception-dont-know-how-to-write-json-of-class-org-joda-time-datetime/</link>
      <pubDate>Thu, 26 Sep 2013 19:11:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/26/clojure-writing-json-to-a-file-exception-dont-know-how-to-write-json-of-class-org-joda-time-datetime/</guid>
      <description>(ns json-date-example (:require [clj-time.format :as f]) (:require [clojure.data.json :as json])) (defn as-date [date-field] (f/parse (f/formatter &amp;#34;dd MMM YYYY&amp;#34;) date-field )) (def my-date (as-date &amp;#34;18 Mar 2012&amp;#34;)) &amp;gt; (json/write-str {:date my-date)}) java.lang.Exception: Don&amp;#39;t know how to write JSON of class org.joda.time.DateTime at clojure.data.json$write_generic.invoke (json.clj:367) clojure.data.json$eval2818$fn__2819$G__2809__2826.invoke (json.clj:284) clojure.data.json$write_object.invoke (json.clj:333) clojure.data.json$eval2818$fn__2819$G__2809__2826.invoke (json.clj:284) clojure.data.json$write.doInvoke (json.clj:450) clojure.lang.RestFn.invoke (RestFn.java:425) (defn as-date-string [date] (f/unparse (f/formatter &amp;#34;dd MMM YYYY&amp;#34;) date)) (defn date-aware-value-writer [key value] (if (= key :date) (as-date-string value) value)) &amp;gt; (json/write-str {:date my-date} :value-fn date-aware-value-writer) &amp;#34;{\&amp;#34;date\&amp;#34;:\&amp;#34;18 Mar 2012\&amp;#34;}&amp;#34; (defn date-aware-value-reader [key value] (if (= key :date) (as-date value) value)) &amp;gt; (json/read-str &amp;#34;{\&amp;#34;date\&amp;#34;:\&amp;#34;18 Mar 2012\&amp;#34;}&amp;#34; :value-fn date-aware-value-reader :key-fn keyword) {:date #&amp;lt;DateTime 2012-03-18T00:00:00.</description>
    </item>
    
    <item>
      <title>Clojure: Writing JSON to a file/reading JSON from a file</title>
      <link>https://markhneedham.com/blog/2013/09/26/clojure-writing-json-to-a-filereading-json-from-a-file/</link>
      <pubDate>Thu, 26 Sep 2013 07:47:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/26/clojure-writing-json-to-a-filereading-json-from-a-file/</guid>
      <description>&amp;gt; (require &amp;#39;[clojure.data.json :as json]) nil &amp;gt; (json/write-str { :key1 &amp;#34;val1&amp;#34; :key2 &amp;#34;val2&amp;#34; }) &amp;#34;{\&amp;#34;key2\&amp;#34;:\&amp;#34;val2\&amp;#34;,\&amp;#34;key1\&amp;#34;:\&amp;#34;val1\&amp;#34;}&amp;#34; &amp;gt; (use &amp;#39;clojure.java.io) &amp;gt; (with-open [wrtr (writer &amp;#34;/tmp/test.json&amp;#34;)] (.write wrtr (json/write-str {:key1 &amp;#34;val1&amp;#34; :key2 &amp;#34;val2&amp;#34;}))) &amp;gt; (spit &amp;#34;/tmp/test.json&amp;#34; (json/write-str {:key1 &amp;#34;val1&amp;#34; :key2 &amp;#34;val2&amp;#34;})) &amp;gt; (json/read-str (slurp &amp;#34;/tmp/test.json&amp;#34;)) {&amp;#34;key2&amp;#34; &amp;#34;val2&amp;#34;, &amp;#34;key1&amp;#34; &amp;#34;val1&amp;#34;} &amp;gt; (defn string-keys-to-symbols [map] (reduce #(assoc %1 (-&amp;gt; (key %2) keyword) (val %2)) {} map)) &amp;gt; (string-keys-to-symbols (json/read-str (slurp &amp;#34;/tmp/test.json&amp;#34;))) {:key1 &amp;#34;val1&amp;#34;, :key2 &amp;#34;val2&amp;#34;} &amp;gt; (json/read-str (slurp &amp;#34;/tmp/test.</description>
    </item>
    
    <item>
      <title>cURL: POST/Upload multi part form</title>
      <link>https://markhneedham.com/blog/2013/09/23/curl-postupload-multi-part-form/</link>
      <pubDate>Mon, 23 Sep 2013 22:16:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/23/curl-postupload-multi-part-form/</guid>
      <description>&amp;lt;form action=&amp;#34;http://foobar.com&amp;#34; method=&amp;#34;POST&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34;&amp;gt; &amp;lt;p&amp;gt; &amp;lt;label for=&amp;#34;nodes&amp;#34;&amp;gt;File 1:&amp;lt;/label&amp;gt; &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;file1&amp;#34; id=&amp;#34;file1&amp;#34;&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;label for=&amp;#34;relationships&amp;#34;&amp;gt;File 2:&amp;lt;/label&amp;gt; &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;file2&amp;#34; id=&amp;#34;file2&amp;#34;&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; name=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; curl &amp;#39;http://foobar.com&amp;#39; -H &amp;#39;Origin: null&amp;#39; -H &amp;#39;Accept-Encoding: gzip,deflate,sdch&amp;#39; -H &amp;#39;Host: foobar.com:7474&amp;#39; -H &amp;#39;Accept-Language: en-US,en;q=0.8&amp;#39; -H &amp;#39;User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36&amp;#39; -H &amp;#39;Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryMxYFIg6GFEIPAe6V&amp;#39; -H &amp;#39;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&amp;#39; -H &amp;#39;Cache-Control: max-age=0&amp;#39; -H &amp;#39;Cookie: splashShown1.6=1; undefined=0; _mkto_trk=id:773-GON-065&amp;amp;token:_mch-localhost-1373821432078-37666; JSESSIONID=123cbkxby1rtcj3dwipqzs7yu&amp;#39; -H &amp;#39;Connection: keep-alive&amp;#39; --data-binary $&amp;#39;------WebKitFormBoundaryMxYFIg6GFEIPAe6V\r\nContent-Disposition: form-data; name=&amp;#34;file1&amp;#34;; filename=&amp;#34;file1.</description>
    </item>
    
    <item>
      <title>Clojure: Anonymous functions using short notation and the &#39;ArityException Wrong number of args (0) passed to: PersistentVector&#39;</title>
      <link>https://markhneedham.com/blog/2013/09/23/clojure-anonymous-functions-using-short-notation-and-the-arityexception-wrong-number-of-args-0-passed-to-persistentvector/</link>
      <pubDate>Mon, 23 Sep 2013 21:42:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/23/clojure-anonymous-functions-using-short-notation-and-the-arityexception-wrong-number-of-args-0-passed-to-persistentvector/</guid>
      <description>&amp;gt; ((fn [x] [1 2 x]) 6) [1 2 6] &amp;gt; (#([1 2 %]) 6) clojure.lang.ArityException: Wrong number of args (0) passed to: PersistentVector AFn.java:437 clojure.lang.AFn.throwArity AFn.java:35 clojure.lang.AFn.invoke NO_SOURCE_FILE:1 user/eval575[fn] NO_SOURCE_FILE:1 user/eval575 #() becomes (fn [arg1 arg2] (...)) #(([1 2 %]) 6) becomes ((fn [arg] ([1 2 arg])) 6) &amp;gt; ([1 2 6] 2) 6 &amp;gt; (#(identity [1 2 %]) 6) [1 2 6] &amp;gt; (#(-&amp;gt; [1 2 %]) 6) [1 2 6] </description>
    </item>
    
    <item>
      <title>Clojure/Emacs/nrepl: Stacktrace-less error messages</title>
      <link>https://markhneedham.com/blog/2013/09/22/clojureemacsnrepl-stacktrace-less-error-messages/</link>
      <pubDate>Sun, 22 Sep 2013 23:07:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/22/clojureemacsnrepl-stacktrace-less-error-messages/</guid>
      <description>&amp;gt; (update-in {} [:mark] inc) NullPointerException clojure.lang.Numbers.ops (Numbers.java:942) ~/.emacs.d/init.el(setq nrepl-popup-stacktraces nil) (setq nrepl-popup-stacktraces-in-repl t) &amp;gt; (update-in {} [:mark] inc) java.lang.NullPointerException: Numbers.java:942 clojure.lang.Numbers.ops Numbers.java:110 clojure.lang.Numbers.inc core.clj:863 clojure.core/inc AFn.java:161 clojure.lang.AFn.applyToHelper AFn.java:151 clojure.lang.AFn.applyTo core.clj:603 clojure.core/apply core.clj:5472 clojure.core/update-in RestFn.java:445 clojure.lang.RestFn.invoke NO_SOURCE_FILE:1 user/eval9 ... &amp;gt; (inc nil) java.lang.NullPointerException: Numbers.java:942 clojure.lang.Numbers.ops Numbers.java:110 clojure.lang.Numbers.inc NO_SOURCE_FILE:1 user/eval14 ... </description>
    </item>
    
    <item>
      <title>Clojure/Emacs/nrepl: Ctrl X &#43; Ctrl E leads to &#39;FileNotFoundException Could not locate […] on classpath&#39;</title>
      <link>https://markhneedham.com/blog/2013/09/22/clojureemacsnrepl-ctrl-x-ctrl-e-leads-to-filenotfoundexception-could-not-locate-on-classpath/</link>
      <pubDate>Sun, 22 Sep 2013 21:23:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/22/clojureemacsnrepl-ctrl-x-ctrl-e-leads-to-filenotfoundexception-could-not-locate-on-classpath/</guid>
      <description>FileNotFoundException Could not locate ranking_algorithms/ranking__init.class or ranking_algorithms/ranking.clj on classpath: clojure.lang.RT.load (RT.java:432) $ lein repl nREPL server started on port 52265 REPL-y 0.1.0-beta10 Clojure 1.4.0 Exit: Control+D or (exit) or (quit) Commands: (user/help) Docs: (doc function-name-here) (find-doc &amp;#34;part-of-name-here&amp;#34;) Source: (source function-name-here) (user/sourcery function-name-here) Javadoc: (javadoc java-object-or-class-here) Examples from clojuredocs.org: [clojuredocs or cdoc] (user/clojuredocs name-here) (user/clojuredocs &amp;#34;ns-here&amp;#34; &amp;#34;name-here&amp;#34;) </description>
    </item>
    
    <item>
      <title>Clojure: Stripping all the whitespace</title>
      <link>https://markhneedham.com/blog/2013/09/22/clojure-stripping-all-the-whitespace/</link>
      <pubDate>Sun, 22 Sep 2013 18:54:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/22/clojure-stripping-all-the-whitespace/</guid>
      <description>(def word &amp;#34; with a little bit of space we can make it through the night &amp;#34;) &amp;gt; (clojure.string/trim word) &amp;#34;with a little bit of space we can make it through the night&amp;#34; &amp;gt; (clojure.string/join &amp;#34; &amp;#34; (filter #(not (clojure.string/blank? %)) (clojure.string/split word #&amp;#34; &amp;#34;))) &amp;#34;with a little bit of space we can make it through the night&amp;#34; &amp;gt; (-&amp;gt;&amp;gt; (clojure.string/split word #&amp;#34; &amp;#34;) (filter #(not (clojure.string/blank? %))) (clojure.string/join &amp;#34; &amp;#34;)) &amp;#34;with a little bit of space we can make it through the night&amp;#34; (defn split-on-space [word] (clojure.</description>
    </item>
    
    <item>
      <title>Clojure: Converting an array/set into a hash map</title>
      <link>https://markhneedham.com/blog/2013/09/20/clojure-converting-an-arrayset-into-a-hash-map/</link>
      <pubDate>Fri, 20 Sep 2013 21:13:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/20/clojure-converting-an-arrayset-into-a-hash-map/</guid>
      <description>(def teams #{ &amp;#34;Man Utd&amp;#34; &amp;#34;Man City&amp;#34; &amp;#34;Arsenal&amp;#34; &amp;#34;Chelsea&amp;#34;}) Man Utd -&amp;gt; {:points 1200} Man City -&amp;gt; {:points 1200} Arsenal -&amp;gt; {:points 1200} Chelsea -&amp;gt; {:points 1200} &amp;gt; (mapcat (fn [x] [x {:points 1200}]) teams) (&amp;#34;Chelsea&amp;#34; {:points 1200} &amp;#34;Man City&amp;#34; {:points 1200} &amp;#34;Arsenal&amp;#34; {:points 1200} &amp;#34;Man Utd&amp;#34; {:points 1200}) &amp;gt; (array-map &amp;#34;Chelsea&amp;#34; {:points 1200} &amp;#34;Man City&amp;#34; {:points 1200} &amp;#34;Arsenal&amp;#34; {:points 1200} &amp;#34;Man Utd&amp;#34; {:points 1200}) (&amp;#34;Chelsea&amp;#34; {:points 1200} &amp;#34;Man City&amp;#34; {:points 1200} &amp;#34;Arsenal&amp;#34; {:points 1200} &amp;#34;Man Utd&amp;#34; {:points 1200}) &amp;gt; (apply array-map [&amp;#34;Chelsea&amp;#34; {:points 1200} &amp;#34;Man City&amp;#34; {:points 1200} &amp;#34;Arsenal&amp;#34; {:points 1200} &amp;#34;Man Utd&amp;#34; {:points 1200}]) {&amp;#34;Chelsea&amp;#34; {:points 1200}, &amp;#34;Man City&amp;#34; {:points 1200}, &amp;#34;Arsenal&amp;#34; {:points 1200}, &amp;#34;Man Utd&amp;#34; {:points 1200}} &amp;gt; (apply array-map (mapcat (fn [x] [x {:points 1200}]) teams)) {&amp;#34;Man Utd&amp;#34; {:points 1200}, &amp;#34;Man City&amp;#34; {:points 1200}, &amp;#34;Arsenal&amp;#34; {:points 1200}, &amp;#34;Chelsea&amp;#34; {:points 1200}} &amp;gt; (mapcat vector teams (repeat {:points 1200})) (&amp;#34;Chelsea&amp;#34; {:points 1200} &amp;#34;Man City&amp;#34; {:points 1200} &amp;#34;Arsenal&amp;#34; {:points 1200} &amp;#34;Man Utd&amp;#34; {:points 1200}) &amp;gt; (apply array-map (mapcat vector teams (repeat {:points 1200}))) {&amp;#34;Chelsea&amp;#34; {:points 1200}, &amp;#34;Man City&amp;#34; {:points 1200}, &amp;#34;Arsenal&amp;#34; {:points 1200}, &amp;#34;Man Utd&amp;#34; {:points 1200}} &amp;gt; (apply assoc {} (mapcat vector teams (repeat {:points 1200}))) {&amp;#34;Man Utd&amp;#34; {:points 1200}, &amp;#34;Arsenal&amp;#34; {:points 1200}, &amp;#34;Man City&amp;#34; {:points 1200}, &amp;#34;Chelsea&amp;#34; {:points 1200}} &amp;gt; (into {} [[&amp;#34;Chelsea&amp;#34; {:points 1200}] [&amp;#34;Man City&amp;#34; {:points 1200}] [&amp;#34;Arsenal&amp;#34; {:points 1200}] [&amp;#34;Man Utd&amp;#34; {:points 1200}] ]) &amp;gt; (into {} (map vector teams (repeat {:points 1200}))) {&amp;#34;Chelsea&amp;#34; {:points 1200}, &amp;#34;Man City&amp;#34; {:points 1200}, &amp;#34;Arsenal&amp;#34; {:points 1200}, &amp;#34;Man Utd&amp;#34; {:points 1200}} &amp;gt; (zipmap teams (repeat {:points 1200})) {&amp;#34;Man Utd&amp;#34; {:points 1200}, &amp;#34;Arsenal&amp;#34; {:points 1200}, &amp;#34;Man City&amp;#34; {:points 1200}, &amp;#34;Chelsea&amp;#34; {:points 1200}} </description>
    </item>
    
    <item>
      <title>Clojure: Converting a string to a date</title>
      <link>https://markhneedham.com/blog/2013/09/20/clojure-converting-a-string-to-a-date/</link>
      <pubDate>Fri, 20 Sep 2013 07:00:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/20/clojure-converting-a-string-to-a-date/</guid>
      <description>project.clj(defproject ranking-algorithms &amp;#34;0.1.0-SNAPSHOT&amp;#34; :license {:name &amp;#34;Eclipse Public License&amp;#34; :url &amp;#34;http://www.eclipse.org/legal/epl-v10.html&amp;#34;} :dependencies [[org.clojure/clojure &amp;#34;1.4.0&amp;#34;] [clj-time &amp;#34;0.6.0&amp;#34;]]) &amp;gt; (require &amp;#39;(clj-time [format :as f])) (def string-date &amp;#34;18 September 2012&amp;#34;) &amp;gt; (f/show-formatters) ... :hour-minute 06:45 :hour-minute-second 06:45:22 :hour-minute-second-fraction 06:45:22.473 :hour-minute-second-ms 06:45:22.473 :mysql 2013-09-20 06:45:22 :ordinal-date 2013-263 :ordinal-date-time 2013-263T06:45:22.473Z :ordinal-date-time-no-ms 2013-263T06:45:22Z :rfc822 Fri, 20 Sep 2013 06:45:22 +0000 ... &amp;gt; (f/parse (f/formatter &amp;#34;dd MMM YYYY&amp;#34;) string-date) #&amp;lt;DateTime 2012-09-18T00:00:00.000Z&amp;gt; </description>
    </item>
    
    <item>
      <title>Clojure: See every step of a reduce</title>
      <link>https://markhneedham.com/blog/2013/09/19/clojure-see-every-step-of-a-reduce/</link>
      <pubDate>Thu, 19 Sep 2013 23:57:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/19/clojure-see-every-step-of-a-reduce/</guid>
      <description>&amp;gt; (reduce + 0 (range 1 11)) 55 &amp;gt; (reductions + 0 (range 1 11)) (0 1 3 6 10 15 21 28 36 45 55) (def initial-team-rankings { &amp;#34;Man Utd&amp;#34; {:points 1200} &amp;#34;Man City&amp;#34; {:points 1300}}) (defn update-team-rankings [teams year] (reduce (fn [ts [team _]] (update-in ts [team :points] inc)) teams teams)) &amp;gt; (reduce update-team-rankings initial-team-rankings (range 2004 2013)) {&amp;#34;Man City&amp;#34; {:points 1309}, &amp;#34;Man Utd&amp;#34; {:points 1209}} &amp;gt; (nth (reductions update-team-rankings initial-team-rankings (range 2004 2013)) 3) {&amp;#34;Man City&amp;#34; {:points 1303}, &amp;#34;Man Utd&amp;#34; {:points 1203}} (def final-rankings (zipmap (range 2003 2013) (reductions update-team-rankings initial-team-rankings (range 2004 2013)))) &amp;gt; (get final-rankings 2006) {&amp;#34;Man City&amp;#34; {:points 1303}, &amp;#34;Man Utd&amp;#34; {:points 1203}} </description>
    </item>
    
    <item>
      <title>Data Science: Don&#39;t build a crawler (if you can avoid it!)</title>
      <link>https://markhneedham.com/blog/2013/09/19/data-science-dont-build-a-crawler-if-you-can-avoid-it/</link>
      <pubDate>Thu, 19 Sep 2013 06:55:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/19/data-science-dont-build-a-crawler-if-you-can-avoid-it/</guid>
      <description>$ head -n 5 uris.txt https://www.some-made-up-place.com/page1.html https://www.some-made-up-place.com/page2.html https://www.some-made-up-place.com/page3.html https://www.some-made-up-place.com/page4.html https://www.some-made-up-place.com/page5.html $ cat uris.txt | time xargs wget ... Total wall clock time: 3.7s Downloaded: 60 files, 625K in 0.7s (870 KB/s) 3.73 real 0.03 user 0.09 sys cat uris.txt | time xargs -n1 -P10 wget 1.65 real 0.20 user 0.21 sys </description>
    </item>
    
    <item>
      <title>Clojure: Merge two maps but only keep the keys of one of them</title>
      <link>https://markhneedham.com/blog/2013/09/17/clojure-merge-two-maps-but-only-keep-the-keys-of-one-of-them/</link>
      <pubDate>Tue, 17 Sep 2013 01:03:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/17/clojure-merge-two-maps-but-only-keep-the-keys-of-one-of-them/</guid>
      <description>&amp;gt; (merge {&amp;#34;Man. United&amp;#34; 1500 &amp;#34;Man. City&amp;#34; 1400} {&amp;#34;Man. United&amp;#34; 1550 &amp;#34;Arsenal&amp;#34; 1450}) {&amp;#34;Arsenal&amp;#34; 1450, &amp;#34;Man. United&amp;#34; 1550, &amp;#34;Man. City&amp;#34; 1400} (defn merge-rankings [initial-rankings override-rankings] (merge initial-rankings (into {} (filter #(contains? initial-rankings (key %)) override-rankings)))) &amp;gt; (merge-rankings {&amp;#34;Man. United&amp;#34; 1500 &amp;#34;Man. City&amp;#34; 1400} {&amp;#34;Man. United&amp;#34; 1550 &amp;#34;Arsenal&amp;#34; 1450}) {&amp;#34;Man. United&amp;#34; 1550, &amp;#34;Man. City&amp;#34; 1400} (defn merge-rankings [initial-rankings override-rankings] (select-keys (merge initial-rankings override-rankings) (map key initial-rankings))) (defn merge-rankings [initial-rankings override-rankings] (select-keys (merge initial-rankings override-rankings) (keys initial-rankings))) (defn merge-keep-left [left right] (select-keys (merge left right) (keys left))) </description>
    </item>
    
    <item>
      <title>Clojure: Updating keys in a map</title>
      <link>https://markhneedham.com/blog/2013/09/17/clojure-updating-keys-in-a-map/</link>
      <pubDate>Tue, 17 Sep 2013 00:24:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/17/clojure-updating-keys-in-a-map/</guid>
      <description>(def teams { &amp;#34;Man. United&amp;#34; {:points 1500 :rd 350} &amp;#34;Man. City&amp;#34; {:points 1450 :rd 300} }) &amp;gt; (update-in teams [&amp;#34;Man. United&amp;#34; :points] inc) {&amp;#34;Man. United&amp;#34; {:points 1501, :rd 350}, &amp;#34;Man. City&amp;#34; {:points 1450, :rd 300}} &amp;gt; (assoc-in teams [&amp;#34;Man. United&amp;#34; :points] 1) {&amp;#34;Man. United&amp;#34; {:points 1, :rd 350}, &amp;#34;Man. City&amp;#34; {:points 1450, :rd 300}} (-&amp;gt; teams (assoc-in [&amp;#34;Man. United&amp;#34; :points] 1600) (assoc-in [&amp;#34;Man. United&amp;#34; :rd] 200)) {&amp;#34;Man. United&amp;#34; {:points 1600, :rd 200}, &amp;#34;Man.</description>
    </item>
    
    <item>
      <title>Glicko Rating System: A simple example using Clojure</title>
      <link>https://markhneedham.com/blog/2013/09/14/glicko-rating-system-a-simple-example-using-clojure/</link>
      <pubDate>Sat, 14 Sep 2013 21:02:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/14/glicko-rating-system-a-simple-example-using-clojure/</guid>
      <description>If one player&amp;rsquo;s rating increases by x, the opponent&amp;rsquo;s rating does not usually decrease by x as in the Elo system.
In fact, in the Glicko system, the amount by which the opponent&amp;rsquo;s rating decreases is governed by both players&amp;rsquo; RD&amp;rsquo;s.
where:
where:
(ns ranking-algorithms.glicko (:require [clojure.math.numeric-tower :as math])) (def q (/ (java.lang.Math/log 10) 400)) (defn g [rd] (/ 1 (java.lang.Math/sqrt (+ 1 (/ (* 3 (math/expt q 2) (math/expt rd 2)) (math/expt ( .</description>
    </item>
    
    <item>
      <title>Clojure: All things regex</title>
      <link>https://markhneedham.com/blog/2013/09/14/clojure-all-things-regex/</link>
      <pubDate>Sat, 14 Sep 2013 01:24:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/14/clojure-all-things-regex/</guid>
      <description>Real Madrid-Juventus Turijn 2 - 1 53’Nedved 0-1, 66&amp;#39;Xavi Hernández 1-1, 114’Zalayeta 1-2 [a-zA-Z\s]+-[a-zA-Z\s]+ [0-9][\s]?.[\s]?[0-9] (defn recognise-match? [row] (not (clojure.string/blank? (re-matches #&amp;#34;[a-zA-Z\s]+-[a-zA-Z\s]+ [0-9][\s]?.[\s]?[0-9]&amp;#34; row)))) &amp;gt; (recognise-match? &amp;#34;Real Madrid-Juventus Turijn 2 - 1&amp;#34;) true &amp;gt; (recognise-match? &amp;#34;53’Nedved 0-1, 66&amp;#39;Xavi Hernández 1-1, 114’Zalayeta 1-2&amp;#34;) false &amp;gt; (recognise-match? &amp;#34;Real Madrid-Juventus Turijn 2 - 1 abc&amp;#34;) false (defn recognise-match? [row] (not (clojure.string/blank? (re-find #&amp;#34;[a-zA-Z\s]+-[a-zA-Z\s]+ [0-9][\s]?.[\s]?[0-9]&amp;#34; row)))) &amp;gt; (recognise-match? &amp;#34;Real Madrid-Juventus Turijn 2 - 1 abc&amp;#34;) true &amp;gt; (first (re-seq #&amp;#34;([a-zA-Z\s]+)-([a-zA-Z\s]+) ([0-9])[\s]?</description>
    </item>
    
    <item>
      <title>jackson-core-asl - java.lang.AbstractMethodError: org.codehaus.jackson.JsonNode.getValueAsText()Ljava/lang/String;</title>
      <link>https://markhneedham.com/blog/2013/09/14/jackson-core-asl-java-lang-abstractmethoderror-org-codehaus-jackson-jsonnode-getvalueastextljavalangstring/</link>
      <pubDate>Sat, 14 Sep 2013 00:06:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/09/14/jackson-core-asl-java-lang-abstractmethoderror-org-codehaus-jackson-jsonnode-getvalueastextljavalangstring/</guid>
      <description>2013-09-13 11:01:50 +0000: Exception while handling {MessageId: 7e695fb3-549a-4b 40-b1cf-9dbc5e97a8df, ... } java.lang.AbstractMethodError: org.codehaus.jackson.JsonNode.getValueAsText()Lja va/lang/String; ... at com.amazonaws.services.sqs.AmazonSQSAsyncClient$20.call(AmazonSQSAsyn cClient.java:1200) at com.amazonaws.services.sqs.AmazonSQSAsyncClient$20.call(AmazonSQSAsyn cClient.java:1191) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) at java.util.concurrent.FutureTask.run(FutureTask.java:166) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor. java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor .java:615) at java.lang.Thread.run(Thread.java:724) $ mvn dependency:tree ... [INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ load-generator --- [INFO] +- com.amazonaws:aws-java-sdk:jar:1.5.6:compile [INFO] | +- commons-logging:commons-logging:jar:1.1.1:compile [INFO] | +- org.apache.httpcomponents:httpclient:jar:4.2.2:compile (version managed from 4.2) [INFO] | +- commons-codec:commons-codec:jar:1.6:compile [INFO] | \- org.codehaus.jackson:jackson-core-asl:jar:1.8.9:compile ... [INFO] +- org.</description>
    </item>
    
    <item>
      <title>Elo Rating System: Ranking Champions League teams using Clojure</title>
      <link>https://markhneedham.com/blog/2013/08/31/elo-rating-system-ranking-champions-league-teams-using-clojure/</link>
      <pubDate>Sat, 31 Aug 2013 13:01:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/31/elo-rating-system-ranking-champions-league-teams-using-clojure/</guid>
      <description>(defn ranking-after-win [{ ranking :ranking opponent-ranking :opponent-ranking importance :importance}] (+ ranking (* importance (- 1 (expected ranking opponent-ranking) )))) (defn ranking-after-loss [{ ranking :ranking opponent-ranking :opponent-ranking importance :importance}] (+ ranking (* importance (- 0 (expected ranking opponent-ranking) )))) (defn expected [my-ranking opponent-ranking] (/ 1.0 (+ 1 (math/expt 10 (/ (- opponent-ranking my-ranking) 400))))) &amp;gt; (ranking-after-win { :ranking 1200 :opponent-ranking 1500 :importance 32 }) 1227.1686541692377 &amp;gt; (expected 1200 1500) 0.15097955721132328 (defn top-teams [number matches] (let [teams-with-rankings (apply array-map (mapcat (fn [x] [x {:points 1200}]) (extract-teams matches)))] (take number (sort-by (fn [x] (:points (val x))) &amp;gt; (seq (reduce process-match teams-with-rankings matches)))))) (defn process-match [ts match] (let [{:keys [home away home_score away_score]} match] (cond (&amp;gt; home_score away_score) (-&amp;gt; ts (update-in [home :points] #(ranking-after-win {:ranking % :opponent-ranking (:points (get ts away)) :importance 32})) (update-in [away :points] #(ranking-after-loss {:ranking % :opponent-ranking (:points (get ts home)) :importance 32}))) (&amp;gt; away_score home_score) (-&amp;gt; ts (update-in [home :points] #(ranking-after-loss {:ranking % :opponent-ranking (:points (get ts away)) :importance 32})) (update-in [away :points] #(ranking-after-win {:ranking % :opponent-ranking (:points (get ts home)) :importance 32}))) (= home_score away_score) ts))) &amp;gt; (take 5 all-matches) ({:home &amp;#34;Tampere&amp;#34;, :away &amp;#34;Pyunik Erewan&amp;#34;, :home_score 0, :away_score 4} {:home &amp;#34;Pyunik Erewan&amp;#34;, :away &amp;#34;Tampere&amp;#34;, :home_score 2, :away_score 0} {:home &amp;#34;Skonto Riga&amp;#34;, :away &amp;#34;Barry Town&amp;#34;, :home_score 5, :away_score 0} {:home &amp;#34;Barry Town&amp;#34;, :away &amp;#34;Skonto Riga&amp;#34;, :home_score 0, :away_score 1} {:home &amp;#34;Portadown&amp;#34;, :away &amp;#34;Belshina Bobruisk&amp;#34;, :home_score 0, :away_score 0}) &amp;gt; (extract-teams (take 5 all-matches)) #{&amp;#34;Portadown&amp;#34; &amp;#34;Tampere&amp;#34; &amp;#34;Pyunik Erewan&amp;#34; &amp;#34;Barry Town&amp;#34; &amp;#34;Skonto Riga&amp;#34;} &amp;gt; (mapcat (fn [x] [x {:points 1200}]) (extract-teams (take 5 all-matches))) (&amp;#34;Portadown&amp;#34; {:points 1200} &amp;#34;Tampere&amp;#34; {:points 1200} &amp;#34;Pyunik Erewan&amp;#34; {:points 1200} &amp;#34;Barry Town&amp;#34; {:points 1200} &amp;#34;Skonto Riga&amp;#34; {:points 1200}) &amp;gt; (apply array-map (mapcat (fn [x] [x {:points 1200}]) (extract-teams (take 5 all-matches)))) {&amp;#34;Portadown&amp;#34; {:points 1200}, &amp;#34;Tampere&amp;#34; {:points 1200}, &amp;#34;Pyunik Erewan&amp;#34; {:points 1200}, &amp;#34;Barry Town&amp;#34; {:points 1200}, &amp;#34;Skonto Riga&amp;#34; {:points 1200}} &amp;gt; (top-teams 10 all-matches) ([&amp;#34;CF Barcelona&amp;#34; {:points 1343.</description>
    </item>
    
    <item>
      <title>Neo4j&#39;s Graph Café London - 28th August 2013</title>
      <link>https://markhneedham.com/blog/2013/08/31/neo4js-graph-cafe-london-28th-august-2013/</link>
      <pubDate>Sat, 31 Aug 2013 10:52:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/31/neo4js-graph-cafe-london-28th-august-2013/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Clojure: Handling state by updating a vector inside an atom</title>
      <link>https://markhneedham.com/blog/2013/08/30/clojure-handling-state-by-updating-a-vector-inside-an-atom/</link>
      <pubDate>Fri, 30 Aug 2013 12:23:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/30/clojure-handling-state-by-updating-a-vector-inside-an-atom/</guid>
      <description>(def m [{:home &amp;#34;Manchester United&amp;#34;, :away &amp;#34;Manchester City&amp;#34;, :home_score 1, :away_score 0} {:home &amp;#34;Manchester United&amp;#34;, :away &amp;#34;Manchester City&amp;#34;, :home_score 2, :away_score 0}]) (def teams [ {:name &amp;#34;Manchester United&amp;#34; :points 1200} {:name &amp;#34;Manchester City&amp;#34; :points 1200} ]) (def t (atom teams)) &amp;gt; (map #(if (= &amp;#34;Manchester United&amp;#34; (:name %)) (assoc % :points 1500) %) teams) [{:name &amp;#34;Manchester United&amp;#34;, :points 1500} {:name &amp;#34;Manchester City&amp;#34;, :points 1200}] &amp;gt; (swap! t (fn [teams] (map #(if (= &amp;#34;Manchester United&amp;#34; (:name %)) (assoc % :points 1500) %) teams))) ({:name &amp;#34;Manchester United&amp;#34;, :points 1500} {:name &amp;#34;Manchester City&amp;#34;, :points 1200}) &amp;gt; @t [{:name &amp;#34;Manchester United&amp;#34;, :points 1500} {:name &amp;#34;Manchester City&amp;#34;, :points 1200}] (defn update-teams [teams team1 new-score1 team2 new-score2] (vec (map #(cond (= team1 (:name %)) (assoc % :points new-score1) (= team2 (:name %)) (assoc % :points new-score2) :else %) teams))) &amp;gt; (map (fn [match] (swap!</description>
    </item>
    
    <item>
      <title>Clojure/Enlive: Screen scraping a HTML file from disk</title>
      <link>https://markhneedham.com/blog/2013/08/26/clojureenlive-screen-scraping-a-html-file-from-disk/</link>
      <pubDate>Mon, 26 Aug 2013 17:58:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/26/clojureenlive-screen-scraping-a-html-file-from-disk/</guid>
      <description>$ pwd /tmp/football $ wget http://www.rsssf.com/ec/ec200203det.html (ns ranking-algorithms.parse (:use [net.cgrand.enlive-html])) (defn fetch-page [file-path] (html-resource (java.io.StringReader. (slurp file-path)))) (defn matches [file] (-&amp;gt;&amp;gt; file fetch-page extract-rows (map extract-content) (filter recognise-match?))) (defn extract-rows [page] (select page [:div.Section1 :p :span])) (defn extract-content [row] (first (get row :content))) (defn recognise-match? [row] (and (string? row) (re-matches #&amp;#34;[a-zA-Z\s]+-[a-zA-Z\s]+ [0-9][\s]?.[\s]?[0-9]&amp;#34; row))) &amp;gt; (matches &amp;#34;/tmp/football/ec200203det.html&amp;#34;) ( ... &amp;#34;Lokomotiv\nMoskou-Borussia Dortmund 1 - 2&amp;#34; &amp;#34;Borussia\nDortmund-AC Milan 0 - 1&amp;#34; &amp;#34;Real\nMadrid-Lokomotiv Moskou 2 - 2&amp;#34; &amp;#34;Real\nMadrid-Borussia Dortmund 2 - 1&amp;#34; &amp;#34;AC Milan-Lokomotiv\nMoskou 1 - 0&amp;#34; &amp;#34;Borussia Dortmund-Real\nMadrid 1 - 1&amp;#34; &amp;#34;Lokomotiv\nMoskou-AC Milan 0 - 1&amp;#34; .</description>
    </item>
    
    <item>
      <title>Ranking Systems: What I&#39;ve learnt so far</title>
      <link>https://markhneedham.com/blog/2013/08/24/ranking-systems-what-ive-learnt-so-far/</link>
      <pubDate>Sat, 24 Aug 2013 11:05:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/24/ranking-systems-what-ive-learnt-so-far/</guid>
      <description>Players start out with an average rating which then increases/decreases based on games they take part in. If they beat someone much more highly ranked then they&amp;rsquo;d gain a lot of points whereas losing to someone similarly ranked wouldn&amp;rsquo;t affect their ranking too much.
I came across a version used to rank country football teams. and the algorithm is quite well described in Christopher Allen&amp;rsquo;s article on competitive ranking systems.This algorithm therefore introduces the concept of a ratings deviation (RD) to measure uncertainty in a rating.</description>
    </item>
    
    <item>
      <title>Unix: tar - Extracting, creating and viewing archives</title>
      <link>https://markhneedham.com/blog/2013/08/22/unix-tar-extracting-creating-and-viewing-archives/</link>
      <pubDate>Thu, 22 Aug 2013 22:56:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/22/unix-tar-extracting-creating-and-viewing-archives/</guid>
      <description>$ wget http://dist.neo4j.org/neo4j-community-1.9.2-unix.tar.gz $ tar -xvf neo4j-community-1.9.2-unix.tar.gz $ wget http://dist.neo4j.org/neo4j-community-1.9.2-unix.tar.gz -o - | tar -xv $ tar -cvzpf neo4j-football.tar.gz neo4j-football/ $ ls -alh neo4j-football.tar.gz -rw-r--r-- 1 markhneedham staff 526M 22 Aug 23:38 neo4j-football.tar.gz $ tar --exclude &amp;#34;data*&amp;#34; --exclude &amp;#34;neo4j-community*&amp;#34; --exclude &amp;#34;.git&amp;#34; -cvzpf neo4j-football.tar.gz neo4j-football/ $ ls -alh neo4j-football.tar.gz -rw-r--r-- 1 markhneedham staff 138M 22 Aug 23:36 neo4j-football.tar.gz $ tar -tvf neo4j-football.tar.gz </description>
    </item>
    
    <item>
      <title>Products &amp; Infinite configurability</title>
      <link>https://markhneedham.com/blog/2013/08/22/products-infinite-configurability/</link>
      <pubDate>Thu, 22 Aug 2013 22:11:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/22/products-infinite-configurability/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Model to answer your questions rather than modelling reality</title>
      <link>https://markhneedham.com/blog/2013/08/22/model-to-answer-your-questions-rather-than-modelling-reality/</link>
      <pubDate>Thu, 22 Aug 2013 21:26:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/22/model-to-answer-your-questions-rather-than-modelling-reality/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Coding: Hack then revert</title>
      <link>https://markhneedham.com/blog/2013/08/19/coding-hack-then-revert/</link>
      <pubDate>Mon, 19 Aug 2013 23:13:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/19/coding-hack-then-revert/</guid>
      <description></description>
    </item>
    
    <item>
      <title>BT Internet: Non existent hosts mapping to 92.242.132.15</title>
      <link>https://markhneedham.com/blog/2013/08/17/bt-internet-non-existent-hosts-mapping-to-92-242-132-15/</link>
      <pubDate>Sat, 17 Aug 2013 21:13:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/17/bt-internet-non-existent-hosts-mapping-to-92-242-132-15/</guid>
      <description>We have a test in our code which checks for unresolvable hosts and it started failing for me because instead of throwing an UnknownHostException from the following call:
InetAddress.getByName( &amp;#34;host.that.is.invalid&amp;#34; ) $ ping host.that.is.invalid PING host.that.is.invalid (92.242.132.15): 56 data bytes Request timeout for icmp_seq 0 Request timeout for icmp_seq 1 Request timeout for icmp_seq 2 $ dig host.that.is.invalid ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; host.that.is.invalid ;; global options: +cmd ;; Got answer: ;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 30043 ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0 ;; QUESTION SECTION: ;host.</description>
    </item>
    
    <item>
      <title>Jersey Client: java.net.ProtocolException: Server redirected too many times/Setting cookies on request</title>
      <link>https://markhneedham.com/blog/2013/08/17/jersey-client-java-net-protocolexception-server-redirected-too-many-timessetting-cookies-on-request/</link>
      <pubDate>Sat, 17 Aug 2013 20:25:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/17/jersey-client-java-net-protocolexception-server-redirected-too-many-timessetting-cookies-on-request/</guid>
      <description>Client = Client.create(); ClientResponse response = client.resource( &amp;#34;http://localhost:59680&amp;#34; ).get( ClientResponse.class ); com.sun.jersey.api.client.ClientHandlerException: java.net.ProtocolException: Server redirected too many times (20) at com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:151) at com.sun.jersey.api.client.Client.handle(Client.java:648) at com.sun.jersey.api.client.WebResource.handle(WebResource.java:680) at com.sun.jersey.api.client.WebResource.get(WebResource.java:191) at com.neotechnology.testlab.manager.webapp.AuthenticationIntegrationTest.shouldRedirectToGitHubForAuthentication(AuthenticationIntegrationTest.java:81) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at com.neotechnology.kirkaldy.testing.Resources$1.evaluate(Resources.java:84) at com.neotechnology.kirkaldy.testing.FailureOutput$2.evaluate(FailureOutput.java:37) at org.junit.rules.RunRules.evaluate(RunRules.java:18) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222) at org.junit.runners.ParentRunner.run(ParentRunner.java:300) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at com.</description>
    </item>
    
    <item>
      <title>Python: for/list comprehensions and dictionaries</title>
      <link>https://markhneedham.com/blog/2013/08/13/python-forlist-comprehensions-and-dictionaries/</link>
      <pubDate>Tue, 13 Aug 2013 22:59:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/13/python-forlist-comprehensions-and-dictionaries/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; x = { &amp;#34;a&amp;#34;: 1, &amp;#34;b&amp;#34;:2 } &amp;gt;&amp;gt;&amp;gt; y = {1: &amp;#34;mark&amp;#34;, 2: &amp;#34;will&amp;#34;} &amp;gt;&amp;gt;&amp;gt; x {&amp;#39;a&amp;#39;: 1, &amp;#39;b&amp;#39;: 2} &amp;gt;&amp;gt;&amp;gt; y {1: &amp;#39;mark&amp;#39;, 2: &amp;#39;will&amp;#39;} {&amp;#34;a&amp;#34;: &amp;#39;mark&amp;#39;, &amp;#34;b&amp;#34;: &amp;#39;will&amp;#39;} &amp;gt;&amp;gt;&amp;gt; for key, value in x.iteritems(): ... print (key, value) ... (&amp;#39;a&amp;#39;, 1) (&amp;#39;b&amp;#39;, 2) &amp;gt;&amp;gt;&amp;gt; [key:value for key, value in x.iteritems()] File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1 [key:value for key, value in x.iteritems()] ^ SyntaxError: invalid syntax &amp;gt;&amp;gt;&amp;gt; {key:value for key, value in x.</description>
    </item>
    
    <item>
      <title>9 algorithms that changed the future - John MacCormick: Book Review</title>
      <link>https://markhneedham.com/blog/2013/08/13/9-algorithms-that-changed-the-future-john-maccormick-book-review/</link>
      <pubDate>Tue, 13 Aug 2013 20:00:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/13/9-algorithms-that-changed-the-future-john-maccormick-book-review/</guid>
      <description>I didn&amp;rsquo;t realise that Sergey Brin and Larry Page had published a paper back in 1998 titled &amp;lsquo;The Anatomy of a Large-Scale Hypertextual Web Search Engine&amp;rsquo; which explains the initial PageRank algorithm in more detail.</description>
    </item>
    
    <item>
      <title>Jersey Client: com.sun.jersey.api.client.UniformInterfaceException</title>
      <link>https://markhneedham.com/blog/2013/08/11/jersey-client-com-sun-jersey-api-client-uniforminterfaceexception/</link>
      <pubDate>Sun, 11 Aug 2013 08:07:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/11/jersey-client-com-sun-jersey-api-client-uniforminterfaceexception/</guid>
      <description>public class HaSpike { public static void main(String[] args) { String response = client() .resource(&amp;#34;http://localhost:7474/db/manage/server/ha/slave&amp;#34;) .accept(MediaType.TEXT_PLAIN) .get(String.class); System.out.println(&amp;#34;response = &amp;#34; + response); } private static Client client() { DefaultClientConfig defaultClientConfig = new DefaultClientConfig(); defaultClientConfig.getClasses().add(JacksonJsonProvider.class); return Client.create(defaultClientConfig); } } response = true Exception in thread &amp;#34;main&amp;#34; com.sun.jersey.api.client.UniformInterfaceException: GET http://localhost:7474/db/manage/server/ha/slave returned a response status of 404 Not Found at com.sun.jersey.api.client.WebResource.handle(WebResource.java:686) at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:507) at HaSpike.main(HaSpike.java:10) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.</description>
    </item>
    
    <item>
      <title>neo4j: Extracting a subgraph as an adjacency matrix and calculating eigenvector centrality with JBLAS</title>
      <link>https://markhneedham.com/blog/2013/08/11/neo4j-extracting-a-subgraph-as-an-adjacency-matrix-and-calculating-eigenvector-centrality-with-jblas/</link>
      <pubDate>Sun, 11 Aug 2013 07:23:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/11/neo4j-extracting-a-subgraph-as-an-adjacency-matrix-and-calculating-eigenvector-centrality-with-jblas/</guid>
      <description>There were 3 steps involved in doing this:
MATCH p1:Person, p2:Person WHERE p1.name = &amp;quot;Paul Revere&amp;quot; WITH p1, p2 MATCH p = p1-[?:MEMBER_OF]-&amp;gt;()&amp;lt;-[?:MEMBER_OF]-p2 WITH p1.name AS p1, p2.name AS p2, COUNT(p) AS links ORDER BY p2 RETURN p1, COLLECT(links) AS row +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | p1 | row || &amp;#34;Paul Revere&amp;#34; | [2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,3,2,1,1,2,1,2,1,1,1,1,1,0,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,1,1,1,1,2,1,3,1,3,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,0,1,0,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,2,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,3,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,2,1,1,1,1,1,1,1,1,3,1,1,1,1,3,1,1,1,1,0,1,2,1,1,1,1,1,1,1] |p1:Person, p2:Person WITH p1, p2 MATCH p = p1-[?:MEMBER_OF]-&amp;gt;()&amp;lt;-[?:MEMBER_OF]-p2 WITH p1.name AS p1, p2.name AS p2, COUNT(p) AS links ORDER BY p2 RETURN p1, COLLECT(links) AS row ORDER BY p| p1 | row | +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | &amp;#34;Abiel Ruddock&amp;#34; | [0,1,1,1,0,1,0,1,0,0,1,1,1,0,1,2,0,1,0,1,1,1,2,2,1,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,1,0,0,2,2,0,0,1,1,2,1,1,1,0,1,0,1,1,0,0,2,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,0,2,1,2,1,0,0,0,0,1,1,0,1,0,0,1,0,2,0,0,1,0,0,0,1,0,0,2,0,1,0,1,1,1,0,0,1,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,2,0,0,1,1,0,0,2,0,1,2,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,2,1,0,1,1,1,1,1,0,0,1,1,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,0,2,1,1,0,0,2,0,1,0,0,0,0,1,0,1,0,1,0,1,0] | | &amp;#34;Abraham Hunt&amp;#34; | [1,0,1,1,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0] | .</description>
    </item>
    
    <item>
      <title>Java/JBLAS: Calculating eigenvector centrality of an adjacency matrix</title>
      <link>https://markhneedham.com/blog/2013/08/05/javajblas-calculating-eigenvector-centrality-of-an-adjacency-matrix/</link>
      <pubDate>Mon, 05 Aug 2013 22:12:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/08/05/javajblas-calculating-eigenvector-centrality-of-an-adjacency-matrix/</guid>
      <description>Google&amp;rsquo;s PageRankis a variant of the Eigenvector centrality measure.
DoubleMatrix matrix = new DoubleMatrix(new double[][] { {1,1,0,0,1,0,0}, {1,1,0,0,1,0,0}, {0,0,1,1,1,0,0}, {0,0,1,1,1,0,0}, {1,1,1,1,1,1,1}, {0,0,0,0,1,1,1}, {0,0,0,0,1,1,1}, }); ComplexDoubleMatrix eigenvalues = Eigen.eigenvalues(matrix); for (ComplexDouble eigenvalue : eigenvalues.toArray()) { System.out.print(String.format(&amp;#34;%.2f &amp;#34;, eigenvalue.abs())); } 4.00 2.00 0.00 1.00 2.00 0.00 0.00 List&amp;lt;Double&amp;gt; principalEigenvector = getPrincipalEigenvector(matrix); System.out.println(&amp;#34;principalEigenvector = &amp;#34; + principalEigenvector); private static List&amp;lt;Double&amp;gt; getPrincipalEigenvector(DoubleMatrix matrix) { int maxIndex = getMaxIndex(matrix); ComplexDoubleMatrix eigenVectors = Eigen.eigenvectors(matrix)[0]; return getEigenVector(eigenVectors, maxIndex); } private static int getMaxIndex(DoubleMatrix matrix) { ComplexDouble[] doubleMatrix = Eigen.</description>
    </item>
    
    <item>
      <title>AWS: Attaching an EBS volume on an EC2 instance and making it available for use</title>
      <link>https://markhneedham.com/blog/2013/07/31/aws-attaching-an-ebs-volume-on-an-ec2-instance-and-making-it-available-for-use/</link>
      <pubDate>Wed, 31 Jul 2013 06:21:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/31/aws-attaching-an-ebs-volume-on-an-ec2-instance-and-making-it-available-for-use/</guid>
      <description>$ sudo mkfs -t ext3 /dev/sdf mke2fs 1.42 (29-Nov-2011) Could not stat /dev/sdf --- No such file or directory The device apparently does not exist; did you specify it correctly? $ sudo fdisk -l Disk /dev/xvda1: 8589 MB, 8589934592 bytes 255 heads, 63 sectors/track, 1044 cylinders, total 16777216 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x00000000 Disk /dev/xvda1 doesn&amp;#39;t contain a valid partition table Disk /dev/xvdf: 53.</description>
    </item>
    
    <item>
      <title>Getting started with screen</title>
      <link>https://markhneedham.com/blog/2013/07/31/getting-started-with-screen/</link>
      <pubDate>Wed, 31 Jul 2013 05:41:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/31/getting-started-with-screen/</guid>
      <description>$ screen Screen version 4.00.03jw4 (FAU) 2-May-06 Copyright (c) 1993-2002 Juergen Weigert, Michael Schroeder Copyright (c) 1987 Oliver Laumann This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version. ... $ screen -ls There are screens on: 23397.pts-0.ip-10-243-5-102	(07/31/2013 05:25:30 AM)	(Detached) 3981.</description>
    </item>
    
    <item>
      <title>s3cmd: put fails with “Connection reset by peer” for large files</title>
      <link>https://markhneedham.com/blog/2013/07/30/s3cmd-put-fails-with-connection-reset-by-peer-for-large-files/</link>
      <pubDate>Tue, 30 Jul 2013 16:20:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/30/s3cmd-put-fails-with-connection-reset-by-peer-for-large-files/</guid>
      <description>$ s3cmd put /mnt/ebs/myfile.tar s3://mybucket.somewhere.com /mnt/ebs/myfile.tar -&amp;gt; s3://mybucket.somewhere.com/myfile.tar [1 of 1] 1077248 of 12185313280 0% in 1s 937.09 kB/s failed WARNING: Upload failed: /myfile.tar ([Errno 104] Connection reset by peer) WARNING: Retrying on lower speed (throttle=0.00) WARNING: Waiting 3 sec... /mnt/ebs/myfile.tar -&amp;gt; s3://mybucket.somewhere.com/myfile.tar [1 of 1] 1183744 of 12185313280 0% in 1s 1062.18 kB/s failed WARNING: Upload failed: /myfile.tar ([Errno 104] Connection reset by peer) WARNING: Retrying on lower speed (throttle=0.</description>
    </item>
    
    <item>
      <title>netcat: Strange behaviour with UDP - only receives first packet sent</title>
      <link>https://markhneedham.com/blog/2013/07/30/netcat-strange-behaviour-with-udp-only-receives-first-packet-sent/</link>
      <pubDate>Tue, 30 Jul 2013 06:01:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/30/netcat-strange-behaviour-with-udp-only-receives-first-packet-sent/</guid>
      <description>$ nc -kluv localhost 9000 $ lsof -Pni :9000 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME nc 63289 markhneedham 5u IPv6 0xc99222a54b3975b5 0t0 UDP [::1]:9000 $ echo &amp;#34;mark&amp;#34; | nc -vvu localhost 9000 -4 Connection to localhost 9000 port [udp/cslistener] succeeded! $ nc -kluv localhost 9000 XXXXmark $ echo &amp;#34;mike&amp;#34; | nc -vvu localhost 9000 -4 Connection to localhost 9000 port [udp/cslistener] succeeded! $ nc -kluv localhost 9000 XXXXmark As soon as it received its first datagram (from port 52832), it issued a connect system call &amp;lsquo;connecting&amp;rsquo; it to the 127.</description>
    </item>
    
    <item>
      <title>Jersey Client: Testing external calls</title>
      <link>https://markhneedham.com/blog/2013/07/28/jersey-client-testing-external-calls/</link>
      <pubDate>Sun, 28 Jul 2013 20:43:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/28/jersey-client-testing-external-calls/</guid>
      <description>class Neo4jInstance { private Client httpClient; private URI hostname; public Neo4jInstance(Client httpClient, URI hostname) { this.httpClient = httpClient; this.hostname = hostname; } public Boolean isSlave() { String slaveURI = hostname.toString() + &amp;#34;:7474/db/manage/server/ha/slave&amp;#34;; ClientResponse response = httpClient.resource(slaveURI).accept(TEXT_PLAIN).get(ClientResponse.class); return Boolean.parseBoolean(response.getEntity(String.class)); } } @Test public void shouldIndicateInstanceIsSlave() { Client client = mock( Client.class ); WebResource webResource = mock( WebResource.class ); WebResource.Builder builder = mock( WebResource.Builder.class ); ClientResponse clientResponse = mock( ClientResponse.class ); when( builder.</description>
    </item>
    
    <item>
      <title>Product Documentation: The receiver decides if it&#39;s successful</title>
      <link>https://markhneedham.com/blog/2013/07/28/product-documentation-the-receiver-decides-if-its-successful/</link>
      <pubDate>Sun, 28 Jul 2013 16:18:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/28/product-documentation-the-receiver-decides-if-its-successful/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Graph Processing: Betweeness Centrality - neo4j&#39;s cypher vs graphstream</title>
      <link>https://markhneedham.com/blog/2013/07/27/graph-processing-betweeness-centrality-neo4js-cypher-vs-graphstream/</link>
      <pubDate>Sat, 27 Jul 2013 11:21:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/27/graph-processing-betweeness-centrality-neo4js-cypher-vs-graphstream/</guid>
      <description>A -&amp;gt; B: Direct Path Exists A -&amp;gt; C: B A -&amp;gt; D: E A -&amp;gt; E: Direct Path Exists B -&amp;gt; A: No Path Exists B -&amp;gt; C: Direct Path Exists B -&amp;gt; D: E or C B -&amp;gt; E: Direct Path Exists C -&amp;gt; A: No Path Exists C -&amp;gt; B: No Path Exists C -&amp;gt; D: Direct Path Exists C -&amp;gt; E: No Path Exists D -&amp;gt; A: No Path Exists D -&amp;gt; B: No Path Exists D -&amp;gt; C: No Path Exists D -&amp;gt; E: No Path Exists E -&amp;gt; A: No Path Exists E -&amp;gt; B: No Path Exists E -&amp;gt; C: No Path Exists E -&amp;gt; D: Direct Path Exists A: 0 B: 1 C: 0.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Getting the hang of query parameters</title>
      <link>https://markhneedham.com/blog/2013/07/27/neo4jcypher-getting-the-hang-of-query-parameters/</link>
      <pubDate>Sat, 27 Jul 2013 09:30:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/27/neo4jcypher-getting-the-hang-of-query-parameters/</guid>
      <description>require &amp;#39;open-uri&amp;#39; open(&amp;#34;data/people.cyp&amp;#34;, &amp;#39;w&amp;#39;) { |f| (1..500).each do |value| f.puts(&amp;#34;CREATE (p:Person{name: \&amp;#34;#{value}\&amp;#34;})&amp;#34;) end } CREATE (:Person{name: &amp;quot;person1&amp;quot;}) CREATE (:Person{name: &amp;quot;person2&amp;quot;}) CREATE (:Person{name: &amp;quot;person3&amp;quot;}) CREATE (:Person{name: &amp;quot;person4&amp;quot;}) CREATE (:Person{name: &amp;quot;person5&amp;quot;}) ... ==&amp;gt; +-------------------+ ==&amp;gt; | No data returned. | ==&amp;gt; +-------------------+ ==&amp;gt; Nodes created: 500 ==&amp;gt; Properties set: 500 ==&amp;gt; Labels added: 500 ==&amp;gt; 27706 ms require &amp;#39;neography&amp;#39; params = { :name =&amp;gt; &amp;#34;Mark&amp;#34; } Neography::Rest.new.execute_query(&amp;#34;CREATE (:Person {name: {name} })&amp;#34;, params) neo4j-sh (0)$ match p:Person return p; ==&amp;gt; +----------------------+ ==&amp;gt; | p | ==&amp;gt; +----------------------+ ==&amp;gt; | Node[1]{name:&amp;#34;Mark&amp;#34;} | ==&amp;gt; +----------------------+ ==&amp;gt; 1 row ==&amp;gt; 175 ms require &amp;#39;neography&amp;#39; params = { :name =&amp;gt; [] } (1.</description>
    </item>
    
    <item>
      <title>On &#34;The fear of blogging about technical topics&#34;</title>
      <link>https://markhneedham.com/blog/2013/07/22/on-the-fear-of-blogging-about-technical-topics/</link>
      <pubDate>Mon, 22 Jul 2013 23:47:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/22/on-the-fear-of-blogging-about-technical-topics/</guid>
      <description>To behave like a hacker, you have to believe that the thinking time of other hackers is precious — so much so that it’s almost a moral duty for you to share information, solve problems and then give the solutions away just so other hackers can solve new problems instead of having to perpetually re-address old ones.</description>
    </item>
    
    <item>
      <title>Lessons from supporting production code</title>
      <link>https://markhneedham.com/blog/2013/07/22/lessons-from-supporting-production-code/</link>
      <pubDate>Mon, 22 Jul 2013 22:37:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/22/lessons-from-supporting-production-code/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jersey: Listing all resources, paths, verbs to build an entry point/index for an API</title>
      <link>https://markhneedham.com/blog/2013/07/21/jersey-listing-all-resources-paths-verbs-to-build-an-entry-pointindex-for-an-api/</link>
      <pubDate>Sun, 21 Jul 2013 11:07:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/21/jersey-listing-all-resources-paths-verbs-to-build-an-entry-pointindex-for-an-api/</guid>
      <description>AbstractResource resource = IntrospectionModeller.createResource(JacksonResource.class); System.out.println(&amp;#34;Path is &amp;#34; + resource.getPath().getValue()); String uriPrefix = resource.getPath().getValue(); for (AbstractSubResourceMethod srm :resource.getSubResourceMethods()) { String uri = uriPrefix + &amp;#34;/&amp;#34; + srm.getPath().getValue(); System.out.println(srm.getHttpMethod() + &amp;#34; at the path &amp;#34; + uri + &amp;#34; return &amp;#34; + srm.getReturnType().getName()); } Path is /jackson GET at the path /jackson/{who} return com.g414.j4.minimal.JacksonResource$Greeting GET at the path /jackson/awesome/{who} return javax.ws.rs.core.Response @Path(&amp;#34;/&amp;#34;) public class ResourceListingResource { @GET @Produces(MediaType.APPLICATION_JSON) public Response showAll( @Context Application application, @Context HttpServletRequest request) { String basePath = request.</description>
    </item>
    
    <item>
      <title>Jersey Server: com.sun.jersey.api.MessageException: A message body writer for Java class org.codehaus.jackson.node.ObjectNode and MIME media type application/json was not found</title>
      <link>https://markhneedham.com/blog/2013/07/21/jersey-server-com-sun-jersey-api-messageexception-a-message-body-writer-for-java-class-org-codehaus-jackson-node-objectnode-and-mime-media-type-applicationjson-was-not-found/</link>
      <pubDate>Sun, 21 Jul 2013 10:37:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/21/jersey-server-com-sun-jersey-api-messageexception-a-message-body-writer-for-java-class-org-codehaus-jackson-node-objectnode-and-mime-media-type-applicationjson-was-not-found/</guid>
      <description>@Path(&amp;#34;/jackson&amp;#34;) public class JacksonResource { @GET @Produces( { MediaType.APPLICATION_JSON }) @Path(&amp;#34;/awesome/{who}&amp;#34;) public Response sayOtherGreeting(@PathParam(&amp;#34;who&amp;#34;) String name) { ObjectNode result = JsonNodeFactory.instance.objectNode(); result.put(&amp;#34;name&amp;#34;, name); return Response.ok().entity(result).build(); } } SEVERE: The registered message body writers compatible with the MIME media type are: application/json -&amp;gt; com.sun.jersey.json.impl.provider.entity.JSONJAXBElementProvider$App com.sun.jersey.json.impl.provider.entity.JSONArrayProvider$App com.sun.jersey.json.impl.provider.entity.JSONObjectProvider$App com.sun.jersey.json.impl.provider.entity.JSONRootElementProvider$App com.sun.jersey.json.impl.provider.entity.JSONListElementProvider$App */* -&amp;gt; com.sun.jersey.core.impl.provider.entity.FormProvider com.sun.jersey.server.impl.template.ViewableMessageBodyWriter com.sun.jersey.core.impl.provider.entity.StringProvider com.sun.jersey.core.impl.provider.entity.ByteArrayProvider com.sun.jersey.core.impl.provider.entity.FileProvider com.sun.jersey.core.impl.provider.entity.InputStreamProvider com.sun.jersey.core.impl.provider.entity.DataSourceProvider com.sun.jersey.core.impl.provider.entity.XMLJAXBElementProvider$General com.sun.jersey.core.impl.provider.entity.ReaderProvider com.sun.jersey.core.impl.provider.entity.DocumentProvider com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider com.sun.jersey.core.impl.provider.entity.SourceProvider$SourceWriter com.sun.jersey.json.impl.provider.entity.JSONJAXBElementProvider$General com.sun.jersey.json.impl.provider.entity.JSONArrayProvider$General com.sun.jersey.json.impl.provider.entity.JSONObjectProvider$General com.sun.jersey.json.impl.provider.entity.JSONWithPaddingProvider com.sun.jersey.core.impl.provider.entity.XMLRootElementProvider$General com.sun.jersey.core.impl.provider.entity.XMLListElementProvider$General com.sun.jersey.json.impl.provider.entity.JSONRootElementProvider$General com.sun.jersey.json.impl.provider.entity.JSONListElementProvider$General com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy Jul 21, 2013 11:11:17 AM com.</description>
    </item>
    
    <item>
      <title>Graph Processing: Calculating betweenness centrality for an undirected graph using graphstream</title>
      <link>https://markhneedham.com/blog/2013/07/19/graph-processing-calculating-betweenness-centrality-for-an-undirected-graph-using-graphstream/</link>
      <pubDate>Fri, 19 Jul 2013 00:37:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/19/graph-processing-calculating-betweenness-centrality-for-an-undirected-graph-using-graphstream/</guid>
      <description>&amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt; &amp;lt;artifactId&amp;gt;my-gs-project&amp;lt;/artifactId&amp;gt; &amp;lt;groupId&amp;gt;org.graphstream&amp;lt;/groupId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;name&amp;gt;my-gs-project&amp;lt;/name&amp;gt; &amp;lt;description/&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.graphstream&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;gs-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.graphstream&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;gs-algo&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;/project&amp;gt; A -&amp;gt; B: None A -&amp;gt; C: B A -&amp;gt; D: B, C A -&amp;gt; E: B, C, D B -&amp;gt; C: None B -&amp;gt; D: C B -&amp;gt; E: C, D C -&amp;gt; D: None C -&amp;gt; E: D D -&amp;gt; E: None A: 0 B: 3 C: 4 D: 3 E: 0 public class Spike { public static void main(String[] args) { Graph graph = new SingleGraph(&amp;#34;Tutorial 1&amp;#34;); Node A = graph.</description>
    </item>
    
    <item>
      <title>Git: Commit squashing made even easier using &#39;git branch --set-upstream&#39;</title>
      <link>https://markhneedham.com/blog/2013/07/16/git-commit-squashing-made-even-easier-using-git-branch-set-upstream/</link>
      <pubDate>Tue, 16 Jul 2013 08:13:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/16/git-commit-squashing-made-even-easier-using-git-branch-set-upstream/</guid>
      <description>$ cat .git/config [remote &amp;#34;origin&amp;#34;] fetch = +refs/heads/*:refs/remotes/origin/* url = git@github.com:mneedham/neo4j-shell-tools.git [branch &amp;#34;master&amp;#34;] remote = origin merge = refs/heads/master [remote &amp;#34;base&amp;#34;] url = git@github.com:jexp/neo4j-shell-tools.git fetch = +refs/heads/*:refs/remotes/base/* [branch &amp;#34;readme-pull&amp;#34;] remote = origin merge = refs/heads/readme-pull [branch &amp;#34;readme&amp;#34;] remote = origin merge = refs/heads/readme $ git rebase -i c4e94f668223d53f6c7364d19aa965d09ea7eb00 $ git branch master * readme readme-pull $ git checkout -b readme-pull-new Switched to a new branch &amp;#39;readme-pull-new&amp;#39; $ git branch --set-upstream readme-pull-new base/master Branch readme-pull-new set up to track remote branch master from base.</description>
    </item>
    
    <item>
      <title>Java: Testing a socket is listening on all network interfaces/wildcard interface</title>
      <link>https://markhneedham.com/blog/2013/07/14/java-testing-a-socket-is-listening-on-all-network-interfaceswildcard-interface/</link>
      <pubDate>Sun, 14 Jul 2013 14:31:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/14/java-testing-a-socket-is-listening-on-all-network-interfaceswildcard-interface/</guid>
      <description>public class EchoServer { public static void main(String[] args) throws IOException { int port = 4444; ServerSocket serverSocket = new ServerSocket(port, 50, InetAddress.getByAddress(new byte[] {0x7f,0x00,0x00,0x01})); System.err.println(&amp;#34;Started server on port &amp;#34; + port); while (true) { Socket clientSocket = serverSocket.accept(); System.err.println(&amp;#34;Accepted connection from client: &amp;#34; + clientSocket.getRemoteSocketAddress() ); In in = new In (clientSocket); Out out = new Out(clientSocket); String s; while ((s = in.readLine()) != null) { out.println(s); } System.err.println(&amp;#34;Closing connection with client: &amp;#34; + clientSocket.</description>
    </item>
    
    <item>
      <title>Learning more about network sockets</title>
      <link>https://markhneedham.com/blog/2013/07/14/learning-more-about-network-sockets/</link>
      <pubDate>Sun, 14 Jul 2013 09:52:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/14/learning-more-about-network-sockets/</guid>
      <description>$ ifconfig -u lo0: flags=8049&amp;lt;UP,LOOPBACK,RUNNING,MULTICAST&amp;gt; mtu 16384 options=3&amp;lt;RXCSUM,TXCSUM&amp;gt; inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 inet 127.0.0.1 netmask 0xff000000 inet6 ::1 prefixlen 128 en0: flags=8863&amp;lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 1500 ether xxxxxxxxxxxx inet6 fe80::9afe:94ff:fe4f:ee50%en0 prefixlen 64 scopeid 0x4 inet 192.168.1.89 netmask 0xffffff00 broadcast 192.168.1.255 media: autoselect status: active p2p0: flags=8843&amp;lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&amp;gt; mtu 2304 ether xxxxxxxxxxxx media: autoselect status: inactive $ nc -l -k 127.0.0.1 4444 $ lsof -Pni :4444 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME java 34178 markhneedham 35u IPv6 0x114b98295506482d 0t0 TCP 127.</description>
    </item>
    
    <item>
      <title>Git/GitHub: Squashing all commits before sending a pull request</title>
      <link>https://markhneedham.com/blog/2013/07/13/gitgithub-squashing-all-commits-before-sending-a-pull-request/</link>
      <pubDate>Sat, 13 Jul 2013 18:47:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/13/gitgithub-squashing-all-commits-before-sending-a-pull-request/</guid>
      <description>[remote &amp;#34;origin&amp;#34;] fetch = +refs/heads/*:refs/remotes/origin/* url = git@github.com:mneedham/neo4j-shell-tools.git [branch &amp;#34;master&amp;#34;] remote = origin merge = refs/heads/master [remote &amp;#34;base&amp;#34;] url = git@github.com:jexp/neo4j-shell-tools.git fetch = +refs/heads/*:refs/remotes/base/* [branch &amp;#34;readme&amp;#34;] remote = origin merge = refs/heads/readme $ git branch readme-pull $ git checkout readme-pull Switched to branch &amp;#39;readme-pull&amp;#39; $ git fetch base remote: Counting objects: 77, done. remote: Compressing objects: 100% (18/18), done. remote: Total 43 (delta 15), reused 40 (delta 12) Unpacking objects: 100% (43/43), done.</description>
    </item>
    
    <item>
      <title>neo4j Unmanaged Extension: Creating gzipped streamed responses with Jetty</title>
      <link>https://markhneedham.com/blog/2013/07/08/neo4j-unmanaged-extension-creating-gzipped-streamed-responses-with-jetty/</link>
      <pubDate>Mon, 08 Jul 2013 23:48:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/08/neo4j-unmanaged-extension-creating-gzipped-streamed-responses-with-jetty/</guid>
      <description>package com.markandjim; public class GZipInitialiser implements SPIPluginLifecycle { private WebServer webServer; @Override public Collection&amp;lt;Injectable&amp;lt;?&amp;gt;&amp;gt; start(NeoServer neoServer) { webServer = getWebServer(neoServer); GzipFilter filter = new GzipFilter(); webServer.addFilter(filter, &amp;#34;/*&amp;#34;); return Collections.emptyList(); } private WebServer getWebServer(final NeoServer neoServer) { if (neoServer instanceof AbstractNeoServer) { return ((AbstractNeoServer) neoServer).getWebServer(); } throw new IllegalArgumentException(&amp;#34;expected AbstractNeoServer&amp;#34;); } @Override public Collection&amp;lt;Injectable&amp;lt;?&amp;gt;&amp;gt; start(GraphDatabaseService graphDatabaseService, Configuration configuration) { throw new IllegalAccessError(); } @Override public void stop() { } } com.markandjim.GZipInitialiser $ curl -H &amp;#34;Accept-Encoding:gzip,deflate&amp;#34; -v http://localhost:7474/unmanaged/subgraph/1000/1 * About to connect() to localhost port 7474 (#0) * Trying ::1.</description>
    </item>
    
    <item>
      <title>JAX RS: Streaming a Response using StreamingOutput</title>
      <link>https://markhneedham.com/blog/2013/07/08/jax-rs-streaming-a-response-using-streamingoutput/</link>
      <pubDate>Mon, 08 Jul 2013 23:19:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/08/jax-rs-streaming-a-response-using-streamingoutput/</guid>
      <description>package com.markandjim @Path(&amp;#34;/subgraph&amp;#34;) public class ExtractSubGraphResource { private final GraphDatabaseService database; public ExtractSubGraphResource(@Context GraphDatabaseService database) { this.database = database; } @GET @Produces(MediaType.TEXT_PLAIN) @Path(&amp;#34;/{nodeId}/{depth}&amp;#34;) public Response hello(@PathParam(&amp;#34;nodeId&amp;#34;) long nodeId, @PathParam(&amp;#34;depth&amp;#34;) int depth) { Node node = database.getNodeById(nodeId); final Traverser paths = Traversal.description() .depthFirst() .relationships(DynamicRelationshipType.withName(&amp;#34;whatever&amp;#34;)) .evaluator( Evaluators.toDepth(depth) ) .traverse(node); StringBuilder allThePaths = new StringBuilder(); for (org.neo4j.graphdb.Path path : paths) { allThePaths.append(path.toString() + &amp;#34;\n&amp;#34;); } return Response.ok(allThePaths.toString()).build(); } } org.neo4j.server.thirdparty_jaxrs_classes=com.markandjim=/unmanaged $ curl -v http://localhost:7474/unmanaged/subgraph/1000/10 package com.</description>
    </item>
    
    <item>
      <title>Survivorship Bias and Product Development</title>
      <link>https://markhneedham.com/blog/2013/07/08/survivorship-bias-and-product-development/</link>
      <pubDate>Mon, 08 Jul 2013 22:14:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/07/08/survivorship-bias-and-product-development/</guid>
      <description>The mistake, which Wald saw instantly, was that the holes showed where the planes were strongest. The holes showed where a bomber could be shot and still survive the flight home, Wald explained. After all, here they were, holes and all. It was the planes that weren’t there that needed extra protection, and they had needed it in places that these planes had not. The holes in the surviving planes actually revealed the locations that needed the least additional armor.</description>
    </item>
    
    <item>
      <title>Ruby: Calculating the orthodromic distance using the Haversine formula</title>
      <link>https://markhneedham.com/blog/2013/06/30/ruby-calculating-the-orthodromic-distance-using-the-haversine-formula/</link>
      <pubDate>Sun, 30 Jun 2013 22:53:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/30/ruby-calculating-the-orthodromic-distance-using-the-haversine-formula/</guid>
      <description>lat, long, distance = [&amp;#34;51.55786291569685&amp;#34;, &amp;#34;0.144195556640625&amp;#34;, 10] query = &amp;#34; START node = node:geom(&amp;#39;withinDistance:[#{lat}, #{long}, #{distance}]&amp;#39;)&amp;#34; query &amp;lt;&amp;lt; &amp;#34; RETURN node.name, node.team, node.lat, node.lon&amp;#34; rows = result[&amp;#34;data&amp;#34;].map do |row| { :team =&amp;gt; row[1], :stadium =&amp;gt; row[0], :lat =&amp;gt; row[2], :lon =&amp;gt; row[3] } p rows [{:team=&amp;gt;&amp;#34;Millwall&amp;#34;, :stadium=&amp;gt;&amp;#34;The Den&amp;#34;, :lat=&amp;gt;51.4859, :lon=&amp;gt;-0.050743}, {:team=&amp;gt;&amp;#34;Arsenal&amp;#34;, :stadium=&amp;gt;&amp;#34;Emirates Stadium&amp;#34;, :lat=&amp;gt;51.5549, :lon=&amp;gt;-0.108436}, {:team=&amp;gt;&amp;#34;Chelsea&amp;#34;, :stadium=&amp;gt;&amp;#34;Stamford Bridge&amp;#34;, :lat=&amp;gt;51.4816, :lon=&amp;gt;-0.191034}, {:team=&amp;gt;&amp;#34;Fulham&amp;#34;, :stadium=&amp;gt;&amp;#34;Craven Cottage&amp;#34;, :lat=&amp;gt;51.4749, :lon=&amp;gt;-0.221619}, {:team=&amp;gt;&amp;#34;Queens Park Rangers&amp;#34;, :stadium=&amp;gt;&amp;#34;Loftus Road&amp;#34;, :lat=&amp;gt;51.</description>
    </item>
    
    <item>
      <title>Leaflet JS: Resizing a map to keep a circle diameter inside it</title>
      <link>https://markhneedham.com/blog/2013/06/30/leaflet-js-resizing-a-map-to-keep-a-circle-diameter-inside-it/</link>
      <pubDate>Sun, 30 Jun 2013 22:23:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/30/leaflet-js-resizing-a-map-to-keep-a-circle-diameter-inside-it/</guid>
      <description>var distance = 10; $(&amp;#34;#inputDistance&amp;#34;).val(distance); var latLong=[51.505, -0.11398315429687499]; $(&amp;#34;#inputLatLong&amp;#34;).val(latLong) var map = L.map(&amp;#39;map&amp;#39;).setView(latLong,11); var layer = L.tileLayer(&amp;#39;http://{s}.tile.cloudmade.com/e7b61e61295a44a5b319ca0bd3150890/997/256/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18 }); layer.addTo(map); var currentDiameter = L.circle(latLong, distance * 1000); currentDiameter.addTo(map); var currentPositionMarker = L.marker([latLong[0], latLong[1]]); currentPositionMarker.addTo(map); $(&amp;#34;#inputDistance&amp;#34;).change(function() {	map.removeLayer(currentDiameter); currentDiameter = L.circle(currentPositionMarker.getLatLng(), $(&amp;#34;#inputDistance&amp;#34;).val() * 1000); currentDiameter.addTo(map); }); $(&amp;#34;#inputDistance&amp;#34;).change(function() {	map.removeLayer(currentDiameter); currentDiameter = L.circle(currentPositionMarker.getLatLng(), $(&amp;#34;#inputDistance&amp;#34;).val() * 1000); currentDiameter.addTo(map); map.fitBounds(currentDiameter.getBounds()); }); $(document).ready(function() {	var distance = 10; $(&amp;#34;#inputDistance&amp;#34;).val(distance); var latLong=[51.505, -0.11398315429687499]; $(&amp;#34;#inputLatLong&amp;#34;).val(latLong) var map = L.</description>
    </item>
    
    <item>
      <title>Vagrant: Multi (virtual) machine with Puppet roles</title>
      <link>https://markhneedham.com/blog/2013/06/30/vagrant-multi-virtual-machine-with-puppet-roles/</link>
      <pubDate>Sun, 30 Jun 2013 13:13:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/30/vagrant-multi-virtual-machine-with-puppet-roles/</guid>
      <description>module Vagrant module Config module V2 class Root def provision_as_role(role) vm.provision :puppet do |puppet| puppet.manifests_path = &amp;#34;puppet/manifests&amp;#34; puppet.module_path = &amp;#34;puppet/modules&amp;#34; puppet.manifest_file = &amp;#34;base.pp&amp;#34; puppet.facter = { &amp;#34;role&amp;#34; =&amp;gt; role.to_s } end end end end end end require File.join(File.dirname(__FILE__), &amp;#39;lib&amp;#39;, &amp;#39;root.rb&amp;#39;) Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;precise64&amp;#34; config.vm.box_url = &amp;#34;http://files.vagrantup.com/precise64.box&amp;#34; config.vm.define :neo01 do |neo| neo.vm.hostname = &amp;#34;neo01&amp;#34; neo.vm.network :private_network, ip: &amp;#34;192.168.33.101&amp;#34; neo.provision_as_role :neo end config.vm.define :lb01 do |lb| lb.vm.hostname = &amp;#34;lb01&amp;#34; lb.</description>
    </item>
    
    <item>
      <title>Vagrant 1.2.2: `[]&#39;: can&#39;t convert Symbol into Integer (TypeError)/The following settings don&#39;t exist</title>
      <link>https://markhneedham.com/blog/2013/06/29/vagrant-1-2-2-cant-convert-symbol-into-integer-typeerrorthe-following-settings-dont-exist/</link>
      <pubDate>Sat, 29 Jun 2013 08:44:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/29/vagrant-1-2-2-cant-convert-symbol-into-integer-typeerrorthe-following-settings-dont-exist/</guid>
      <description>Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;precise64&amp;#34; config.vm.box_url = &amp;#34;http://files.vagrantup.com/precise64.box&amp;#34; config.vm.define :neo01 do |neo| neo.vm.network :hostonly, &amp;#34;192.168.33.101&amp;#34; neo.vm.forward_port 8080, 4569 end end $ vagrant up /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/plugins/kernel_v2/config/vm.rb:146:in `[]&amp;#39;: can&amp;#39;t convert Symbol into Integer (TypeError) from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/plugins/kernel_v2/config/vm.rb:146:in `network&amp;#39; from /Users/markneedham/projects/support/haproxy/Vagrantfile:19:in `block (2 levels) in &amp;lt;top (required)&amp;gt;&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/v2/loader.rb:37:in `call&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/v2/loader.rb:37:in `load&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/loader.rb:104:in `block (2 levels) in load&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/loader.rb:98:in `each&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/loader.rb:98:in `block in load&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/loader.rb:95:in `each&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.2.2/lib/vagrant/config/loader.rb:95:in `load&amp;#39; from /Applications/Vagrant/embedded/gems/gems/vagrant-1.</description>
    </item>
    
    <item>
      <title>Vagrant/Virtual Box: There was an error executing the following command with VBoxManage - Progress object failure: NS_ERROR_CALL_FAILED</title>
      <link>https://markhneedham.com/blog/2013/06/29/vagrantvirtual-box-there-was-an-error-executing-the-following-command-with-vboxmanage-progress-object-failure-ns_error_call_failed/</link>
      <pubDate>Sat, 29 Jun 2013 07:38:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/29/vagrantvirtual-box-there-was-an-error-executing-the-following-command-with-vboxmanage-progress-object-failure-ns_error_call_failed/</guid>
      <description>ERROR vagrant: /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/providers/virtualbox/driver/base.rb:292:in `block in execute&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/util/retryable.rb:17:in `retryable&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/providers/virtualbox/driver/base.rb:282:in `execute&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/providers/virtualbox/driver/version_4_2.rb:165:in `import&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/providers/virtualbox/action/import.rb:15:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/warden.rb:34:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/builtin/handle_box_url.rb:38:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/warden.rb:34:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/providers/virtualbox/action/check_accessible.rb:18:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/warden.rb:34:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/runner.rb:61:in `block in run&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/util/busy.rb:19:in `busy&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/runner.rb:61:in `run&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/builtin/call.rb:51:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/warden.rb:34:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/builtin/config_validate.rb:25:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/warden.rb:34:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/providers/virtualbox/action/check_virtualbox.rb:17:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/warden.rb:34:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/builder.rb:109:in `call&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/runner.rb:61:in `block in run&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/util/busy.rb:19:in `busy&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/action/runner.rb:61:in `run&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/machine.rb:129:in `action&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/commands/up/command.rb:37:in `block in execute&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/plugin/v2/command.rb:182:in `block in with_target_vms&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/plugin/v2/command.rb:180:in `each&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/lib/vagrant/plugin/v2/command.rb:180:in `with_target_vms&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.1.2/plugins/commands/up/command.rb:32:in `execute&amp;#39; /Applications/Vagrant/embedded/gems/gems/vagrant-1.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Aggregating relationships within a path</title>
      <link>https://markhneedham.com/blog/2013/06/27/neo4jcypher-aggregating-relationships-within-a-path/</link>
      <pubDate>Thu, 27 Jun 2013 10:32:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/27/neo4jcypher-aggregating-relationships-within-a-path/</guid>
      <description>CREATE (email1 { name: &#39;Email 1&#39;, title: &#39;Some stuff&#39; }) CREATE (email2 { name: &#39;Email 2&#39;, title: &amp;quot;Absolutely irrelevant&amp;quot; }) CREATE (email3 { name: &#39;Email 3&#39;, title: &amp;quot;Something else&amp;quot; }) CREATE (person1 { name: &#39;Mark&#39; }) CREATE (person2 { name: &#39;Jim&#39; }) CREATE (person3 { name: &#39;Alistair&#39; }) CREATE (person1)-[:SENT]-&amp;gt;(email1) CREATE (person2)-[:RECEIVED]-&amp;gt;(email1) CREATE (person3)-[:RECEIVED]-&amp;gt;(email1) CREATE (person1)-[:SENT]-&amp;gt;(email2) CREATE (person2)-[:RECEIVED]-&amp;gt;(email2) CREATE (person2)-[:SENT]-&amp;gt;(email3) CREATE (person1)-[:RECEIVED]-&amp;gt;(email3) +-------------------------------------------+ | Person 1 | Person 2 | P1 -&amp;gt; P2 | P2 -&amp;gt; P1 | |-------------------------------------------| | Alistair | Mark | 0 | 1 | | Jim | Mark | 1 | 2 | +-------------------------------------------+ START email = node:node_auto_index(&#39;name:&amp;quot;Email 1&amp;quot; name:&amp;quot;Email 2&amp;quot; name: &amp;quot;Email 3&amp;quot;&#39;) MATCH sender-[:SENT]-&amp;gt;email&amp;lt;-[:RECEIVED]-receiver RETURN sender.</description>
    </item>
    
    <item>
      <title>Unix/awk: Extracting substring using a regular expression with capture groups</title>
      <link>https://markhneedham.com/blog/2013/06/26/unixawk-extracting-substring-using-a-regular-expression-with-capture-groups/</link>
      <pubDate>Wed, 26 Jun 2013 15:23:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/26/unixawk-extracting-substring-using-a-regular-expression-with-capture-groups/</guid>
      <description>$ echo &amp;#34;mark #1000&amp;#34; | gawk &amp;#39;{ match($0, /#([0-9]+)/, arr); if(arr[1] != &amp;#34;&amp;#34;) print arr[1] }&amp;#39; 1000 $ echo &amp;#34;mark #1000&amp;#34; | awk &amp;#39;match($0, /#[0-9]+/) { print substr( $0, RSTART, RLENGTH )}&amp;#39; #1000 $ head -n 5 log.txt Command[27716, Node[7825340,used=true,rel=14547348,prop=31734662]] Command[27716, Node[7825341,used=true,rel=14547349,prop=31734665]] Command[27716, Node[7825342,used=true,rel=14547350,prop=31734668]] Command[27716, Node[7825343,used=true,rel=14547351,prop=31734671]] $ head -n 5 log.txt | awk &amp;#39;match($0, /Node\[([^,]+)/) { print substr( $0, RSTART, RLENGTH )}&amp;#39; Node[7825340 Node[7825341 Node[7825342 Node[7825343 Node[7825336 $ head -n 5 log.</description>
    </item>
    
    <item>
      <title>neo4j Spatial: Indexing football stadiums using the REST API</title>
      <link>https://markhneedham.com/blog/2013/06/24/neo4j-spatial-indexing-football-stadiums-using-the-rest-api/</link>
      <pubDate>Mon, 24 Jun 2013 07:17:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/24/neo4j-spatial-indexing-football-stadiums-using-the-rest-api/</guid>
      <description>Name,Team,Capacity,Latitude,Longitude &amp;#34;Adams Park&amp;#34;,&amp;#34;Wycombe Wanderers&amp;#34;,10284,51.6306,-0.800299 &amp;#34;Almondvale Stadium&amp;#34;,&amp;#34;Livingston&amp;#34;,10122,55.8864,-3.52207 &amp;#34;Amex Stadium&amp;#34;,&amp;#34;Brighton and Hove Albion&amp;#34;,22374,50.8609,-0.08014 require &amp;#39;csv&amp;#39; require &amp;#39;httparty&amp;#39; require &amp;#39;json&amp;#39; HTTParty.post(&amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/addSimplePointLayer&amp;#34;, :body =&amp;gt; { :layer =&amp;gt; &amp;#39;geom&amp;#39;, :lat =&amp;gt; &amp;#39;lat&amp;#39;, :lon =&amp;gt; &amp;#39;lon&amp;#39; }.to_json, :headers =&amp;gt; { &amp;#39;Content-Type&amp;#39; =&amp;gt; &amp;#39;application/json&amp;#39; } ) HTTParty.post(&amp;#34;http://localhost:7474/db/data/index/node&amp;#34;, :body =&amp;gt; { :name =&amp;gt; &amp;#39;geom&amp;#39;, :config =&amp;gt; { :provider =&amp;gt; &amp;#39;spatial&amp;#39;, :geometry_type =&amp;gt; &amp;#39;point&amp;#39;, :lat =&amp;gt; &amp;#39;lat&amp;#39;, :lon =&amp;gt; &amp;#39;lon&amp;#39; } }.to_json, :headers =&amp;gt; { &amp;#39;Content-Type&amp;#39; =&amp;gt; &amp;#39;application/json&amp;#39; } ) contents = CSV.</description>
    </item>
    
    <item>
      <title>neo4j: A simple example using the JDBC driver</title>
      <link>https://markhneedham.com/blog/2013/06/20/neo4j-a-simple-example-using-the-jdbc-driver/</link>
      <pubDate>Thu, 20 Jun 2013 07:21:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/20/neo4j-a-simple-example-using-the-jdbc-driver/</guid>
      <description>&amp;lt;dependencies&amp;gt; ... &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.neo4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;neo4j-jdbc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;neo4j-maven&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;neo4j maven&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://m2.neo4j.org&amp;lt;/url&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;/repositories&amp;gt; Neo4jConnection connect = new Driver(). connect(&amp;#34;jdbc:neo4j://localhost:7474&amp;#34;, new Properties()); Exception in thread &amp;#34;main&amp;#34; java.lang.NoClassDefFoundError: org/neo4j/cypherdsl/grammar/Execute at org.neo4j.jdbc.Driver.&amp;lt;init&amp;gt;(Driver.java:52) at org.neo4j.jdbc.Driver.&amp;lt;clinit&amp;gt;(Driver.java:43) at com.centrica.bigquery.JDBCTest.main(JDBCTest.java:17) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:601) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120) Caused by: java.lang.ClassNotFoundException: org.neo4j.cypherdsl.grammar.Execute at java.net.URLClassLoader$1.run(URLClassLoader.java:366) at java.net.URLClassLoader$1.run(URLClassLoader.java:355) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:354) at java.lang.ClassLoader.loadClass(ClassLoader.java:423) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) at java.lang.ClassLoader.loadClass(ClassLoader.java:356) ... 8 more &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: CREATE with optional properties</title>
      <link>https://markhneedham.com/blog/2013/06/20/neo4jcypher-create-with-optional-properties/</link>
      <pubDate>Thu, 20 Jun 2013 06:31:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/20/neo4jcypher-create-with-optional-properties/</guid>
      <description>CREATE (person1 { personId: 1, started: 1361708546 }) CREATE (person2 { personId: 2, started: 1361708546, left: 1371708646 }) CREATE (company { companyId: 1 }) START person = node:node_auto_index(&#39;personId:1 personId:2&#39;), company = node:node_auto_index(&#39;companyId:1&#39;) CREATE person-[:TENURE_AT { started: person.started, left: person.left }]-company RETURN person, company Error: org.neo4j.cypher.EntityNotFoundException: The property &amp;#39;left&amp;#39; does not exist on Node[1] START person = node:node_auto_index(&#39;personId:1 personId:2&#39;), company = node:node_auto_index(&#39;companyId:1&#39;) CREATE person-[:TENURE_AT { started: person.started, left: person.left? }]-company RETURN person, company Error: java.</description>
    </item>
    
    <item>
      <title>neo4j: WrappingNeoServerBootstrapper and the case of the /webadmin 404</title>
      <link>https://markhneedham.com/blog/2013/06/19/neo4j-wrappingneoserverbootstrapper-and-the-case-of-the-webadmin-404/</link>
      <pubDate>Wed, 19 Jun 2013 05:32:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/19/neo4j-wrappingneoserverbootstrapper-and-the-case-of-the-webadmin-404/</guid>
      <description>public class GraphMeUp { public static void main(String[] args) { GraphDatabaseService graphDb = new EmbeddedGraphDatabase(&amp;#34;/path/to/data/graph.db&amp;#34;); } } public class GraphMeUp { public static void main(String[] args) { GraphDatabaseService graphDb = new GraphDatabaseFactory(). newEmbeddedDatabaseBuilder(&amp;#34;/path/to/data/graph.db&amp;#34;). newGraphDatabase(); } } &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.neo4j.app&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;neo4j-server&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; public class GraphMeUp { public static void main(String[] args) { GraphDatabaseService graphDb = new GraphDatabaseFactory(). newEmbeddedDatabaseBuilder(&amp;#34;/path/to/data/graph.db&amp;#34;). newGraphDatabase(); new WrappingNeoServerBootstrapper((GraphDatabaseAPI)graphDb).start(); } } HTTP ERROR 404 Problem accessing /webadmin/. Reason: Not Found Powered by Jetty:// &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Finding single hop paths</title>
      <link>https://markhneedham.com/blog/2013/06/15/neo4jcypher-finding-single-hop-paths/</link>
      <pubDate>Sat, 15 Jun 2013 13:04:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/15/neo4jcypher-finding-single-hop-paths/</guid>
      <description>CREATE (ranieri {name: &amp;quot;Claudio Ranieri&amp;quot;}) CREATE (mourinho {name: &amp;quot;Jose Mourinho&amp;quot;}) CREATE (grant {name: &amp;quot;Avram Grant&amp;quot;}) CREATE (scolari {name: &amp;quot;Luiz Felipe Scolari&amp;quot;}) CREATE (wilkins {name: &amp;quot;Ray Wilkins&amp;quot;}) CREATE (hiddink {name: &amp;quot;Guus Hiddink&amp;quot;}) CREATE (ancelotti {name: &amp;quot;Carlo Ancelotti&amp;quot;}) CREATE (villasBoas {name: &amp;quot;Andre Villas Boas&amp;quot;}) CREATE (diMatteo {name: &amp;quot;Roberto Di Matteo&amp;quot;}) CREATE (benitez {name: &amp;quot;Rafael Benitez&amp;quot;}) CREATE (ranieri)-[:SUCCEEDED_BY]-&amp;gt;(mourinho) CREATE (mourinho)-[:SUCCEEDED_BY]-&amp;gt;(grant) CREATE (grant)-[:SUCCEEDED_BY]-&amp;gt;(scolari) CREATE (scolari)-[:SUCCEEDED_BY]-&amp;gt;(wilkins) CREATE (wilkins)-[:SUCCEEDED_BY]-&amp;gt;(hiddink) CREATE (hiddink)-[:SUCCEEDED_BY]-&amp;gt;(ancelotti) CREATE (ancelotti)-[:SUCCEEDED_BY]-&amp;gt;(villasBoas) CREATE (villasBoas)-[:SUCCEEDED_BY]-&amp;gt;(diMatteo) CREATE (diMatteo)-[:SUCCEEDED_BY]-&amp;gt;(benitez) CREATE (benitez)-[:SUCCEEDED_BY]-&amp;gt;(mourinho) START m = node:node_auto_index(name=&amp;quot;Claudio Ranieri&amp;quot;) MATCH path = (m)-[rel:SUCCEEDED_BY*]-&amp;gt;(successor) RETURN EXTRACT(n IN NODES(path): n.</description>
    </item>
    
    <item>
      <title>Java: Finding/Setting JDK/$JAVA_HOME on Mac OS X</title>
      <link>https://markhneedham.com/blog/2013/06/15/java-findingsetting-jdkjava_home-on-mac-os-x/</link>
      <pubDate>Sat, 15 Jun 2013 10:28:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/15/java-findingsetting-jdkjava_home-on-mac-os-x/</guid>
      <description>$ ls -alh /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK -&amp;gt; /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents $ java -version java version &amp;#34;1.7.0_09&amp;#34; Java(TM) SE Runtime Environment (build 1.7.0_09-b05) Java HotSpot(TM) 64-Bit Server VM (build 23.5-b02, mixed mode) $ /usr/libexec/java_home -v 1.7 /Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home $ /usr/libexec/java_home -v 1.6 /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home $ /usr/libexec/java_home -V Matching Java Virtual Machines (3): 1.7.0_09, x86_64:	&amp;#34;Java SE 7&amp;#34;	/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home 1.6.0_45-b06-451, x86_64:	&amp;#34;Java SE 6&amp;#34;	/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home 1.6.0_45-b06-451, i386:	&amp;#34;Java SE 6&amp;#34;	/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home /Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home </description>
    </item>
    
    <item>
      <title>neo4j/cypher/Lucene: Dealing with special characters</title>
      <link>https://markhneedham.com/blog/2013/06/15/neo4jcypherlucene-dealing-with-special-characters/</link>
      <pubDate>Sat, 15 Jun 2013 09:53:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/15/neo4jcypherlucene-dealing-with-special-characters/</guid>
      <description>CREATE ({name: &amp;quot;-one&amp;quot;}) CREATE ({name: &amp;quot;-two&amp;quot;}) CREATE ({name: &amp;quot;-three&amp;quot;}) CREATE ({name: &amp;quot;four&amp;quot;}) START p = node:node_auto_index(&amp;quot;name:-*&amp;quot;) RETURN p; ==&amp;gt; RuntimeException: org.apache.lucene.queryParser.ParseException: Cannot parse &amp;#39;name:-*&amp;#39;: Encountered &amp;#34; &amp;#34;-&amp;#34; &amp;#34;- &amp;#34;&amp;#34; at line 1, column 5. ==&amp;gt; Was expecting one of: ==&amp;gt; &amp;lt;BAREOPER&amp;gt; ... ==&amp;gt; &amp;#34;(&amp;#34; ... ==&amp;gt; &amp;#34;*&amp;#34; ... ==&amp;gt; &amp;lt;QUOTED&amp;gt; ... ==&amp;gt; &amp;lt;TERM&amp;gt; ... ==&amp;gt; &amp;lt;PREFIXTERM&amp;gt; ... ==&amp;gt; &amp;lt;WILDTERM&amp;gt; ... ==&amp;gt; &amp;#34;[&amp;#34; ... ==&amp;gt; &amp;#34;{&amp;#34; ... ==&amp;gt; &amp;lt;NUMBER&amp;gt; ... ==&amp;gt; START p = node:node_auto_index(&amp;quot;name:\-*&amp;quot;) RETURN p; ==&amp;gt; SyntaxException: invalid escape sequence ==&amp;gt; ==&amp;gt; Think we should have better error message here?</description>
    </item>
    
    <item>
      <title>git: Having a branch/tag with the same name (error: dst refspec matches more than one.)</title>
      <link>https://markhneedham.com/blog/2013/06/13/git-having-a-branchtag-with-the-same-name-error-dst-refspec-matches-more-than-one/</link>
      <pubDate>Thu, 13 Jun 2013 22:18:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/13/git-having-a-branchtag-with-the-same-name-error-dst-refspec-matches-more-than-one/</guid>
      <description>$ echo &amp;#34;mark&amp;#34; &amp;gt; README $ git commit -am &amp;#34;readme&amp;#34; $ echo &amp;#34;for the branch&amp;#34; &amp;gt;&amp;gt; README $ git commit -am &amp;#34;for the branch&amp;#34; $ git checkout -b same Switched to a new branch &amp;#39;same&amp;#39; $ git push origin same Counting objects: 5, done. Writing objects: 100% (3/3), 263 bytes, done. Total 3 (delta 0), reused 0 (delta 0) To ssh://git@bitbucket.org/markhneedham/branch-tag-test.git * [new branch] same -&amp;gt; same $ git checkout master $ echo &amp;#34;for the tag&amp;#34; &amp;gt;&amp;gt; README $ git commit -am &amp;#34;for the tag&amp;#34; $ git tag same $ git push origin refs/tags/same Counting objects: 5, done.</description>
    </item>
    
    <item>
      <title>Unix: find, xargs, zipinfo and the &#39;caution: filename not matched:&#39; error</title>
      <link>https://markhneedham.com/blog/2013/06/09/unix-find-xargs-zipinfo-and-the-caution-filename-not-matched-error/</link>
      <pubDate>Sun, 09 Jun 2013 23:10:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/09/unix-find-xargs-zipinfo-and-the-caution-filename-not-matched-error/</guid>
      <description>$ bundle show neo4j-enterprise /Users/markhneedham/.rbenv/versions/jruby-1.7.1/lib/ruby/gems/shared/gems/neo4j-enterprise-1.8.2-java $ cd /Users/markhneedham/.rbenv/versions/jruby-1.7.1/lib/ruby/gems/shared/gems/neo4j-enterprise-1.8.2-java/lib/neo4j-enterprise/jars/ $ find . -iname &amp;#34;*.jar&amp;#34; | xargs zipinfo caution: filename not matched: ./lib/neo4j-enterprise/jars/logback-classic-0.9.30.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/logback-core-0.9.30.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/neo4j-backup-1.8.2.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/neo4j-com-1.8.2.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/neo4j-consistency-check-1.8.2.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/neo4j-ha-1.8.2.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/neo4j-udc-1.8.2.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/org.apache.servicemix.bundles.netty-3.2.5.Final_1.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/server-api-1.8.2.jar caution: filename not matched: ./lib/neo4j-enterprise/jars/slf4j-api-1.6.2.jar caution: filename not matched: .</description>
    </item>
    
    <item>
      <title>neo4j.rb HA: NameError: cannot load Java class org.neo4j.graphdb.factory.HighlyAvailableGraphDatabaseFactory</title>
      <link>https://markhneedham.com/blog/2013/06/09/neo4j-rb-ha-nameerror-cannot-load-java-class-org-neo4j-graphdb-factory-highlyavailablegraphdatabasefactory/</link>
      <pubDate>Sun, 09 Jun 2013 16:57:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/09/neo4j-rb-ha-nameerror-cannot-load-java-class-org-neo4j-graphdb-factory-highlyavailablegraphdatabasefactory/</guid>
      <description>source &amp;#39;http://rubygems.org&amp;#39; gem &amp;#39;neo4j&amp;#39;, &amp;#39;2.2.4&amp;#39; gem &amp;#39;neo4j-community&amp;#39;, &amp;#39;1.8.2&amp;#39; gem &amp;#39;neo4j-advanced&amp;#39;, &amp;#39;1.8.2&amp;#39; gem &amp;#39;neo4j-enterprise&amp;#39;, &amp;#39;1.8.2&amp;#39; require &amp;#34;rubygems&amp;#34; require &amp;#34;bundler&amp;#34; require &amp;#39;fileutils&amp;#39; require &amp;#39;neo4j&amp;#39; def start(machine_id) # override this default config with this machine configuration Neo4j.config[&amp;#39;enable_ha&amp;#39;] = true Neo4j.config[&amp;#39;ha.server_id&amp;#39;] = machine_id Neo4j.config[&amp;#39;ha.server&amp;#39;] = &amp;#34;localhost:600#{machine_id}&amp;#34; Neo4j.config[&amp;#39;ha.pull_interval&amp;#39;] = &amp;#39;500ms&amp;#39; Neo4j.config[&amp;#39;ha.discovery.enabled&amp;#39;] = false other_machines = [1,2,3].map{|id| &amp;#34;localhost:500#{id}&amp;#34;}.join(&amp;#39;,&amp;#39;) puts &amp;#34;ha.initial_hosts: #{other_machines}&amp;#34; Neo4j.config[&amp;#39;ha.initial_hosts&amp;#39;] = other_machines Neo4j.config[&amp;#39;ha.cluster_server&amp;#39;] = &amp;#34;localhost:500#{machine_id}&amp;#34; Neo4j.config[:storage_path] = &amp;#34;db/neo#{machine_id}&amp;#34; Neo4j.start end $ bundle exec install $ bundle exec irb irb(main):001:0&amp;gt; require &amp;#39;myapp&amp;#39; =&amp;gt; true irb(main):002:0&amp;gt; start 1 ha.</description>
    </item>
    
    <item>
      <title>neo4j/cypher 2.0: The CASE statement</title>
      <link>https://markhneedham.com/blog/2013/06/09/neo4jcypher-2-0-the-case-statement/</link>
      <pubDate>Sun, 09 Jun 2013 14:02:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/09/neo4jcypher-2-0-the-case-statement/</guid>
      <description>CREATE (year2013 { name: &amp;quot;2013&amp;quot; }) CREATE (january2013 { name: &amp;quot;January&amp;quot; }) CREATE (january012013 { name: &amp;quot;1st&amp;quot; }) CREATE (january022013 { name: &amp;quot;2nd&amp;quot; }) CREATE (january032013 { name: &amp;quot;3rd&amp;quot; }) CREATE (january042013 { name: &amp;quot;4th&amp;quot; }) CREATE (january052013 { name: &amp;quot;5th&amp;quot; }) CREATE (chelsea { name: &amp;quot;Chelsea&amp;quot;, type: &amp;quot;team&amp;quot; }) CREATE (joseMourinho { name: &amp;quot;Jose Mourinho&amp;quot;}) CREATE (mourinhoChelsea { name: &amp;quot;Mourinho tenure at Chelsea&amp;quot; }) CREATE (manUtd { name: &amp;quot;Manchester United&amp;quot;, type: &amp;quot;team&amp;quot; }) CREATE (davidMoyes { name: &amp;quot;David Moyes&amp;quot;}) CREATE (davidMoyesUnited { name: &amp;quot;Moyes tenure at Manchester United&amp;quot; }) CREATE (year2013)-[:`January`]-(january2013) CREATE (january2013)-[:`01`]-(january012013) CREATE (january2013)-[:`02`]-(january022013) CREATE (january2013)-[:`03`]-(january032013) CREATE (january2013)-[:`04`]-(january042013) CREATE (january2013)-[:`05`]-(january052013) CREATE (january012013)-[:NEXT]-(january022013) CREATE (january022013)-[:NEXT]-(january032013) CREATE (january032013)-[:NEXT]-(january042013) CREATE (january042013)-[:NEXT]-(january052013) CREATE (mourinhoChelsea)-[:HIRED_ON {date: &amp;quot;January 1st 2013&amp;quot;}]-&amp;gt;(january012013) CREATE (mourinhoChelsea)-[:MANAGER]-&amp;gt;(joseMourinho) CREATE (mourinhoChelsea)-[:TEAM]-&amp;gt;(chelsea) CREATE (mourinhoChelsea)-[:FIRED_ON]-&amp;gt;(january032013) CREATE (davidMoyesUnited)-[:HIRED_ON {date: &amp;quot;January 2nd 2013&amp;quot;}]-&amp;gt;(january022013) CREATE (davidMoyesUnited)-[:MANAGER]-&amp;gt;(davidMoyes) CREATE (davidMoyesUnited)-[:TEAM]-&amp;gt;(manUtd) START team = node:node_auto_index(&#39;name:&amp;quot;Chelsea&amp;quot; name:&amp;quot;Manchester United&amp;quot;&#39;), date = node:node_auto_index(name=&amp;quot;5th&amp;quot;) MATCH date&amp;lt;-[:NEXT*0.</description>
    </item>
    
    <item>
      <title>The Affect Heuristic</title>
      <link>https://markhneedham.com/blog/2013/06/06/the-affect-heuristic/</link>
      <pubDate>Thu, 06 Jun 2013 22:36:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/06/the-affect-heuristic/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ego Depletion</title>
      <link>https://markhneedham.com/blog/2013/06/04/ego-depletion/</link>
      <pubDate>Tue, 04 Jun 2013 23:16:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/04/ego-depletion/</guid>
      <description>Baumeister&amp;rsquo;s group has repeatedly found that an effort of will or self control is tiring; if you have had to force yourself to do something, you are less willing or less able to exert self-control when the next challenge comes around.
The phenomenon has been named ego depletion.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: 400 response - Paths can&#39;t be created inside of foreach</title>
      <link>https://markhneedham.com/blog/2013/05/31/neo4jcypher-400-response-paths-cant-be-created-inside-of-foreach/</link>
      <pubDate>Fri, 31 May 2013 00:37:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/31/neo4jcypher-400-response-paths-cant-be-created-inside-of-foreach/</guid>
      <description>require &amp;#39;neography&amp;#39; neo = Neography::Rest.new neo.execute_query(&amp;#34;create (me {name: &amp;#39;Mark&amp;#39;})&amp;#34;) query = &amp;#34; START n=node:node_auto_index(name={name})&amp;#34; query &amp;lt;&amp;lt; &amp;#34; FOREACH (friend in {friends} : CREATE f=friend, n-[:FRIEND]-&amp;gt;f)&amp;#34; neo.execute_query(query, {&amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Mark&amp;#34;, &amp;#34;friends&amp;#34; =&amp;gt; [{ &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Will&amp;#34;}, {&amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Paul&amp;#34;}]}) START p = node:node_auto_index(name=&amp;quot;Mark&amp;quot;) MATCH p-[:FRIEND]-f RETURN f ==&amp;gt; +----------------------+ ==&amp;gt; | f | ==&amp;gt; +----------------------+ ==&amp;gt; | Node[2]{name:&amp;#34;Will&amp;#34;} | ==&amp;gt; | Node[3]{name:&amp;#34;Paul&amp;#34;} | ==&amp;gt; +----------------------+ ==&amp;gt; 2 rows ==&amp;gt; 37 ms /Users/markhneedham/.</description>
    </item>
    
    <item>
      <title>Viewing the contents of an archive</title>
      <link>https://markhneedham.com/blog/2013/05/29/viewing-the-contents-of-an-archive/</link>
      <pubDate>Wed, 29 May 2013 11:22:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/29/viewing-the-contents-of-an-archive/</guid>
      <description>$ unzip -l batch-import-jar-with-dependencies.jar | tail -n 10 1645 02-17-13 01:03 org/neo4j/batchimport/StdOutReport.class 3089 02-17-13 01:03 org/neo4j/batchimport/structs/NodeStruct.class 1244 02-17-13 01:03 org/neo4j/batchimport/structs/Property.class 1732 02-17-13 01:03 org/neo4j/batchimport/structs/PropertyHolder.class 1635 02-17-13 01:03 org/neo4j/batchimport/structs/Relationship.class 905 02-17-13 01:03 org/neo4j/batchimport/utils/Chunker.class 1884 02-17-13 01:03 org/neo4j/batchimport/utils/Params.class 4445 02-17-13 01:03 org/neo4j/batchimport/Utils.class -------- ------- 49947859 16447 files $ zipinfo -1 batch-import-jar-with-dependencies.jar | tail -n 10 org/neo4j/batchimport/ParallelImporter.class org/neo4j/batchimport/Report.class org/neo4j/batchimport/StdOutReport.class org/neo4j/batchimport/structs/NodeStruct.class org/neo4j/batchimport/structs/Property.class org/neo4j/batchimport/structs/PropertyHolder.class org/neo4j/batchimport/structs/Relationship.class org/neo4j/batchimport/utils/Chunker.class org/neo4j/batchimport/utils/Params.class org/neo4j/batchimport/Utils.class </description>
    </item>
    
    <item>
      <title>Pomodoros: Just start the timer</title>
      <link>https://markhneedham.com/blog/2013/05/27/pomodoros-just-start-the-timer/</link>
      <pubDate>Mon, 27 May 2013 13:23:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/27/pomodoros-just-start-the-timer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A/B Testing: Being pragmatic with statistical significance</title>
      <link>https://markhneedham.com/blog/2013/05/27/ab-testing-pragmatica-statistical-significance/</link>
      <pubDate>Mon, 27 May 2013 13:13:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/27/ab-testing-pragmatica-statistical-significance/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Polyglot Persistence: Embrace the ETL</title>
      <link>https://markhneedham.com/blog/2013/05/27/polyglot-persistence-embrace-the-etl/</link>
      <pubDate>Mon, 27 May 2013 00:11:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/27/polyglot-persistence-embrace-the-etl/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Polyglot Persistence: The &#39;boring&#39; relational option</title>
      <link>https://markhneedham.com/blog/2013/05/26/polyglot-persistence-the-boring-relational-option/</link>
      <pubDate>Sun, 26 May 2013 23:29:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/26/polyglot-persistence-the-boring-relational-option/</guid>
      <description></description>
    </item>
    
    <item>
      <title>neo4j/cypher: Properties or relationships? It&#39;s easy to switch</title>
      <link>https://markhneedham.com/blog/2013/05/25/neo4jcypher-properties-or-relationships-its-easy-to-switch/</link>
      <pubDate>Sat, 25 May 2013 12:21:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/25/neo4jcypher-properties-or-relationships-its-easy-to-switch/</guid>
      <description>CREATE (frenchConnection { name: &amp;quot;French Connection&amp;quot; }) CREATE (dress1 { name: &amp;quot;Halter Dress&amp;quot;, colour: &amp;quot;Blue&amp;quot;})-[:BRAND]-(frenchConnection) CREATE (dress2 { name: &amp;quot;Another Dress&amp;quot;, colour: &amp;quot;Yellow&amp;quot;})-[:BRAND]-(frenchConnection) CREATE (dress3 { name: &amp;quot;Different Dress&amp;quot;, colour: &amp;quot;Blue&amp;quot;})-[:BRAND]-(frenchConnection) RETURN dress1, dress2, dress3 ==&amp;gt; +--------------------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | dress1 | dress2 | dress3 | ==&amp;gt; +--------------------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; | Node[2]{name:&amp;#34;Halter Dress&amp;#34;,colour:&amp;#34;Blue&amp;#34;} | Node[3]{name:&amp;#34;Another Dress&amp;#34;,colour:&amp;#34;Yellow&amp;#34;} | Node[4]{name:&amp;#34;Different Dress&amp;#34;,colour:&amp;#34;Blue&amp;#34;} | ==&amp;gt; +--------------------------------------------------------------------------------------------------------------------------------------------+ ==&amp;gt; 1 row ==&amp;gt; Nodes created: 4 ==&amp;gt; Relationships created: 3 ==&amp;gt; Properties set: 7 ==&amp;gt; 179 ms START brand = node:node_auto_index(name=&amp;quot;French Connection&amp;quot;) MATCH brand&amp;lt;-[:BRAND]-product WHERE product.</description>
    </item>
    
    <item>
      <title>Feedback: Reacting immediately</title>
      <link>https://markhneedham.com/blog/2013/05/23/feedback-reacting-immediately/</link>
      <pubDate>Thu, 23 May 2013 22:43:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/23/feedback-reacting-immediately/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ruby/Python: Constructing a taxonomy from an array using zip</title>
      <link>https://markhneedham.com/blog/2013/05/19/rubypython-constructing-a-taxonomy-from-an-array-using-zip/</link>
      <pubDate>Sun, 19 May 2013 22:44:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/19/rubypython-constructing-a-taxonomy-from-an-array-using-zip/</guid>
      <description>taxonomy = [&amp;#34;Cat&amp;#34;, &amp;#34;SubCat&amp;#34;, &amp;#34;SubSubCat&amp;#34;] # I wanted this to become [(&amp;#34;Cat&amp;#34;, &amp;#34;SubCat&amp;#34;), (&amp;#34;SubCat&amp;#34;, &amp;#34;SubSubCat&amp;#34;) &amp;gt;&amp;gt;&amp;gt; zip(taxonomy[:-1], taxonomy[1:]) [(&amp;#39;Cat&amp;#39;, &amp;#39;SubCat&amp;#39;), (&amp;#39;SubCat&amp;#39;, &amp;#39;SubSubCat&amp;#39;)] &amp;gt; taxonomy[..-1] SyntaxError: (irb):10: syntax error, unexpected tDOT2, expecting &amp;#39;]&amp;#39; taxonomy[..-1] ^ from /Users/markhneedham/.rbenv/versions/1.9.3-p327/bin/irb:12:in `&amp;lt;main&amp;gt;&amp;#39; &amp;gt; taxonomy[0..-2].zip(taxonomy[1..-1]) =&amp;gt; [[&amp;#34;Cat&amp;#34;, &amp;#34;SubCat&amp;#34;], [&amp;#34;SubCat&amp;#34;, &amp;#34;SubSubCat&amp;#34;]] </description>
    </item>
    
    <item>
      <title>neo4j/cypher: Keep longest path when finding taxonomy</title>
      <link>https://markhneedham.com/blog/2013/05/19/neo4jcypher-keep-longest-path-when-finding-taxonomy/</link>
      <pubDate>Sun, 19 May 2013 22:15:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/19/neo4jcypher-keep-longest-path-when-finding-taxonomy/</guid>
      <description>CREATE (cat { name: &amp;quot;Cat&amp;quot; }) CREATE (subcat1 { name: &amp;quot;SubCat1&amp;quot; }) CREATE (subcat2 { name: &amp;quot;SubCat2&amp;quot; }) CREATE (subsubcat1 { name: &amp;quot;SubSubCat1&amp;quot; }) CREATE (product1 { name: &amp;quot;Product1&amp;quot; }) CREATE (cat)-[:CHILD]-subcat1-[:CHILD]-subsubcat1 CREATE (product1)-[:HAS_CATEGORY]-(subsubcat1) START product=node:node_auto_index(name=&amp;quot;Product1&amp;quot;) MATCH product-[:HAS_CATEGORY]-category, taxonomy=category&amp;lt;-[:CHILD*1..]-parent RETURN product, EXTRACT(n IN NODES(taxonomy): n.name) ==&amp;gt; +--------------------------------------------------------------------+ ==&amp;gt; | product | EXTRACT(n IN NODES(taxonomy): n.name) | ==&amp;gt; +--------------------------------------------------------------------+ ==&amp;gt; | Node[888]{name:&amp;#34;Product1&amp;#34;} | [&amp;#34;SubSubCat1&amp;#34;,&amp;#34;SubCat1&amp;#34;] | ==&amp;gt; | Node[888]{name:&amp;#34;Product1&amp;#34;} | [&amp;#34;SubSubCat1&amp;#34;,&amp;#34;SubCat1&amp;#34;,&amp;#34;Cat&amp;#34;] | ==&amp;gt; +--------------------------------------------------------------------+ ==&amp;gt; 2 rows START product=node:node_auto_index(name=&amp;quot;Product1&amp;quot;) MATCH product-[:HAS_CATEGORY]-category, taxonomy=category&amp;lt;-[:CHILD*1.</description>
    </item>
    
    <item>
      <title>Unix: Working with parts of large files</title>
      <link>https://markhneedham.com/blog/2013/05/19/unix-working-with-parts-of-large-files/</link>
      <pubDate>Sun, 19 May 2013 21:44:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/19/unix-working-with-parts-of-large-files/</guid>
      <description>$ sed -n &amp;#39;10,15p&amp;#39; data/log/neo4j.0.0.log INFO: Enabling HTTPS on port [7473] May 19, 2013 11:11:52 AM org.neo4j.server.logging.Logger log INFO: No SSL certificate found, generating a self-signed certificate.. May 19, 2013 11:11:53 AM org.neo4j.server.logging.Logger log INFO: Mounted discovery module at [/] May 19, 2013 11:11:53 AM org.neo4j.server.logging.Logger log </description>
    </item>
    
    <item>
      <title>A/B Testing: User Experience vs Conversion</title>
      <link>https://markhneedham.com/blog/2013/05/18/ab-testing-user-experience-vs-conversion/</link>
      <pubDate>Sat, 18 May 2013 20:18:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/18/ab-testing-user-experience-vs-conversion/</guid>
      <description></description>
    </item>
    
    <item>
      <title>neo4j: When the web console returns nothing…use the data browser!</title>
      <link>https://markhneedham.com/blog/2013/05/17/neo4j-when-the-web-console-returns-nothinguse-the-data-browser/</link>
      <pubDate>Fri, 17 May 2013 00:00:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/17/neo4j-when-the-web-console-returns-nothinguse-the-data-browser/</guid>
      <description>require &amp;#39;neography&amp;#39; @neo = Neography::Rest.new @neo.create_node_index(&amp;#34;Id_Index&amp;#34;, &amp;#34;exact&amp;#34;, &amp;#34;lucene&amp;#34;) node1 = @neo.create_node(&amp;#34;Hour&amp;#34; =&amp;gt; 1, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Max&amp;#34;) node2 = @neo.create_node(&amp;#34;Hour&amp;#34; =&amp;gt; 2, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Mark&amp;#34;) node3 = @neo.create_node(&amp;#34;Hour&amp;#34; =&amp;gt; 3, &amp;#34;name&amp;#34; =&amp;gt; &amp;#34;Rickard&amp;#34;) @neo.add_node_to_index(&amp;#34;Id_Index&amp;#34;, &amp;#34;Hour&amp;#34;, 1, node1) @neo.add_node_to_index(&amp;#34;Id_Index&amp;#34;, &amp;#34;Hour&amp;#34;, 2, node2) @neo.add_node_to_index(&amp;#34;Id_Index&amp;#34;, &amp;#34;Hour&amp;#34;, 3, node3) start hour=node:Id_Index(&amp;quot;Hour:[00 TO 02] or Hour:[03 TO 05]&amp;quot;) RETURN hour BadInputException StackTrace: org.neo4j.server.rest.repr.RepresentationExceptionHandlingIterable.exceptionOnHasNext(RepresentationExceptionHandlingIterable.java:50) org.neo4j.helpers.collection.ExceptionHandlingIterable$1.hasNext(ExceptionHandlingIterable.java:60) org.neo4j.helpers.collection.IteratorWrapper.hasNext(IteratorWrapper.java:42) org.neo4j.server.rest.repr.ListRepresentation.serialize(ListRepresentation.java:58) org.neo4j.server.rest.repr.Serializer.serialize(Serializer.java:75) org.neo4j.server.rest.repr.MappingSerializer.putList(MappingSerializer.java:61) org.neo4j.server.rest.repr.CypherResultRepresentation.serialize(CypherResultRepresentation.java:57) org.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:42) org.neo4j.server.rest.repr.OutputFormat.assemble(OutputFormat.java:179) org.neo4j.server.rest.repr.OutputFormat.formatRepresentation(OutputFormat.java:131) org.neo4j.server.rest.repr.OutputFormat.response(OutputFormat.java:117) org.neo4j.server.rest.repr.OutputFormat.ok(OutputFormat.java:55) org.neo4j.server.rest.web.CypherService.cypher(CypherService.java:94) java.lang.reflect.Method.invoke(Method.java:597) start hour=node:Id_Index(&amp;quot;Hour:[00 TO 02] Hour:[03 TO 05]&amp;quot;) RETURN hour </description>
    </item>
    
    <item>
      <title>Book Review: The Signal and the Noise - Nate Silver</title>
      <link>https://markhneedham.com/blog/2013/05/14/book-review-the-signal-and-the-noise-nate-silver/</link>
      <pubDate>Tue, 14 May 2013 00:16:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/14/book-review-the-signal-and-the-noise-nate-silver/</guid>
      <description>The book mainly focuses on the latter.</description>
    </item>
    
    <item>
      <title>Sublime: Overriding default file type/Assigning specific files to a file type</title>
      <link>https://markhneedham.com/blog/2013/05/05/sublime-overriding-default-file-typeassigning-specific-files-to-a-file-type/</link>
      <pubDate>Sun, 05 May 2013 00:03:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/05/05/sublime-overriding-default-file-typeassigning-specific-files-to-a-file-type/</guid>
      <description>~/Library/Application Support/Sublime Text 2/Packages/User/ApplySyntax.sublime-settings{ &amp;#34;reraise_exceptions&amp;#34;: false, &amp;#34;new_file_syntax&amp;#34;: false, &amp;#34;syntaxes&amp;#34;: [ {	&amp;#34;name&amp;#34;: &amp;#34;Cypher&amp;#34;, &amp;#34;rules&amp;#34;: [ {&amp;#34;first_line&amp;#34;: &amp;#34;^START&amp;#34;} ] }	] } </description>
    </item>
    
    <item>
      <title>Ruby 1.9.3 p0: Investigating weirdness with HTTP POST request in net/http</title>
      <link>https://markhneedham.com/blog/2013/04/30/ruby-1-9-3-p0-investigating-weirdness-with-http-post-request-in-nethttp/</link>
      <pubDate>Tue, 30 Apr 2013 21:37:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/30/ruby-1-9-3-p0-investigating-weirdness-with-http-post-request-in-nethttp/</guid>
      <description>* lib/net/http.rb, lib/net/protocol.rb: Allow to configure to wait server returning &#39;100 continue&#39; response before sending HTTP request body. See NEWS for more detail. See #3622. Original patch is made by Eric Hodel &amp;lt;drbrain@segment7.net&amp;gt;. * test/net/http/test_http.rb: test it. * NEWS: Add new feature.  </description>
    </item>
    
    <item>
      <title>Mac OS X: A couple of neat tools</title>
      <link>https://markhneedham.com/blog/2013/04/30/mac-os-x-a-couple-of-neat-tools/</link>
      <pubDate>Tue, 30 Apr 2013 20:07:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/30/mac-os-x-a-couple-of-neat-tools/</guid>
      <description></description>
    </item>
    
    <item>
      <title>neo4j/cypher: Returning a row with zero count when no relationship exists</title>
      <link>https://markhneedham.com/blog/2013/04/30/neo4jcypher-returning-a-row-with-zero-count-when-no-relationship-exists/</link>
      <pubDate>Tue, 30 Apr 2013 07:02:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/30/neo4jcypher-returning-a-row-with-zero-count-when-no-relationship-exists/</guid>
      <description>START game = node:matches(&#39;match_id:*&#39;) MATCH game&amp;lt;-[:sent_off_in]-player-[:played]-&amp;gt;likeThis-[:in]-&amp;gt;game, likeThis-[:for]-&amp;gt;team RETURN team.name, COUNT(game) AS redCards ORDER BY redCards LIMIT 5 +------------------------------+ | team.name | redCards | +------------------------------+ | &amp;#34;Sunderland&amp;#34; | 1 | | &amp;#34;West Ham United&amp;#34; | 1 | | &amp;#34;Norwich City&amp;#34; | 1 | | &amp;#34;Reading&amp;#34; | 1 | | &amp;#34;Liverpool&amp;#34; | 2 | +------------------------------+ 5 rows START game = node:matches(&#39;match_id:*&#39;) MATCH game&amp;lt;-[?:sent_off_in]-player-[:played]-&amp;gt;likeThis-[:in]-&amp;gt;game, likeThis-[:for]-&amp;gt;team RETURN team.name, COUNT(game) AS redCards ORDER BY redCards ASC LIMIT 5 +-----------------------------+ | team.</description>
    </item>
    
    <item>
      <title>A/B Testing: Reporting</title>
      <link>https://markhneedham.com/blog/2013/04/28/ab-testing-reporting/</link>
      <pubDate>Sun, 28 Apr 2013 22:32:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/28/ab-testing-reporting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Treat servers as cattle: Spin them up, tear them down</title>
      <link>https://markhneedham.com/blog/2013/04/27/treat-servers-as-cattle-spin-them-up-tear-them-down/</link>
      <pubDate>Sat, 27 Apr 2013 14:22:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/27/treat-servers-as-cattle-spin-them-up-tear-them-down/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Puppet: Package Versions - To pin or not to pin</title>
      <link>https://markhneedham.com/blog/2013/04/27/puppet-package-versions-to-pin-or-not-to-pin/</link>
      <pubDate>Sat, 27 Apr 2013 13:40:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/27/puppet-package-versions-to-pin-or-not-to-pin/</guid>
      <description>package { &amp;#39;nginx&amp;#39;: ensure =&amp;gt; &amp;#39;present&amp;#39;,}$ apt-cache policy nginx nginx: Installed: (none) Candidate: 1:1.2.6-1~43~precise1 Version table: 1:1.2.6-1~43~precise1 0 500 http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu/ precise/main amd64 Packages 1.4.0-1~precise 0 500 http://nginx.org/packages/ubuntu/ precise/nginx amd64 Packages 1.1.19-1ubuntu0.1 0 500 http://us.archive.ubuntu.com/ubuntu/ precise-updates/universe amd64 Packages 1.1.19-1 0 500 http://us.archive.ubuntu.com/ubuntu/ precise/universe amd64 Packages $ dpkg --compare-versions &amp;#39;1:1.2.6-1~43~precise1&amp;#39; gt &amp;#39;1.4.0-1~precise&amp;#39; ; echo $? 0 package { &amp;#39;nginx&amp;#39;: ensure =&amp;gt; &amp;#39;1.</description>
    </item>
    
    <item>
      <title>Unix: Checking for open sockets on nginx</title>
      <link>https://markhneedham.com/blog/2013/04/23/unix-checking-for-open-sockets-on-nginx/</link>
      <pubDate>Tue, 23 Apr 2013 23:59:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/23/unix-checking-for-open-sockets-on-nginx/</guid>
      <description>$ ulimit -n 1024 $ ps aux | grep nginx | grep -v grep root 1089 0.0 0.7 105152 2736 ? Ss 17:34 0:00 nginx: master process /usr/sbin/nginx www-data 17474 0.0 0.6 105300 2296 ? S 21:49 0:04 nginx: worker process www-data 17475 0.0 0.7 105300 2856 ? S 21:49 0:04 nginx: worker process www-data 17476 0.0 0.7 105300 2792 ? S 21:49 0:03 nginx: worker process www-data 17477 0.0 0.</description>
    </item>
    
    <item>
      <title>No downtime deploy with capistrano, Thin and nginx</title>
      <link>https://markhneedham.com/blog/2013/04/23/no-downtime-deploy-with-capistrano-thin-and-nginx/</link>
      <pubDate>Tue, 23 Apr 2013 23:25:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/23/no-downtime-deploy-with-capistrano-thin-and-nginx/</guid>
      <description>/etc/nginx/sites-available/thinkingingraphs.confupstream thin { server 127.0.0.1:3000; } server { listen 80 default; server_name _; charset utf-8; rewrite ^\/status(.*)$ $1 last; gzip on; gzip_disable &amp;#34;MSIE [1-6]\.(?!.*SV1)&amp;#34;; gzip_types text/plain application/xml text/xml text/css application/x-javascript application/xml+rss text/javascript application/json; gzip_vary on; access_log /var/www/thinkingingraphs/shared/log/nginx_access.log; error_log /var/www/thinkingingraphs/shared/log/nginx_error.log; root /var/www/thinkingingraphs/current/public; location / { proxy_pass http://thin; } error_page 404 /404.html; error_page 500 502 503 504 /500.html; } /etc/init/thinkingingraphs.confscript export RACK_ENV=production export RUBY=ruby cd /var/www/thinkingingraphs/current exec su -s /bin/sh vagrant -c &amp;#39;$RUBY -S bundle exec thin -p 3000 start &amp;gt;&amp;gt; /var/www/thinkingingraphs/current/log/production.</description>
    </item>
    
    <item>
      <title>Puppet: Installing Oracle Java - oracle-license-v1-1 license could not be presented</title>
      <link>https://markhneedham.com/blog/2013/04/18/puppet-installing-oracle-java-oracle-license-v1-1-license-could-not-be-presented/</link>
      <pubDate>Thu, 18 Apr 2013 23:36:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/18/puppet-installing-oracle-java-oracle-license-v1-1-license-could-not-be-presented/</guid>
      <description>class java($version) { package { &amp;#34;python-software-properties&amp;#34;: } exec { &amp;#34;add-apt-repository-oracle&amp;#34;: command =&amp;gt; &amp;#34;/usr/bin/add-apt-repository -y ppa:webupd8team/java&amp;#34;, notify =&amp;gt; Exec[&amp;#34;apt_update&amp;#34;] } package { &amp;#39;oracle-java7-installer&amp;#39;: ensure =&amp;gt; &amp;#34;${version}&amp;#34;, require =&amp;gt; [Exec[&amp;#39;add-apt-repository-oracle&amp;#39;]], } } node default { class { &amp;#39;java&amp;#39;: version =&amp;gt; &amp;#39;7u21-0~webupd8~0&amp;#39;, } } err: /Stage[main]/Java/Package[oracle-java7-installer]/ensure: change from purged to present failed: Execution of &amp;#39;/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install oracle-java7-installer&amp;#39; returned 100: Reading package lists... Building dependency tree... Reading state information... The following extra packages will be installed: java-common Suggested packages: .</description>
    </item>
    
    <item>
      <title>dpkg/apt-cache: Useful commands</title>
      <link>https://markhneedham.com/blog/2013/04/18/dpkgapt-cache-useful-commands/</link>
      <pubDate>Thu, 18 Apr 2013 21:54:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/18/dpkgapt-cache-useful-commands/</guid>
      <description>$ apt-cache rdepends make make Reverse Depends: ... build-essential make:i386 libc6-dev:i386 open-vm-dkms mythbuntu-desktop broadcom-sta-source ... $ apt-cache policy nginx-common nginx-common: Installed: 1.1.19-1ubuntu0.1 Candidate: 1:1.2.6-1~43~precise1 Version table: 1:1.2.6-1~43~precise1 0 500 http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu/ precise/main amd64 Packages *** 1.1.19-1ubuntu0.1 0 500 http://us.archive.ubuntu.com/ubuntu/ precise-updates/universe amd64 Packages 100 /var/lib/dpkg/status 1.1.19-1 0 500 http://us.archive.ubuntu.com/ubuntu/ precise/universe amd64 Packages $ apt-cache madison nginx-common nginx-common | 1:1.2.6-1~43~precise1 | http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu/ precise/main amd64 Packages nginx-common | 1.1.19-1ubuntu0.1 | http://us.archive.ubuntu.com/ubuntu/ precise-updates/universe amd64 Packages nginx-common | 1.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Redundant relationships</title>
      <link>https://markhneedham.com/blog/2013/04/16/neo4jcypher-redundant-relationships/</link>
      <pubDate>Tue, 16 Apr 2013 21:41:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/16/neo4jcypher-redundant-relationships/</guid>
      <description>START player = node:players(&amp;#39;name:*&amp;#39;) MATCH player-[:started|as_sub]-playedLike-[:in]-game-[r?:scored_in]-player WITH player, COUNT(DISTINCT game) AS games, COLLECT(r) AS allGoals RETURN player.name, games, LENGTH(allGoals) AS goals ORDER BY goals DESC LIMIT 5 +------------------------------------+ | player.name | games | goals | +------------------------------------+ | &amp;#34;Luis Suárez&amp;#34; | 30 | 22 | | &amp;#34;Robin Van Persie&amp;#34; | 30 | 19 | | &amp;#34;Gareth Bale&amp;#34; | 27 | 17 | | &amp;#34;Michu&amp;#34; | 29 | 16 | | &amp;#34;Demba Ba&amp;#34; | 28 | 15 | +------------------------------------+ 5 rows 1 ms START player = node:players(&#39;name:*&#39;) MATCH player-[:played]-playedLike-[:in]-game-[r?</description>
    </item>
    
    <item>
      <title>Puppet Debt</title>
      <link>https://markhneedham.com/blog/2013/04/16/puppet-debt/</link>
      <pubDate>Tue, 16 Apr 2013 20:57:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/16/puppet-debt/</guid>
      <description>[2013-04-12 07:03:10] Notice: /Stage[main]/Java/Exec[install OAB repo]/returns: [x] Installing Java build requirements Ofailed [2013-04-12 07:03:10] Notice: /Stage[main]/Java/Exec[install OAB repo]/returns: ^[[m^O [i] Showing the last 5 lines from the logfile (/root/oab-java.sh.log)... [2013-04-12 07:03:10] Notice: /Stage[main]/Java/Exec[install OAB repo]/returns: nginx-common [2013-04-12 07:03:10] Notice: /Stage[main]/Java/Exec[install OAB repo]/returns: nginx-extras [2013-04-12 07:03:10] Notice: /Stage[main]/Java/Exec[install OAB repo]/returns: E: Sub-process /usr/bin/dpkg returned an error code (1) ... [2013-04-12 07:03:10] Warning: /Stage[main]/Java/Package[sun-java6-jdk]: Skipping because of failed dependencies [2013-04-12 07:03:10] Notice: /Stage[main]/Java/Exec[default JVM]: Dependency Exec[install OAB repo] has failures: true [2013-04-12 07:03:10] Warning: /Stage[main]/Java/Exec[default JVM]: Skipping because of failed dependencies </description>
    </item>
    
    <item>
      <title>Capistrano: Host key verification failed. ** [err] fatal: The remote end hung up unexpectedly</title>
      <link>https://markhneedham.com/blog/2013/04/14/capistrano-host-key-verification-failed-err-fatal-the-remote-end-hung-up-unexpectedly/</link>
      <pubDate>Sun, 14 Apr 2013 18:18:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/14/capistrano-host-key-verification-failed-err-fatal-the-remote-end-hung-up-unexpectedly/</guid>
      <description>require &amp;#39;capistrano/ext/multistage&amp;#39; set :application, &amp;#34;thinkingingraphs&amp;#34; set :scm, :git set :repository, &amp;#34;git@bitbucket.org:markhneedham/thinkingingraphs.git&amp;#34; set :scm_passphrase, &amp;#34;&amp;#34; set :ssh_options, {:forward_agent =&amp;gt; true, :paranoid =&amp;gt; false, keys: [&amp;#39;~/.vagrant.d/insecure_private_key&amp;#39;]} set :stages, [&amp;#34;vagrant&amp;#34;] set :default_stage, &amp;#34;vagrant&amp;#34; set :user, &amp;#34;vagrant&amp;#34; server &amp;#34;192.168.33.101&amp;#34;, :app, :web, :db, :primary =&amp;gt; true set :deploy_to, &amp;#34;/var/www/thinkingingraphs&amp;#34; * executing &amp;#34;git clone -q git@bitbucket.org:markhneedham/thinkingingraphs.git /var/www/thinkingingraphs/releases/20130414171523 &amp;amp;&amp;amp; cd /var/www/thinkingingraphs/releases/20130414171523 &amp;amp;&amp;amp; git checkout -q -b deploy 6dcbf945ef5b8a5d5d39784800f4a6b7731c7d8a &amp;amp;&amp;amp; (echo 6dcbf945ef5b8a5d5d39784800f4a6b7731c7d8a &amp;gt; /var/www/thinkingingraphs/releases/20130414171523/REVISION)&amp;#34; servers: [&amp;#34;192.168.33.101&amp;#34;] [192.168.33.101] executing command ** [192.</description>
    </item>
    
    <item>
      <title>Capistrano: Deploying to a Vagrant VM</title>
      <link>https://markhneedham.com/blog/2013/04/13/capistrano-deploying-to-a-vagrant-vm/</link>
      <pubDate>Sat, 13 Apr 2013 11:17:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/13/capistrano-deploying-to-a-vagrant-vm/</guid>
      <description># -*- mode: ruby -*- # vi: set ft=ruby : Vagrant::Config.run do |config| config.vm.box = &amp;#34;precise64&amp;#34; config.vm.define :neo01 do |neo| neo.vm.network :hostonly, &amp;#34;192.168.33.101&amp;#34; neo.vm.host_name = &amp;#39;neo01.local&amp;#39; neo.vm.forward_port 7474, 57474 neo.vm.forward_port 80, 50080 end config.vm.box_url = &amp;#34;http://files.vagrantup.com/precise64.box&amp;#34; config.vm.provision :puppet do |puppet| puppet.manifests_path = &amp;#34;puppet/manifests&amp;#34; puppet.manifest_file = &amp;#34;site.pp&amp;#34; puppet.module_path = &amp;#34;puppet/modules&amp;#34; end end require &amp;#39;capistrano/ext/multistage&amp;#39; set :application, &amp;#34;thinkingingraphs&amp;#34; set :scm, :git set :repository, &amp;#34;git@bitbucket.org:markhneedham/thinkingingraphs.git&amp;#34; set :scm_passphrase, &amp;#34;&amp;#34; set :ssh_options, {:forward_agent =&amp;gt; true} set :default_run_options, {:pty =&amp;gt; true} set :stages, [&amp;#34;vagrant&amp;#34;] set :default_stage, &amp;#34;vagrant&amp;#34; set :user, &amp;#34;vagrant&amp;#34; server &amp;#34;192.</description>
    </item>
    
    <item>
      <title>awk: Parsing &#39;free -m&#39; output to get memory usage/consumption</title>
      <link>https://markhneedham.com/blog/2013/04/10/awk-parsing-free-m-output-to-get-memory-usageconsumption/</link>
      <pubDate>Wed, 10 Apr 2013 07:03:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/10/awk-parsing-free-m-output-to-get-memory-usageconsumption/</guid>
      <description>$ free -m total used free shared buffers cached Mem: 365 360 5 0 59 97 -/+ buffers/cache: 203 161 Swap: 767 13 754 $ free -m | awk &amp;#39;/Mem:/ { print $2 } /buffers\/cache/ { print $3 }&amp;#39; 365 203 $ free -m | awk &amp;#39;/Mem:/ { print $2 } /buffers\/cache/ { print $3 }&amp;#39; | awk &amp;#39;BEGIN { RS = &amp;#34;&amp;#34; ; FS = &amp;#34;\n&amp;#34; } { print $2 / $1 }&amp;#39; 0.</description>
    </item>
    
    <item>
      <title>Python: Reading a JSON file</title>
      <link>https://markhneedham.com/blog/2013/04/09/python-reading-a-json-file/</link>
      <pubDate>Tue, 09 Apr 2013 07:23:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/09/python-reading-a-json-file/</guid>
      <description>config/defaults.json{ &amp;#34;region&amp;#34; : &amp;#34;eu-west-1&amp;#34;, &amp;#34;instanceType&amp;#34;: &amp;#34;m1.small&amp;#34; } &amp;gt;&amp;gt;&amp;gt; open(&amp;#39;config/defaults.json&amp;#39;).read() &amp;#39;{\n\t&amp;#34;region&amp;#34; : &amp;#34;eu-west-1&amp;#34;,\n\t&amp;#34;instanceType&amp;#34;: &amp;#34;m1.small&amp;#34;\n}&amp;#39; &amp;gt;&amp;gt;&amp;gt; import json &amp;gt;&amp;gt;&amp;gt; config = json.loads(open(&amp;#39;config/defaults.json&amp;#39;).read()) &amp;gt;&amp;gt;&amp;gt; config {u&amp;#39;region&amp;#39;: u&amp;#39;eu-west-1&amp;#39;, u&amp;#39;instanceType&amp;#39;: u&amp;#39;m1.small&amp;#39;} &amp;gt;&amp;gt;&amp;gt; config[&amp;#34;region&amp;#34;] u&amp;#39;eu-west-1&amp;#39; </description>
    </item>
    
    <item>
      <title>Treating servers as cattle, not as pets</title>
      <link>https://markhneedham.com/blog/2013/04/07/treating-servers-as-cattle-not-as-pets/</link>
      <pubDate>Sun, 07 Apr 2013 11:41:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/07/treating-servers-as-cattle-not-as-pets/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sublime: Getting Textmate&#39;s Reveal/Select in Side Bar (Cmd &#43; Ctrl &#43; R)</title>
      <link>https://markhneedham.com/blog/2013/04/07/sublime-getting-textmates-revealselect-in-side-bar-cmd-ctrl-r/</link>
      <pubDate>Sun, 07 Apr 2013 01:00:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/07/sublime-getting-textmates-revealselect-in-side-bar-cmd-ctrl-r/</guid>
      <description>[ { &amp;#34;keys&amp;#34;: [&amp;#34;ctrl+super+r&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;reveal_in_side_bar&amp;#34; } ] sublime.log_commands(True) &amp;gt;&amp;gt;&amp;gt; sublime.log_commands(True) command: context_menu {&amp;#34;event&amp;#34;: {&amp;#34;button&amp;#34;: 1, &amp;#34;x&amp;#34;: 390.21484375, &amp;#34;y&amp;#34;: 329.66796875}} command: reveal_in_side_bar command: rename_path {&amp;#34;paths&amp;#34;: [&amp;#34;/Users/markhneedham/code/thinkingingraphs/public/js/bootstrap.js&amp;#34;]} no command for selector: noop: command: show_panel {&amp;#34;panel&amp;#34;: &amp;#34;console&amp;#34;, &amp;#34;toggle&amp;#34;: true} </description>
    </item>
    
    <item>
      <title>MySQL: Repairing broken tables/indices</title>
      <link>https://markhneedham.com/blog/2013/04/06/mysql-repairing-broken-tablesindices/</link>
      <pubDate>Sat, 06 Apr 2013 17:26:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/04/06/mysql-repairing-broken-tablesindices/</guid>
      <description>mysqladmin shutdown for path in `ls /var/lib/mysql/forum/*.MYI`; do echo $path; myisamchk $path; done Checking MyISAM file: /var/lib/mysql/forum/forum.MYI Data records: 217 Deleted blocks: 4 myisamchk: warning: 1 client is using or hasn&amp;#39;t closed the table properly - check file-size - check record delete-chain - check key delete-chain - check index reference - check data record references index: 1 - check record links MyISAM-table &amp;#39;/var/lib/mysql/forum/forum.MYI&amp;#39; is usable but should be fixed for path in `ls /var/lib/mysql/forum/*.</description>
    </item>
    
    <item>
      <title>Embracing the logs</title>
      <link>https://markhneedham.com/blog/2013/03/31/embracing-the-logs/</link>
      <pubDate>Sun, 31 Mar 2013 21:44:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/31/embracing-the-logs/</guid>
      <description>Request -&amp;gt; nginx on proxy node -&amp;gt; nginx on app server node -&amp;gt; unicorn on app server node </description>
    </item>
    
    <item>
      <title>neo4j/cypher: Playing around with time</title>
      <link>https://markhneedham.com/blog/2013/03/31/neo4jcypher-playing-around-with-time/</link>
      <pubDate>Sun, 31 Mar 2013 21:08:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/31/neo4jcypher-playing-around-with-time/</guid>
      <description>&amp;gt; DateTime.now.strftime(&amp;#34;%H%M&amp;#34;) =&amp;gt; &amp;#34;2200&amp;#34; START game=node:times(&#39;time:*&#39;) RETURN game.time, COUNT(game) ORDER BY game.time +-------------------------+ | game.time | COUNT(game) | +-------------------------+ | 1245 | 21 | | 1330 | 21 | | 1500 | 163 | | 1600 | 29 | | 1730 | 22 | | 1945 | 21 | | 2000 | 19 | +-------------------------+ 7 rows START game=node:matches(&#39;match_id:*&#39;) RETURN game.time, COUNT(game) ORDER BY game.time START game=node:times(&#39;time:[1600 TO 2000]&#39;) RETURN game.</description>
    </item>
    
    <item>
      <title>Editing config files on a server &amp; Ctrl-Z</title>
      <link>https://markhneedham.com/blog/2013/03/29/editing-config-files-on-a-server-ctrl-z/</link>
      <pubDate>Fri, 29 Mar 2013 10:51:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/29/editing-config-files-on-a-server-ctrl-z/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Incrementally rolling out machines with a new puppet role</title>
      <link>https://markhneedham.com/blog/2013/03/24/incrementally-rolling-out-machines-with-a-new-puppet-role/</link>
      <pubDate>Sun, 24 Mar 2013 22:52:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/24/incrementally-rolling-out-machines-with-a-new-puppet-role/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Best tool for the job/Learning new ways to do things</title>
      <link>https://markhneedham.com/blog/2013/03/24/best-tool-for-the-joblearning-new-ways-to-do-things/</link>
      <pubDate>Sun, 24 Mar 2013 22:01:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/24/best-tool-for-the-joblearning-new-ways-to-do-things/</guid>
      <description></description>
    </item>
    
    <item>
      <title>When nokogiri fails with &#39;Nokogiri::XML::SyntaxError: Element script embeds close tag&#39; Web Driver to the rescue</title>
      <link>https://markhneedham.com/blog/2013/03/24/when-nokogiri-fails-with-nokogirixmlsyntaxerror-element-script-embeds-close-tag-web-driver-to-the-rescue/</link>
      <pubDate>Sun, 24 Mar 2013 21:20:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/24/when-nokogiri-fails-with-nokogirixmlsyntaxerror-element-script-embeds-close-tag-web-driver-to-the-rescue/</guid>
      <description>&amp;gt; require &amp;#39;nokogiri&amp;#39; &amp;gt; require &amp;#39;open-air&amp;#39; &amp;gt; tv_times = Nokogiri::HTML(open(&amp;#39;http://www.premierleague.com/en-gb/matchday/broadcast-schedules.tv.html?rangeType=.dateSeason&amp;amp;country=GB&amp;amp;clubId=ALL&amp;amp;season=2012-2013&amp;amp;isLive=true&amp;#39;)) &amp;gt; tv_times.css(&amp;#34;.broadcastschedule table.contentTable tbody tr&amp;#34;) =&amp;gt; [] &amp;gt; tv_times.errors =&amp;gt; [#&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, #&amp;lt;Nokogiri::XML::SyntaxError: Element script embeds close tag&amp;gt;, .</description>
    </item>
    
    <item>
      <title>neo4j/cypher: CypherTypeException: Failed merging Number with Relationship</title>
      <link>https://markhneedham.com/blog/2013/03/24/neo4jcypher-cyphertypeexception-failed-merging-number-with-relationship/</link>
      <pubDate>Sun, 24 Mar 2013 13:00:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/24/neo4jcypher-cyphertypeexception-failed-merging-number-with-relationship/</guid>
      <description>game-[:on_tv]-channel START player=node:players(&#39;name:*&#39;) MATCH player-[:played|subbed_on]-stats-[:in]-game-[t?:on_tv]-channel RETURN player.name, COLLECT([stats.goals, t]) AS games LIMIT 10 CypherTypeException: Failed merging Number with Relationship START player=node:players(&#39;name:*&#39;) MATCH player-[:played|subbed_on]-stats-[:in]-game-[t?:on_tv]-channel RETURN player.name, COLLECT([stats.goals, TYPE(t)]) AS games LIMIT 10 +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | player.name | games | +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | &amp;#34;Djibril Cissé&amp;#34; | [[0,&amp;lt;null&amp;gt;],[1,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;]] | | &amp;#34;Markus Rosenberg&amp;#34; | [[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;]] | | &amp;#34;Gabriel Agbonlahor&amp;#34; | [[0,&amp;#34;on_tv&amp;#34;],[1,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[1,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[1,&amp;#34;on_tv&amp;#34;],[1,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[1,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;]] | | &amp;#34;Shaun Derry&amp;#34; | [[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;]] | | &amp;#34;Marouane Fellaini&amp;#34; | [[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[1,&amp;#34;on_tv&amp;#34;],[1,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[1,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[2,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[2,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;]] | | &amp;#34;Jermaine Jenas&amp;#34; | [[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;]] | | &amp;#34;Sean Morrison&amp;#34; | [[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[1,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;]] | | &amp;#34;Claudio Yacob&amp;#34; | [[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;]] | | &amp;#34;Michael Owen&amp;#34; | [[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[1,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;]] | | &amp;#34;Tony Hibbert&amp;#34; | [[0,&amp;#34;on_tv&amp;#34;],[0,&amp;#34;on_tv&amp;#34;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;],[0,&amp;lt;null&amp;gt;]] | +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ 10 rows START player=node:players(&#39;name:*&#39;) MATCH player-[:played|subbed_on]-stats-[:in]-game-[t?</description>
    </item>
    
    <item>
      <title>beanstalkd: Getting the status of the queue</title>
      <link>https://markhneedham.com/blog/2013/03/21/beanstalkd-getting-the-status-of-the-queue/</link>
      <pubDate>Thu, 21 Mar 2013 23:25:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/21/beanstalkd-getting-the-status-of-the-queue/</guid>
      <description>$ telnet localhost 11300 stats current-jobs-urgent: 0 current-jobs-ready: 0 current-jobs-reserved: 0 current-jobs-delayed: 0 current-jobs-buried: 0 cmd-put: 66 ... current-connections: 6 current-producers: 1 current-workers: 1 current-waiting: 1 total-connections: 58 pid: 15622 version: 1.4.6 rusage-utime: 0.000000 rusage-stime: 0.040002 uptime: 22740 binlog-oldest-index: 0 binlog-current-index: 0 binlog-max-size: 10485760 $ echo -e &amp;#34;stats\r\n&amp;#34; | nc localhost 11300 -e enable interpretation of the backslash-escaped characters listed below ... \NNN the character whose ASCII code is NNN (octal) \\ backslash \a alert (BEL) \b backspace \c suppress trailing newline \f form feed \n new line \r carriage return \t horizontal tab \v vertical tab $ echo -e &amp;#34;mark\nmark&amp;#34; mark mark $ echo &amp;#34;mark\nmark&amp;#34; mark\nmark # netcat-openbsd version $ echo &amp;#34;stats&amp;#34; | nc -C localhost 11300 # one on Mac OS X by default $ echo &amp;#34;stats&amp;#34; | nc -c localhost 11300 $ telnet localhost 11300 list-tubes OK 14 --- - default use default USING DEFAULT peek-ready NOT_FOUND stats-tube default OK 253 --- name: default current-jobs-urgent: 0 current-jobs-ready: 0 current-jobs-reserved: 0 current-jobs-delayed: 0 current-jobs-buried: 0 total-jobs: 155 current-using: 9 current-watching: 9 current-waiting: 1 cmd-pause-tube: 0 pause: 0 pause-time-left: 0 </description>
    </item>
    
    <item>
      <title>Wiring up an Amazon S3 bucket to a CNAME entry - The specified bucket does not exist</title>
      <link>https://markhneedham.com/blog/2013/03/21/wiring-up-an-amazon-s3-bucket-to-a-cname-entry-the-specified-bucket-does-not-exist/</link>
      <pubDate>Thu, 21 Mar 2013 22:39:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/21/wiring-up-an-amazon-s3-bucket-to-a-cname-entry-the-specified-bucket-does-not-exist/</guid>
      <description>our-subdomain.somedomain.com -&amp;gt; static-site.s3-website-eu-west-1.amazonaws.com &amp;lt;Error&amp;gt; &amp;lt;Code&amp;gt;NoSuchBucket&amp;lt;/Code&amp;gt; &amp;lt;Message&amp;gt;The specified bucket does not exist&amp;lt;/Message&amp;gt; &amp;lt;BucketName&amp;gt;&amp;lt;/BucketName&amp;gt; &amp;lt;RequestId&amp;gt;&amp;lt;/RequestId&amp;gt; &amp;lt;HostId&amp;gt; our-subdomain.somedomain.com -&amp;gt; our-subdomain.somedomain.com.s3-website-eu-west-1.amazonaws.com </description>
    </item>
    
    <item>
      <title>neo4j/cypher: WITH, COLLECT &amp; EXTRACT</title>
      <link>https://markhneedham.com/blog/2013/03/20/neo4jcypher-with-collect-extract/</link>
      <pubDate>Wed, 20 Mar 2013 02:54:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/20/neo4jcypher-with-collect-extract/</guid>
      <description>START team = node:teams(&#39;name:&amp;quot;Manchester United&amp;quot;&#39;) MATCH team-[h:home_team|away_team]-game-[:on_day]-day RETURN DISTINCT day.name, COLLECT(TRIM(REPLACE(REPLACE(game.name, &amp;quot;Manchester United&amp;quot;, &amp;quot;&amp;quot;), &amp;quot;vs&amp;quot;, &amp;quot;&amp;quot;))) +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | day.name | opponents | +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ | &amp;#34;Sunday&amp;#34; | [&amp;#34;Liverpool&amp;#34;,&amp;#34;Everton&amp;#34;,&amp;#34;Southampton&amp;#34;,&amp;#34;Liverpool&amp;#34;,&amp;#34;Newcastle United&amp;#34;,&amp;#34;Chelsea&amp;#34;,&amp;#34;Manchester City&amp;#34;,&amp;#34;Swansea City&amp;#34;,&amp;#34;Tottenham Hotspur&amp;#34;] | | &amp;#34;Wednesday&amp;#34; | [&amp;#34;Southampton&amp;#34;,&amp;#34;West Ham United&amp;#34;,&amp;#34;Newcastle United&amp;#34;] | | &amp;#34;Monday&amp;#34; | [&amp;#34;Everton&amp;#34;] | | &amp;#34;Saturday&amp;#34; | [&amp;#34;Reading&amp;#34;,&amp;#34;Fulham&amp;#34;,&amp;#34;Wigan Athletic&amp;#34;,&amp;#34;Tottenham Hotspur&amp;#34;,&amp;#34;Stoke City&amp;#34;,&amp;#34;Arsenal&amp;#34;,&amp;#34;Queens Park Rangers&amp;#34;,&amp;#34;Sunderland&amp;#34;,&amp;#34;West Bromwich Albion&amp;#34;,&amp;#34;Norwich City&amp;#34;,&amp;#34;Reading&amp;#34;,&amp;#34;Aston Villa&amp;#34;,&amp;#34;Norwich City&amp;#34;,&amp;#34;Fulham&amp;#34;,&amp;#34;Queens Park Rangers&amp;#34;] | | &amp;#34;Tuesday&amp;#34; | [&amp;#34;Wigan Athletic&amp;#34;] | +-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+ 5 rows START team = node:teams(&#39;name:&amp;quot;Manchester United&amp;quot;&#39;) MATCH team-[h:home_team|away_team]-game-[:on_day]-day WITH day.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Getting the hang of the WITH statement</title>
      <link>https://markhneedham.com/blog/2013/03/20/neo4jcypher-getting-the-hang-of-the-with-statement/</link>
      <pubDate>Wed, 20 Mar 2013 00:25:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/20/neo4jcypher-getting-the-hang-of-the-with-statement/</guid>
      <description>START player = node:players(&#39;name:&amp;quot;Luis Suárez&amp;quot;&#39;) MATCH game-[:in]-stats-[:played]-player, game-[:on_day]-day RETURN day.name, game.name +---------------------------------------------------+ | day.name | game.name | +---------------------------------------------------+ | &amp;#34;Saturday&amp;#34; | &amp;#34;Liverpool vs Southampton&amp;#34; | | &amp;#34;Saturday&amp;#34; | &amp;#34;Southampton vs Liverpool&amp;#34; | | &amp;#34;Saturday&amp;#34; | &amp;#34;Liverpool vs Reading&amp;#34; | | &amp;#34;Saturday&amp;#34; | &amp;#34;West Bromwich Albion vs Liverpool&amp;#34; | ... +---------------------------------------------------+ 29 rows START player = node:players(&#39;name:&amp;quot;Luis Suárez&amp;quot;&#39;) MATCH game-[:in]-stats-[:played]-player, game-[:on_day]-day RETURN day.name, COUNT(game.name) +--------------------------------+ | day.name | COUNT(game.name) | +--------------------------------+ | &amp;#34;Sunday&amp;#34; | 13 | | &amp;#34;Wednesday&amp;#34; | 4 | | &amp;#34;Monday&amp;#34; | 1 | | &amp;#34;Saturday&amp;#34; | 11 | +--------------------------------+ 4 rows START player = node:players(&#39;name:&amp;quot;Luis Suárez&amp;quot;&#39;) MATCH game-[:in]-stats-[:played]-player-[r?</description>
    </item>
    
    <item>
      <title>neo4j/cypher: SQL style GROUP BY WITH LIMIT query</title>
      <link>https://markhneedham.com/blog/2013/03/18/neo4jcypher-sql-style-group-by-with-limit-query/</link>
      <pubDate>Mon, 18 Mar 2013 23:19:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/18/neo4jcypher-sql-style-group-by-with-limit-query/</guid>
      <description>START team = node:teams(&#39;name:&amp;quot;Manchester United&amp;quot;&#39;) MATCH team-[:home_team|away_team]-game-[:scored_in]-player-[:played]-stats-[:for]-team, stats-[:in]-game RETURN DISTINCT player.name, stats.goals, game.name +--------------------------------------------------------------------------------+ | player.name | stats.goals | game.name | +--------------------------------------------------------------------------------+ | &amp;#34;Javier Hernández&amp;#34; | 1 | &amp;#34;Manchester United vs Wigan Athletic&amp;#34; | | &amp;#34;Robin Van Persie&amp;#34; | 1 | &amp;#34;Manchester United vs Sunderland&amp;#34; | | &amp;#34;Danny Welbeck&amp;#34; | 1 | &amp;#34;Manchester United vs Stoke City&amp;#34; | | &amp;#34;Rafael&amp;#34; | 1 | &amp;#34;Queens Park Rangers vs Manchester United&amp;#34; | | &amp;#34;Wayne Rooney&amp;#34; | 1 | &amp;#34;Manchester United vs Norwich City&amp;#34; | | &amp;#34;Shinji Kagawa&amp;#34; | 1 | &amp;#34;Manchester United vs Fulham&amp;#34; | | &amp;#34;Shinji Kagawa&amp;#34; | 3 | &amp;#34;Manchester United vs Norwich City&amp;#34; | .</description>
    </item>
    
    <item>
      <title>clojure/Java Interop: The doto macro</title>
      <link>https://markhneedham.com/blog/2013/03/17/clojurejava-interop-the-doto-macro/</link>
      <pubDate>Sun, 17 Mar 2013 20:21:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/17/clojurejava-interop-the-doto-macro/</guid>
      <description>(doto (new java.util.HashMap) (.put &amp;#34;a&amp;#34; 1) (.put &amp;#34;b&amp;#34; 2)) -&amp;gt; {a=1, b=2} (defn create-stadium-node [db line] (let [stadium-node (.. db createNode)] (.. stadium-node (setProperty &amp;#34;wkt&amp;#34; (format &amp;#34;POINT(%s %s)&amp;#34; (:long line) (:lat line)))) (.. stadium-node (setProperty &amp;#34;name&amp;#34; (:stadium line))) stadium-node)) (defn create-stadium-node [db line] (doto (.. db createNode) (.setProperty &amp;#34;wkt&amp;#34; (format &amp;#34;POINT(%s %s)&amp;#34; (:long line) (:lat line))) (.setProperty &amp;#34;name&amp;#34; (:stadium line)))) # the end of our main function (.. tx success) (.</description>
    </item>
    
    <item>
      <title>clojure/Java Interop - Importing neo4j spatial data</title>
      <link>https://markhneedham.com/blog/2013/03/17/clojurejava-interop-importing-neo4j-spatial-data/</link>
      <pubDate>Sun, 17 Mar 2013 18:56:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/17/clojurejava-interop-importing-neo4j-spatial-data/</guid>
      <description>package main.java; // imports excluded  public class StadiumsImport { public static void main(String[] args) throws IOException { List&amp;lt;String&amp;gt; lines = readFile(&amp;#34;data/stadiums.csv&amp;#34;); EmbeddedGraphDatabase db = new EmbeddedGraphDatabase(&amp;#34;neo4j-community-1.9.M04/data/graph.db&amp;#34;); Index&amp;lt;Node&amp;gt; stadiumsIndex = createSpatialIndex(db, &amp;#34;stadiumsLocation&amp;#34;); Transaction tx = db.beginTx(); for (String stadium : lines) { String[] columns = stadium.split(&amp;#34;,&amp;#34;); Index&amp;lt;Node&amp;gt; teamsIndex = db.index().forNodes(&amp;#34;teams&amp;#34;); String team = columns[1].replaceAll(&amp;#34;\&amp;#34;&amp;#34;,&amp;#34;&amp;#34;); Node teamNode = teamsIndex.get(&amp;#34;name&amp;#34;, team).getSingle(); if(teamNode != null) { Node stadiumNode = db.createNode(); stadiumNode.setProperty(&amp;#34;wkt&amp;#34;, String.format(&amp;#34;POINT(%s %s)&amp;#34;, columns[4], columns[3])); stadiumNode.</description>
    </item>
    
    <item>
      <title>Understanding what lsof socket/port aliases refer to</title>
      <link>https://markhneedham.com/blog/2013/03/17/understanding-what-lsof-socketport-aliases-refer-to/</link>
      <pubDate>Sun, 17 Mar 2013 14:00:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/17/understanding-what-lsof-socketport-aliases-refer-to/</guid>
      <description>$ lsof -ni | grep LISTEN idea 2398 markhneedham 58u IPv6 0xac8f13f77b903331 0t0 TCP *:49410 (LISTEN) idea 2398 markhneedham 65u IPv6 0xac8f13f7799a4af1 0t0 TCP *:58741 (LISTEN) idea 2398 markhneedham 122u IPv6 0xac8f13f7799a4711 0t0 TCP 127.0.0.1:6942 (LISTEN) idea 2398 markhneedham 249u IPv6 0xac8f13f777586711 0t0 TCP *:63342 (LISTEN) idea 2398 markhneedham 253u IPv6 0xac8f13f777586331 0t0 TCP 127.0.0.1:63342 (LISTEN) java 16973 markhneedham 152u IPv6 0xac8f13f777586af1 0t0 TCP *:56471 (LISTEN) java 16973 markhneedham 154u IPv6 0xac8f13f779e6b711 0t0 TCP *:menandmice-dns (LISTEN) java 16973 markhneedham 168u IPv6 0xac8f13f77b902f51 0t0 TCP 127.</description>
    </item>
    
    <item>
      <title>A quick and dirty way of testing the performance of a service</title>
      <link>https://markhneedham.com/blog/2013/03/16/a-quick-and-dirty-way-of-testing-the-performance-of-a-service/</link>
      <pubDate>Sat, 16 Mar 2013 11:58:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/16/a-quick-and-dirty-way-of-testing-the-performance-of-a-service/</guid>
      <description>while true; do curl -k -s -w %{time_total} https://serviceurl/whatever/something; -o /dev/null; printf &amp;#34;\n&amp;#34;; done &amp;gt; service.txt # output cut for brevity $ p File.readlines(&amp;#34;service.txt&amp;#34;).map { |x| x.gsub(/\n/, &amp;#34;&amp;#34;).to_f }.sort [0.042, 0.043, 0.043, 0.045, 0.046...1.083] &amp;gt; times = c(0.042, 0.043, 0.043, 0.045, 0.046, 0.046, 0.046, 0.047, 0.047, 0.047, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.049, 0.05, 0.05, 0.05, 0.051, 0.051, 0.051, 0.051, 0.051, 0.051, 0.051, 0.051, 0.052, 0.052, 0.052, 0.053, 0.</description>
    </item>
    
    <item>
      <title>neo4j/cypher: Finding football stadiums near a city using spatial</title>
      <link>https://markhneedham.com/blog/2013/03/10/neo4jcypher-finding-football-stadiums-near-a-city-using-spatial/</link>
      <pubDate>Sun, 10 Mar 2013 22:13:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/10/neo4jcypher-finding-football-stadiums-near-a-city-using-spatial/</guid>
      <description>$ git clone git://github.com/neo4j/spatial.git spatial $ cd spatial $ mvn clean package -Dmaven.test.skip=true install $ unzip target/neo4j-spatial-0.11-SNAPSHOT-server-plugin.zip -d /path/to/neo4j-community-1.9.M04/plugins/ $ /path/to/neo4j-community-1.9.M04/bin/neo4j restart $ curl -L http://localhost:7474/db/data { &amp;#34;extensions&amp;#34; : { ... &amp;#34;SpatialPlugin&amp;#34; : { &amp;#34;addEditableLayer&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/addEditableLayer&amp;#34;, &amp;#34;addCQLDynamicLayer&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/addCQLDynamicLayer&amp;#34;, &amp;#34;findGeometriesWithinDistance&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/findGeometriesWithinDistance&amp;#34;, &amp;#34;updateGeometryFromWKT&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/updateGeometryFromWKT&amp;#34;, &amp;#34;addGeometryWKTToLayer&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/addGeometryWKTToLayer&amp;#34;, &amp;#34;getLayer&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/getLayer&amp;#34;, &amp;#34;addSimplePointLayer&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/addSimplePointLayer&amp;#34;, &amp;#34;findGeometriesInBBox&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/findGeometriesInBBox&amp;#34;, &amp;#34;addNodeToLayer&amp;#34; : &amp;#34;http://localhost:7474/db/data/ext/SpatialPlugin/graphdb/addNodeToLayer&amp;#34; }, … }, ... &amp;#34;neo4j_version&amp;#34; : &amp;#34;1.9.M04&amp;#34; Name,Team,Capacity,Latitude,Longitude &amp;#34;Adams Park&amp;#34;,&amp;#34;Wycombe Wanderers&amp;#34;,10284,51.</description>
    </item>
    
    <item>
      <title>neo4j: Make properties relationships</title>
      <link>https://markhneedham.com/blog/2013/03/06/neo4j-make-properties-relationships/</link>
      <pubDate>Wed, 06 Mar 2013 00:59:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/06/neo4j-make-properties-relationships/</guid>
      <description>MATCH-[:in_month]-&amp;gt;MONTH START player = node:players(&#39;name:&amp;quot;Gareth Bale&amp;quot;&#39;), month=node:months(&#39;name:September&#39;) MATCH player-[:played_in]-game WHERE game-[:in_month]-month RETURN game.name, game.home_goals + &amp;quot;-&amp;quot; +game.away_goals AS score, game.date +----------------------------------------------------------------------------------+ | game.name | score | game.date | +----------------------------------------------------------------------------------+ | &amp;#34;Reading vs Tottenham Hotspur&amp;#34; | &amp;#34;1-3&amp;#34; | &amp;#34;2012-09-16 16:00:00 +0100&amp;#34; | | &amp;#34;Tottenham Hotspur vs Norwich City&amp;#34; | &amp;#34;1-1&amp;#34; | &amp;#34;2012-09-01 15:00:00 +0100&amp;#34; | | &amp;#34;Tottenham Hotspur vs Queens Park Rangers&amp;#34; | &amp;#34;2-1&amp;#34; | &amp;#34;2012-09-23 16:00:00 +0100&amp;#34; | | &amp;#34;Manchester United vs Tottenham Hotspur&amp;#34; | &amp;#34;2-3&amp;#34; | &amp;#34;2012-09-29 17:30:00 +0100&amp;#34; | +----------------------------------------------------------------------------------+ START month=node:months(&#39;name:December&#39;) MATCH month-[:in_month]-game WHERE ABS(game.</description>
    </item>
    
    <item>
      <title>Ruby/Haml: Conditionally/Optionally setting an attribute/class</title>
      <link>https://markhneedham.com/blog/2013/03/02/rubyhaml-conditionallyoptionally-setting-an-attributeclass/</link>
      <pubDate>Sat, 02 Mar 2013 23:22:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/02/rubyhaml-conditionallyoptionally-setting-an-attributeclass/</guid>
      <description>- correct = true %p{:class =&amp;gt; (correct ? &amp;quot;success&amp;quot; : nil) } important text &amp;lt;p class=&amp;quot;success&amp;quot;&amp;gt; important text &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; important text &amp;lt;/p&amp;gt; </description>
    </item>
    
    <item>
      <title>Ruby/Haml: Maintaining white space/indentation in a &amp;lt;pre&amp;gt; tag</title>
      <link>https://markhneedham.com/blog/2013/03/02/rubyhaml-maintaining-white-spaceindentation-in-a-pre-tag/</link>
      <pubDate>Sat, 02 Mar 2013 22:19:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/03/02/rubyhaml-maintaining-white-spaceindentation-in-a-pre-tag/</guid>
      <description>%pre{ :class =&amp;gt; &amp;quot;brush: cypher; gutter: false; toolbar: false;&amp;quot;} START player = node:players(&#39;name:&amp;quot;Gareth Bale&amp;quot;&#39;) RETURN player.name %pre{ :class =&amp;gt; &amp;quot;brush: cypher; gutter: false; toolbar: false;&amp;quot;} = preserve do START player = node:players(&#39;name:&amp;quot;Gareth Bale&amp;quot;&#39;) RETURN player.name </description>
    </item>
    
    <item>
      <title>neo4j: Loading data - REST API vs Batch Import</title>
      <link>https://markhneedham.com/blog/2013/02/28/neo4j-loading-data-rest-api-vs-batch-import/</link>
      <pubDate>Thu, 28 Feb 2013 23:36:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/28/neo4j-loading-data-rest-api-vs-batch-import/</guid>
      <description>-------------------------------------------------------------------- | Matches | Cache-Hits | Cache-Misses | Lucene | In memory | -------------------------------------------------------------------- | 25 | 501 | 325 | 26.692s | 22.877s | | 50 | 1275 | 373 | 50.491s | 38.304s | | 263 | 8016 | 480 | 4m 11.031s | 2m 49.951s | -------------------------------------------------------------------- ------------------------------------------------------------------- | Matches | Lucene | In memory | Batch Import | ------------------------------------------------------------------- | 25 | 26.692s | 22.877s | 0.</description>
    </item>
    
    <item>
      <title>Vertical/Horizontal Slicing</title>
      <link>https://markhneedham.com/blog/2013/02/28/verticalhorizontal-slicing/</link>
      <pubDate>Thu, 28 Feb 2013 22:23:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/28/verticalhorizontal-slicing/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Compatible Opinions &amp; Confirmation Bias</title>
      <link>https://markhneedham.com/blog/2013/02/28/compatible-opinions-confirmation-bias/</link>
      <pubDate>Thu, 28 Feb 2013 21:57:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/28/compatible-opinions-confirmation-bias/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Micro Services: Where does the complexity go?</title>
      <link>https://markhneedham.com/blog/2013/02/28/micro-services-where-does-the-complexity-go/</link>
      <pubDate>Thu, 28 Feb 2013 00:00:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/28/micro-services-where-does-the-complexity-go/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Reading Code: Assume it doesn&#39;t work</title>
      <link>https://markhneedham.com/blog/2013/02/27/reading-code-assume-it-doesnt-work/</link>
      <pubDate>Wed, 27 Feb 2013 23:12:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/27/reading-code-assume-it-doesnt-work/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Micro Services: Readme files</title>
      <link>https://markhneedham.com/blog/2013/02/25/micro-services-readme-files/</link>
      <pubDate>Mon, 25 Feb 2013 23:58:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/25/micro-services-readme-files/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pomodoros and the To-Do list</title>
      <link>https://markhneedham.com/blog/2013/02/25/pomodoros-and-the-to-do-list/</link>
      <pubDate>Mon, 25 Feb 2013 23:33:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/25/pomodoros-and-the-to-do-list/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Reading outside your area of interest</title>
      <link>https://markhneedham.com/blog/2013/02/25/reading-outside-your-area-of-interest/</link>
      <pubDate>Mon, 25 Feb 2013 22:56:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/25/reading-outside-your-area-of-interest/</guid>
      <description></description>
    </item>
    
    <item>
      <title>neo4j/cypher: Combining COUNT and COLLECT in one query</title>
      <link>https://markhneedham.com/blog/2013/02/24/neo4jcypher-combining-count-and-collect-in-one-query/</link>
      <pubDate>Sun, 24 Feb 2013 19:19:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/24/neo4jcypher-combining-count-and-collect-in-one-query/</guid>
      <description>START player = node:players(&amp;#39;name:*&amp;#39;) MATCH player-[:missed_penalty_in]-game, player-[:played|subbed_on]-stats-[:in]-game, stats-[:for]-team, game-[:home_team]-home, game-[:away_team]-away RETURN player.name, team.name, home.name, away.name +-------------------------------------------------------------------------------------------------+ | player.name | team.name | home.name | away.name | +-------------------------------------------------------------------------------------------------+ | &amp;#34;Papiss Demba Cisse&amp;#34; | &amp;#34;Newcastle United&amp;#34; | &amp;#34;Newcastle United&amp;#34; | &amp;#34;Norwich City&amp;#34; | | &amp;#34;Wayne Rooney&amp;#34; | &amp;#34;Manchester United&amp;#34; | &amp;#34;Manchester United&amp;#34; | &amp;#34;Arsenal&amp;#34; | | &amp;#34;Mikel Arteta&amp;#34; | &amp;#34;Arsenal&amp;#34; | &amp;#34;Arsenal&amp;#34; | &amp;#34;Fulham&amp;#34; | | &amp;#34;David Silva&amp;#34; | &amp;#34;Manchester City&amp;#34; | &amp;#34;Manchester City&amp;#34; | &amp;#34;Southampton&amp;#34; | | &amp;#34;Frank Lampard&amp;#34; | &amp;#34;Chelsea&amp;#34; | &amp;#34;Manchester City&amp;#34; | &amp;#34;Chelsea&amp;#34; | | &amp;#34;Adel Taarabt&amp;#34; | &amp;#34;Queens Park Rangers&amp;#34; | &amp;#34;Queens Park Rangers&amp;#34; | &amp;#34;Norwich City&amp;#34; | | &amp;#34;Javier Hernández&amp;#34; | &amp;#34;Manchester United&amp;#34; | &amp;#34;Manchester United&amp;#34; | &amp;#34;Wigan Athletic&amp;#34; | | &amp;#34;Robin Van Persie&amp;#34; | &amp;#34;Manchester United&amp;#34; | &amp;#34;Southampton&amp;#34; | &amp;#34;Manchester United&amp;#34; | | &amp;#34;Jonathan Walters&amp;#34; | &amp;#34;Stoke City&amp;#34; | &amp;#34;Fulham&amp;#34; | &amp;#34;Stoke City&amp;#34; | | &amp;#34;Shane Long&amp;#34; | &amp;#34;West Bromwich Albion&amp;#34; | &amp;#34;West Bromwich Albion&amp;#34; | &amp;#34;Liverpool&amp;#34; | | &amp;#34;Steven Gerrard&amp;#34; | &amp;#34;Liverpool&amp;#34; | &amp;#34;Liverpool&amp;#34; | &amp;#34;West Bromwich Albion&amp;#34; | | &amp;#34;Lucas Piazon&amp;#34; | &amp;#34;Chelsea&amp;#34; | &amp;#34;Chelsea&amp;#34; | &amp;#34;Aston Villa&amp;#34; | +-------------------------------------------------------------------------------------------------+ 12 rows START player = node:players(&amp;#39;name:*&amp;#39;) MATCH player-[:missed_penalty_in]-game, player-[:played|subbed_on]-stats-[:in]-game, stats-[:for]-team RETURN DISTINCT team.</description>
    </item>
    
    <item>
      <title>Ruby: Stripping out a non breaking space character (&amp;amp;nbsp;)</title>
      <link>https://markhneedham.com/blog/2013/02/23/ruby-stripping-out-a-non-breaking-space-character-nbsp/</link>
      <pubDate>Sat, 23 Feb 2013 15:04:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/23/ruby-stripping-out-a-non-breaking-space-character-nbsp/</guid>
      <description>rows.each do |row| next if row.strip.empty? # other scraping code end # it&amp;#39;s hex representation is A0 &amp;gt; &amp;#34;\u00A0&amp;#34;.strip =&amp;gt; &amp;#34; &amp;#34; &amp;gt; &amp;#34;\u00A0&amp;#34;.strip.empty? =&amp;gt; false &amp;gt; &amp;#34;\u00A0&amp;#34;.gsub(/\s*/, &amp;#34;&amp;#34;) =&amp;gt; &amp;#34; &amp;#34; &amp;gt; &amp;#34;\u00A0&amp;#34;.gsub(/\s*/, &amp;#34;&amp;#34;).empty? =&amp;gt; false &amp;gt; &amp;#34;\u00A0&amp;#34;.gsub(/[[:space:]]+/, &amp;#34;&amp;#34;) =&amp;gt; &amp;#34;&amp;#34; &amp;gt; &amp;#34;\u00A0&amp;#34;.gsub(/[[:space:]]+/, &amp;#34;&amp;#34;).empty? =&amp;gt; true &amp;gt; &amp;#34;Mark Needham&amp;#34;.gsub(/[[:space:]]+/, &amp;#34;&amp;#34;) =&amp;gt; &amp;#34;MarkNeedham&amp;#34; &amp;gt; &amp;#34;\u00A0&amp;#34;.gsub(/\A[[:space:]]+|[[:space:]]+\z/, &amp;#39;&amp;#39;) =&amp;gt; &amp;#34;&amp;#34; &amp;gt; (&amp;#34;Mark&amp;#34; + &amp;#34;\u00A0&amp;#34; + &amp;#34;Needham&amp;#34;).gsub(/\A[[:space:]]+|[[:space:]]+\z/, &amp;#39;&amp;#39;) =&amp;gt; &amp;#34;Mark Needham&amp;#34; </description>
    </item>
    
    <item>
      <title>neo4j/cypher: Using a WHERE clause to filter paths</title>
      <link>https://markhneedham.com/blog/2013/02/19/neo4jcypher-using-a-where-clause-to-filter-paths/</link>
      <pubDate>Tue, 19 Feb 2013 00:03:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/19/neo4jcypher-using-a-where-clause-to-filter-paths/</guid>
      <description>START team = node:teams(&amp;#39;name:&amp;#34;Arsenal&amp;#34;&amp;#39;) MATCH team-[:home_team|away_team]-game-[:played_in]-player RETURN player.name, COUNT(player.name) as games ORDER BY games desc ------------------------------+ | player.name | games | +------------------------------+ | &amp;#34;Cazorla&amp;#34; | 25 | | &amp;#34;Arteta&amp;#34; | 22 | | &amp;#34;Mertesacker&amp;#34; | 22 | | &amp;#34;Vermaelen&amp;#34; | 22 | | &amp;#34;Podolski&amp;#34; | 21 | | &amp;#34;Gibbs&amp;#34; | 18 | | &amp;#34;Szczesny&amp;#34; | 17 | … | &amp;#34;Tiote&amp;#34; | 1 | | &amp;#34;Diame&amp;#34; | 1 | | &amp;#34;Ridgewell&amp;#34; | 1 | | &amp;#34;Lampard&amp;#34; | 1 | | &amp;#34;Bramble&amp;#34; | 1 | | &amp;#34;Simpson&amp;#34; | 1 | +------------------------------+ 258 rows START team = node:teams(&amp;#39;name:&amp;#34;Arsenal&amp;#34;&amp;#39;) MATCH team-[:home_team|away_team]-game-[:played_in]-player, player-[:played]-()-[:for]-team RETURN player.</description>
    </item>
    
    <item>
      <title>Micro Services Style Data Work Flow</title>
      <link>https://markhneedham.com/blog/2013/02/18/micro-services-style-data-work-flow/</link>
      <pubDate>Mon, 18 Feb 2013 22:16:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/18/micro-services-style-data-work-flow/</guid>
      <description></description>
    </item>
    
    <item>
      <title>neo4j/cypher: SQL style GROUP BY functionality</title>
      <link>https://markhneedham.com/blog/2013/02/17/neo4jcypher-sql-style-group-by-functionality/</link>
      <pubDate>Sun, 17 Feb 2013 21:05:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/17/neo4jcypher-sql-style-group-by-functionality/</guid>
      <description>START player = node:players(&amp;#39;name:*&amp;#39;) MATCH player-[:sent_off_in]-game-[:in_month]-month RETURN player.name, month.name +----------------------------+ | player.name | month.name | +----------------------------+ | &amp;#34;Jenkinson&amp;#34; | &amp;#34;February&amp;#34; | | &amp;#34;Chico&amp;#34; | &amp;#34;September&amp;#34; | | &amp;#34;Odemwingie&amp;#34; | &amp;#34;September&amp;#34; | | &amp;#34;Agger&amp;#34; | &amp;#34;August&amp;#34; | | &amp;#34;Cole&amp;#34; | &amp;#34;December&amp;#34; | | &amp;#34;Whitehead&amp;#34; | &amp;#34;August&amp;#34; | ... +----------------------------+ START player = node:players(&amp;#39;name:*&amp;#39;) MATCH player-[:sent_off_in]-game-[:in_month]-month RETURN COUNT(player.name) AS numberOfReds, month.name ORDER BY numberOfReds DESC +----------------------------+ | numberOfReds | month.name | +----------------------------+ | 7 | &amp;#34;October&amp;#34; | | 6 | &amp;#34;December&amp;#34; | | 4 | &amp;#34;September&amp;#34; | | 4 | &amp;#34;November&amp;#34; | | 3 | &amp;#34;August&amp;#34; | | 2 | &amp;#34;January&amp;#34; | | 2 | &amp;#34;February&amp;#34; | +----------------------------+ START player = node:players(&amp;#39;name:*&amp;#39;) MATCH player-[:sent_off_in]-game-[:in_month]-month, game-[:in_match]-stats-[:stats]-player, stats-[:played_for]-team RETURN player.</description>
    </item>
    
    <item>
      <title>Data Science: Don&#39;t filter data prematurely</title>
      <link>https://markhneedham.com/blog/2013/02/17/data-science-dont-filter-data-prematurely/</link>
      <pubDate>Sun, 17 Feb 2013 20:02:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/17/data-science-dont-filter-data-prematurely/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Regular Expressions: Non greedy matching</title>
      <link>https://markhneedham.com/blog/2013/02/16/regular-expressions-non-greedy-matching/</link>
      <pubDate>Sat, 16 Feb 2013 12:17:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/16/regular-expressions-non-greedy-matching/</guid>
      <description>Rooney 8′, 27′ &amp;gt; &amp;#34;Rooney 8′, 27′&amp;#34;.match(/(.*)\s\d(.*)/)[1] =&amp;gt; &amp;#34;Rooney 8,&amp;#34; &amp;gt; &amp;#34;Rooney 8′&amp;#34;.match(/(.*)\s\d(.*)/)[1] =&amp;gt; &amp;#34;Rooney&amp;#34; &amp;gt; &amp;#34;Rooney 8′, 27′&amp;#34;.match(/(.*?)\s\d(.*)/)[1] =&amp;gt; &amp;#34;Rooney&amp;#34; &amp;gt; &amp;#34;Rooney 8′, 27′&amp;#34;.match(/([A-Za-z\s-]+)\s\d(.*)/)[1] =&amp;gt; &amp;#34;Rooney&amp;#34; </description>
    </item>
    
    <item>
      <title>Onboarding: Sketch the landscape</title>
      <link>https://markhneedham.com/blog/2013/02/15/onboarding-sketch-the-landscape/</link>
      <pubDate>Fri, 15 Feb 2013 07:36:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/15/onboarding-sketch-the-landscape/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Feature Extraction/Selection - What I&#39;ve learnt so far</title>
      <link>https://markhneedham.com/blog/2013/02/10/feature-extractionselection-what-ive-learnt-so-far/</link>
      <pubDate>Sun, 10 Feb 2013 15:42:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/10/feature-extractionselection-what-ive-learnt-so-far/</guid>
      <description></description>
    </item>
    
    <item>
      <title>R: Building up a data frame row by row</title>
      <link>https://markhneedham.com/blog/2013/02/10/r-building-up-a-data-frame-row-by-row/</link>
      <pubDate>Sun, 10 Feb 2013 13:29:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/10/r-building-up-a-data-frame-row-by-row/</guid>
      <description>&amp;gt; head(titanic) survived pclass name sex age sibsp parch ticket fare cabin embarked 1 0 3 Braund, Mr. Owen Harris male 22 1 0 A/5 21171 7.2500 S 2 1 1 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female 38 1 0 PC 17599 71.2833 C85 C 3 1 3 Heikkinen, Miss. Laina female 26 0 0 STON/O2. 3101282 7.9250 S 4 1 1 Futrelle, Mrs. Jacques Heath (Lily May Peel) female 35 1 0 113803 53.</description>
    </item>
    
    <item>
      <title>R: Modelling a conversion rate with a binomial distribution</title>
      <link>https://markhneedham.com/blog/2013/02/07/r-modelling-a-conversion-rate-with-a-binomial-distribution/</link>
      <pubDate>Thu, 07 Feb 2013 01:26:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/07/r-modelling-a-conversion-rate-with-a-binomial-distribution/</guid>
      <description>generateConversionRates &amp;lt;- function(sampleSize) { sample_a &amp;lt;- rbinom(seq(0, sampleSize), 1, 0.12) conversion_a &amp;lt;- length(sample_a[sample_a == 1]) / sampleSize sample_b &amp;lt;- rbinom(seq(0, sampleSize), 1, 0.12) conversion_b &amp;lt;- length(sample_b[sample_b == 1]) / sampleSize c(conversion_a, conversion_b) } &amp;gt; generateConversionRates(10000) [1] 0.1230 0.1207 generateSample &amp;lt;- function(sampleSize) { lapply(seq(1, 1000), function(x) generateConversionRates(sampleSize)) } &amp;gt; getSample(10000) [[998]] [1] 0.1179 0.1216 [[999]] [1] 0.1246 0.1211 [[1000]] [1] 0.1248 0.1234 </description>
    </item>
    
    <item>
      <title>R: Mapping over a list of lists</title>
      <link>https://markhneedham.com/blog/2013/02/03/r-mapping-over-a-list-of-lists/</link>
      <pubDate>Sun, 03 Feb 2013 10:40:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/02/03/r-mapping-over-a-list-of-lists/</guid>
      <description>&amp;gt; file &amp;lt;- &amp;#34;https://dl.dropbox.com/u/7710864/data/csv_hid/ss06hid.csv&amp;#34; &amp;gt; download.file(file, destfile=&amp;#34;americancommunity.csv&amp;#34;, method=&amp;#34;curl&amp;#34;) &amp;gt; acomm &amp;lt;- read.csv(&amp;#34;americancommunity.csv&amp;#34;) &amp;gt; one &amp;lt;- acomm[acomm$RMS == 4 &amp;amp; !is.na(acomm$RMS) &amp;amp; acomm$BDS == 3 &amp;amp; !is.na(acomm$BDS), c(&amp;#34;RMS&amp;#34;)] &amp;gt; one [1] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 ... [137] 4 4 4 4 4 4 4 4 4 4 4 4 &amp;gt; two &amp;lt;- acomm[acomm$RMS == 5 &amp;amp; !</description>
    </item>
    
    <item>
      <title>Kaggle Digit Recognizer: A feature extraction #fail</title>
      <link>https://markhneedham.com/blog/2013/01/31/kaggle-digit-recognizer-a-feature-extraction-fail/</link>
      <pubDate>Thu, 31 Jan 2013 23:24:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/31/kaggle-digit-recognizer-a-feature-extraction-fail/</guid>
      <description>I&amp;rsquo;ve written a few blog postsabout our attempts at the Kaggle Digit Recogniserproblem and one thing we haven&amp;rsquo;t yet tried is feature extraction.
Many people go straight from a data set to applying an algorithm. But there’s a huge space in between of important stuff. It’s easy to run a piece of code that predicts or classifies. That’s not the hard part. The hard part is doing it well.
One needs to conduct exploratory data analysis as I’ve emphasized; and conduct feature selection as Will Cukierski emphasized.</description>
    </item>
    
    <item>
      <title>Levels of automation</title>
      <link>https://markhneedham.com/blog/2013/01/31/levels-of-automation/</link>
      <pubDate>Thu, 31 Jan 2013 22:36:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/31/levels-of-automation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ruby: invalid multibyte char (US-ASCII)</title>
      <link>https://markhneedham.com/blog/2013/01/27/ruby-invalid-multibyte-char-us-ascii/</link>
      <pubDate>Sun, 27 Jan 2013 15:14:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/27/ruby-invalid-multibyte-char-us-ascii/</guid>
      <description>blah.rubyamount = &amp;#34;£10.00&amp;#34; puts amount $ ruby blah.ruby blah.ruby:1: invalid multibyte char (US-ASCII) blah.ruby:1: invalid multibyte char (US-ASCII) # encoding: UTF-8 amount = &amp;#34;£10.00&amp;#34; puts amount $ ruby blah.ruby £10.00 </description>
    </item>
    
    <item>
      <title>A/B Testing: Thoughts so far</title>
      <link>https://markhneedham.com/blog/2013/01/27/ab-testing-thoughts-so-far/</link>
      <pubDate>Sun, 27 Jan 2013 13:27:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/27/ab-testing-thoughts-so-far/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python: (Conceptually) removing an item from a tuple</title>
      <link>https://markhneedham.com/blog/2013/01/27/python-conceptually-removing-an-item-from-a-tuple/</link>
      <pubDate>Sun, 27 Jan 2013 02:30:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/27/python-conceptually-removing-an-item-from-a-tuple/</guid>
      <description>def tuple_without(original_tuple, element_to_remove): new_tuple = [] for s in list(original_tuple): if not s == element_to_remove: new_tuple.append(s) return tuple(new_tuple) &amp;gt;&amp;gt;&amp;gt; tuple_without((1,2,3,4), 1) (2, 3, 4) &amp;gt;&amp;gt;&amp;gt; tuple_without((1,2,3,4), 0) (1, 2, 3, 4) </description>
    </item>
    
    <item>
      <title>Python/numpy: Selecting values by multiple indices</title>
      <link>https://markhneedham.com/blog/2013/01/27/pythonnumpy-selecting-values-by-multiple-indices/</link>
      <pubDate>Sun, 27 Jan 2013 02:21:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/27/pythonnumpy-selecting-values-by-multiple-indices/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; x = arange(20).reshape(4,5) &amp;gt;&amp;gt;&amp;gt; x array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]]) &amp;gt;&amp;gt;&amp;gt; x[0:3] array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14]]) &amp;gt;&amp;gt;&amp;gt; x[[0,2,3]] array([[ 0, 1, 2, 3, 4], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]]) &amp;gt;&amp;gt;&amp;gt; x[list((0,2,3))] array([[ 0, 1, 2, 3, 4], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]]) </description>
    </item>
    
    <item>
      <title>Python/numpy: Selecting specific column in 2D array</title>
      <link>https://markhneedham.com/blog/2013/01/27/pythonnumpy-selecting-specific-column-in-2d-array/</link>
      <pubDate>Sun, 27 Jan 2013 02:10:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/27/pythonnumpy-selecting-specific-column-in-2d-array/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; x = arange(20).reshape(4,5) &amp;gt;&amp;gt;&amp;gt; x array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]]) &amp;gt;&amp;gt;&amp;gt; x[:, 1] array([ 1, 6, 11, 16]) &amp;gt;&amp;gt; x[2,1] 11 &amp;gt;&amp;gt; x[2][1] 11 </description>
    </item>
    
    <item>
      <title>R: Ordering rows in a data frame by multiple columns</title>
      <link>https://markhneedham.com/blog/2013/01/23/r-ordering-rows-in-a-data-frame-by-multiple-columns/</link>
      <pubDate>Wed, 23 Jan 2013 23:09:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/23/r-ordering-rows-in-a-data-frame-by-multiple-columns/</guid>
      <description>&amp;gt; names &amp;lt;- c(&amp;#34;paul&amp;#34;, &amp;#34;mark&amp;#34;, &amp;#34;dave&amp;#34;, &amp;#34;will&amp;#34;, &amp;#34;john&amp;#34;) &amp;gt; values &amp;lt;- c(1,4,1,2,1) &amp;gt; smallData &amp;lt;- data.frame(name = names, value = values) &amp;gt; smallData name value 1 paul 1 2 mark 4 3 dave 1 4 will 2 5 john 1 name value 3 dave 1 5 john 1 1 paul 1 4 will 2 2 mark 4 &amp;gt; order(c(1,4,1,2,1)) [1] 1 3 5 4 2 &amp;gt; smallData[c(5,4,3,2,1),] name value 5 john 1 4 will 2 3 dave 1 2 mark 4 1 paul 1 &amp;gt; smallData[order(smallData[,2]),] name value 1 paul 1 3 dave 1 5 john 1 4 will 2 2 mark 4 &amp;gt; smallData[order(smallData[,2], smallData[,1]),] name value 3 dave 1 5 john 1 1 paul 1 4 will 2 2 mark 4 &amp;gt; smallData[order(smallData$value, smallData$name),] name value 3 dave 1 5 john 1 1 paul 1 4 will 2 2 mark 4 &amp;gt; smallData[with(smallData, order(value, name)),] name value 3 dave 1 5 john 1 1 paul 1 4 will 2 2 mark 4 </description>
    </item>
    
    <item>
      <title>R: Filter a data frame based on values in two columns</title>
      <link>https://markhneedham.com/blog/2013/01/23/r-filter-a-data-frame-based-on-values-in-two-columns/</link>
      <pubDate>Wed, 23 Jan 2013 22:34:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/23/r-filter-a-data-frame-based-on-values-in-two-columns/</guid>
      <description>&amp;gt; data &amp;lt;- read.csv(&amp;#34;specdata/002.csv&amp;#34;) &amp;gt; # we&amp;#39;ll just use a few rows to make it easier to see what&amp;#39;s going on &amp;gt; data[2494:2500,] Date sulfate nitrate ID 2494 2007-10-30 3.25 0.902 2 2495 2007-10-31 NA NA 2 2496 2007-11-01 NA NA 2 2497 2007-11-02 6.56 1.270 2 2498 2007-11-03 NA NA 2 2499 2007-11-04 NA NA 2 2500 2007-11-05 6.10 0.772 2 &amp;gt; smallData &amp;lt;- data[2494:2500,] &amp;gt; Filter(function(x) !is.na(x$sulfate), smallData) Error in x$sulfate : $ operator is invalid for atomic vectors &amp;gt; smallData[!</description>
    </item>
    
    <item>
      <title>Bellman-Ford algorithm in Python using vectorisation/numpy</title>
      <link>https://markhneedham.com/blog/2013/01/20/bellman-ford-algorithm-in-python-using-vectorisationnumpy/</link>
      <pubDate>Sun, 20 Jan 2013 19:14:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/20/bellman-ford-algorithm-in-python-using-vectorisationnumpy/</guid>
      <description>for i in range(1, vertices): for v in range(0, vertices): previous_cache = cache least_adjacent_cost = calculate_least_adjacent_cost(adjacency_list, i, v, previous_cache) cache[v] = min(previous_cache[v], least_adjacent_cost) # detecting negative cycles for v in range(0, vertices): previous_cache = copy.deepcopy(cache) least_adjacent_cost = calculate_least_adjacent_cost(adjacency_list, i, v, previous_cache) cache[v] = min(previous_cache[v], least_adjacent_cost) if(not cache == previous_cache): raise Exception(&amp;#34;negative cycle detected&amp;#34;) shortest_path = min(cache) # We want to get to this point previous_cache = cache[:] # here we copy the contents of cache into previous_cache cache = minimum(previous_cache, new_shortest_paths) 1 2 3 4 5 6 # these are the previous shortest paths for vertex 0,1…,n inf inf 4 inf inf inf # edges for vertex 0 -2 inf inf inf inf inf # edges for vertex 1 inf -1 inf inf inf inf # and so on.</description>
    </item>
    
    <item>
      <title>telnet/netcat: Waiting for a port to be open</title>
      <link>https://markhneedham.com/blog/2013/01/20/waiting-for-a-port-to-be-open/</link>
      <pubDate>Sun, 20 Jan 2013 15:53:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/20/waiting-for-a-port-to-be-open/</guid>
      <description>$ telnet 10.0.0.1 8081 Trying 10.0.0.1... telnet: connect to address 10.0.0.1: Operation timed out telnet: Unable to connect to remote host $ nc -v -w 1 10.0.0.1 8081 nc: connect to 10.0.0.1 port 8081 (tcp) failed: Connection refused $ watch &amp;#34;nc -v -w 1 10.0.0.1 8081&amp;#34; Every 2.0s: nc -v -w 1 10.0.0.1 8081 Sun Jan 20 15:48:05 2013 nc: connect to 10.0.0.1 port 8081 (tcp) timed out: Operation now in progress Every 2.</description>
    </item>
    
    <item>
      <title>Bellman-Ford algorithm in Python</title>
      <link>https://markhneedham.com/blog/2013/01/18/bellman-ford-algorithm-in-python/</link>
      <pubDate>Fri, 18 Jan 2013 00:40:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/18/bellman-ford-algorithm-in-python/</guid>
      <description>import os file = open(os.path.dirname(os.path.realpath(__file__)) + &amp;#34;/g_small.txt&amp;#34;) vertices, edges = map(lambda x: int(x), file.readline().replace(&amp;#34;\n&amp;#34;, &amp;#34;&amp;#34;).split(&amp;#34; &amp;#34;)) adjacency_list = [[] for k in xrange(vertices)] for line in file.readlines(): tail, head, weight = line.split(&amp;#34; &amp;#34;) adjacency_list[int(head)-1].append({&amp;#34;from&amp;#34; : int(tail), &amp;#34;weight&amp;#34; : int(weight)}) s=0 cache = [[0 for k in xrange(vertices+1)] for j in xrange(vertices+1)] cache[0][s] = 0 for v in range(0, vertices): if v != s: cache[0][v] = float(&amp;#34;inf&amp;#34;) for i in range(1, vertices): for v in range(0, vertices): least_adjacent_cost = calculate_least_adjacent_cost(adjacency_list, i, v, cache[i-1]) cache[i][v] = min(cache[i-1][v], least_adjacent_cost) # detecting negative cycles for v in range(0, vertices): least_adjacent_cost = calculate_least_adjacent_cost(adjacency_list, i, v, cache[vertices-1]) cache[vertices][v] = min(cache[vertices-1][v], least_adjacent_cost) if(not cache[vertices] == cache[vertices-1]): raise Exception(&amp;#34;negative cycle detected&amp;#34;) shortest_path = min(cache[vertices-1]) print(&amp;#34;Shortest Path: &amp;#34; + str(shortest_path)) def calculate_least_adjacent_cost(adjacency_list, i, v, cache): adjacent_nodes = adjacency_list[v] least_adjacent_cost = float(&amp;#34;inf&amp;#34;) for node in adjacent_nodes: adjacent_cost = cache[node[&amp;#34;from&amp;#34;]-1] + node[&amp;#34;weight&amp;#34;] if adjacent_cost &amp;lt; least_adjacent_cost: least_adjacent_cost = adjacent_cost return least_adjacent_cost s=0 cache = [[] for j in xrange(vertices+1)] cache[s] = 0 for v in range(0, vertices): if v !</description>
    </item>
    
    <item>
      <title>Fabric/Boto: boto.exception.NoAuthHandlerFound: No handler was ready to authenticate. 1 handlers were checked. [&#39;QuerySignatureV2AuthHandler&#39;] Check your credentials</title>
      <link>https://markhneedham.com/blog/2013/01/15/fabricboto-boto-exception-noauthhandlerfound-no-handler-was-ready-to-authenticate-1-handlers-were-checked-querysignaturev2authhandler-check-your-credentials/</link>
      <pubDate>Tue, 15 Jan 2013 00:37:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/15/fabricboto-boto-exception-noauthhandlerfound-no-handler-was-ready-to-authenticate-1-handlers-were-checked-querysignaturev2authhandler-check-your-credentials/</guid>
      <description>File &amp;#34;/Library/Python/2.7/site-packages/fabric/main.py&amp;#34;, line 717, in main *args, **kwargs File &amp;#34;/Library/Python/2.7/site-packages/fabric/tasks.py&amp;#34;, line 332, in execute results[&amp;#39;&amp;lt;local-only&amp;gt;&amp;#39;] = task.run(*args, **new_kwargs) File &amp;#34;/Library/Python/2.7/site-packages/fabric/tasks.py&amp;#34;, line 112, in run return self.wrapped(*args, **kwargs) File &amp;#34;/Users/mark/projects/forward-puppet/ec2.py&amp;#34;, line 131, in running instances = instances_by_zones(running_instances(region, role_name)) File &amp;#34;/Users/mark/projects/forward-puppet/ec2.py&amp;#34;, line 19, in running_instances ec2conn = ec2.connect_to_region(region) File &amp;#34;/Library/Python/2.7/site-packages/boto/ec2/__init__.py&amp;#34;, line 57, in connect_to_region for region in regions(**kw_params): File &amp;#34;/Library/Python/2.7/site-packages/boto/ec2/__init__.py&amp;#34;, line 39, in regions c = EC2Connection(**kw_params) File &amp;#34;/Library/Python/2.7/site-packages/boto/ec2/connection.py&amp;#34;, line 94, in __init__ validate_certs=validate_certs) File &amp;#34;/Library/Python/2.</description>
    </item>
    
    <item>
      <title>Fabric: Tailing log files on multiple machines</title>
      <link>https://markhneedham.com/blog/2013/01/15/fabric-tailing-log-files-on-multiple-machines/</link>
      <pubDate>Tue, 15 Jan 2013 00:20:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/15/fabric-tailing-log-files-on-multiple-machines/</guid>
      <description>fab -H host1,host2,host3 -- tail -f /var/www/awesome/current/log/production.log fab -P --linewise -H host1,host2,host3 -- tail -f /var/www/awesome/current/log/production.log </description>
    </item>
    
    <item>
      <title>Clojure: Reading and writing a reasonably sized file</title>
      <link>https://markhneedham.com/blog/2013/01/11/clojure-reading-and-writing-a-reasonably-sized-file/</link>
      <pubDate>Fri, 11 Jan 2013 00:40:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/11/clojure-reading-and-writing-a-reasonably-sized-file/</guid>
      <description>(defn get-pixels [pix] (map #( Integer/parseInt %) pix)) (defn create-tuple [[ head &amp;amp; rem]] {:pixels (get-pixels rem) :label head}) (defn tuples [rows] (map create-tuple rows)) (defn parse-row [row] (map #(clojure.string/split % #&amp;#34;,&amp;#34;) row)) (defn read-raw [path n] (with-open [reader (clojure.java.io/reader path)] (vec (take n (rest (line-seq reader)))))) (def read-train-set-raw (partial read-raw &amp;#34;data/train.csv&amp;#34;)) (def parsed-rows (tuples (parse-row (read-train-set-raw 42000)))) (def dead-to-us-pixels [0 1 2 3 4 5 6 7 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 52 53 54 55 56 57 82 83 84 85 111 112 139 140 141 168 196 392 420 421 448 476 532 560 644 645 671 672 673 699 700 701 727 728 729 730 731 754 755 756 757 758 759 760 780 781 782 783]) (defn in?</description>
    </item>
    
    <item>
      <title>Knapsack Problem in Haskell</title>
      <link>https://markhneedham.com/blog/2013/01/09/knapsack-problem-in-haskell/</link>
      <pubDate>Wed, 09 Jan 2013 00:12:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/09/knapsack-problem-in-haskell/</guid>
      <description>ref :: a -&amp;gt; IORef a ref x = unsafePerformIO (newIORef x) knapsackCached1 :: [[Int]] -&amp;gt; Int -&amp;gt; Int -&amp;gt; IORef (Map.Map (Int, Int) Int) -&amp;gt; Int knapsackCached1 rows knapsackWeight index cacheContainer = unsafePerformIO $ do cache &amp;lt;- readIORef cacheContainer if index == 0 || knapsackWeight == 0 then do return 0 else let (value:weight:_) = rows !! index best = knapsackCached1 rows knapsackWeight prevIndex cacheContainer in if weight &amp;gt; knapsackWeight &amp;amp;&amp;amp; lookupPreviousIn cache == Nothing then do let updatedCache = Map.</description>
    </item>
    
    <item>
      <title>Kaggle Digit Recognizer: Finding pixels with no variance using R</title>
      <link>https://markhneedham.com/blog/2013/01/08/kaggle-digit-recognizer-finding-pixels-with-no-variance-using-r/</link>
      <pubDate>Tue, 08 Jan 2013 00:48:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/08/kaggle-digit-recognizer-finding-pixels-with-no-variance-using-r/</guid>
      <description>Many people go straight from a data set to applying an algorithm. But there’s a huge space in between of important stuff. It’s easy to run a piece of code that predicts or classifies. That’s not the hard part. The hard part is doing it well.
initial &amp;lt;- read.csv(&amp;#34;train.csv&amp;#34;, nrows=10000, header = TRUE) # take a sample of 1000 rows of the input  sampleSet &amp;lt;- initial[sample(1:nrow(initial), 1000), ] # get all the labels sampleSet.</description>
    </item>
    
    <item>
      <title>Knapsack Problem: Python vs Ruby</title>
      <link>https://markhneedham.com/blog/2013/01/07/knapsack-problem-python-vs-ruby/</link>
      <pubDate>Mon, 07 Jan 2013 00:47:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/07/knapsack-problem-python-vs-ruby/</guid>
      <description>number_of_items,knapsack_size = # calculated from file cache = [].tap { |m| (number_of_items+1).times { m &amp;lt;&amp;lt; Array.new(knapsack_size+1) } } cache[0].each_with_index { |value, weight| cache[0][weight] = 0 } (1..number_of_items).each do |i| value, weight = rows[i-1] (0..knapsack_size).each do |x| if weight &amp;gt; x cache[i][x] = cache[i-1][x] else cache[i][x] = [cache[i-1][x], cache[i-1][x-weight] + value].max end end end p cache[number_of_items][knapsack_size] @new_cache = [].tap { |m| (@number_of_items+1).times { m &amp;lt;&amp;lt; {} } } def knapsack_cached(rows, knapsack_size, index) return 0 if knapsack_size == 0 || index == 0 value, weight = rows[index] if weight &amp;gt; knapsack_size stored_value = @new_cache[index-1][knapsack_size] return stored_value unless stored_value.</description>
    </item>
    
    <item>
      <title>A new year&#39;s idea: Share what you learn</title>
      <link>https://markhneedham.com/blog/2013/01/05/a-new-years-idea-share-what-you-learn/</link>
      <pubDate>Sat, 05 Jan 2013 00:25:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/05/a-new-years-idea-share-what-you-learn/</guid>
      <description>To behave like a hacker, you have to believe that the thinking time of other hackers is precious — so much so that it&amp;rsquo;s almost a moral duty for you to share information, solve problems and then give the solutions away just so other hackers can solve new problems instead of having to perpetually re-address old ones.</description>
    </item>
    
    <item>
      <title>Haskell: Reading files</title>
      <link>https://markhneedham.com/blog/2013/01/02/haskell-reading-files/</link>
      <pubDate>Wed, 02 Jan 2013 00:16:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/01/02/haskell-reading-files/</guid>
      <description>import System.IO main = do withFile &amp;#34;clustering2.txt&amp;#34; ReadMode (\handle -&amp;gt; do contents &amp;lt;- hGetContents handle putStrLn contents) main = do contents &amp;lt;- readFile &amp;#34;clustering2.txt&amp;#34; putStrLn contents &amp;gt; :t readFile readFile :: FilePath -&amp;gt; IO String &amp;gt; contents &amp;lt;- readFile &amp;#34;clustering2.txt&amp;#34; &amp;gt; let (bits, nodes) = process contents &amp;gt; bits 24 &amp;gt; length nodes 19981 &amp;gt; take 10 nodes [379,1669,5749,6927,7420,9030,9188,9667,11878,12169] </description>
    </item>
    
    <item>
      <title>TextMate Bundles location on Mountain Lion</title>
      <link>https://markhneedham.com/blog/2012/12/31/textmate-bundles-location-on-mountain-lion/</link>
      <pubDate>Mon, 31 Dec 2012 23:59:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/31/textmate-bundles-location-on-mountain-lion/</guid>
      <description>$ cd /Applications/TextMate.app/Contents/SharedSupport/Bundles $ git clone git://github.com/swannodette/textmate-clojure.git Clojure.tmbundle $ osascript -e &amp;#39;tell app &amp;#34;TextMate&amp;#34; to reload bundles&amp;#39; $ cd /Applications/TextMate.app/Contents/SharedSupport/Bundles $ git clone https://github.com/textmate/haskell.tmbundle.git haskell.tmbundle $ osascript -e &amp;#39;tell app &amp;#34;TextMate&amp;#34; to reload bundles&amp;#39; </description>
    </item>
    
    <item>
      <title>Haskell: Downloading the core library source code</title>
      <link>https://markhneedham.com/blog/2012/12/31/haskell-downloading-the-core-library-source-code/</link>
      <pubDate>Mon, 31 Dec 2012 22:39:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/31/haskell-downloading-the-core-library-source-code/</guid>
      <description>git clone https://github.com/ghc/ghc.git cd ghc ./sync-all get darcs get http://darcs.haskell.org/packages/base/ # gets most of the packages we&amp;#39;d be interested in darcs get http://darcs.haskell.org/packages/array/ # gets the array package </description>
    </item>
    
    <item>
      <title>Haskell: Strictness and the monadic bind</title>
      <link>https://markhneedham.com/blog/2012/12/31/haskell-strictness-and-the-monadic-bind/</link>
      <pubDate>Mon, 31 Dec 2012 22:27:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/31/haskell-strictness-and-the-monadic-bind/</guid>
      <description>union :: IO (IOArray Int Int) -&amp;gt; Int -&amp;gt; Int -&amp;gt; IO (IOArray Int Int) union arrayContainer x y = do actualArray &amp;lt;- arrayContainer ls &amp;lt;- getAssocs actualArray leader1 &amp;lt;- readArray actualArray x leader2 &amp;lt;- readArray actualArray y let newValues = (map (\(index, value) -&amp;gt; (index, leader1)) . filter (\(index, value) -&amp;gt; value == leader2)) ls sequence $ map (\(idx, val) -&amp;gt; writeArray actualArray idx val) newValues return actualArray union :: IO (IOArray Int Int) -&amp;gt; Int -&amp;gt; Int -&amp;gt; IO (IOArray Int Int) union arrayContainer x y = do actualArray &amp;lt;- arrayContainer ls &amp;lt;- getAssocs actualArray leader1 &amp;lt;- readArray actualArray x leader2 &amp;lt;- readArray actualArray y let newValues = (map (\(index, value) -&amp;gt; (index, leader1)) .</description>
    </item>
    
    <item>
      <title>Haskell: An impressively non performant union find</title>
      <link>https://markhneedham.com/blog/2012/12/31/haskell-an-impressively-non-performant-union-find/</link>
      <pubDate>Mon, 31 Dec 2012 20:44:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/31/haskell-an-impressively-non-performant-union-find/</guid>
      <description>To paraphrase from my previous post about how we use the union find data structure:&amp;gt; let uf = emptyEquivalence (0,9) [(0,0),(1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(8,8),(9,9)] &amp;gt; components $ equate 0 1 uf [(0,0),(1,0),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(8,8),(9,9)] &amp;gt; components $ equate 8 9 $ equate 0 1 $ uf [(0,0),(1,0),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(8,8),(9,8)] &amp;gt; components $ equate 0 8 $ equate 8 9 $ equate 0 1 $ uf [(0,0),(1,0),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(8,0),(9,8)] class UnionFind def initialize(n) @leaders = 1.upto(n).inject([]) { |leaders, i| leaders[i] = i; leaders } end def connected?</description>
    </item>
    
    <item>
      <title>Bitwise operations in Ruby and Haskell</title>
      <link>https://markhneedham.com/blog/2012/12/31/bitwise-operations-in-ruby-and-haskell/</link>
      <pubDate>Mon, 31 Dec 2012 13:14:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/31/bitwise-operations-in-ruby-and-haskell/</guid>
      <description>&amp;gt; &amp;#34;10000&amp;#34;.to_i(2) =&amp;gt; 16 &amp;gt; import Data.Char &amp;gt; (foldr (\c s -&amp;gt; s * 2 + c) 0 . reverse . map digitToInt) &amp;#34;10000&amp;#34; 16 &amp;#39;10000&amp;#39; XOR &amp;#39;10000&amp;#39; &amp;gt; 16 ^ 16 =&amp;gt; 0 &amp;gt; [0,1,2,4,16].map { |x| 16 ^ x } =&amp;gt; [16, 17, 18, 20, 0] &amp;gt; bits = 5 &amp;gt; offsets = (0..(bits - 1)).map { |x| 2 ** x } =&amp;gt; [1, 2, 4, 8, 16] &amp;gt; offsets = (0.</description>
    </item>
    
    <item>
      <title>Gamification and Software: Some thoughts</title>
      <link>https://markhneedham.com/blog/2012/12/31/gamification-and-software-some-thoughts/</link>
      <pubDate>Mon, 31 Dec 2012 10:57:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/31/gamification-and-software-some-thoughts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Haskell: Using qualified imports to avoid polluting the namespace</title>
      <link>https://markhneedham.com/blog/2012/12/30/haskell-using-qualified-imports-to-avoid-polluting-the-namespace/</link>
      <pubDate>Sun, 30 Dec 2012 23:16:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/30/haskell-using-qualified-imports-to-avoid-polluting-the-namespace/</guid>
      <description>import System.IO import Data.List.Split import Data.Char import Data.Bits import Control.Monad import Data.Map import Data.Set import Data.List import Data.Maybe clustering.hs:53:43: Ambiguous occurrence `filter&amp;#39; It could refer to either `Data.List.filter&amp;#39;, imported from `Data.List&amp;#39; at clustering.hs:11:1-16 (and originally defined in `GHC.List&amp;#39;) or `Data.Set.filter&amp;#39;, imported from `Data.Set&amp;#39; at clustering.hs:10:1-16 or `Data.Map.filter&amp;#39;, imported from `Data.Map&amp;#39; at clustering.hs:9:1-16 &amp;gt; import qualified Data.Map &amp;gt; Data.Map.assocs $ Data.Map.fromList [(1,2), (3,7)] [(1,2),(3,7)] import System.IO import Data.List.Split import Data.Char import Data.</description>
    </item>
    
    <item>
      <title>Haskell: Pattern matching a list</title>
      <link>https://markhneedham.com/blog/2012/12/30/haskell-pattern-matching-a-list/</link>
      <pubDate>Sun, 30 Dec 2012 22:39:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/30/haskell-pattern-matching-a-list/</guid>
      <description>&amp;gt; import Data.Bits &amp;gt; map (\pair -&amp;gt; (pair !! 0) .|. (pair !! 1)) [[1,2], [3,4]] [3,7] &amp;gt; map (\(x:y:_) -&amp;gt; x .|. y) [[1,2], [3,4]] [3,7] </description>
    </item>
    
    <item>
      <title>Haskell: A cleaner way of initialising a map</title>
      <link>https://markhneedham.com/blog/2012/12/29/haskell-a-cleaner-way-of-initialising-a-map/</link>
      <pubDate>Sat, 29 Dec 2012 20:14:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/29/haskell-a-cleaner-way-of-initialising-a-map/</guid>
      <description>import Data.Map toMap :: [Int] -&amp;gt; Map Int [Int] toMap nodes = fromList $ map asMapEntry $ (groupIgnoringIndex . sortIgnoringIndex) nodesWithIndexes where nodesWithIndexes = (zip [0..] nodes) groupIgnoringIndex = groupBy (\(_,x) (_,y) -&amp;gt; x == y) sortIgnoringIndex = sortBy (\(_,x) (_,y) -&amp;gt; x `compare` y) asMapEntry :: [(Int, Int)] -&amp;gt; (Int, [Int]) asMapEntry nodesWithIndexes = ((snd . head) nodesWithIndexes, Prelude.foldl (\acc (x,_) -&amp;gt; acc ++ [x]) [] nodesWithIndexes) &amp;gt; assocs $ toMap [1,2,5,7,2,4] [(1,[0]),(2,[4,1]),(4,[5]),(5,[2]),(7,[3])] &amp;gt; let emptyMap = empty :: Map Int [Int] &amp;gt; assocs $ foldl (\acc (id,val) -&amp;gt; insertWith (++) val [id] acc) emptyMap nodesWithIndexes [(1,[0]),(2,[4,1]),(4,[5]),(5,[2]),(7,[3])] </description>
    </item>
    
    <item>
      <title>Haskell: Initialising a map</title>
      <link>https://markhneedham.com/blog/2012/12/29/haskell-initialising-a-map/</link>
      <pubDate>Sat, 29 Dec 2012 19:27:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/29/haskell-initialising-a-map/</guid>
      <description>nodes = [1,2,5,7,2,4] @magical_hash = {} nodes.each_with_index do |node, index| @magical_hash[node] ||= [] @magical_hash[node] &amp;lt;&amp;lt; index end =&amp;gt; {1=&amp;gt;[0], 2=&amp;gt;[1, 4], 5=&amp;gt;[2], 7=&amp;gt;[3], 4=&amp;gt;[5]} &amp;gt; let nodesMap = Data.Map.fromList [(1, [0]), (2, [1,4]), (5, [2]), (7, [3]), (4, [5])] &amp;gt; Data.Map.assocs nodesMap [(1,[0]),(2,[1,4]),(4,[5]),(5,[2]),(7,[3])] &amp;gt; zip [0..] [1,2,5,7,2,4] [(0,1),(1,2),(2,5),(3,7),(4,2),(5,4)] groupIgnoringIndex = groupBy (\(_,x) (_,y) -&amp;gt; x == y) sortIgnoringIndex = sortBy (\(_,x) (_,y) -&amp;gt; x `compare` y) &amp;gt; (groupIgnoringIndex . sortIgnoringIndex) (zip [0.</description>
    </item>
    
    <item>
      <title>Sed: Replacing characters with a new line</title>
      <link>https://markhneedham.com/blog/2012/12/29/sed-replacing-characters-with-a-new-line/</link>
      <pubDate>Sat, 29 Dec 2012 17:49:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/29/sed-replacing-characters-with-a-new-line/</guid>
      <description>[(1,2), (3,4)…] sed -E -e &amp;#39;s/, \(/\\n(/g&amp;#39; ruby_union.txt sed -E -e &amp;#34;s/,\(/\ /g&amp;#34; ruby_union.txt $ echo &amp;#34;mark\r\nneedham&amp;#34; mark\r\nneedham $ echo -e &amp;#34;mark\r\nneedham&amp;#34; mark needham sed -E -e &amp;#34;s/, \(/\\`echo -e &amp;#39;\n\r&amp;#39;`/g&amp;#34; ruby_union.txt $ echo &amp;#34;[(1,2), (3,4), (5,6)]&amp;#34; | sed -E -e &amp;#34;s/, \(/\\`echo -e &amp;#39;\n\r&amp;#39;`/g&amp;#34; -e &amp;#39;s/\[|]|\)|\(//g&amp;#39; 1,2 3,4 5,6 </description>
    </item>
    
    <item>
      <title>Restricting your own learning</title>
      <link>https://markhneedham.com/blog/2012/12/27/restricting-your-own-learning/</link>
      <pubDate>Thu, 27 Dec 2012 00:45:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/27/restricting-your-own-learning/</guid>
      <description>  as in I got paid. I&amp;rsquo;d never claim to be professional in any other way :-D  </description>
    </item>
    
    <item>
      <title>Mahout: Parallelising the creation of DecisionTrees</title>
      <link>https://markhneedham.com/blog/2012/12/27/mahout-parallelising-the-creation-of-decisiontrees/</link>
      <pubDate>Thu, 27 Dec 2012 00:08:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/27/mahout-parallelising-the-creation-of-decisiontrees/</guid>
      <description>List&amp;lt;Node&amp;gt; trees = new ArrayList&amp;lt;Node&amp;gt;(); MultiDecisionForest forest = MultiDecisionForest.load(new Configuration(), new Path(&amp;#34;/path/to/mahout-tree&amp;#34;)); trees.addAll(forest.getTrees()); MultiDecisionForest forest = new MultiDecisionForest(trees); deb http://ppa.launchpad.net/ieltonf/ppa/ubuntu oneiric main deb-src http://ppa.launchpad.net/ieltonf/ppa/ubuntu oneiric main parallelise-forests.sh#!/bin/bash start=`date` startTime=`date &amp;#39;+%s&amp;#39;` numberOfRuns=$1 seq 1 ${numberOfRuns} | parallel -P 8 &amp;#34;./build-forest.sh&amp;#34; end=`date` endTime=`date &amp;#39;+%s&amp;#39;` echo &amp;#34;Started: ${start}&amp;#34; echo &amp;#34;Finished: ${end}&amp;#34; echo &amp;#34;Took: &amp;#34; $(expr $endTime - $startTime) build-forest.sh#!/bin/bash java -Xmx1024m -cp target/machinenursery-1.0.0-SNAPSHOT-standalone.jar main.java.MahoutPlaybox </description>
    </item>
    
    <item>
      <title>The Tracer Bullet Approach: An example</title>
      <link>https://markhneedham.com/blog/2012/12/24/the-tracer-bullet-approach-an-example/</link>
      <pubDate>Mon, 24 Dec 2012 09:09:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/24/the-tracer-bullet-approach-an-example/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kruskal&#39;s Algorithm using union find in Ruby</title>
      <link>https://markhneedham.com/blog/2012/12/23/kruskals-algorithm-using-union-find-in-ruby/</link>
      <pubDate>Sun, 23 Dec 2012 21:43:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/23/kruskals-algorithm-using-union-find-in-ruby/</guid>
      <description>class UnionFind def initialize(n) @leaders = 1.upto(n).inject([]) { |leaders, i| leaders[i] = i; leaders } end def connected?(id1,id2) @leaders[id1] == @leaders[id2] end def union(id1,id2) leader_1, leader_2 = @leaders[id1], @leaders[id2] @leaders.map! {|i| (i == leader_1) ? leader_2 : i } end end &amp;gt; uf = UnionFind.new 5 =&amp;gt; #&amp;lt;UnionFind:0x45e5a9b3 @leaders=[nil, 1, 2, 3, 4, 5]&amp;gt; &amp;gt; uf.connected?(1,2) =&amp;gt; false &amp;gt; uf.union(1,2) =&amp;gt; [nil, 2, 2, 3, 4, 5] &amp;gt; uf.union(2,3) =&amp;gt; [nil, 3, 3, 3, 4, 5] set = UnionFind.</description>
    </item>
    
    <item>
      <title>Kruskal&#39;s Algorithm in Ruby</title>
      <link>https://markhneedham.com/blog/2012/12/23/kruskals-algorithm-in-ruby/</link>
      <pubDate>Sun, 23 Dec 2012 14:18:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/23/kruskals-algorithm-in-ruby/</guid>
      <description>@minimum_spanning_tree = [] edges = file.drop(1). map { |x| x.gsub(/\n/, &amp;#34;&amp;#34;).split(&amp;#34; &amp;#34;).map(&amp;amp;:to_i) }. map { |one, two, weight| { :from =&amp;gt; one, :to =&amp;gt; two, :weight =&amp;gt; weight}}. sort_by { |x| x[:weight]} edges.each do |edge| @minimum_spanning_tree &amp;lt;&amp;lt; edge unless has_cycles edge end def has_cycles(edge) node_one, node_two = edge[:from], edge[:to] @minimum_spanning_tree.each { |x| x[:explored] = false } cycle_between(node_one, node_two, @minimum_spanning_tree.dup) end def cycle_between(one, two, edges) adjacent_edges = edges.select { |edge| edge[:to] == one || edge[:from] == one} return false if adjacent_edges.</description>
    </item>
    
    <item>
      <title>Prim&#39;s algorithm using a heap/priority queue in Ruby</title>
      <link>https://markhneedham.com/blog/2012/12/15/prims-algorithm-using-a-heappriority-queue-in-ruby/</link>
      <pubDate>Sat, 15 Dec 2012 16:31:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/15/prims-algorithm-using-a-heappriority-queue-in-ruby/</guid>
      <description>MAX_VALUE = (2**(0.size * 8 -2) -1) adjacency_matrix = create_adjacency_matrix @nodes_spanned_so_far, spanning_tree_cost = [1], 0 heap = PriorityQueue.new nodes_left_to_cover.each do |node| cheapest_nodes = get_edges(adjacency_matrix, node-1). select { |_, other_node_index| @nodes_spanned_so_far.include?(other_node_index + 1) } || [] cheapest = cheapest_nodes.inject([]) do |all_edges, (weight, index)| all_edges &amp;lt;&amp;lt; { :start =&amp;gt; node, :end =&amp;gt; index + 1, :weight =&amp;gt; weight } all_edges end.sort { |x,y| x[:weight] y[:weight] }.first weight = !cheapest.nil? ? cheapest[:weight]: MAX_VALUE heap[node] = weight end while !</description>
    </item>
    
    <item>
      <title>Prim&#39;s Algorithm in Ruby</title>
      <link>https://markhneedham.com/blog/2012/12/15/prims-algorithm-in-ruby/</link>
      <pubDate>Sat, 15 Dec 2012 02:51:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/15/prims-algorithm-in-ruby/</guid>
      <description>adjacency_matrix = create_adjacency_matrix first_edge = select_first_edge(adjacency_matrix) @nodes_spanned_so_far, @edges = [first_edge[:start], first_edge[:end]], [first_edge] while !nodes_left_to_cover.empty? cheapest_edge = find_cheapest_edge(adjacency_matrix, @nodes_spanned_so_far, number_of_nodes) @edges &amp;lt;&amp;lt; cheapest_edge @nodes_spanned_so_far &amp;lt;&amp;lt; cheapest_edge[:start] end def find_cheapest_edge(adjacency_matrix, nodes_spanned_so_far, number_of_nodes) available_nodes = (0..number_of_nodes-1).to_a.reject { |node_index| nodes_spanned_so_far.include?(node_index + 1) } cheapest_edges = available_nodes.inject([]) do |acc, node_index| get_edges(adjacency_matrix, node_index).select { |_, other_node_index| nodes_spanned_so_far.include?(other_node_index + 1) }.each do |weight, other_node_index| acc &amp;lt;&amp;lt; { :start =&amp;gt; node_index + 1, :end =&amp;gt; other_node_index + 1, :weight =&amp;gt; weight } end acc end cheapest_edges.</description>
    </item>
    
    <item>
      <title>Weka: Saving and loading classifiers</title>
      <link>https://markhneedham.com/blog/2012/12/12/weka-saving-and-loading-classifiers/</link>
      <pubDate>Wed, 12 Dec 2012 00:04:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/12/weka-saving-and-loading-classifiers/</guid>
      <description>MultilayerPerceptron classifier = new MultilayerPerceptron(); classifier.buildClassifier(instances); // instances gets passed in from elsewhere  Debug.saveToFile(&amp;#34;/path/to/weka-neural-network&amp;#34;, classifier); SerializedClassifier classifier = new SerializedClassifier(); classifier.setModelFile(new File(&amp;#34;/path/to/weka-neural-network&amp;#34;)); </description>
    </item>
    
    <item>
      <title>rsyncing to an AWS instance</title>
      <link>https://markhneedham.com/blog/2012/12/11/rsyncing-to-an-aws-instance/</link>
      <pubDate>Tue, 11 Dec 2012 23:44:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/11/rsyncing-to-an-aws-instance/</guid>
      <description>ssh -l ubuntu -i ~/Downloads/machinenursery.pem ec2-54-242-108-142.compute-1.amazonaws.com rsync --progress &amp;#39;ssh -i /Users/markhneedham/Downloads/machinenursery.pem&amp;#39; -avz target/ ubuntu@ec2-54-242-108-142.compute-1.amazonaws.com:machinenursery Permission denied (publickey). rsync: connection unexpectedly closed (0 bytes received so far) [sender] rsync error: unexplained error (code 255) at /SourceCache/rsync/rsync-42/rsync/io.c(452) [sender=2.6.9] rsync --progress --rsh &amp;#39;ssh -i /Users/markhneedham/Downloads/machinenursery.pem&amp;#39; -avz target/ ubuntu@ec2-54-242-108-142.compute-1.amazonaws.com:machine nursery </description>
    </item>
    
    <item>
      <title>apt-get update: 416 Requested Range Not Satisfiable</title>
      <link>https://markhneedham.com/blog/2012/12/10/apt-get-update-416-requested-range-not-satisfiable/</link>
      <pubDate>Mon, 10 Dec 2012 00:39:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/10/apt-get-update-416-requested-range-not-satisfiable/</guid>
      <description>Err http://us-west-1.ec2.archive.ubuntu.com/ubuntu/ i386 Packages 416 Requested Range Not Satisfiable Fetched 5,079B in 2s (2,296B/s) W: Failed to fetch http://us-west-1.ec2.archive.ubuntu.com/ubuntu/dists/maverick-updates/main/binary-i386/Packages.gz 416 Requested Range Not Satisfiable sudo rm -rf /var/lib/apt/lists/partial/* </description>
    </item>
    
    <item>
      <title>Data Science: Discovery work</title>
      <link>https://markhneedham.com/blog/2012/12/09/data-science-discovery-work/</link>
      <pubDate>Sun, 09 Dec 2012 10:36:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/09/data-science-discovery-work/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Micro Services: Plugging in 3rd party components</title>
      <link>https://markhneedham.com/blog/2012/12/04/micro-services-plugging-in-3rd-party-components/</link>
      <pubDate>Tue, 04 Dec 2012 23:38:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/12/04/micro-services-plugging-in-3rd-party-components/</guid>
      <description></description>
    </item>
    
    <item>
      <title>There&#39;s No such thing as a &#39;DevOps Team&#39;: Some thoughts</title>
      <link>https://markhneedham.com/blog/2012/11/30/theres-no-such-thing-as-a-devops-team-some-thoughts/</link>
      <pubDate>Fri, 30 Nov 2012 16:56:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/30/theres-no-such-thing-as-a-devops-team-some-thoughts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kaggle Digit Recognizer: Weka AdaBoost attempt</title>
      <link>https://markhneedham.com/blog/2012/11/29/kaggle-digit-recognizer-weka-adaboost-attempt/</link>
      <pubDate>Thu, 29 Nov 2012 17:09:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/29/kaggle-digit-recognizer-weka-adaboost-attempt/</guid>
      <description>In our latest attempt at Kaggle&amp;rsquo;s Digit RecognizerJenand I decided to try out boostingon our random forest algorithm, an approach that Jen had come across in a talk at the Clojure Conj.
We couldn&amp;rsquo;t find any documentation that it was possible to apply boosting to Mahout&amp;rsquo;s random forest algorithm but we knew it was possible with Wekaso we decided to use that instead!
As I understand it the way that boosting works in the context of random forests is that each of the trees in the forest will be assigned a weight based on how accurately it&amp;rsquo;s able to classify the data set and these weights are then used in the voting stage.</description>
    </item>
    
    <item>
      <title>Micro Services: The curse of code &#39;duplication&#39;</title>
      <link>https://markhneedham.com/blog/2012/11/28/micro-services-the-curse-of-code-duplication/</link>
      <pubDate>Wed, 28 Nov 2012 08:11:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/28/micro-services-the-curse-of-code-duplication/</guid>
      <description>A common approach we&amp;rsquo;ve been taking on some of the applications I&amp;rsquo;ve worked on recently is to decompose the system we&amp;rsquo;re building into smaller micro serviceswhich are independently deployable and communicate with each other over HTTP.
An advantage of decomposing systems like that is that we could have separate teams working on each service and then make use of a consumer driven contractas a way of ensuring the contract between them is correct.</description>
    </item>
    
    <item>
      <title>Jersey: com.sun.jersey.api.client.ClientHandlerException: A message body reader for Java class [...] and MIME media type application/json was not found</title>
      <link>https://markhneedham.com/blog/2012/11/28/jersey-com-sun-jersey-api-client-clienthandlerexception-a-message-body-reader-for-java-class-and-mime-media-type-applicationjson-was-not-found/</link>
      <pubDate>Wed, 28 Nov 2012 06:03:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/28/jersey-com-sun-jersey-api-client-clienthandlerexception-a-message-body-reader-for-java-class-and-mime-media-type-applicationjson-was-not-found/</guid>
      <description>We&amp;rsquo;ve used the Jerseylibrary on the last couple of Java based applications that I&amp;rsquo;ve worked on and one thing we&amp;rsquo;ve done on both of them is write services that communicate with each other using JSON.
On both occasions we didn&amp;rsquo;t quite setup the Jersey client correctly and ended up with an error along these lines when making a call to an end point:
com.sun.jersey.api.client.ClientHandlerException: A message body reader for Java class java.</description>
    </item>
    
    <item>
      <title>IntelliJ Debug Mode: Viewing beyond 100 frames/items in an array</title>
      <link>https://markhneedham.com/blog/2012/11/26/intellij-debug-mode-viewing-beyond-100-framesitems-in-an-array/</link>
      <pubDate>Mon, 26 Nov 2012 04:28:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/26/intellij-debug-mode-viewing-beyond-100-framesitems-in-an-array/</guid>
      <description>In my continued attempts at the Kaggle Digit Recognizerproblem I&amp;rsquo;ve been playing around with the encoglibrary to try and build a neural networks solution to the problem.
Unfortunately it&amp;rsquo;s not quite working at the moment so I wanted to debug the code and see whether the input parameters were being correctly translated from the CSV file.
Each input is an array containing 784 values but by default IntelliJ restricts you to seeing 100 elements which wasn&amp;rsquo;t helpful in my case since the early values tend to all be 0 and it&amp;rsquo;s not until you get half way through that you see different values:</description>
    </item>
    
    <item>
      <title>A first failed attempt at Natural Language Processing</title>
      <link>https://markhneedham.com/blog/2012/11/24/a-first-failed-attempt-at-natural-language-processing/</link>
      <pubDate>Sat, 24 Nov 2012 19:43:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/24/a-first-failed-attempt-at-natural-language-processing/</guid>
      <description>One of the things I find fascinating about dating websites is that the profiles of people are almost identical so I thought it would be an interesting exercise to grab some of the free text that people write about themselves and prove the similarity.
I&amp;rsquo;d been talking to Matt Biddulphabout some Natural Language Processing (NLP) stuff he&amp;rsquo;d been working on and he wrote up a bunch of libraries, articles and books that he&amp;rsquo;d found useful.</description>
    </item>
    
    <item>
      <title>Core Competency</title>
      <link>https://markhneedham.com/blog/2012/11/24/core-competency/</link>
      <pubDate>Sat, 24 Nov 2012 12:44:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/24/core-competency/</guid>
      <description>For at least the last few years I&amp;rsquo;ve heard colleagues talk about working out the core competency of our clients businesses and I&amp;rsquo;d confused myself into thinking that the software we helped them build was the core competency.
I think Martin Fowler best explains how technology and business core competences work in his post about utility and strategic projectswhere he describes the difference between these like so:
The thing I&amp;rsquo;d be getting confused about was thinking that the software isthe core competency but as Martin points out the software is actually there to supportthe core competency.</description>
    </item>
    
    <item>
      <title>Windows line endings: Exception in thread &#39;main&#39; java.io.FileNotFoundException /opt/app/config.yml^M (no such file or directory)</title>
      <link>https://markhneedham.com/blog/2012/11/24/windows-line-endings-exception-in-thread-main-java-io-filenotfoundexception-optappconfig-ymlm-no-such-file-or-directory/</link>
      <pubDate>Sat, 24 Nov 2012 09:04:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/24/windows-line-endings-exception-in-thread-main-java-io-filenotfoundexception-optappconfig-ymlm-no-such-file-or-directory/</guid>
      <description>As I mentioned in my previous postwe&amp;rsquo;ve been making it possible to deploy our application to a new environment and as part of this we defined an upstartscript which would run the JAR.
We tend to edit code on Windows and then test it out on the vagrant VM afterwards.
The end of our upstart script looked a bit like this:
script cd /opt/app java -jar /opt/app/app.jar /opt/app/config.yml end script Unfortunately when we tried to launch the application using &amp;lsquo;start app&amp;rsquo; we got this error:</description>
    </item>
    
    <item>
      <title>Java: java.lang.UnsupportedClassVersionError - Unsupported major.minor version 51.0</title>
      <link>https://markhneedham.com/blog/2012/11/24/java-java-lang-unsupportedclassversionerror-unsupported-major-minor-version-51-0/</link>
      <pubDate>Sat, 24 Nov 2012 08:49:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/24/java-java-lang-unsupportedclassversionerror-unsupported-major-minor-version-51-0/</guid>
      <description>On my current project we&amp;rsquo;ve spent the last day or so setting up an environment where we can deploy a couple of micro services to.
Although the machines are Windows based we&amp;rsquo;re deploying the application onto a vagrantmanaged VM since the production environment will be a flavour of Linux.
Initially I was getting quite confused about whether or not we were in the VM or not and ended up with this error when trying to run the compiled JAR:</description>
    </item>
    
    <item>
      <title>Looking inside the black box</title>
      <link>https://markhneedham.com/blog/2012/11/21/looking-inside-the-black-box/</link>
      <pubDate>Wed, 21 Nov 2012 19:42:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/21/looking-inside-the-black-box/</guid>
      <description>I recently came across a really interesting post about black box abstractionby Angeleah where she talks about developers desire to know how things work and the need to understand when and when not to follow that instinct.
Angeleah defines black box abstraction like so:
We have to be particularly careful about knowing how far to look inside the black box when working with new systems that we know nothing about.</description>
    </item>
    
    <item>
      <title>Learning: Switching between theory and practice</title>
      <link>https://markhneedham.com/blog/2012/11/19/learning-switching-between-theory-and-practice/</link>
      <pubDate>Mon, 19 Nov 2012 13:31:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/19/learning-switching-between-theory-and-practice/</guid>
      <description>In one of my first ever blog posts I wrote about the differences I&amp;rsquo;d experienced in learning the theory about a topic and then seeing it in practice.
The way I remember learning at school and university was that you learn all the theory first and then put it into practice but I typically don&amp;rsquo;t find myself doing this whenever I learn something new.
I spent a bit of time over the weekend learning more about neural networks as my colleague Jen Smithsuggested this might be a more effective technique for getting a higher accuracy scoreon the Kaggle Digit Recogniserproblem.</description>
    </item>
    
    <item>
      <title>Incremental/iterative development: Breaking down work</title>
      <link>https://markhneedham.com/blog/2012/11/19/incrementaliterative-development-breaking-down-work/</link>
      <pubDate>Mon, 19 Nov 2012 08:50:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/19/incrementaliterative-development-breaking-down-work/</guid>
      <description>Over the past couple of years I&amp;rsquo;ve worked on several different applications and one thing they had in common was that they had a huge feature which would take a few months to complete and initially seemed difficult to break down.
Since we favoured an incremental/iterative approach to building these features and wanted to add value in short feedback cycles we needed to find a way to break them down.</description>
    </item>
    
    <item>
      <title>Buy vs Build: Driving from the problem</title>
      <link>https://markhneedham.com/blog/2012/11/17/buy-vs-build-driving-from-the-problem/</link>
      <pubDate>Sat, 17 Nov 2012 16:56:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/17/buy-vs-build-driving-from-the-problem/</guid>
      <description>My colleague Erik Doernenburghas written a couple of articles recently discussing the reasons why people buyand build IT solutionsand one part in particular resonated with me:
I feel like there&amp;rsquo;s a mindset change once you start thinking which package you could buy to solve your problem whereby you stop solving the problem you actually have and focus instead on what features the package offers.
Package software almost by definition tends to be written for a generic case of a problem and as Erik points out might not solve the problem that a business has.</description>
    </item>
    
    <item>
      <title>Web Operations: Feature flags to turn off failing parts of infrastructure</title>
      <link>https://markhneedham.com/blog/2012/11/13/web-operations-feature-flags-to-turn-off-failing-parts-of-infrastructure/</link>
      <pubDate>Tue, 13 Nov 2012 12:19:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/13/web-operations-feature-flags-to-turn-off-failing-parts-of-infrastructure/</guid>
      <description>On most of the projects I&amp;rsquo;ve worked on over the last couple of years we&amp;rsquo;ve made use of feature togglesthat we used to turn pending features on and off while they were still being built but while reading Web OperationsI came across another usage.
In the chapter titled &amp;lsquo;Dev and Ops Collaboration and Cooperation&amp;rsquo; Paul Hammondsuggests the following:
We&amp;rsquo;d mainly use this approach to disable peripheral functionality such as the ability to comment on a site whose main purpose is to deliver news.</description>
    </item>
    
    <item>
      <title>Unix: Counting the number of commas on a line</title>
      <link>https://markhneedham.com/blog/2012/11/10/unix-counting-the-number-of-commas-on-a-line/</link>
      <pubDate>Sat, 10 Nov 2012 16:30:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/10/unix-counting-the-number-of-commas-on-a-line/</guid>
      <description>A few weeks ago I was playing around with some data stored in a CSV file and wanted to do a simple check on the quality of the data by making sure that each line had the same number of fields.
One way this can be done is with awk:
awk -F &amp;#34;,&amp;#34; &amp;#39; { print NF-1 } &amp;#39; file.csv Here we&amp;rsquo;re specifying the file separator -Fas &amp;lsquo;,&amp;rsquo; and then using the NF(number of fields) variable to print how many commas there are on the line.</description>
    </item>
    
    <item>
      <title>Clojure: Thread last (-&gt;&gt;) vs Thread first (-&gt;)</title>
      <link>https://markhneedham.com/blog/2012/11/06/clojure-thread-last-vs-thread-first/</link>
      <pubDate>Tue, 06 Nov 2012 12:42:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/11/06/clojure-thread-last-vs-thread-first/</guid>
      <description>In many of the Clojure examples that I&amp;rsquo;ve come across the thread last (-&amp;raquo;)macro is used to make it easier (for people from a non lispy background!) to see the transformations that the initial data structure is going through.
In one of my recent posts I showed how Jen &amp;amp; I had rewritten Mahout&amp;rsquo;s entropy function in Clojure:
(defn calculate-entropy [counts data-size] (-&amp;gt;&amp;gt; counts (remove #{0}) (map (partial individual-entropy data-size)) (reduce +))) Here we are using the thread last operator to first pass countsas the last argument of the removefunction on the next line, then to pass the result of that to the mapfunction on the next line and so on.</description>
    </item>
    
    <item>
      <title>Emacs/Clojure: Starting out with paredit</title>
      <link>https://markhneedham.com/blog/2012/10/31/emacsclojure-starting-out-with-paredit/</link>
      <pubDate>Wed, 31 Oct 2012 08:41:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/31/emacsclojure-starting-out-with-paredit/</guid>
      <description>I&amp;rsquo;ve been complaining recently to Jenand Bruceabout the lack of a beginner&amp;rsquo;s guide to emacs paredit modewhich seems to be the defacto approach for people working with Clojure and both pointed me to the paredit cheat sheet.
While it&amp;rsquo;s very comprehensive, I found that it&amp;rsquo;s a little overwhelming for a complete newbie like myself.
I therefore thought it&amp;rsquo;d be useful to write a bit about a couple of things that I&amp;rsquo;ve picked up from pairing with Jen on little bits of Clojure over the last couple of months.</description>
    </item>
    
    <item>
      <title>Clojure: Mahout&#39;s &#39;entropy&#39; function</title>
      <link>https://markhneedham.com/blog/2012/10/30/clojure-mahouts-entropy-function/</link>
      <pubDate>Tue, 30 Oct 2012 22:46:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/30/clojure-mahouts-entropy-function/</guid>
      <description>As I mentioned in a coupleof previous postsJenand I have been playing around with Mahout random forestsand for a few hours last week we spent some time looking through the code to see how it worked.
In particular we came across an entropy function which is used to determine how good a particular &amp;lsquo;split&amp;rsquo; point in a decision tree is going to be.
I quite like the following definition:
Information Theory (developed by Claude Shannon 1948) defines this value of uncertainty as entropy, a probability-based measure used to calculate the amount of uncertainty.</description>
    </item>
    
    <item>
      <title>Mahout: Using a saved Random Forest/DecisionTree</title>
      <link>https://markhneedham.com/blog/2012/10/27/mahout-using-a-saved-random-forestdecisiontree/</link>
      <pubDate>Sat, 27 Oct 2012 22:03:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/27/mahout-using-a-saved-random-forestdecisiontree/</guid>
      <description>One of the things that I wanted to do while playing around with random forestsusing Mahoutwas to save the random forest and then use use it again which is something Mahout does cater for.
It was actually much easier to do this than I&amp;rsquo;d expected and assuming that we already have a DecisionForestbuilt we&amp;rsquo;d just need the following code to save it to disc:
int numberOfTrees = 1; Data data = loadData(.</description>
    </item>
    
    <item>
      <title>Kaggle Digit Recognizer: Mahout Random Forest attempt</title>
      <link>https://markhneedham.com/blog/2012/10/27/kaggle-digit-recognizer-mahout-random-forest-attempt/</link>
      <pubDate>Sat, 27 Oct 2012 20:24:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/27/kaggle-digit-recognizer-mahout-random-forest-attempt/</guid>
      <description>I&amp;rsquo;ve written previously about the K-meansapproachthat Jenand I took when trying to solve Kaggle&amp;rsquo;s Digit Recognizerand having stalled at about 80% accuracy we decided to try one of the algorithms suggested in the tutorials section- the random forest!
We initially used a clojure random forests librarybut struggled to build the random forest from the training set data in a reasonable amount of time so we switched to Mahout&amp;rsquo;s versionwhich is based on Leo Breiman&amp;rsquo;s random forestspaper.</description>
    </item>
    
    <item>
      <title>Retrospectives: An alternative safety check</title>
      <link>https://markhneedham.com/blog/2012/10/27/retrospectives-an-alternative-safety-check/</link>
      <pubDate>Sat, 27 Oct 2012 18:21:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/27/retrospectives-an-alternative-safety-check/</guid>
      <description>At the start of most of the retrospectives I&amp;rsquo;ve been part of we&amp;rsquo;ve followed the safety check ritual whereby each person participating has to write a number from 1-5 on a sticky describing how they&amp;rsquo;ll be participating in the retrospective.
1 means you&amp;rsquo;ll probably keep quiet and not say much, 5 means you&amp;rsquo;re perfectly comfortable saying anything and the other numbers fall in between those two extremes.
In my experiences it&amp;rsquo;s a bit of a fruitless exercise because its viewed that a higher number is &amp;lsquo;better&amp;rsquo; and therefore the minimum people will tend to write down is &amp;lsquo;3&amp;rsquo; because they don&amp;rsquo;t want to stand out or cause a problem.</description>
    </item>
    
    <item>
      <title>Kaggle Digit Recognizer: K-means optimisation attempt</title>
      <link>https://markhneedham.com/blog/2012/10/27/kaggle-digit-recognizer-k-means-optimisation-attempt/</link>
      <pubDate>Sat, 27 Oct 2012 12:27:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/27/kaggle-digit-recognizer-k-means-optimisation-attempt/</guid>
      <description>I recently wrote a blog post explaining how Jenand I used the K-means algorithmto classify digits in Kaggle&amp;rsquo;s Digit Recognizer problemand one of the things we&amp;rsquo;d read was that with this algorithm you often end up with situations where it&amp;rsquo;s difficult to classify a new item because if falls between two labels.
We decided to have a look at the output of our classifier function to see whether or not that was the case.</description>
    </item>
    
    <item>
      <title>Configuration in DNS</title>
      <link>https://markhneedham.com/blog/2012/10/24/configuration-in-dns/</link>
      <pubDate>Wed, 24 Oct 2012 17:40:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/24/configuration-in-dns/</guid>
      <description>In the latest version of the ThoughtWorks Technology Radarone of the areas covered is &amp;lsquo;configuration in DNS&amp;rsquo;, a term which I first came across earlier in the year from a mailing list post by my former colleague Daniel Worthington-Bodart.
The radar describes it like so:
As I alluded to in my post about creating environment agnostic machinesone of the techniques that we&amp;rsquo;ve used to achieve this is configuration in DNS, whereby we use fully qualified domain names (FQDN) for services in our configuration files and have DNS resolve them.</description>
    </item>
    
    <item>
      <title>Kaggle Digit Recognizer: A K-means attempt</title>
      <link>https://markhneedham.com/blog/2012/10/23/kaggle-digit-recognizer-a-k-means-attempt/</link>
      <pubDate>Tue, 23 Oct 2012 19:04:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/23/kaggle-digit-recognizer-a-k-means-attempt/</guid>
      <description>Over the past couple of months Jen and I have been playing around with the Kaggle Digit Recognizer problem- a &amp;lsquo;competition&amp;rsquo; created to introduce people to Machine Learning.
You are given an input file which contains multiple rows each containing 784 pixel values representing a 28x28 pixel image as well as a label indicating which number that image actually represents.
One of the algorithms that we tried out for this problem was a variation on the k-means clusteringone whereby we took the values at each pixel location for each of the labels and came up with an average value for each pixel.</description>
    </item>
    
    <item>
      <title>How we&#39;re using story points</title>
      <link>https://markhneedham.com/blog/2012/10/21/how-were-using-story-points/</link>
      <pubDate>Sun, 21 Oct 2012 23:08:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/21/how-were-using-story-points/</guid>
      <description>A couple of weeks ago Joshua Kerievsky wrote a post describing how he and his teams don&amp;rsquo;t use story points anymorebecause of the problems they&amp;rsquo;d had with them which included:
On the team I&amp;rsquo;m currently working on we still estimate the relative size of stories using points but we don&amp;rsquo;t use velocity per iteration to keep score - most of the time it&amp;rsquo;s barely even mentioned.
Instead for the past couple of months we&amp;rsquo;ve just been using the velocity to see whether or not we were going to achieve the minimum viable infrastructure (MVI)that we needed to have done before launch.</description>
    </item>
    
    <item>
      <title>Do the simple thing</title>
      <link>https://markhneedham.com/blog/2012/10/21/do-the-simple-thing/</link>
      <pubDate>Sun, 21 Oct 2012 21:35:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/21/do-the-simple-thing/</guid>
      <description>One of the most unexpected things that I picked up while pairing with Ashokfor a few days in August/September is his ability to pick the simplest solutionwhen confronted with a problem.
On numerous occasions we&amp;rsquo;d be trying to do something and I&amp;rsquo;d end up on a yak shaving mission trying to get a complicated approach to work while he watched on with bemusement.
I thought I&amp;rsquo;d actually learnt this lesson from working with Ashok but on a couple of occasions over the last week I&amp;rsquo;ve caught myself doing the same thing again!</description>
    </item>
    
    <item>
      <title>Environment agnostic machines and applications</title>
      <link>https://markhneedham.com/blog/2012/10/14/environment-agnostic-machines-and-applications/</link>
      <pubDate>Sun, 14 Oct 2012 18:49:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/14/environment-agnostic-machines-and-applications/</guid>
      <description>On my current project we&amp;rsquo;ve been setting up production and staging environments and Shodhancame up with the idea of making staging and production identical to the point that a machine wouldn&amp;rsquo;t even know what environment it was in.
Identical in this sense means:
The only thing that differs is that the external IPs to access machines differ and therefore the NATed address that they display to the world when making any outgoing requests is also different.</description>
    </item>
    
    <item>
      <title>Play Framework 2.0: Rendering JSON data in the view</title>
      <link>https://markhneedham.com/blog/2012/10/14/play-framework-2-0-rendering-json-data-in-the-view/</link>
      <pubDate>Sun, 14 Oct 2012 09:28:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/14/play-framework-2-0-rendering-json-data-in-the-view/</guid>
      <description>I&amp;rsquo;ve been playing around with the Play Frameworkwhich we&amp;rsquo;re using to front a bunch of visualisations and one thing I wanted to do is send a data structure to a view and then convert that into JSON.
I&amp;rsquo;ve got a simple controller which looks like this:
package controllers; import play.mvc.Controller; import play.mvc.Result; import views.html.*; public class SalesByCategory extends Controller { public static Result index() { ArrayList&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; series = new ArrayList&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;(); Map&amp;lt;String, Object&amp;gt; oneSeries = new HashMap&amp;lt;String, Object&amp;gt;(); oneSeries.</description>
    </item>
    
    <item>
      <title>Varnish: Purging the cache</title>
      <link>https://markhneedham.com/blog/2012/10/10/varnish-purging-the-cache/</link>
      <pubDate>Wed, 10 Oct 2012 23:28:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/10/varnish-purging-the-cache/</guid>
      <description>We&amp;rsquo;re using varnishto cache all the requests that come through our web servers and especially in our pre-production environments we deploy quite frequently and want to see the changes that we&amp;rsquo;ve made.
This means that we need to purge the pages we&amp;rsquo;re accessing from varnish so that it will actually pass the request through to the application server and serve up the latest version of the page.
For some reason my google-fu when trying to remember/work out how to do this has always been weak but my colleague Shodhanhelped me understand how to do this today so I thought I better record it so I don&amp;rsquo;t forget!</description>
    </item>
    
    <item>
      <title>Nygard Big Data Model: The Investigation Stage</title>
      <link>https://markhneedham.com/blog/2012/10/10/nygard-big-data-model-the-investigation-stage/</link>
      <pubDate>Wed, 10 Oct 2012 00:00:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/10/nygard-big-data-model-the-investigation-stage/</guid>
      <description>Earlier this year Michael Nygard wrote an extremely detailed post about his experiences in the world of big data projectsand included in the post was the following diagram which I&amp;rsquo;ve found very useful.
Ashokand I have been doing some work in this area helping one of our clients make sense of and visualise some of their data and we realised retrospectively that we were very acting very much in the investigation stage of the model.</description>
    </item>
    
    <item>
      <title>Mac OS X: Removing Byte Order Mark with an editor</title>
      <link>https://markhneedham.com/blog/2012/10/07/mac-os-x-removing-byte-order-mark-with-an-editor/</link>
      <pubDate>Sun, 07 Oct 2012 10:43:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/07/mac-os-x-removing-byte-order-mark-with-an-editor/</guid>
      <description>About a month ago I wrote about some problems I was having working with Windows generated CSV fileswhich had a Byte Order Mark (BOM) at the beginning of the file and I described a way to get rid of it using awk.
It&amp;rsquo;s a bit of a long winded process though and I always forget what the parameters I need to pass to awk are so I thought it would probably be quicker if I could just work out a way to get rid of the BOM using an editor.</description>
    </item>
    
    <item>
      <title>Strata Conf London: Day 2 Wrap Up</title>
      <link>https://markhneedham.com/blog/2012/10/03/strata-conf-london-day-2-wrap-up/</link>
      <pubDate>Wed, 03 Oct 2012 06:46:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/03/strata-conf-london-day-2-wrap-up/</guid>
      <description>Yesterday I attended the second day of Strata Conf Londonand these are the some of the things I learned from the talks I attended:
British Rail were trying to solve a graph problem when people didn&amp;rsquo;t know about graphs and Dijkstra&amp;rsquo;s algorithm hadn&amp;rsquo;t been inventedand it was effectively invented on this project but never publicised. John&amp;rsquo;s suggestion here was that we need to share the stuff that we&amp;rsquo;re doing so that people don&amp;rsquo;t re-invent the wheel.</description>
    </item>
    
    <item>
      <title>Strata Conf London: Day 1 Wrap Up</title>
      <link>https://markhneedham.com/blog/2012/10/02/strata-conf-london-day-1-wrap-up/</link>
      <pubDate>Tue, 02 Oct 2012 23:42:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/10/02/strata-conf-london-day-1-wrap-up/</guid>
      <description>For the past couple of days I attended the first Strata Conf to be held in London- a conference which seems to bring together people from the data science and big data worldsto talk about the stuff they&amp;rsquo;re doing.
Since I&amp;rsquo;ve been playing around with a couple of different things in this area over the last 4/5 months I thought it&amp;rsquo;d be interesting to come along and see what people much more experienced in this area had to say!</description>
    </item>
    
    <item>
      <title>neo4j: Handling SUM&#39;s scientific notation</title>
      <link>https://markhneedham.com/blog/2012/09/30/neo4j-handling-sums-scientific-notation/</link>
      <pubDate>Sun, 30 Sep 2012 19:47:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/30/neo4j-handling-sums-scientific-notation/</guid>
      <description>In some of the recent work I&amp;rsquo;ve been doing with neo4j the queries I&amp;rsquo;ve written have been summing up the values from multiple nodes and after a certain number is reached the value returned used scientific notation.
For example in a cypher query like this:
START category = node:categories(&amp;#39;category_id:1&amp;#39;) MATCH p = category-[:has_child*1..5]-&amp;gt;subCategory-[:has_product]-&amp;gt;product-[:sold]-&amp;gt;sales RETURN EXTRACT(n in NODES(p) : n.category_id?),subCategory.category_id, SUM(sales.sales) I might get a result set like this:
+------------------------------------------------------------------------------------------------+ | EXTRACT(n in NODES(p) : n.</description>
    </item>
    
    <item>
      <title>Testing XML generation with vimdiff</title>
      <link>https://markhneedham.com/blog/2012/09/30/testing-xml-generation-with-vimdiff/</link>
      <pubDate>Sun, 30 Sep 2012 15:48:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/30/testing-xml-generation-with-vimdiff/</guid>
      <description>A couple of weeks ago I spent a bit of time writing a Ruby DSL to automate the setup of load balancers, firewall and NAT rules through the VCloud API.
The VCloud API deals primarily in XML so the DSL is just a thin layer which creates the appropriate mark up.
When we started out we configured everything manually through the web console and then exported the XML so the first thing that the DSL needed to do was create XML that matched what we already had.</description>
    </item>
    
    <item>
      <title>Data Science: Making sense of the data</title>
      <link>https://markhneedham.com/blog/2012/09/30/data-science-making-sense-of-the-data/</link>
      <pubDate>Sun, 30 Sep 2012 14:58:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/30/data-science-making-sense-of-the-data/</guid>
      <description>Over the past month or so Ashokand I have been helping one of our clients explore and visualise some of their data and one of the first things we needed to do was make sense of the data that was available.
Ashok suggested that we work with a subset of our eventual data setso that we could get a feel for the data and quickly see whether what we were planning to do made sense.</description>
    </item>
    
    <item>
      <title>Data Science: Scrapping the data together</title>
      <link>https://markhneedham.com/blog/2012/09/30/data-science-scrapping-the-data-together/</link>
      <pubDate>Sun, 30 Sep 2012 13:44:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/30/data-science-scrapping-the-data-together/</guid>
      <description>On Friday Martin, Darrenand I were discussing the ThoughtWorks graph that I was working on earlier in the year and Martin pointed out that an interesting aspect of this type of work is that the data you want to work with isn&amp;rsquo;t easily available.
You therefore need to find a way to scrap the data together to make some headway and then maybe at a later stage once some progress has been made it will become easier to replace that with a cleaner solution.</description>
    </item>
    
    <item>
      <title>Upstart: Job getting stuck in the start/killed state</title>
      <link>https://markhneedham.com/blog/2012/09/29/upstart-job-getting-stuck-in-the-startkilled-state/</link>
      <pubDate>Sat, 29 Sep 2012 09:56:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/29/upstart-job-getting-stuck-in-the-startkilled-state/</guid>
      <description>We&amp;rsquo;re using upstartto handle the processes running on our machines and since the haproxypackage only came package with an init.d script we wanted to make it upstartified.
When defining an upstart script you need to specify an expectstanza in which you specify whether or not the process which you&amp;rsquo;re launching is going to fork.
However, most Unix services will &amp;ldquo;daemonize&amp;rdquo;, meaning that they will create a new process (using fork(2)) which is a child of the initial process.</description>
    </item>
    
    <item>
      <title>Java: Parsing CSV files</title>
      <link>https://markhneedham.com/blog/2012/09/23/java-parsing-csv-files/</link>
      <pubDate>Sun, 23 Sep 2012 22:46:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/23/java-parsing-csv-files/</guid>
      <description>As I mentioned in a previous post I recently moved a bunch of neo4j data loading code from Ruby to Javaand as part of that process I needed to parse some CSV files.
In Ruby I was using FasterCSVwhich became the standard CSV library from Ruby 1.9but it&amp;rsquo;s been a while since I had to parse CSV files in Java so I wasn&amp;rsquo;t sure which library to use.
I needed a library which could parse a comma separated file where there might be commas in the values of one of the fields.</description>
    </item>
    
    <item>
      <title>Network Address Translation</title>
      <link>https://markhneedham.com/blog/2012/09/23/network-address-translation/</link>
      <pubDate>Sun, 23 Sep 2012 19:23:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/23/network-address-translation/</guid>
      <description>I&amp;rsquo;ve often heard people talking about Network Address Translation (NAT) but I never really understood exactly how it worked until we started configuring some virtual data centres on my current project.
This is an attempt at documenting my own current understanding so I won&amp;rsquo;t forget in future.
In our case we&amp;rsquo;ve been provisioning a bunch of machines into different private networks, and each machine therefore has an IP in the range of IPv4 addresses reserved for private networks:</description>
    </item>
    
    <item>
      <title>neo4j: The Batch Inserter and the sunk cost fallacy</title>
      <link>https://markhneedham.com/blog/2012/09/23/neo4j-the-batch-inserter-and-the-sunk-cost-fallacy/</link>
      <pubDate>Sun, 23 Sep 2012 10:29:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/23/neo4j-the-batch-inserter-and-the-sunk-cost-fallacy/</guid>
      <description>About a year and a half ago I wrote about the sunk cost fallacywhich is defined like so:
The Truth: Your decisions are tainted by the emotional investments you accumulate, and the more you invest in something the harder it becomes to abandon it.
Over the past few weeks Ashokand I have been doing some exploration of one of our client&amp;rsquo;s data by modelling it in a neo4j graph and seeing what interesting things the traversals reveal.</description>
    </item>
    
    <item>
      <title>Finding ways to use bash command line history shortcuts</title>
      <link>https://markhneedham.com/blog/2012/09/19/finding-ways-to-use-bash-command-line-history-shortcuts/</link>
      <pubDate>Wed, 19 Sep 2012 07:00:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/19/finding-ways-to-use-bash-command-line-history-shortcuts/</guid>
      <description>A couple of months ago I wrote about a bunch of command line history shortcutsthat Philhad taught me and after recently coming across Peteris Krumins&amp;rsquo; bash history cheat sheetI thought it&amp;rsquo;d be interesting to find some real ways to use them.
A few weeks ago I wrote about a UTF-8 byte order mark (BOM) that I wanted to remove from a fileI was working on and I realised this evening that there were some other files with the same problem.</description>
    </item>
    
    <item>
      <title>zsh: Don&#39;t verify substituted history expansion a.k.a.  disabling histverify</title>
      <link>https://markhneedham.com/blog/2012/09/16/zsh-dont-verify-substituted-history-expansion-a-k-a-disabling-histverify/</link>
      <pubDate>Sun, 16 Sep 2012 13:35:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/16/zsh-dont-verify-substituted-history-expansion-a-k-a-disabling-histverify/</guid>
      <description>I use zshon my Mac terminal and in general I prefer it to bash but it has an annoying default setting whereby when you try to repeat a command via substituted history expansion it asks you to verify that.
For example let&amp;rsquo;s say by mistake I try to vi into a directory rather than cd&amp;rsquo;ing into it:
vi ~/.oh-my-zsh If I try to cd into the directory by using &amp;lsquo;!$&amp;rsquo; to grab the last argument from the previous command it will make me confirm that I want to do this:</description>
    </item>
    
    <item>
      <title>cURL and the case of the carriage return</title>
      <link>https://markhneedham.com/blog/2012/09/15/curl-and-the-case-of-the-carriage-return/</link>
      <pubDate>Sat, 15 Sep 2012 09:06:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/15/curl-and-the-case-of-the-carriage-return/</guid>
      <description>We were doing some work this week where we needed to make a couple of calls to an API via a shell script and in the first call we wanted to capture one of the lines of the HTTP response headers and use that as in input to the second call.
The way we were doing this was something like the following:
#!/bin/bash # We were actually grabbing a different header but for the sake # of this post we&amp;#39;ll say it was &amp;#39;Set-Cookie&amp;#39; AUTH_HEADER=`curl -I http://www.</description>
    </item>
    
    <item>
      <title>Bash: Piping data into a command using heredocs</title>
      <link>https://markhneedham.com/blog/2012/09/15/bash-piping-data-into-a-command-using-heredocs/</link>
      <pubDate>Sat, 15 Sep 2012 07:54:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/15/bash-piping-data-into-a-command-using-heredocs/</guid>
      <description>I&amp;rsquo;ve been playing around with some data modelled in neo4j recently and one thing I wanted to do is run an adhoc query in the neo4j-shelland grab the results and do some text manipulation on them.
For example I wrote a query which outputted the following to the screen and I wanted to sum together all the values in the 3rd column:
| [&amp;#34;1&amp;#34;,&amp;#34;2&amp;#34;,&amp;#34;3&amp;#34;] | &amp;#34;3&amp;#34; | 1234567 | | [&amp;#34;4&amp;#34;,&amp;#34;5&amp;#34;,&amp;#34;6&amp;#34;] | &amp;#34;6&amp;#34; | 8910112 | Initially I was pasting the output into a text file and then running the following sequence of commands to work it out:</description>
    </item>
    
    <item>
      <title>Unix: Caught out by shell significant characters</title>
      <link>https://markhneedham.com/blog/2012/09/13/unix-caught-out-by-shell-significant-characters/</link>
      <pubDate>Thu, 13 Sep 2012 00:17:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/13/unix-caught-out-by-shell-significant-characters/</guid>
      <description>One of the applications that Philand I were deploying today needed a MySQL server and part of our puppet code to provision that node type runs a command to setup the privileges for a database user.
The unevaluated puppet code reads like this:
/usr/bin/mysql -h ${host} -uroot ${rootpassarg} -e &amp;#34;grant all on ${name}.* to ${user}@&amp;#39;${remote_host}&amp;#39; identified by &amp;#39;$password&amp;#39;; flush privileges;&amp;#34; In the application we were deploying that expanded into something like this:</description>
    </item>
    
    <item>
      <title>While waiting for VMs to provision...</title>
      <link>https://markhneedham.com/blog/2012/09/12/while-waiting-for-vms-to-provision/</link>
      <pubDate>Wed, 12 Sep 2012 22:53:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/12/while-waiting-for-vms-to-provision/</guid>
      <description>Philand I spent part of the day provisioning new virtual machines for some applications that we need to deploy which involves running a provisioning script and then opening another terminal and repeatedly trying to ssh into the box until it succeeds.
Eventually we got bored of doing that so we figured out a nice little one liner to use instead:
while :; do ssh 10.0.0.2; done The &amp;lsquo;:&amp;rsquo; is a bash noopand is defined like so:</description>
    </item>
    
    <item>
      <title>neo4j/cypher: CREATE UNIQUE - &#34;SyntaxException: string matching regex `$&#39; expected but `p&#39; found&#34;</title>
      <link>https://markhneedham.com/blog/2012/09/09/neo4jcypher-create-unique-syntaxexception-string-matching-regex-expected-but-p-found/</link>
      <pubDate>Sun, 09 Sep 2012 22:29:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/09/neo4jcypher-create-unique-syntaxexception-string-matching-regex-expected-but-p-found/</guid>
      <description>I&amp;rsquo;ve been playing around with the mutating cypher syntax of neo4j which allows you to make changes to the graph as well as query it, a feature introduced into cypher in May in release 1.8 M01.
I was trying to make use of the &amp;lsquo;CREATE UNIQUE&amp;rsquo; syntax which allows you to create nodes/relationships if they&amp;rsquo;re missing but won&amp;rsquo;t do anything if they already exists.
I had something like the following:</description>
    </item>
    
    <item>
      <title>logstash not picking up some files</title>
      <link>https://markhneedham.com/blog/2012/09/07/logstash-not-picking-up-some-files/</link>
      <pubDate>Fri, 07 Sep 2012 23:49:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/07/logstash-not-picking-up-some-files/</guid>
      <description>We&amp;rsquo;re using logstashto collect all the logs across the different machines that we use in various environments and had noticed that on some of the nodes log files which we&amp;rsquo;d told the logstash-client to track weren&amp;rsquo;t being collected.
We wanted to check what the open file descriptors of logstash-client were so we first had to grab its process id:
$ ps aux | grep logstash logstash 19896 134 9.1 711404 187768 ?</description>
    </item>
    
    <item>
      <title>Apt-Cacher-Server: Extra junk at end of file</title>
      <link>https://markhneedham.com/blog/2012/09/07/apt-cacher-server-extra-junk-at-end-of-file/</link>
      <pubDate>Fri, 07 Sep 2012 15:45:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/07/apt-cacher-server-extra-junk-at-end-of-file/</guid>
      <description>We&amp;rsquo;ve been installing Apt-Cache-Serverso that we can cache some of the packages that we&amp;rsquo;re installing using apt-get on our own network.
(Almost) Following the instructions from the home page we added the following to /etc/apt/apt.conf.d/01proxy:
Acquire::http::Proxy &amp;#34;http://apt-cache-server:3142&amp;#34; And when we ran &amp;lsquo;apt-get update&amp;rsquo; we were getting the following error:
E: Syntax error /etc/apt/apt.conf.d/01proxy:2: Extra junk at end of file We initially thought it must be a problem with having an extra space or line ending but it turns out we had just left off the semi colon.</description>
    </item>
    
    <item>
      <title>A rogue &#34;\357\273\277&#34; (UTF-8 byte order mark)</title>
      <link>https://markhneedham.com/blog/2012/09/03/a-rogue-357273277-utf-8-byte-order-mark/</link>
      <pubDate>Mon, 03 Sep 2012 06:31:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/09/03/a-rogue-357273277-utf-8-byte-order-mark/</guid>
      <description>We&amp;rsquo;ve been loading some data into neo4j from a CSV file - creating one node per row and using the value in the first column as the index lookup for the node.
Unfortunately the index lookup wasn&amp;rsquo;t working for the first row but was for every other row.
By coincidence we started saving each row into a hash map and were then able to see what was going wrong:
require &amp;#39;rubygems&amp;#39; require &amp;#39;fastercsv&amp;#39; things = FasterCSV.</description>
    </item>
    
    <item>
      <title>Book Review: The Retrospective Handbook - Pat Kua</title>
      <link>https://markhneedham.com/blog/2012/08/31/book-review-the-retrospective-handbook-pat-kua/</link>
      <pubDate>Fri, 31 Aug 2012 21:18:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/31/book-review-the-retrospective-handbook-pat-kua/</guid>
      <description>My colleague Pat Kuarecently published a book he&amp;rsquo;s been working on for the first half of the year titled &amp;lsquo;The Retrospective Handbook&amp;rsquo; - a book in which Pat shares his experiences with retrospectives and gives advice to budding facilitators.
I was intrigued what the book would be like because the skill gap between Pat and me with respect to facilitating retrospectives is huge and I&amp;rsquo;ve often found that experts in a subject can have a tendency to be a bit preachy when writing about their subject!</description>
    </item>
    
    <item>
      <title>The Curse Of Knowledge</title>
      <link>https://markhneedham.com/blog/2012/08/28/the-curse-of-knowledge/</link>
      <pubDate>Tue, 28 Aug 2012 21:22:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/28/the-curse-of-knowledge/</guid>
      <description>My colleague Anand Vishwanathrecently recommended the book &amp;lsquo;Made To Stick&amp;rsquo; and one thing that has really stood out for me while reading it is the idea of the &amp;lsquo;The Curse Of Knowledge&amp;rsquo; which is described like so:
This is certainly something I imagine that most people have experienced, perhaps for the first time at school when we realised that the best teacher of a subject isn&amp;rsquo;t necessarily the person who is best at the subject.</description>
    </item>
    
    <item>
      <title>Ruby: Finding where gems are</title>
      <link>https://markhneedham.com/blog/2012/08/25/ruby-finding-where-gems-are/</link>
      <pubDate>Sat, 25 Aug 2012 10:00:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/25/ruby-finding-where-gems-are/</guid>
      <description>In my infrequent travels into Ruby land I always seem to forget where the gems that I&amp;rsquo;ve installed actually live on the file system but my colleague Nickrecently showed me a neat way of figuring it out.
If I&amp;rsquo;m in the folder that contains all my ThoughtWorks graph code I&amp;rsquo;d just need to run the following command:
$ gem which rubygems /Users/mneedham/.rbenv/versions/jruby-1.6.7/lib/ruby/site_ruby/1.8/rubygems.rb I then loaded up irb and wrote a simple cypher query executed using neography:</description>
    </item>
    
    <item>
      <title>puppetdb: Failed to submit &#39;replace catalog&#39; command for client to PuppetDB at puppetmaster:8081: [500 Server Error]</title>
      <link>https://markhneedham.com/blog/2012/08/16/puppetdb-failed-to-submit-replace-catalog-command-for-client-to-puppetdb-at-puppetmaster8081-500-server-error/</link>
      <pubDate>Thu, 16 Aug 2012 23:31:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/16/puppetdb-failed-to-submit-replace-catalog-command-for-client-to-puppetdb-at-puppetmaster8081-500-server-error/</guid>
      <description>I&amp;rsquo;m still getting used to the idea of following the logswhen working out what&amp;rsquo;s going wrong with distributed systems but it worked well when trying to work out why our puppet client which was throwing this error when we ran &amp;lsquo;puppet agent -tdv&amp;rsquo;:
err: Could not retrieve catalog from remote server: Error 400 on SERVER: Failed to submit &amp;#39;replace catalog&amp;#39; command for client to PuppetDB at puppetmaster:8081: [500 Server Error] We were seeing the same error in /var/log/syslogon the puppet master and a quick look at the process list didn&amp;rsquo;t show that the puppet master or puppetdb services were under a particularly heavy load.</description>
    </item>
    
    <item>
      <title>Presentations; Tell a story</title>
      <link>https://markhneedham.com/blog/2012/08/14/presentations-tell-a-story/</link>
      <pubDate>Tue, 14 Aug 2012 22:16:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/14/presentations-tell-a-story/</guid>
      <description>A few years ago before an F# talk that I gave at the .NET user group in Sydney my colleague Erik Doernenburg gave me some advice about how I should structure the talk.
(paraphrasing)If two people give a talk on the same topic they therefore end up being fairly similar talks even though each person may have a totally different perspective.
Erik suggested that people would find it much more interesting if I told a story about what I&amp;rsquo;d learnt about my topic (in this case F#).</description>
    </item>
    
    <item>
      <title>SSHing onto machines via a jumpbox</title>
      <link>https://markhneedham.com/blog/2012/08/10/sshing-onto-machines-via-a-jumpbox/</link>
      <pubDate>Fri, 10 Aug 2012 00:58:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/10/sshing-onto-machines-via-a-jumpbox/</guid>
      <description>We wanted to be able to ssh into some machines which were behind a firewall so we set up a jumpboxwhich our firewall directed any traffic on port 22 towards.
Initially if we wanted to SSH onto a machine inside the network we&amp;rsquo;d have to do a two step process:
$ ssh jumpbox # now on the jumpbx $ ssh internal-network-machine That got a bit annoying after a while so Samshowed us a neat way of proxying the second ssh command through the first one by making use of netcat.</description>
    </item>
    
    <item>
      <title>VCloud Guest Customization Script : [: postcustomization: unexpected operator</title>
      <link>https://markhneedham.com/blog/2012/08/06/vcloud-guest-customization-script-postcustomization-unexpected-operator/</link>
      <pubDate>Mon, 06 Aug 2012 21:50:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/06/vcloud-guest-customization-script-postcustomization-unexpected-operator/</guid>
      <description>We have been doing some work to automatically provision machines using the VCloud API via fog and one of the things we wanted to do was run a custom script the first time that a node powers on.
The following explains how customization scripts work:
We wanted the script to run only when passed the &amp;lsquo;postcustomization&amp;rsquo; flag because our script relied on some networking configuration which hadn&amp;rsquo;t yet been done in the &amp;lsquo;precustomization&amp;rsquo; state.</description>
    </item>
    
    <item>
      <title>neo4j: Creating a custom index with neo4j.rb</title>
      <link>https://markhneedham.com/blog/2012/08/05/neo4j-creating-a-custom-index-with-neo4j-rb/</link>
      <pubDate>Sun, 05 Aug 2012 09:45:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/08/05/neo4j-creating-a-custom-index-with-neo4j-rb/</guid>
      <description>As I mentioned in my last postI&amp;rsquo;ve been playing around with the TFL Bus stop location and routes APIand one thing I wanted to do was load all the bus stops into a neo4j database using the neo4j.rbgem.
I initially populated the database via neographybut it was taking around 20 minutes each run and I figured it&amp;rsquo;d probably be much quicker to populate it directly rather than using the REST API.</description>
    </item>
    
    <item>
      <title>London Bus Stops API: Mapping northing/easting values to lat/long</title>
      <link>https://markhneedham.com/blog/2012/07/30/london-bus-stops-api-mapping-northingeasting-values-to-latlong/</link>
      <pubDate>Mon, 30 Jul 2012 22:28:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/30/london-bus-stops-api-mapping-northingeasting-values-to-latlong/</guid>
      <description>I started playing around with the TFL Bus stop location and routes APIand one of the annoying things about the data is that it uses easting/northingvalues to describe the location of bus stops rather than lat/longs.
The first few lines of the CSV filelook like this:
1000,91532,490000266G,WESTMINSTER STN &amp;lt;&amp;gt; / PARLIAMENT SQUARE,530171,179738,177,0K08,0 10001,72689,490013793E,TREVOR CLOSE,515781,174783,78,NB16,0 10002,48461,490000108F,HIGHBURY CORNER,531614,184603,5,C902,0 For each of the stops I wanted to convert from the easting/northing value to the equivalent lat/long value but I couldn&amp;rsquo;t find a simple way of doing it in code although I did come across an API that would do it for me.</description>
    </item>
    
    <item>
      <title>Puppet: Keeping the discipline</title>
      <link>https://markhneedham.com/blog/2012/07/29/puppet-keeping-the-discipline/</link>
      <pubDate>Sun, 29 Jul 2012 21:53:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/29/puppet-keeping-the-discipline/</guid>
      <description>For the last 5 weeks or so I&amp;rsquo;ve been working with puppetevery day to automate the configuration of various nodes in our stack and my most interesting observation so far is that you really need to keep your discipline when doing this type of work.
We can keep that discipline in three main ways when developing modules.
When it&amp;rsquo;s &amp;lsquo;just little bits&amp;rsquo; there is a massive temptation to make changes manually and then retrospectively put it into a puppet module and assume that it will workif we run from scratch.</description>
    </item>
    
    <item>
      <title>Unix: tee</title>
      <link>https://markhneedham.com/blog/2012/07/29/unix-tee/</link>
      <pubDate>Sun, 29 Jul 2012 19:11:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/29/unix-tee/</guid>
      <description>I&amp;rsquo;ve read about the Unix &amp;lsquo;tee&amp;rsquo; command before but never found a reason to use it until the last few weeks.
One of the things I repeatedly do by mistake is open /etc/hostswithout sudo and then try to make changes to it:
$ vi /etc/hosts # Editing it leads to the dreaded &amp;#39;W10: Changing a readonly file&amp;#39; I always used to close the file and then re-open it with sudo but I recently came across an approach which allows us to use &amp;lsquo;tee&amp;rsquo; to get around the problem.</description>
    </item>
    
    <item>
      <title>neo4j: Multiple starting nodes by index lookup</title>
      <link>https://markhneedham.com/blog/2012/07/28/neo4j-multiple-starting-nodes-by-index-lookup/</link>
      <pubDate>Sat, 28 Jul 2012 23:32:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/28/neo4j-multiple-starting-nodes-by-index-lookup/</guid>
      <description>I spent a bit of time this evening extracting some data from the ThoughtWorks graph for our marketing team who were interested in anything related to our three European offices in London, Manchester and Hamburg.
The most interesting things we can explore relate to the relationship between people and the offices.
The model around people and offices looks like this:
I added a &amp;lsquo;current_home_office&amp;rsquo; relationship to make it easier to quickly get to the nodes of people who are currently working in a specific office.</description>
    </item>
    
    <item>
      <title>R: Mapping a function over a collection of values</title>
      <link>https://markhneedham.com/blog/2012/07/23/r-mapping-a-function-over-a-collection-of-values/</link>
      <pubDate>Mon, 23 Jul 2012 23:25:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/23/r-mapping-a-function-over-a-collection-of-values/</guid>
      <description>I spent a bit of Sunday playing around with R and one thing I wanted to do was map a function over a collection of values and transform each value slightly.
I loaded my data set using the &amp;lsquo;Import Dataset&amp;rsquo; option in R Studio(suggested to me by Rob) which gets converted to the following function call:
&amp;gt; data &amp;lt;- read.csv(&amp;#34;~/data.csv&amp;#34;, header=T, encoding=&amp;#34;ISO-8859&amp;#34;) &amp;gt; data Column1 InterestingColumn 1 Mark 12.50 2 Dave 100.</description>
    </item>
    
    <item>
      <title>neo4j: Graph Global vs Graph Local queries</title>
      <link>https://markhneedham.com/blog/2012/07/23/neo4j-graph-global-vs-graph-local-queries/</link>
      <pubDate>Mon, 23 Jul 2012 22:23:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/23/neo4j-graph-global-vs-graph-local-queries/</guid>
      <description>A few weeks ago I did a presentation at the ThoughtWorks EU away day on the graph I&amp;rsquo;ve been developing using neo4j and I wanted to show who the most connected people in each of our European offices were.
I started with the following cypher query:
START n = node(*) MATCH n-[r:colleagues*1..2]-&amp;gt;c, n-[r2:member_of]-&amp;gt;office WHERE n.type? = &amp;#39;person&amp;#39; AND (NOT(HAS(r2.end_date))) AND office.name = &amp;#39;London - UK South&amp;#39; AND (NOT(HAS(c.thoughtquitter))) RETURN n.name, count(distinct(c)) AS connections, office.</description>
    </item>
    
    <item>
      <title>neo4j: Embracing the sub graph</title>
      <link>https://markhneedham.com/blog/2012/07/21/neo4j-embracing-the-sub-graph/</link>
      <pubDate>Sat, 21 Jul 2012 22:46:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/21/neo4j-embracing-the-sub-graph/</guid>
      <description>In May I wrote a blog post explaining how I&amp;rsquo;d been designing a neo4j graph by thinking about what questions I wanted to answer about the data.
In the comments Josh Adell gave me the following advice:
Keep your data model rich! Don&amp;rsquo;t be afraid to have as many relationships as you need. The power of graph databases comes from finding surprising results when you have strongly interconnected data.
At the time I didn&amp;rsquo;t really understand the advice but I&amp;rsquo;ve since updated my graph so that it includes &amp;lsquo;colleagues&amp;rsquo; relationships which can be derived by looking at the projects that people had worked together on.</description>
    </item>
    
    <item>
      <title>neo4j: Shortest Path with and without cypher</title>
      <link>https://markhneedham.com/blog/2012/07/19/neo4j-shortest-path-with-and-without-cypher/</link>
      <pubDate>Thu, 19 Jul 2012 19:57:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/19/neo4j-shortest-path-with-and-without-cypher/</guid>
      <description>I was looking back at some code I wrote a few months ago to query a neo4j database to find the shortest path between two people via the colleagues relationships that exist.
The initial code, written using neography, looked like this:
neo = Neography::Rest.new start_node = neo.get_node(start_node_id) destination_node = neo.get_node(destination_node_id) neo.get_paths(start_node, destination_node, { &amp;#34;type&amp;#34; =&amp;gt; &amp;#34;colleagues&amp;#34; }, depth = 3, algorithm = &amp;#34;shortestPath&amp;#34;) The neography code eventually makes a POST request to /node/{start_id}/pathsand provides a JSON payload containing the other information about the query.</description>
    </item>
    
    <item>
      <title>neo4j: java.security.NoSuchAlgorithmException: Algorithm [JKS] of type [KeyStore] from provider [org.bouncycastle.jce.provider.BouncyCastleProvider: name=BC version=1.4]</title>
      <link>https://markhneedham.com/blog/2012/07/17/neo4j-java-security-nosuchalgorithmexception-algorithm-jks-of-type-keystore-from-provider-org-bouncycastle-jce-provider-bouncycastleprovider-namebc-version1-4/</link>
      <pubDate>Tue, 17 Jul 2012 00:02:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/17/neo4j-java-security-nosuchalgorithmexception-algorithm-jks-of-type-keystore-from-provider-org-bouncycastle-jce-provider-bouncycastleprovider-namebc-version1-4/</guid>
      <description>I&amp;rsquo;ve spent the last couple of hours moving my neo4j graph from my own machine onto a vanilla CentOS VM and initially tried to run neo using a non Sun version of Java which I installed like so:
yum install java This is the version of Java that was installed:
$ java -version java version &amp;#34;1.5.0&amp;#34; gij (GNU libgcj) version 4.4.6 20120305 (Red Hat 4.4.6-4) When I tried to start neo4j:</description>
    </item>
    
    <item>
      <title>tcpdump: Learning how to read UDP packets</title>
      <link>https://markhneedham.com/blog/2012/07/15/tcpdump-learning-how-to-read-udp-packets/</link>
      <pubDate>Sun, 15 Jul 2012 13:29:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/15/tcpdump-learning-how-to-read-udp-packets/</guid>
      <description>Philand I spent some of Friday afternoon configuring statsd:
We configured it to listen on its default port 8125 and then used netcat to send UDP packetsto see if it was working like so:
echo -n &amp;#34;blah:36|c&amp;#34; | nc -w 1 -u -4 localhost 8125 We used tcpdump to capture any UDP packets on port 8125 like so:
tcpdump -i lo udp port 8125 -vv -X To briefly explain the options we passed to it:</description>
    </item>
    
    <item>
      <title>netcat: localhost resolution not working when sending UDP packets</title>
      <link>https://markhneedham.com/blog/2012/07/15/netcat-localhost-resolution-not-working-when-sending-udp-packets/</link>
      <pubDate>Sun, 15 Jul 2012 08:14:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/15/netcat-localhost-resolution-not-working-when-sending-udp-packets/</guid>
      <description>As part of some work we were doing last week Philand I needed to send UDP packets to a local port and check that they were being picked up.
We initially tried sending a UDP packet to localhost port 8125 using netcat like so:
echo -n &amp;#34;hello&amp;#34; | nc -w 1 -u localhost 8125 That message wasn&amp;rsquo;t being received by the application listening on the port so Phil decided to try and send the same packet from Ruby which worked fine:</description>
    </item>
    
    <item>
      <title>Racket: Wiring it up to a REPL ala SLIME/Swank</title>
      <link>https://markhneedham.com/blog/2012/07/11/racket-wiring-it-up-to-a-repl-ala-slimeswank/</link>
      <pubDate>Wed, 11 Jul 2012 19:34:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/11/racket-wiring-it-up-to-a-repl-ala-slimeswank/</guid>
      <description>One of the awesome things about working with clojure is that it&amp;rsquo;s possible to wire up clojure files in emacs to a REPL by making use of Slime/Swank.
I&amp;rsquo;ve started using Racketto work through the examples in The Little Schemerand wanted to achieve a similar thing there.
I don&amp;rsquo;t know much about configuring emacs so I made use of Phil Halgelberg&amp;rsquo;s emacs-starter-kit which is available on github.
On my travels I came across this video describing how to do exactly what I wanted.</description>
    </item>
    
    <item>
      <title>Data visualisation: Is &#39;interesting&#39; enough?</title>
      <link>https://markhneedham.com/blog/2012/07/08/data-visualisation-is-interesting-enough/</link>
      <pubDate>Sun, 08 Jul 2012 22:45:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/08/data-visualisation-is-interesting-enough/</guid>
      <description>I recently read a blog post by Julian Boot titled &amp;lsquo;visualisation without analysis is fine&amp;rsquo; where he suggests that we can learn things from visualising data in the right way - detailed statistical analysis isn&amp;rsquo;t always necessary.
I thought this was quite an interesting observation because over the past couple of months I&amp;rsquo;ve been playing around with ThoughtWorks data and looking at different ways to visualise aspects of the data.</description>
    </item>
    
    <item>
      <title>ganglia: Importing gmond Python modules</title>
      <link>https://markhneedham.com/blog/2012/07/08/ganglia-importing-gmond-python-modules/</link>
      <pubDate>Sun, 08 Jul 2012 21:55:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/08/ganglia-importing-gmond-python-modules/</guid>
      <description>My colleague Shohdanand I spent a couple of days last week wiring up various monitoring metrics into ganglia and while most of them come built in, we also found some python based modules that we wanted to use.
Unfortunately we couldn&amp;rsquo;t find any instructions on github explaining how to set them up but after a bit of trial and error we figured it out.
One of the modules that we wanted to use was diskstatwhich provides I/O wait time metrics which we couldn&amp;rsquo;t find in the built in modules.</description>
    </item>
    
    <item>
      <title>Bash Shell: Reusing parts of previous commands</title>
      <link>https://markhneedham.com/blog/2012/07/05/bash-shell-reusing-parts-of-previous-commands/</link>
      <pubDate>Thu, 05 Jul 2012 23:42:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/05/bash-shell-reusing-parts-of-previous-commands/</guid>
      <description>I&amp;rsquo;ve paired a few times with my colleague Phil Potterover the last couple of weeks and since he&amp;rsquo;s a bit of a ninja with bash shortcuts/commands I wanted to record some of the things he&amp;rsquo;s shown me so I won&amp;rsquo;t forget them!
Let&amp;rsquo;s say we&amp;rsquo;re in the &amp;lsquo;/tmp&amp;rsquo; directory and want to create a folder a few levels down but forget to pass the &amp;lsquo;-p&amp;rsquo; option to &amp;lsquo;mkdir&amp;rsquo;:
$ mkdir blah/de/blah mkdir: cannot create directory `blah/de/blah&amp;#39;: No such file or directory One way of fixing that would be to press the up arrow and navigate along the previous command and put in the &amp;lsquo;-p&amp;rsquo; flag but it&amp;rsquo;s a bit fiddly so instead we can do the following:</description>
    </item>
    
    <item>
      <title>sudo, sudo -i &amp; sudo su</title>
      <link>https://markhneedham.com/blog/2012/07/04/sudo-sudo-i-sudo-su/</link>
      <pubDate>Wed, 04 Jul 2012 19:34:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/04/sudo-sudo-i-sudo-su/</guid>
      <description>On the project I&amp;rsquo;m currently working on we&amp;rsquo;re doing quite a bit of puppet and although we&amp;rsquo;re using the puppet master approach in production &amp;amp; test environments it&amp;rsquo;s still useful to be able to run puppet headless to test changes locally.
Since several of the commands require having write access to &amp;lsquo;root&amp;rsquo; folders we need to run &amp;lsquo;puppet apply&amp;rsquo; as a super user using sudo. We also need to run it in the context of some environment variables which the root user has.</description>
    </item>
    
    <item>
      <title>Debugging: Google vs The Manual</title>
      <link>https://markhneedham.com/blog/2012/07/04/debugging-google-vs-the-manual/</link>
      <pubDate>Wed, 04 Jul 2012 00:00:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/07/04/debugging-google-vs-the-manual/</guid>
      <description>Over the last six months or so I&amp;rsquo;ve worked with a bunch of different people and one of the things that I&amp;rsquo;ve noticed is that when something isn&amp;rsquo;t working there tend to be two quite distinct ways that people go about trying to solve the problem.
The RTFMcrowd will go straight for the official documentation or source code if needs be in an attempt to work through the problem from first principals.</description>
    </item>
    
    <item>
      <title>Powerpoint saving movies as images</title>
      <link>https://markhneedham.com/blog/2012/06/30/powerpoint-saving-movies-as-images/</link>
      <pubDate>Sat, 30 Jun 2012 10:05:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/30/powerpoint-saving-movies-as-images/</guid>
      <description>I&amp;rsquo;ve been working on a presentation for the ThoughtWorks Europe away day over the last few days and I created some screen casts using Camtasiawhich I wanted to include.
It&amp;rsquo;s reasonably easy to insert movies into Powerpoint but I was finding that when I saved the file and then reloaded it the movies had been converted into images which wasn&amp;rsquo;t what I wanted at all!
Eventually I came across a blog post which explained that I&amp;rsquo;d been saving the file as the wrong format.</description>
    </item>
    
    <item>
      <title>neo4j: Handling optional relationships</title>
      <link>https://markhneedham.com/blog/2012/06/24/neo4j-handling-optional-relationships/</link>
      <pubDate>Sun, 24 Jun 2012 23:32:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/24/neo4j-handling-optional-relationships/</guid>
      <description>On my ThoughtWorks neo4j there are now two different types of relationships between people nodes - they can either be colleagues or one can be the sponsor of the other.
The graph looks like this:
I wanted to get a list of all the sponsor pairs but also have some indicator of whether the two people have worked together.
I started off by getting all of the sponsor pairs:
START n = node(*) MATCH n-[r:sponsor_of]-&amp;gt;n2 RETURN n.</description>
    </item>
    
    <item>
      <title>Why you shouldn&#39;t use name as a key a.k.a. I am an idiot</title>
      <link>https://markhneedham.com/blog/2012/06/24/why-you-shouldnt-use-name-as-a-key-a-k-a-i-am-an-idiot/</link>
      <pubDate>Sun, 24 Jun 2012 22:55:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/24/why-you-shouldnt-use-name-as-a-key-a-k-a-i-am-an-idiot/</guid>
      <description>I think one of the first things that I learnt about dealing with users in a data store is that you should never use name as a primary key because their might be two people with the same name.
Despite knowing that I foolishly chose to ignore this knowledge when building my neo4j graph and used name as the key for the Lucene index.
I thought I&amp;rsquo;d got away with it but NO!</description>
    </item>
    
    <item>
      <title>Brightbox Repository: GPG error: The following signatures couldn&#39;t be verified because the public key is not available</title>
      <link>https://markhneedham.com/blog/2012/06/24/brightbox-repository-gpg-error-the-following-signatures-couldnt-be-verified-because-the-public-key-is-not-available/</link>
      <pubDate>Sun, 24 Jun 2012 00:58:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/24/brightbox-repository-gpg-error-the-following-signatures-couldnt-be-verified-because-the-public-key-is-not-available/</guid>
      <description>We&amp;rsquo;re using the Brightbox Ruby repositoryto get the versions of Ruby which we install on our machines and although we eventually put the configuration for this repository into Puppet we initially tested it out on a local VM.
To start with you need to add the repository to /etc/apt/sources.list:
deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu lucid main To get that picked up we run the following:
apt-get update Which initially threw this error because it&amp;rsquo;s a gpg signed repository and we hadn&amp;rsquo;t added the key:</description>
    </item>
    
    <item>
      <title>Creating a Samba share between Ubuntu and Mac OS X</title>
      <link>https://markhneedham.com/blog/2012/06/24/creating-a-samba-share-between-ubuntu-and-mac-os-x/</link>
      <pubDate>Sun, 24 Jun 2012 00:40:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/24/creating-a-samba-share-between-ubuntu-and-mac-os-x/</guid>
      <description>On the project I&amp;rsquo;m currently working on we have our development environment setup on a bare bones Ubuntu instance which we run via VmWare.
We wanted to be able to edit files on the VM from the host O/S so my colleague Philsuggested that we set up a Samba server on the VM and then connect to it from the Mac.
We first needed to install a couple of packages on the VM:</description>
    </item>
    
    <item>
      <title>Visualising a neo4j graph using gephi</title>
      <link>https://markhneedham.com/blog/2012/06/21/visualising-a-neo4j-graph-using-gephi/</link>
      <pubDate>Thu, 21 Jun 2012 05:02:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/21/visualising-a-neo4j-graph-using-gephi/</guid>
      <description>At ThoughtWorks we don&amp;rsquo;t have line managers but people can choose to have a sponsor - typically someone who has worked in the company for longer/has more experience in the industry than them - who can help them navigate the organisation better.
From hearing people talk about sponsors over the last 6 years it seemed like quite a few people sponsored the majority and there were probably a few people who didn&amp;rsquo;t have a sponsor.</description>
    </item>
    
    <item>
      <title>Haskell: Mixed type lists</title>
      <link>https://markhneedham.com/blog/2012/06/19/haskell-mixed-type-lists/</link>
      <pubDate>Tue, 19 Jun 2012 23:09:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/19/haskell-mixed-type-lists/</guid>
      <description>I&amp;rsquo;ve been continuing to work through the exercises in The Little Schemerand came across a problem which needed me to write a function to take a mixed list of Integers and Strings and filter out the Integers.
As I mentioned in my previous postI&amp;rsquo;ve been doing the exercises in Haskell but I thought I might struggle with that approach here because Haskell collections are homogeneous i.e. all the elements need to be of the same type.</description>
    </item>
    
    <item>
      <title>The Little Schemer: Attempt #2</title>
      <link>https://markhneedham.com/blog/2012/06/19/the-little-schemer-attempt-2/</link>
      <pubDate>Tue, 19 Jun 2012 00:21:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/19/the-little-schemer-attempt-2/</guid>
      <description>A few weeks ago I asked the twittersphere for some advice on how I could get better at writing recursive functions and one of the pieces of advice was to work through The Little Schemer.
I first heard about The Little Schemer a couple of years ago and after going through the first few pages I got bored and gave up.
I still found the first few pages a bit trivial this time around as well but my colleague Jen Smithencouraged me to keep going and once I&amp;rsquo;d got about 20 pages in it became clearer to me why the first few pages had been written the way they had.</description>
    </item>
    
    <item>
      <title>neo4j/Cypher: Finding the most connected node on the graph</title>
      <link>https://markhneedham.com/blog/2012/06/16/neo4jcypher-finding-the-most-connected-node-on-the-graph/</link>
      <pubDate>Sat, 16 Jun 2012 10:41:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/16/neo4jcypher-finding-the-most-connected-node-on-the-graph/</guid>
      <description>As I mentioned in another post about a month agoI&amp;rsquo;ve been playing around with a neo4j graph in which I have the following relationship between nodes:
One thing I wanted to do was work out which node is the most connected on the graph, which would tell me who&amp;rsquo;s worked with the most people.
I started off with the following cypher query:
query = &amp;#34; START n = node(*)&amp;#34; query &amp;lt;&amp;lt; &amp;#34; MATCH n-[r:colleagues]-&amp;gt;c&amp;#34; query &amp;lt;&amp;lt; &amp;#34; WHERE n.</description>
    </item>
    
    <item>
      <title>Functional Thinking: Separating concerns</title>
      <link>https://markhneedham.com/blog/2012/06/12/functional-thinking-separating-concerns/</link>
      <pubDate>Tue, 12 Jun 2012 23:50:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/12/functional-thinking-separating-concerns/</guid>
      <description>Over the weekend I was trying to port some of the neo4j import code for the ThoughtWorks graph I&amp;rsquo;ve been working on to make use of the REST Batch APIand I came across an interesting example of imperative vs functional thinking.
I&amp;rsquo;m using the neographygem to populate the graph and to start with I was just creating a person node and then creating an index entry for it:
people_to_load = Set.</description>
    </item>
    
    <item>
      <title>CSV parsing/UTF-8 encoding</title>
      <link>https://markhneedham.com/blog/2012/06/10/csv-parsingutf-8-encoding/</link>
      <pubDate>Sun, 10 Jun 2012 23:30:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/10/csv-parsingutf-8-encoding/</guid>
      <description>I was recently trying to parse a CSV file which I&amp;rsquo;d converted from an Excel spreadsheet but was having problems with characters beyond the standard character set.
This is an exampleof what was going wrong:
&amp;gt; require &amp;#39;csv&amp;#39; &amp;gt; people = CSV.open(&amp;#34;sponsors.csv&amp;#34;, &amp;#39;r&amp;#39;, ?,, ?\r).to_a [&amp;#34;Erik D\366rnenburg&amp;#34;, &amp;#34;N/A&amp;#34;] &amp;gt; people.each { |sponsee, sponsor| puts &amp;#34;#{sponsee}#{sponsor}&amp;#34; } Erik D?rnenburg N/A I came across a Ruby gem called chardetwhich allowed me to work out the character set of Erik&amp;rsquo;s name like so:</description>
    </item>
    
    <item>
      <title>Haskell: Writing a function that can take Ints or Doubles</title>
      <link>https://markhneedham.com/blog/2012/06/05/haskell-writing-a-function-that-can-take-ints-or-doubles/</link>
      <pubDate>Tue, 05 Jun 2012 00:10:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/05/haskell-writing-a-function-that-can-take-ints-or-doubles/</guid>
      <description>In my continued reading of SICP I wanted to recreate a &amp;lsquo;sum&amp;rsquo; function used to demonstrate a function which could take another function as one of its parameters.
In Scheme the function is defined like this:
(define (sum term a next b) (if (&amp;gt; a b) 0 (+ (term a) (sum term (next a) next b)))) And can be used like this to sum the values between two numbers:
(define (identity x) x) (define (sum-integers a b) (sum identity a inc b)) &amp;gt; (sum-integers 1 10) 55 I translated it into Haskell as the following:</description>
    </item>
    
    <item>
      <title>Haskell: Building a range of numbers from command line arguments</title>
      <link>https://markhneedham.com/blog/2012/06/03/haskell-building-a-range-of-numbers-from-command-line-arguments/</link>
      <pubDate>Sun, 03 Jun 2012 20:13:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/06/03/haskell-building-a-range-of-numbers-from-command-line-arguments/</guid>
      <description>I&amp;rsquo;m working through some of the SICP problemsin Haskell and for problem 1.22you need to write a function which will indicate the first 3 prime numbers above a starting value.
It is also suggested to only consider odd numbers so to find the prime numbers above 1000 the function call would look like this:
&amp;gt; searchForPrimes [1001,1003..] [1009,1013,1019] I wanted to be able to feed in the range of numbers from the command line so that I&amp;rsquo;d be able to call the function with different values and see how long it took to work it out.</description>
    </item>
    
    <item>
      <title>Google Maps without any labels/country names</title>
      <link>https://markhneedham.com/blog/2012/05/31/google-maps-without-any-labelscountry-names/</link>
      <pubDate>Thu, 31 May 2012 21:52:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/31/google-maps-without-any-labelscountry-names/</guid>
      <description>I wanted to get a blank version of Google Maps without any of the country names on for a visualisation I&amp;rsquo;m working on but I&amp;rsquo;d been led to believe that this wasn&amp;rsquo;t actually possible.
In actual fact we do have control over whether the labels are shownvia the &amp;lsquo;styles&amp;rsquo; optionwhich we can call on the map.
In my case the code looks like this:
var map = new google.maps.Map(document.getElementById(&amp;#34;map_canvas&amp;#34;), { zoom: 3, center: new google.</description>
    </item>
    
    <item>
      <title>Haskell: Using type classes to generify Project Euler #31</title>
      <link>https://markhneedham.com/blog/2012/05/30/haskell-using-type-classes-to-generify-project-euler-31/</link>
      <pubDate>Wed, 30 May 2012 12:08:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/30/haskell-using-type-classes-to-generify-project-euler-31/</guid>
      <description>As I mentioned in my previous post I&amp;rsquo;ve been working on Project Euler #31and initially wasn&amp;rsquo;t sure how to write the algorithm.
I came across a post on StackOverflow which explained it in more detailbut unfortunately the example used US coins rather than UK ones like in the Project Euler problem.
To start with I created two versions of the function - one for US coins and one for UK coins:</description>
    </item>
    
    <item>
      <title>Haskell: Java Style Enums</title>
      <link>https://markhneedham.com/blog/2012/05/30/haskell-java-style-enums/</link>
      <pubDate>Wed, 30 May 2012 11:10:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/30/haskell-java-style-enums/</guid>
      <description>I&amp;rsquo;ve been playing around with problem 31 of Project Eulerwhich is defined as follows:
1p, 2p, 5p, 10p, 20p, 50p, £1 (100p) and £2 (200p).
It is possible to make £2 in the following way:
1 £1 + 150p + 220p + 15p + 12p + 31p
How many different ways can £2 be made using any number of coins?
Having coded way too much in Java my first thought was that the coins could be represented as an Enum but I wasn&amp;rsquo;t sure how to do that in Haskell.</description>
    </item>
    
    <item>
      <title>Haskell: Finding the minimum &amp; maximum values of a Foldable in one pass</title>
      <link>https://markhneedham.com/blog/2012/05/28/haskell-finding-the-minimum-maximum-values-of-a-foldable-in-one-pass/</link>
      <pubDate>Mon, 28 May 2012 11:18:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/28/haskell-finding-the-minimum-maximum-values-of-a-foldable-in-one-pass/</guid>
      <description>I recently came across Dan Piponi&amp;rsquo;s blog post &amp;lsquo;Haskell Monoids &amp;amp; their Uses&amp;rsquo; and towards the end of the post he suggests creating monoids to work out the maximum and minimum values of a Foldable value in one pass.
The foldMap function applies a function to each element of our structure and then accumulates the return values of each of these applications.
A list is one example of a type which implements the Foldable type class like so:</description>
    </item>
    
    <item>
      <title>Haskell: Debugging code</title>
      <link>https://markhneedham.com/blog/2012/05/27/haskell-debugging-code/</link>
      <pubDate>Sun, 27 May 2012 22:16:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/27/haskell-debugging-code/</guid>
      <description>In my continued attempts to learn QuickCheck, one thing I&amp;rsquo;ve been doing is comparing the results of my brute forceand divide &amp;amp; conquer versionsof the closest pairs algorithm.
I started with this property:
let prop_dc_bf xs = (length xs &amp;gt; 2) ==&amp;gt; (fromJust $ bfClosest xs) == dcClosest xs And then ran it from GHCI, which resulted in the following error:
&amp;gt; quickCheck (prop_dc_bf :: [(Double, Double)] -&amp;gt; Property) *** Failed!</description>
    </item>
    
    <item>
      <title>Haskell: Using monoids when sorting by multiple parameters</title>
      <link>https://markhneedham.com/blog/2012/05/23/haskell-using-monoids-when-sorting-by-multiple-parameters/</link>
      <pubDate>Wed, 23 May 2012 06:44:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/23/haskell-using-monoids-when-sorting-by-multiple-parameters/</guid>
      <description>On the project I&amp;rsquo;ve been working on we had a requirement to sort a collection of rows by 4 different criteria such that if two items matched for the first criteria we should consider the second criteria and so on.
If we wrote that code in Haskell it would read a bit like this:
data Row = Row { shortListed :: Bool, cost :: Float, distance1 :: Int, distance2 :: Int } deriving (Show, Eq) import Data.</description>
    </item>
    
    <item>
      <title>Scala/Haskell: A simple example of type classes</title>
      <link>https://markhneedham.com/blog/2012/05/22/scalahaskell-a-simple-example-of-type-classes/</link>
      <pubDate>Tue, 22 May 2012 10:26:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/22/scalahaskell-a-simple-example-of-type-classes/</guid>
      <description>I never really understood type classes when I was working with Scala but I recently came across a video where Dan Rosen explains them pretty well.
Since the last time I worked in Scala I&amp;rsquo;ve been playing around with Haskell where type classes are much more common - for example if we want to compare two values we need to make sure that their type extends the &amp;lsquo;Eq&amp;rsquo; type class.</description>
    </item>
    
    <item>
      <title>Haskell: My first attempt with QuickCheck and HUnit</title>
      <link>https://markhneedham.com/blog/2012/05/20/haskell-my-first-attempt-with-quickcheck-and-hunit/</link>
      <pubDate>Sun, 20 May 2012 19:09:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/20/haskell-my-first-attempt-with-quickcheck-and-hunit/</guid>
      <description>As I mentioned in a blog post a few daysI&amp;rsquo;ve started learning QuickCheck with the test-frameworkpackage as suggested by David Turner.
I first needed to install test-framework and some dependencies using cabal:
&amp;gt; cabal install test-framework &amp;gt; cabal install test-framework-quickcheck &amp;gt; cabal install test-framework-hunit I thought it&amp;rsquo;d be interesting to try and write some tests around the windowed function that I wrote a few months ago:
Windowed.hsmodule Windowed (windowed) where windowed :: Int -&amp;gt; [a] -&amp;gt; [[a]] windowed size [] = [] windowed size ls@(x:xs) = if length ls &amp;gt;= size then (take size ls) : windowed size xs else windowed size x I wrote my first property like so:</description>
    </item>
    
    <item>
      <title>Building an API: Test Harness UI</title>
      <link>https://markhneedham.com/blog/2012/05/19/building-an-api-test-harness-ui/</link>
      <pubDate>Sat, 19 May 2012 20:03:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/19/building-an-api-test-harness-ui/</guid>
      <description>On the project I&amp;rsquo;ve been working on we&amp;rsquo;re building an API to be used by other applications in the organisation but when we started none of those applications were ready to integrate with us and therefore drive the API design.
Initially we tried driving the API through integration style tests but we realised that taking this approach made it quite difficult for us to imagine how an application would use it.</description>
    </item>
    
    <item>
      <title>Haskell: Writing a custom equality operator</title>
      <link>https://markhneedham.com/blog/2012/05/16/haskell-writing-a-custom-equality-operator/</link>
      <pubDate>Wed, 16 May 2012 13:16:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/16/haskell-writing-a-custom-equality-operator/</guid>
      <description>In the comments on my post about generating random numbersto test a function David Turner suggested that this was exactly the use case for which QuickCheckwas intended for so I&amp;rsquo;ve been learning a bit more about that this week.
I started with a simple property to check that the brute force (bf) and divide and conquer (dc) versions of the algorithm returned the same result, assuming that there were enough values in the list to have a closest pair:</description>
    </item>
    
    <item>
      <title>Haskell: Removing if statements</title>
      <link>https://markhneedham.com/blog/2012/05/12/haskell-removing-if-statements/</link>
      <pubDate>Sat, 12 May 2012 15:46:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/12/haskell-removing-if-statements/</guid>
      <description>When I was looking over my solution to the closest pairs algorithmwhich I wrote last week I realised there there were quite a few if statements, something I haven&amp;rsquo;t seen in other Haskell code I&amp;rsquo;ve read.
This is the initial version that I wrote:
dcClosest :: (Ord a, Floating a) =&amp;gt; [Point a] -&amp;gt; (Point a, Point a) dcClosest pairs if length pairs &amp;lt;= 3 then = fromJust $ bfClosest pairs else foldl (\closest (p1:p2:_) -&amp;gt; if distance (p1, p2) &amp;lt; distance closest then (p1, p2) else closest) closestPair (windowed 2 pairsWithinMinimumDelta) where sortedByX = sortBy compare pairs	(leftByX:rightByX:_) = chunk (length sortedByX `div` 2) sortedByX closestPair = if distance closestLeftPair &amp;lt; distance closestRightPair then closestLeftPair else closestRightPair where closestLeftPair = dcClosest leftByX closestRightPair = dcClosest rightByX pairsWithinMinimumDelta = sortBy (compare `on` snd) $ filter withinMinimumDelta sortedByX where withinMinimumDelta (x, _) = abs (xMidPoint - x) &amp;lt;= distance closestPair where (xMidPoint, _) = last leftByX We can remove the first if statement which checks the length of the list and replace it with pattern matching code like so:</description>
    </item>
    
    <item>
      <title>neo4j/Cypher: Finding the shortest path between two nodes while applying predicates</title>
      <link>https://markhneedham.com/blog/2012/05/12/neo4jcypher-finding-the-shortest-path-between-two-nodes-while-applying-predicates/</link>
      <pubDate>Sat, 12 May 2012 14:55:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/12/neo4jcypher-finding-the-shortest-path-between-two-nodes-while-applying-predicates/</guid>
      <description>As I mentioned in a blog post about a week agoI decided to restructure the ThoughtWorks graph I&amp;rsquo;ve modelled in neo4j so that I could explicitly model projects and clients.
As a result I had to update a traversal I&amp;rsquo;d written for finding the shortest path between two people in the graph.
The original traversal query I had was really simple because I had a direct connection between the people nodes:</description>
    </item>
    
    <item>
      <title>Haskell: Explicit type declarations in GHCI</title>
      <link>https://markhneedham.com/blog/2012/05/10/haskell-explicit-type-declarations-in-ghci/</link>
      <pubDate>Thu, 10 May 2012 07:11:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/10/haskell-explicit-type-declarations-in-ghci/</guid>
      <description>On a few occasions I&amp;rsquo;ve wanted to be able to explicitly define the type of something when trying things out in the Haskell REPL (GHCI) but I didn&amp;rsquo;t actually realise this was possible until a couple of days ago.
For example say we want to use the readfunction to parse an input string into an integer.
We could do this:
&amp;gt; read &amp;#34;1&amp;#34; :: Int 1 But if we just evaluate the function alone and try and assign the result without casting to a type we get an exception:</description>
    </item>
    
    <item>
      <title>Haskell: Closest Pairs Algorithm</title>
      <link>https://markhneedham.com/blog/2012/05/09/haskell-closest-pairs-algorithm/</link>
      <pubDate>Wed, 09 May 2012 00:05:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/09/haskell-closest-pairs-algorithm/</guid>
      <description>As I mentioned in a post a couple of days agoI&amp;rsquo;ve been writing the closest pairs algorithm in Haskell and while the brute force version works for small numbers of pairs it starts to fall apart as the number of pairs increases:
time ./closest_pairs 100 bf ./closest_pairs 100 bf 0.01s user 0.00s system 87% cpu 0.016 total time ./closest_pairs 1000 bf ./closest_pairs 1000 bf 3.59s user 0.01s system 99% cpu 3.</description>
    </item>
    
    <item>
      <title>Haskell: Generating random numbers</title>
      <link>https://markhneedham.com/blog/2012/05/08/haskell-generating-random-numbers/</link>
      <pubDate>Tue, 08 May 2012 22:09:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/08/haskell-generating-random-numbers/</guid>
      <description>As I mentioned in my last postI&amp;rsquo;ve been coding the closest pairs algorithm in Haskell and needed to create some pairs of coordinates to test it against.
I&amp;rsquo;ve tried to work out how to create lists of random numbers in Haskell before and always ended up giving up because it seemed way more difficult than it should be but this time I came across a really good explanation of how to do it by jrockway on Stack Overflow.</description>
    </item>
    
    <item>
      <title>Haskell: Maximum Int value</title>
      <link>https://markhneedham.com/blog/2012/05/07/haskell-maximum-int-value/</link>
      <pubDate>Mon, 07 May 2012 09:18:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/07/haskell-maximum-int-value/</guid>
      <description>One of the algorithms covered in Algo Classwas the closest pairs algorithm- an algorithm used to determine which pair of points on a plane are closest to each other based on their Euclidean distance.
My real interest lies in writing the divide and conquer version of the algorithm but I started with the brute force version so that I&amp;rsquo;d be able to compare my answers.
This is the algorithm:
minDist = infinity for each p in P: for each q in P: if p ≠ q and dist(p, q) &amp;lt; minDist: minDist = dist(p, q) closestPair = (p, q) return closestPair &amp;lsquo;infinity&amp;rsquo; in this case could be the maximum value that an Int could hold which on a 64 bit architecture would be 263so I hardcoded that into my implementation: o</description>
    </item>
    
    <item>
      <title>neo4j: What question do you want to answer?</title>
      <link>https://markhneedham.com/blog/2012/05/05/neo4j-what-question-do-you-want-to-answer/</link>
      <pubDate>Sat, 05 May 2012 13:20:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/05/05/neo4j-what-question-do-you-want-to-answer/</guid>
      <description>Over the past few weeks I&amp;rsquo;ve been modelling ThoughtWorks project data in neo4jand I realised that the way that I&amp;rsquo;ve been doing this is by considering what question I want to answerand then building a graph to answer it.
When I first started doing this the main question I wanted to answer was &amp;lsquo;how connected are people to each other&amp;rsquo; which led to me modelling the data like this:
The &amp;lsquo;colleagues with&amp;rsquo; relationship stored information about the project the two people had worked on together and how long they&amp;rsquo;d worked together.</description>
    </item>
    
    <item>
      <title>gephi: Centring a graph around an individual node</title>
      <link>https://markhneedham.com/blog/2012/04/30/gephi-centring-a-graph-around-an-individual-node/</link>
      <pubDate>Mon, 30 Apr 2012 22:20:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/30/gephi-centring-a-graph-around-an-individual-node/</guid>
      <description>I spent some time recently playing around with gephi- an open source platform for creating visualisations of graphs - to get a bit more insight into the ThoughtWorks graph which I&amp;rsquo;ve created in neo4j.
I followed Max De Marxi&amp;rsquo;s blog postto create a GEFX (Graph Exchange XML Format) file to use in gephi although I later learned that you can import directly from neo4j into gephi which I haven&amp;rsquo;t tried yet.</description>
    </item>
    
    <item>
      <title>Performance: Caching per request</title>
      <link>https://markhneedham.com/blog/2012/04/30/performance-caching-per-request/</link>
      <pubDate>Mon, 30 Apr 2012 21:45:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/30/performance-caching-per-request/</guid>
      <description>A couple of years ago I wrote a post describing an approach my then colleague Christian Blundenused to help improve the performance of an application where you try to do expensive things less or find another way to do them.
On the application I&amp;rsquo;m currently working on we load reference data from an Oracle database into memory based on configurations provided by the user.
There are multiple configurations and then multiple ways that those configurations can be priced so we have two nested for loops in which we load data and then perform calculations on it.</description>
    </item>
    
    <item>
      <title>Haskell: Colour highlighting when writing to the shell</title>
      <link>https://markhneedham.com/blog/2012/04/29/haskell-colour-highlighting-when-writing-to-the-shell/</link>
      <pubDate>Sun, 29 Apr 2012 00:01:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/29/haskell-colour-highlighting-when-writing-to-the-shell/</guid>
      <description>I spent a few hours writing a simple front end on top of the Rabin Karp algorithmso that I could show the line of the first occurrence of a pattern in a piece of text on the shell.
I thought it would be quite cool if I could highlight the appropriate text on the line like how grep doeswhen the &amp;lsquo;&amp;ndash;color=auto&amp;rsquo; flag is supplied.
We can make use of ANSI escape codesto do this.</description>
    </item>
    
    <item>
      <title>Haskell: Int and Integer</title>
      <link>https://markhneedham.com/blog/2012/04/28/haskell-int-and-integer/</link>
      <pubDate>Sat, 28 Apr 2012 17:39:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/28/haskell-int-and-integer/</guid>
      <description>In my last post about the Rabin Karp algorithmI mentioned that I was having some problems when trying to write a hash function which closely matched its English description.
This is my current version of the hash function:
hash = hash&amp;#39; globalR globalQ hash&amp;#39; r q string m = foldl (\acc x -&amp;gt; (r * acc + ord x) `mod` q) 0 $ take m string And my initial attempt to write the alternate version was this:</description>
    </item>
    
    <item>
      <title>Algorithms: Rabin Karp in Haskell</title>
      <link>https://markhneedham.com/blog/2012/04/25/algorithms-rabin-karp-in-haskell/</link>
      <pubDate>Wed, 25 Apr 2012 21:28:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/25/algorithms-rabin-karp-in-haskell/</guid>
      <description>I recently came across a blog post describing the Rabin Karp algorithm- an algorithm that uses hashing to find a pattern string in some text - and thought it would be interesting to try and write a version of it in Haskell.
This algorithm is typically used when we want to search for multiple pattern strings in a text e.g. when detecting plagiarism or a primitive way of detecting code duplication but my initial version only lets your search for one pattern.</description>
    </item>
    
    <item>
      <title>Algo Class: Start simple and build up</title>
      <link>https://markhneedham.com/blog/2012/04/24/algo-class-start-simple-and-build-up/</link>
      <pubDate>Tue, 24 Apr 2012 07:17:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/24/algo-class-start-simple-and-build-up/</guid>
      <description>Over the last six weeks I&amp;rsquo;ve been working through Stanford&amp;rsquo;s Design and Analysis of Algorithms Iclass and each week there&amp;rsquo;s been a programming assignment on a specific algorithm for which a huge data set is provided.
For the first couple of assignments I tried writing the code for the algorithm and then running it directly against the provided data set.
As you might imagine it never worked first time and this approach led to me becoming very frustrated because there&amp;rsquo;s no way of telling what went wrong.</description>
    </item>
    
    <item>
      <title>Coding: Is there a name for everything?</title>
      <link>https://markhneedham.com/blog/2012/04/23/coding-is-there-a-name-for-everything/</link>
      <pubDate>Mon, 23 Apr 2012 00:20:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/23/coding-is-there-a-name-for-everything/</guid>
      <description>A month ago I wrote a post describing an approach my team has been taking to avoid premature abstractionswhereby we leave code inline until we know enough about the domain to pull out meaningful classes or methods.
Since I wrote that post we&amp;rsquo;ve come across a couple of examples where there doesn&amp;rsquo;t seem to be a name to describe a data structure.
We are building a pricing engine where the input is a set of configurations and the output is a set of pricing rows associated with each configuration.</description>
    </item>
    
    <item>
      <title>neo4J: Searching for nodes by name</title>
      <link>https://markhneedham.com/blog/2012/04/20/neo4j-searching-for-nodes-by-name/</link>
      <pubDate>Fri, 20 Apr 2012 07:10:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/20/neo4j-searching-for-nodes-by-name/</guid>
      <description>As I mentioned in a post a few days ago I&amp;rsquo;ve been graphing connections between ThoughtWorks people using neo4j and wanted to build auto complete functionality so I can search for the names of people in the graph.
The solution I came up was to create a Lucene index with an entry for each node and a common property on each document in the index so that I&amp;rsquo;d be able to get all the index entries easily.</description>
    </item>
    
    <item>
      <title>Algorithms: Flood Fill in Haskell - Abstracting the common</title>
      <link>https://markhneedham.com/blog/2012/04/17/algorithms-flood-fill-in-haskell-abstracting-the-common/</link>
      <pubDate>Tue, 17 Apr 2012 07:22:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/17/algorithms-flood-fill-in-haskell-abstracting-the-common/</guid>
      <description>In the comments of my blog post describing the flood fill algorithm in HaskellDavid Turner pointed out that the way I was passing the grid around was quite error prone.
floodFill :: Array (Int, Int) Colour -&amp;gt; (Int, Int) -&amp;gt; Colour -&amp;gt; Colour -&amp;gt; Array (Int, Int) Colour floodFill grid point@(x, y) target replacement = if((not $ inBounds grid point) || grid ! (x,y) /= target) then grid else gridNorth where grid&amp;#39; = replace grid point replacement gridEast = floodFill grid&amp;#39; (x+1, y) target replacement gridWest = floodFill gridEast (x-1, y) target replacement gridSouth = floodFill gridWest (x, y+1) target replacement gridNorth = floodFill gridSouth (x, y-1) target replacement I actually did pass the wrong grid variable around while I was writing it and ended up quite confused as to why it wasn&amp;rsquo;t working as I expected.</description>
    </item>
    
    <item>
      <title>neography/neo4j/Lucene: Getting a list of all the nodes indexed</title>
      <link>https://markhneedham.com/blog/2012/04/17/neographyneo4jlucene-getting-a-list-of-all-the-nodes-indexed/</link>
      <pubDate>Tue, 17 Apr 2012 06:54:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/17/neographyneo4jlucene-getting-a-list-of-all-the-nodes-indexed/</guid>
      <description>I&amp;rsquo;ve been playing around with neo4j using the neographygem to create a graph of all the people in ThoughtWorks and the connections between them based on working with each other.
I created a UI where you could type in the names of two people and see when they&amp;rsquo;ve worked together or the path between the shortest path between them if they haven&amp;rsquo;t.
I thought it would be cool to have auto complete functionality when typing in a name but I couldn&amp;rsquo;t figure out how to partially query the index of people&amp;rsquo;s names that I&amp;rsquo;d created.</description>
    </item>
    
    <item>
      <title>Haskell: A simple parsing example using pattern matching</title>
      <link>https://markhneedham.com/blog/2012/04/15/haskell-a-simple-parsing-example-using-pattern-matching/</link>
      <pubDate>Sun, 15 Apr 2012 14:22:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/15/haskell-a-simple-parsing-example-using-pattern-matching/</guid>
      <description>As part of the second question in the Google Code JamI needed to be able to parse lines of data which looked like this:
3 1 5 15 13 11 where
This seemed like it should be easy to do but my initial search led me to the Parsec chapterin Real World Haskell which seemed a bit over the top for my problem.
All we really need to do is split on a space and then extract the parts of the resulting list.</description>
    </item>
    
    <item>
      <title>Haskell: Reading in multiple lines of arguments</title>
      <link>https://markhneedham.com/blog/2012/04/15/haskell-reading-in-multiple-lines-of-arguments/</link>
      <pubDate>Sun, 15 Apr 2012 13:44:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/15/haskell-reading-in-multiple-lines-of-arguments/</guid>
      <description>I&amp;rsquo;ve mostly avoided doing any I/O in Haskell but as part of the Google Code JamI needed to work out how to read a variable number of lines as specified by the user.
The input looks like this:
4 3 1 5 15 13 11 3 0 8 23 22 21 2 1 1 8 0 6 2 8 29 20 8 18 18 21 The first line indicates how many lines will follow.</description>
    </item>
    
    <item>
      <title>Ruby: neo4j gem - LoadError: no such file to load -- active_support/core_ext/class/inheritable_attributes</title>
      <link>https://markhneedham.com/blog/2012/04/14/ruby-neo4j-gem-loaderror-no-such-file-to-load-active_supportcore_extclassinheritable_attributes/</link>
      <pubDate>Sat, 14 Apr 2012 10:21:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/14/ruby-neo4j-gem-loaderror-no-such-file-to-load-active_supportcore_extclassinheritable_attributes/</guid>
      <description>I&amp;rsquo;ve been playing around with neo4j again over the past couple of days using the neo4j.rbgem to build up a graph.
I installed the gem but then ended up with the following error when I tried to &amp;lsquo;require neo4j&amp;rsquo; in &amp;lsquo;irb&amp;rsquo;:
LoadError: no such file to load -- active_support/core_ext/class/inheritable_attributes require at org/jruby/RubyKernel.java:1033 require at /Users/mneedham/.rbenv/versions/jruby-1.6.7/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:36 (root) at /Users/mneedham/.rbenv/versions/jruby-1.6.7/lib/ruby/gems/1.8/gems/neo4j-1.3.1-java/lib/neo4j.rb:9 require at org/jruby/RubyKernel.java:1033 require at /Users/mneedham/.rbenv/versions/jruby-1.6.7/lib/ruby/gems/1.8/gems/neo4j-1.3.1-java/lib/neo4j.rb:59 (root) at src/main/ruby/neo_test.rb:2 It seems a few others have come across this problem as welland the problem seems to be that ActiveSupport 3.</description>
    </item>
    
    <item>
      <title>Just Observe</title>
      <link>https://markhneedham.com/blog/2012/04/09/just-observe/</link>
      <pubDate>Mon, 09 Apr 2012 22:45:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/09/just-observe/</guid>
      <description>One of the most common instincts of a developer when starting on a new team is to look at the way the application has been designed and find ways that it can be done differently.
Most often &amp;lsquo;differently&amp;rsquo; means that a pattern used in a previous project will be favoured and while I think it&amp;rsquo;s good to make use of experience that we&amp;rsquo;ve gained, we do miss out on some learning if we write every application the same way.</description>
    </item>
    
    <item>
      <title>Haskell: Processing program arguments</title>
      <link>https://markhneedham.com/blog/2012/04/08/haskell-processing-program-arguments/</link>
      <pubDate>Sun, 08 Apr 2012 20:11:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/08/haskell-processing-program-arguments/</guid>
      <description>My Prismatic news feedrecently threw up an interesting tutorial titled &amp;lsquo;Haskell the Hard Way&amp;rsquo; which has an excellent and easy to understand section showing how to do IO in Haskell.
About half way down the page there&amp;rsquo;s an exercise to write a program which sums all its arguments which I thought I&amp;rsquo;d have a go at.
We need to use the System.getArgsfunction to get the arguments passed to the program. It has the following signature:</description>
    </item>
    
    <item>
      <title>Algorithms: Flood Fill in Haskell</title>
      <link>https://markhneedham.com/blog/2012/04/07/algorithms-flood-fill-in-haskell/</link>
      <pubDate>Sat, 07 Apr 2012 00:25:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/07/algorithms-flood-fill-in-haskell/</guid>
      <description>Flood fillis an algorithm used to work out which nodes are connected to a certain node in a multi dimensional array. In this case we&amp;rsquo;ll use a two dimensional array.
The idea is that we decide that we want to change the colour of one of the cells in the array and have its immediate neighbours who share its initial colour have their colour changed too i.e. the colour floods its way through the grid.</description>
    </item>
    
    <item>
      <title>Haskell: Print friendly representation of an Array</title>
      <link>https://markhneedham.com/blog/2012/04/03/haskell-print-friendly-representation-of-an-array/</link>
      <pubDate>Tue, 03 Apr 2012 21:52:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/04/03/haskell-print-friendly-representation-of-an-array/</guid>
      <description>Quite frequently I play around with 2D arrays in Haskell but I&amp;rsquo;ve never quite worked out how to print them in a way that makes it easy to see the contents.
I&amp;rsquo;m using the array from the &amp;lsquo;Data.Array&amp;rsquo; module because it seems to be easier to transform them into a new representation if I want to change a value in one of the cells.
The function to create one therefore looks like this:</description>
    </item>
    
    <item>
      <title>Haskell: Pattern matching data types with named fields</title>
      <link>https://markhneedham.com/blog/2012/03/31/haskell-pattern-matching-data-types-with-named-fields/</link>
      <pubDate>Sat, 31 Mar 2012 22:49:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/31/haskell-pattern-matching-data-types-with-named-fields/</guid>
      <description>One of my favourite things about coding in Haskell is that I often end up pattern matching against data types.
I&amp;rsquo;ve been playing around with modelling cars coming into and out from a car park and changing the state of the car park accordingly.
I started with these data type definitions:
data CarParkState = Available Bool Int Int | AlmostFull Bool Int Int | Full Bool Int deriving (Show) data Action = Entering | Leaving deriving (Show) data Sticker = Handicap | None deriving (Show) which were used in the following function:</description>
    </item>
    
    <item>
      <title>Micro Services: A simple example</title>
      <link>https://markhneedham.com/blog/2012/03/31/micro-services-a-simple-example/</link>
      <pubDate>Sat, 31 Mar 2012 09:06:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/31/micro-services-a-simple-example/</guid>
      <description>In our code base we had the concept of a &amp;lsquo;ProductSpeed&amp;rsquo; with two different constructors which initialised the object in different ways:
public class ProductSpeed { public ProductSpeed(String name) { ... } public ProductSpeed(String name, int order)) { } } In the cases where the first constructor was used the order of the product was irrelevant.
When the second constructor was used we did care about it because we wanted to be able sort the products before showing them in a drop down list to the user.</description>
    </item>
    
    <item>
      <title>IntelliJ: Find/Replace using regular expressions with capture groups</title>
      <link>https://markhneedham.com/blog/2012/03/30/intellij-findreplace-using-regular-expressions-with-capture-groups/</link>
      <pubDate>Fri, 30 Mar 2012 06:21:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/30/intellij-findreplace-using-regular-expressions-with-capture-groups/</guid>
      <description>Everyone now and then we end up having to write a bunch of mapping code and I quite like using IntelliJ&amp;rsquo;s &amp;lsquo;Replace&amp;rsquo; option to do it but always end up spending about 5 minutes trying to remember how to do capture groups so I thought I&amp;rsquo;d write it down this time.
Given the following text in our file:
val mark = 0 val dave = 0 val john = 0 val alex = 0 Let&amp;rsquo;s say we wanted to prefix each of those names with &amp;lsquo;cool&amp;rsquo; and had decided not to use Column mode for whatever reason.</description>
    </item>
    
    <item>
      <title>Readability/Performance</title>
      <link>https://markhneedham.com/blog/2012/03/29/readabilityperformance/</link>
      <pubDate>Thu, 29 Mar 2012 06:45:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/29/readabilityperformance/</guid>
      <description>I recently read the Graphite chapterof The Architecture of Open Source Applicationsbook which mostly tells the story of how Chris Davis incrementally built out Graphite- a pretty cool tool that can be used to do real time graphing of metrics.
The whole chapter is a very good read but I found the design reflections especially interesting:
One of the main success criteria of the application that I&amp;rsquo;m currently working on is its performance - it doesn&amp;rsquo;t have millisecond-ish latency requirements but it does need to do a lot of calculations and return within a reasonable amount of time.</description>
    </item>
    
    <item>
      <title>Testing: Trying not to overdo it</title>
      <link>https://markhneedham.com/blog/2012/03/28/testing-trying-not-to-overdo-it/</link>
      <pubDate>Wed, 28 Mar 2012 00:10:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/28/testing-trying-not-to-overdo-it/</guid>
      <description>The design of the code which contains the main logic of the application that I&amp;rsquo;m currently working on looks a bit like the diagram on the right hand side:
We load a bunch of stuff from an Oracle database, construct some objects from the data and then invoke a sequence of methods on those objects in order to execute our domain logic.
Typically we might expect to see unit level test against all the classes described in this diagram but we&amp;rsquo;ve actually been trying out an approach where we don&amp;rsquo;t test the orchestration code directly but rather only test it via the resource which makes use of it.</description>
    </item>
    
    <item>
      <title>Haskell: Memoization using the power of laziness</title>
      <link>https://markhneedham.com/blog/2012/03/24/haskell-memoization-using-the-power-of-laziness/</link>
      <pubDate>Sat, 24 Mar 2012 12:28:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/24/haskell-memoization-using-the-power-of-laziness/</guid>
      <description>I&amp;rsquo;ve been trying to solve problem 15 of Project Eulerwhich requires you to find the number of routes that can be taken to navigate from the top corner of a grid down to the bottom right corner.
For example there are six routes across a 2x2 grid:
My initial solution looked like this:
routes :: (Int, Int) -&amp;gt; Int -&amp;gt; Int routes origin size = inner origin size where inner origin@(x, y) size | x == size &amp;amp;&amp;amp; y == size = 0 | x == size || y == size = 1 | otherwise = inner (x+1, y) size + inner (x, y+1) size Which can be called like this:</description>
    </item>
    
    <item>
      <title>Saving the values of dynamically populated dropdown on back button</title>
      <link>https://markhneedham.com/blog/2012/03/24/saving-the-values-of-dynamically-populated-dropdown-on-back-button/</link>
      <pubDate>Sat, 24 Mar 2012 00:40:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/24/saving-the-values-of-dynamically-populated-dropdown-on-back-button/</guid>
      <description>We wanted to be able to retain the value of a drop down menu that was being dynamically populated (via an AJAX call) when the user hit the back button but the AJAX request re-runs when we go hit back therefore losing our selection.
Our initial thinking was that we might be able to store the value of the dropdown in a hidden field and then restore it into the dropdown using jQuery on page load but that approach didn&amp;rsquo;t work since hidden fields don&amp;rsquo;t seem to retain their values when you hit back.</description>
    </item>
    
    <item>
      <title>Oracle Spatial: Querying by a point/latitude/longitude</title>
      <link>https://markhneedham.com/blog/2012/03/23/oracle-spatial-querying-by-a-pointlatitudelongitude/</link>
      <pubDate>Fri, 23 Mar 2012 23:54:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/23/oracle-spatial-querying-by-a-pointlatitudelongitude/</guid>
      <description>We&amp;rsquo;re using Oracle Spatial on the application I&amp;rsquo;m working on and while most of the time any spatial queries we make are done from Java code we wanted to be able to run them directly from SQL as well to verify the code was working correctly.
We normally end up forgetting how to construct a query so I thought I&amp;rsquo;d document it.
Assuming we have a table table_with_shapewhich has a column shapewhich is a polygon, if we want to check whether a lat/long value interacts with that shape we can do that with the following query:</description>
    </item>
    
    <item>
      <title>Functional Programming: Handling the Options</title>
      <link>https://markhneedham.com/blog/2012/03/21/functional-programming-handling-the-options/</link>
      <pubDate>Wed, 21 Mar 2012 00:50:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/21/functional-programming-handling-the-options/</guid>
      <description>A couple of weeks ago Channing Walton tweeted the following:
As Channing points out in the comments he was referring to unguarded calls to &amp;lsquo;get&amp;rsquo; which would lead to an exception if the Option was empty, therefore pretty much defeating the point of using an Option in the first place!
We&amp;rsquo;re using Dan Bodart&amp;rsquo;s totallylazylibrary on the application I&amp;rsquo;m currently working on and in fact were calling &amp;lsquo;get&amp;rsquo; on an Option so I wanted to see if we could get rid of it.</description>
    </item>
    
    <item>
      <title>Haskell: Newbie currying mistake</title>
      <link>https://markhneedham.com/blog/2012/03/20/haskell-newbie-currying-mistake/</link>
      <pubDate>Tue, 20 Mar 2012 23:55:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/20/haskell-newbie-currying-mistake/</guid>
      <description>As I mentioned in my last postI&amp;rsquo;ve spent a bit of this evening writing a merge sort function and one of the mistakes I made a few times was incorrectly passing arguments to the recursive calls of &amp;lsquo;merge&amp;rsquo;.
For example, this is one of the earlier versions of the function:
middle :: [Int] -&amp;gt; Int middle = floor . (\y -&amp;gt; y / 2) . fromIntegral . length	msort :: [Int] -&amp;gt; [Int] msort unsorted = let n = middle unsorted in if n == 0 then unsorted else let (left, right) = splitAt n unsorted in merge (msort left) (msort right) where merge [] right = right merge left [] = left merge left@(x:xs) right@(y:ys) = if x &amp;lt; y then x : merge(xs, right) else y : merge (left, ys) Which doesn&amp;rsquo;t actually compile:</description>
    </item>
    
    <item>
      <title>Haskell: Chaining functions to find the middle value in a collection</title>
      <link>https://markhneedham.com/blog/2012/03/20/haskell-chaining-functions-to-find-the-middle-value-in-a-collection/</link>
      <pubDate>Tue, 20 Mar 2012 23:36:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/20/haskell-chaining-functions-to-find-the-middle-value-in-a-collection/</guid>
      <description>I&amp;rsquo;ve been playing around with writing merge sort in Haskell and eventually ended up with the following function:
msort :: [Int] -&amp;gt; [Int] msort unsorted = let n = floor (fromIntegral(length unsorted) / 2) in if n == 0 then unsorted else let (left, right) = splitAt n unsorted in merge (msort left) (msort right) where merge [] right = right merge left [] = left merge left@(x:xs) right@(y:ys) = if x &amp;lt; y then x : merge xs right else y : merge left ys The 3rd line was annoying me as it has way too many brackets on it and I was fairly sure that it should be possible to just combine the functions like I learnt to do in F# a few years ago.</description>
    </item>
    
    <item>
      <title>Scala: Counting number of inversions (via merge sort) for an unsorted collection</title>
      <link>https://markhneedham.com/blog/2012/03/20/scala-counting-number-of-inversions-via-merge-sort-for-an-unsorted-collection/</link>
      <pubDate>Tue, 20 Mar 2012 06:53:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/20/scala-counting-number-of-inversions-via-merge-sort-for-an-unsorted-collection/</guid>
      <description>The first programming questions of algo-classrequires you to calculate the number of inversions it would take using merge sort to sort a collection in ascending order.
I found quite a nice explanation here too:
e.g.
2 4 1 3 5
1 2 3 4 5
The sequence 2, 4, 1, 3, 5 has three inversions (2,1), (4,1), (4,3).
The simple/naive way of solving this problem is to iterate through the collection in two loops and compare each value and its current index with the others, looking for ones which are not in the right order.</description>
    </item>
    
    <item>
      <title>Functional Programming: One function at a time</title>
      <link>https://markhneedham.com/blog/2012/03/19/functional-programming-one-function-at-a-time/</link>
      <pubDate>Mon, 19 Mar 2012 23:25:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/19/functional-programming-one-function-at-a-time/</guid>
      <description>As I mentioned in an earlier post I got a bit stuck working out all the diagonals in the 20x20 grid of Project Euler problem 11and my colleague Uday ended up showing me how to do it.
I realised while watching him solve the problem that we&amp;rsquo;d been using quite different approaches to solving the problem and that his way worked way better than mine, at least in this context.</description>
    </item>
    
    <item>
      <title>Coding: Wait for the abstractions to emerge</title>
      <link>https://markhneedham.com/blog/2012/03/17/coding-wait-for-the-abstractions-to-emerge/</link>
      <pubDate>Sat, 17 Mar 2012 11:19:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/17/coding-wait-for-the-abstractions-to-emerge/</guid>
      <description>One of the things that I&amp;rsquo;ve learnt while developing code in an incremental way is that the way the code should be designed isn&amp;rsquo;t going to be obvious straight away so we need to be patience and wait for it to emerge.
There&amp;rsquo;s often a tendency to pull out classes or methods but more recently I&amp;rsquo;ve been trying to follow an approach where I leave the code in one class/method and play around with/study it until I see a good abstraction to make.</description>
    </item>
    
    <item>
      <title>Mercurial: hg push to Google Code</title>
      <link>https://markhneedham.com/blog/2012/03/14/mercurial-hg-push-to-google-code/</link>
      <pubDate>Wed, 14 Mar 2012 21:25:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/14/mercurial-hg-push-to-google-code/</guid>
      <description>I wanted to make a change to add flatMapto Optionin totallylazyso I had to clone the repositoryand make the change.
I thought I&amp;rsquo;d then be able to just push the change using my Google user name and password but instead ended up with the following error:
➜ mhneedham-totally-lazy hg push pushing to https://m.h.needham@code.google.com/r/mhneedham-totally-lazy/ searching for changes 1 changesets found http authorization required realm: Google Code hg Repository user: m.h.needham password: abort: HTTP Error 403: Forbidden It turns out that you need to specifically set an option to use your Google account from the settings page:</description>
    </item>
    
    <item>
      <title>Functional Programming: Shaping the data to fit a function</title>
      <link>https://markhneedham.com/blog/2012/03/13/functional-programming-shaping-the-data-to-fit-a-function/</link>
      <pubDate>Tue, 13 Mar 2012 22:55:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/13/functional-programming-shaping-the-data-to-fit-a-function/</guid>
      <description>As I mentioned in my last post I&amp;rsquo;ve been working on Project Euler problem 11 and one thing I noticed was that I was shaping the data around a windowedfunction since it seemed to fit the problem quite well.
Problem 11is defined like so:
The product of these numbers is 26 63 78 14 = 1788696.
What is the greatest product of four adjacent numbers in any direction (up, down, left, right, or diagonally) in the 20x20 grid?</description>
    </item>
    
    <item>
      <title>Haskell: Couldn&#39;t match expected type `Int&#39; with actual type `Integer&#39;</title>
      <link>https://markhneedham.com/blog/2012/03/13/haskell-couldnt-match-expected-type-int-with-actual-type-integer/</link>
      <pubDate>Tue, 13 Mar 2012 19:42:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/13/haskell-couldnt-match-expected-type-int-with-actual-type-integer/</guid>
      <description>One of the most frequent compilation error messages that I&amp;rsquo;ve been getting while working through the Project Euler problems in Haskell is the following:
Couldn&amp;#39;t match expected type `Int&amp;#39; with actual type `Integer&amp;#39; In problem 11, for example, I define the grid of numbers like so:
grid = [[08,02,22,97,38,15,00,40,00,75,04,05,07,78,52,12,50,77,91,08], [49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48,04,56,62,00], [81,49,31,73,55,79,14,29,93,71,40,67,53,88,30,03,49,13,36,65], [52,70,95,23,04,60,11,42,69,24,68,56,01,32,56,71,37,02,36,91], [22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80], [24,47,32,60,99,03,45,02,44,75,33,53,78,36,84,20,35,17,12,50], [32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70], [67,26,20,68,02,62,12,20,95,63,94,39,63,08,40,91,66,49,94,21], [24,55,58,05,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72], [21,36,23,09,75,00,76,44,20,45,35,14,00,61,33,97,34,31,33,95], [78,17,53,28,22,75,31,67,15,94,03,80,04,62,16,14,09,53,56,92], [16,39,05,42,96,35,31,47,55,58,88,24,00,17,54,24,36,29,85,57], [86,56,00,48,35,71,89,07,05,44,44,37,44,60,21,58,51,54,17,58], [19,80,81,68,05,94,47,69,28,73,92,13,86,52,17,77,04,89,55,40], [04,52,08,83,97,35,99,16,07,97,57,32,16,26,26,79,33,27,98,66], [88,36,68,87,57,62,20,72,03,46,33,67,46,55,12,32,63,93,53,69], [04,42,16,73,38,25,39,11,24,94,72,18,08,46,29,32,40,62,76,36], [20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74,04,36,16], [20,73,35,29,78,31,90,01,74,31,49,71,48,86,81,16,23,57,05,54], [01,70,54,71,83,51,54,69,16,92,33,48,61,43,52,01,89,19,67,48]] Which has the following type:</description>
    </item>
    
    <item>
      <title>Choosing where to put the complexity</title>
      <link>https://markhneedham.com/blog/2012/03/06/choosing-where-to-put-the-complexity/</link>
      <pubDate>Tue, 06 Mar 2012 01:17:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/03/06/choosing-where-to-put-the-complexity/</guid>
      <description>On the current application I&amp;rsquo;m working on we need to make use of some data which comes from another system so we&amp;rsquo;ve created an import script which creates a copy of that data so that we can use it in our application.
In general we&amp;rsquo;ve been trying not to do too much manipulation of the data and keeping it close to the initial structure so that if something goes wrong with the import we can more easily trace the problem back to the original data source.</description>
    </item>
    
    <item>
      <title>Haskell: Creating a sliding window over a collection</title>
      <link>https://markhneedham.com/blog/2012/02/28/haskell-creating-a-sliding-window-over-a-collection/</link>
      <pubDate>Tue, 28 Feb 2012 00:21:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/28/haskell-creating-a-sliding-window-over-a-collection/</guid>
      <description>A couple of years ago when I was playing around with F# I came across the Seq.windowedfunction which allows you to create a sliding window of a specific size over a collection.
Taking an example from the F# documentation page:
let seqNumbers = [ 1.0; 1.5; 2.0; 1.5; 1.0; 1.5 ] :&amp;gt; seq&amp;lt;float&amp;gt; let seqWindows = Seq.windowed 3 seqNumbers We end up with this:
Initial sequence: 1.0 1.5 2.0 1.5 1.</description>
    </item>
    
    <item>
      <title>Haskell: Getting the nth element in a list</title>
      <link>https://markhneedham.com/blog/2012/02/28/haskell-getting-the-nth-element-in-a-list/</link>
      <pubDate>Tue, 28 Feb 2012 00:02:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/28/haskell-getting-the-nth-element-in-a-list/</guid>
      <description>I started trying to solve some of the Project Euler problemsas a way to learn a bit of Haskell and problem 7is defined like so:
What is the 10 001st prime number?
I read that the Sieve of Eratosthenesis a useful algorithm for working out all the prime numbers and there&amp;rsquo;s a page on the Literate Programs wiki explaining how to derive them using it.
The most naive implementation of all the primes ends up reading like this:</description>
    </item>
    
    <item>
      <title>Java: Faking a closure with a factory to create a domain object</title>
      <link>https://markhneedham.com/blog/2012/02/26/java-faking-a-closure-with-a-factory-to-create-a-domain-object/</link>
      <pubDate>Sun, 26 Feb 2012 00:09:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/26/java-faking-a-closure-with-a-factory-to-create-a-domain-object/</guid>
      <description>Recently we wanted to create a domain object which needed to have an external dependency in order to do a calculation and we wanted to be able to stub out that dependency in our tests.
Originally we were just new&amp;rsquo;ing up the dependency inside the domain class but that makes it impossible to control it&amp;rsquo;s value in a test.
Equally it didn&amp;rsquo;t seem like we should be passing that dependency into the constructor of the domain object since it&amp;rsquo;s not a piece of state which defines the object, just something that it uses.</description>
    </item>
    
    <item>
      <title>Haskell: Viewing the steps of a reduce</title>
      <link>https://markhneedham.com/blog/2012/02/25/haskell-viewing-the-steps-of-a-reduce/</link>
      <pubDate>Sat, 25 Feb 2012 23:40:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/25/haskell-viewing-the-steps-of-a-reduce/</guid>
      <description>I&amp;rsquo;ve been playing around with Haskell a bit over the last week and in the bit of code I was working on I wanted to fold over a collection but see the state of the fold after each step.
I remembered Don Syme showing me how to do something similar during the F# Exchange last year while we were writing some code to score a tennis gameby using Seq.scan.
I didn&amp;rsquo;t realise there was also a scan function in Haskell which could be defined in terms of foldlif we wanted to:</description>
    </item>
    
    <item>
      <title>Thou shalt storm</title>
      <link>https://markhneedham.com/blog/2012/02/24/thou-shalt-storm/</link>
      <pubDate>Fri, 24 Feb 2012 02:03:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/24/thou-shalt-storm/</guid>
      <description>On the majority of the teams that I&amp;rsquo;ve worked on there&amp;rsquo;s been a time where everyone seems to be disagreeing with each other about almost everything and the whole situation becomes pretty tense for all involved.
The first time I came across this it seemed quite dysfunctional but I was introduced to Bruce Tuckman&amp;rsquo;s model of group developmentwhich helps to explain what&amp;rsquo;s going on.
Tuckman outlines four stages which teams tend to go through - forming, storming, norming and performing.</description>
    </item>
    
    <item>
      <title>Optimising for typing</title>
      <link>https://markhneedham.com/blog/2012/02/21/optimising-for-typing/</link>
      <pubDate>Tue, 21 Feb 2012 22:21:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/21/optimising-for-typing/</guid>
      <description>My colleague Ola Bini recently wrote a post describing his thoughts on the syntax of programming languagesand while the post in general is interesting the bit that most resonates with me at the moment is the following:
On the application I&amp;rsquo;m currently working on we have a full time DBA on the team who favours a much more concise style of naming in tables than most developers would be used to.</description>
    </item>
    
    <item>
      <title>Coding: Packaging by vertical slice</title>
      <link>https://markhneedham.com/blog/2012/02/20/coding-packaging-by-vertical-slice/</link>
      <pubDate>Mon, 20 Feb 2012 21:54:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/20/coding-packaging-by-vertical-slice/</guid>
      <description>On most of the applications I&amp;rsquo;ve worked on we&amp;rsquo;ve tended to organise/package classes by the function that they have or the layer that they fit in.
A typical package structure might therefore end up looking like this:
This works reasonably well and allows you to find code which is similar in function but I find that more often than not a lot of the code that lives immediately around where you currently are isn&amp;rsquo;t actually relevant at the time.</description>
    </item>
    
    <item>
      <title>Tech Leads &amp; The Progress Principle</title>
      <link>https://markhneedham.com/blog/2012/02/18/tech-leads-the-progress-principle/</link>
      <pubDate>Sat, 18 Feb 2012 01:31:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/18/tech-leads-the-progress-principle/</guid>
      <description>I&amp;rsquo;ve been reading The Progress Principleon and off for the last couple of months and one of my favourite quotes from the book is the following:
While a tech lead might not like to be referred to as a manager I think part of the role does involve helping developers to make progressand the best ones I&amp;rsquo;ve worked with seem to do that instinctively.
They&amp;rsquo;re able to see when someone has got very stuck with what they&amp;rsquo;re doing and can then work out whether they just need to provide some advice on how they can move forward or if that&amp;rsquo;s not working they can come and work together on the problem.</description>
    </item>
    
    <item>
      <title>Reading Code: boilerpipe</title>
      <link>https://markhneedham.com/blog/2012/02/13/reading-code-boilerpipe/</link>
      <pubDate>Mon, 13 Feb 2012 21:16:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/13/reading-code-boilerpipe/</guid>
      <description>I&amp;rsquo;m a big fan of the iPad application Flipboard, especially it&amp;rsquo;s ability to filter out the non important content on web pages and just show me the main content so I&amp;rsquo;ve been looking around at open source libraries which provide that facility.
I came across a quora page where someone had asked how this was doneand the suggested libraries were readability, Gooseand boilerpipe.
boilerpipe was written by Christian Kohlschütter and has a corresponding paperand videoas well.</description>
    </item>
    
    <item>
      <title>Oracle Spatial: java.sql.SQLRecoverableException: No more data to read from socket</title>
      <link>https://markhneedham.com/blog/2012/02/11/oracle-spatial-java-sql-sqlrecoverableexception-no-more-data-to-read-from-socket/</link>
      <pubDate>Sat, 11 Feb 2012 10:55:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/11/oracle-spatial-java-sql-sqlrecoverableexception-no-more-data-to-read-from-socket/</guid>
      <description>We&amp;rsquo;re using Oracle Spatial on my current project so that we can locate points within geographical regions and decided earlier in the week to rename the table where we store the SDO_GEOMETRYobjects for each region.
We did that by using a normal table alter statement but then started seeing the following error when we tried to insert test data in that column which takes an SDO_GEOMETRY object:
org.hibernate.exception.JDBCConnectionException: could not execute native bulk manipulation query at org.</description>
    </item>
    
    <item>
      <title>Java: Fooled by java.util.Arrays.asList</title>
      <link>https://markhneedham.com/blog/2012/02/11/java-fooled-by-java-util-arrays-aslist/</link>
      <pubDate>Sat, 11 Feb 2012 10:29:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/11/java-fooled-by-java-util-arrays-aslist/</guid>
      <description>I&amp;rsquo;ve been playing around with the boilerpipecode base by writing some tests around it to check my understanding but ran into an interesting problem using java.util.Arrays.asListto pass a list into one of the functions.
I was testing the BlockProximityFusionclass which is used to merge together adjacent text blocks.
I started off calling that class like this:
import static java.util.Arrays.asList; @Test public void willCallBlockProximityFustion() throws Exception { TextDocument document = new TextDocument(asList(contentBlock(&amp;#34;some words&amp;#34;), contentBlock(&amp;#34;followed by more words&amp;#34;))); BlockProximityFusion.</description>
    </item>
    
    <item>
      <title>Downloading the JDK 6 source code</title>
      <link>https://markhneedham.com/blog/2012/02/11/downloading-the-jdk-6-source-code/</link>
      <pubDate>Sat, 11 Feb 2012 10:02:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/11/downloading-the-jdk-6-source-code/</guid>
      <description>Every now and then I want to get the JDK source code onto a new machine and it always seems to take me longer than I expect it to so this post is an attempt to help future me!
Googling for this takes me to this pageand I always think I&amp;rsquo;ll just checkout the SVN repositoryand hook that up but it doesn&amp;rsquo;t seem to be available.
$ wget -S http://java.net/projects/jdk-jrl-sources/ --2012-02-11 09:51:34-- http://java.</description>
    </item>
    
    <item>
      <title>Delivery approach and constraints</title>
      <link>https://markhneedham.com/blog/2012/02/08/delivery-approach-and-constraints/</link>
      <pubDate>Wed, 08 Feb 2012 22:34:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/08/delivery-approach-and-constraints/</guid>
      <description>In my latest post I described an approach we&amp;rsquo;d been taking when analysing how to rewrite part of an existing system so that we could build the new version in an incremental way.
Towards the end I pointed out that we weren&amp;rsquo;t actually going to be using an incremental approach as we&amp;rsquo;d initially thought which was due to a couple of constraints that we have to work under.
Unfortunately we later on came to learn that it takes around 6-9 months to provision production hardware.</description>
    </item>
    
    <item>
      <title>Looking for the seam</title>
      <link>https://markhneedham.com/blog/2012/02/06/looking-for-the-seam/</link>
      <pubDate>Mon, 06 Feb 2012 22:22:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/06/looking-for-the-seam/</guid>
      <description>During December/early January we spent some time analysing an existing system which we were looking to rewrite and our approach was to look for how we could do this in an incremental way.
In order to do that we needed to look for what Michael Feathers refers to as a seam:
On previous times when I&amp;rsquo;ve been thinking about seams it&amp;rsquo;s been at a code level inside a single application but this time there were more than one pieces interacting.</description>
    </item>
    
    <item>
      <title>Scala: Converting a scala collection to java.util.List</title>
      <link>https://markhneedham.com/blog/2012/02/05/scala-converting-a-scala-collection-to-java-util-list/</link>
      <pubDate>Sun, 05 Feb 2012 21:40:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/02/05/scala-converting-a-scala-collection-to-java-util-list/</guid>
      <description>I&amp;rsquo;ve been playing around a little with Goose- a library for extracting the main body of text from web pages - and I thought I&amp;rsquo;d try converting some of the code to be more scala-esque in style.
The API of the various classes/methods is designed so it&amp;rsquo;s interoperable with Java code but in order to use functions like map/filter we need the collection to be a Scala one.
That&amp;rsquo;s achieved by importing &amp;lsquo;scala.</description>
    </item>
    
    <item>
      <title>Oracle: dbstart - ORACLE_HOME_LISTNER is not SET, unable to auto-start Oracle Net Listener</title>
      <link>https://markhneedham.com/blog/2012/01/26/oracle-dbstart-oracle_home_listner-is-not-set-unable-to-auto-start-oracle-net-listener/</link>
      <pubDate>Thu, 26 Jan 2012 21:58:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/26/oracle-dbstart-oracle_home_listner-is-not-set-unable-to-auto-start-oracle-net-listener/</guid>
      <description>We ran into an interesting problem when trying to start up an Oracle instance using dbstartwhereby we were getting the following error:
-bash-3.2$ dbstart ORACLE_HOME_LISTNER is not SET, unable to auto-start Oracle Net Listener Usage: /u01/app/oracle/product/11.2.0/dbhome_1/bin/dbstart ORACLE_HOME Processing Database instance &amp;#34;orcl&amp;#34;: log file /u01/app/oracle/product/11.2.0/dbhome_1/startup.log Ignoring the usage message we thought that setting the environment variable was what we needed to do, but&amp;hellip;
-bash-3.2$ export ORACLE_HOME_LISTNER=$ORACLE_HOME -bash-3.2$ dbstart ORACLE_HOME_LISTNER is not SET, unable to auto-start Oracle Net Listener Usage: /u01/app/oracle/product/11.</description>
    </item>
    
    <item>
      <title>Developer machine automation: Dependencies</title>
      <link>https://markhneedham.com/blog/2012/01/24/developer-machine-automation-dependencies/</link>
      <pubDate>Tue, 24 Jan 2012 23:16:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/24/developer-machine-automation-dependencies/</guid>
      <description>As I mentioned in a post last weekwe&amp;rsquo;ve been automating the setup of our developer machines with puppet over the last week and one thing that we&amp;rsquo;ve learnt is that you need to be careful about how you define dependencies.
The aim is to get your scripts to the point where the outcome is reasonably deterministic so that we can have confidence they&amp;rsquo;re going to work the next we run them.</description>
    </item>
    
    <item>
      <title>Playing around with pomodoros</title>
      <link>https://markhneedham.com/blog/2012/01/22/playing-around-with-pomodoros/</link>
      <pubDate>Sun, 22 Jan 2012 21:25:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/22/playing-around-with-pomodoros/</guid>
      <description>Over the last 3/4 months I&amp;rsquo;ve been playing around with the idea of using pomodorosto track all coding/software related stuff that I do outside of work.
I originally started using this technique while I was doing the programming assignments for ml-classbecause I wanted to know how much time I was spending on it each week and make sure I didn&amp;rsquo;t run down rabbit holes too often.
One interesting observation that I noticed from keeping the data of these pomodoros was that while during the early programming assignments it would take me 7 or 8 pomodoros to finish, by the end it was down to around 4.</description>
    </item>
    
    <item>
      <title>Installing Puppet on Oracle Linux</title>
      <link>https://markhneedham.com/blog/2012/01/18/installing-puppet-on-oracle-linux/</link>
      <pubDate>Wed, 18 Jan 2012 00:30:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/18/installing-puppet-on-oracle-linux/</guid>
      <description>We&amp;rsquo;ve been spending some time trying to setup our developer environment on a Oracle Linux 5.7 build and one of the first steps was to install Puppet as we&amp;rsquo;ve already created scripts which automate the installation of most things.
Unfortunately Oracle Linux builds don&amp;rsquo;t come with any yum repos configured so when you run the following command&amp;hellip;
ls -alh /etc/yum.repos.d/ &amp;hellip;you don&amp;rsquo;t see anything :(
We eventually realised that there are a list of public yum repositories on the Oracle website, of which we needed to download the definition for Oracle Linux 5 like so:</description>
    </item>
    
    <item>
      <title>Application footprint</title>
      <link>https://markhneedham.com/blog/2012/01/16/application-footprint/</link>
      <pubDate>Mon, 16 Jan 2012 01:40:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/16/application-footprint/</guid>
      <description>I recently came across Carl Erickson&amp;rsquo;s &amp;lsquo;small teams are dramatically more efficient than large teams&amp;rsquo; blog post which reminded me of something which my colleague Ashoksuggested as a useful way for determining team size - the application footprint.
As I understand it the application footprint is applicable for an application at a given point in time and determines how many parallel tasks/streams of work we have.
In the case of the project that I&amp;rsquo;m currently working on there are 3 separate components which need to interact with each other via an API but otherwise are independent.</description>
    </item>
    
    <item>
      <title>Focused Retrospectives: things to watch for</title>
      <link>https://markhneedham.com/blog/2012/01/16/focused-retrospectives-things-to-watch-for/</link>
      <pubDate>Mon, 16 Jan 2012 01:01:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/16/focused-retrospectives-things-to-watch-for/</guid>
      <description>A few weeks ago a slide deck from an Esther Derby presentation on retrospectiveswas doing the rounds on twitter and one thing that I found interesting in the deck was the suggestion that a retrospective needs to be focused in some way.
I&amp;rsquo;ve participated in a few focused retrospectives over the past 7/8 months and I think there are some things to be careful about when we decide to focus on something specific rather than just looking back at a time period in general.</description>
    </item>
    
    <item>
      <title>Wireshark: Following HTTP requests/responses</title>
      <link>https://markhneedham.com/blog/2012/01/14/wireshark-following-http-requestsresponses/</link>
      <pubDate>Sat, 14 Jan 2012 23:20:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/14/wireshark-following-http-requestsresponses/</guid>
      <description>I like using Wiresharkto have a look at the traffic going across different interfaces but because it shows what&amp;rsquo;s happening across the wire by the packet it&amp;rsquo;s quite difficult to tell what a request/response looked like.
I&amp;rsquo;ve been playing around with restfulie/Vraptortoday so I wanted to be able to see the request/response pair when something wasn&amp;rsquo;t working.
I didn&amp;rsquo;t know it was actually possible but this post on StackOverflow describes how.</description>
    </item>
    
    <item>
      <title>Oracle: exp -  EXP-00008: ORACLE error 904 encountered/ORA-00904: &#34;POLTYP&#34;: invalid identifier</title>
      <link>https://markhneedham.com/blog/2012/01/13/oracle-exp-exp-00008-oracle-error-904-encounteredora-00904-poltyp-invalid-identifier/</link>
      <pubDate>Fri, 13 Jan 2012 21:46:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/13/oracle-exp-exp-00008-oracle-error-904-encounteredora-00904-poltyp-invalid-identifier/</guid>
      <description>I spent a bit of time this afternoon trying to export an Oracle test database so that we could use it locally using the exptool.
I had to connect to exp like this:
exp user/password@remote_address And then filled in the other parameters interactively.
Unfortunately when I tried to actually export the specified tables I got the following error message:
EXP-00008: ORACLE error 904 encountered ORA-00904: &amp;#34;POLTYP&amp;#34;: invalid identifier EXP-00000: Export terminated unsuccessfully I eventually came across Oyvind Isene&amp;rsquo;s blog post which pointed out that you&amp;rsquo;d get this problem if you tried to export a 10g database using an 11g clientwhich is exactly what I was trying to do!</description>
    </item>
    
    <item>
      <title>Learning Android: Roboguice - Injecting context into PreferenceManager</title>
      <link>https://markhneedham.com/blog/2012/01/12/learning-android-roboguice-injecting-context-into-preferencemanager/</link>
      <pubDate>Thu, 12 Jan 2012 17:24:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/12/learning-android-roboguice-injecting-context-into-preferencemanager/</guid>
      <description>In my last post I showed how I&amp;rsquo;d been able to write a test around saved preferences in my app by making use of a ShadowPreferenceManagerbut it seemed a bit hacky.
I didn&amp;rsquo;t want to have to do that for every test where I dealt with preferences - I thought it&amp;rsquo;d be better if I could wrap the preferences in an object of my own and then inject it where necessary.</description>
    </item>
    
    <item>
      <title>Learning Android: Robolectric - Testing details got saved to SharedPreferences</title>
      <link>https://markhneedham.com/blog/2012/01/10/learning-android-testing-details-got-saved-to-sharedpreferences/</link>
      <pubDate>Tue, 10 Jan 2012 09:53:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/10/learning-android-testing-details-got-saved-to-sharedpreferences/</guid>
      <description>I&amp;rsquo;ve been writing some tests around an app I&amp;rsquo;ve been working on using the Robolectrictesting framework and one thing I wanted to do was check that an OAuth token/secret were being saved to the user&amp;rsquo;s preferences.
The code that saved the preferences looked like this:
public class AuthoriseWithTwitterActivity extends RoboActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(intent); ... save(&amp;#34;fakeToken&amp;#34;, &amp;#34;fakeSecret&amp;#34;); ... } private void save(String userKey, String userSecret) { SharedPreferences settings = PreferenceManager.</description>
    </item>
    
    <item>
      <title>Learning Android: Getting android-support jar/compatability package as a Maven dependency</title>
      <link>https://markhneedham.com/blog/2012/01/08/learning-android-getting-android-support-jarcompatability-package-as-a-maven-dependency/</link>
      <pubDate>Sun, 08 Jan 2012 20:56:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/08/learning-android-getting-android-support-jarcompatability-package-as-a-maven-dependency/</guid>
      <description>In the app I&amp;rsquo;m working on I make use of the ViewPager classwhich is only available in the compatibility package from revisions 3 upwards.
Initially I followed the instructions on the developer guideto get hold of the jar but now that I&amp;rsquo;m trying to adapt my code to fit the RobolectricSample, as I mentioned in my previous post, I needed to hook it up as a Maven dependency.
I added the dependency to my pom.</description>
    </item>
    
    <item>
      <title>Learning Android: java.lang.OutOfMemoryError: Java heap space with android-maven-plugin</title>
      <link>https://markhneedham.com/blog/2012/01/07/learning-android-java-lang-outofmemoryerror-java-heap-space-with-android-maven-plugin/</link>
      <pubDate>Sat, 07 Jan 2012 17:14:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/07/learning-android-java-lang-outofmemoryerror-java-heap-space-with-android-maven-plugin/</guid>
      <description>I&amp;rsquo;ve been trying to adapt my Android application to fit into the structure of the RobolectricSampleso that I can add some tests around my code but I was running into a problem when trying to deploy the application.
To deploy the application you need to run the following command:
mvn package android:deploy Which was resulting in the following error:
[INFO] UNEXPECTED TOP-LEVEL ERROR: [INFO] java.lang.OutOfMemoryError: Java heap space [INFO] at com.</description>
    </item>
    
    <item>
      <title>Learning Android: Freezing the UI with a BroadcastReceiver</title>
      <link>https://markhneedham.com/blog/2012/01/06/learning-android-freezing-the-ui-with-a-broadcastreceiver/</link>
      <pubDate>Fri, 06 Jan 2012 23:40:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/06/learning-android-freezing-the-ui-with-a-broadcastreceiver/</guid>
      <description>As I mentioned in a previous postI recently wrote some code in my Android app to inform a BroadcastReceiverwhenever a service processed a tweet with a link in it but in implementing this I managed to freeze the UI every time that happened.
I made the stupid (in hindsight) mistake of not realising that I shouldn&amp;rsquo;t be doing a lot of logic in BroadcastReceiver.onReceivesince that bit of code gets executed on the UI thread.</description>
    </item>
    
    <item>
      <title>Learning Android: Getting a service to communicate with an activity</title>
      <link>https://markhneedham.com/blog/2012/01/05/learning-android-getting-a-service-to-communicate-with-an-activity/</link>
      <pubDate>Thu, 05 Jan 2012 01:41:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/05/learning-android-getting-a-service-to-communicate-with-an-activity/</guid>
      <description>In the app I&amp;rsquo;m working on I created a service which runs in the background away from the main UI thread consuming the Twitter streaming API using twitter4j.
It looks like this:
public class TweetService extends IntentService { String consumerKey = &amp;#34;TwitterConsumerKey&amp;#34;; String consumerSecret = &amp;#34;TwitterConsumerSecret&amp;#34;; public TweetService() { super(&amp;#34;Tweet Service&amp;#34;); } @Override protected void onHandleIntent(Intent intent) { AccessToken accessToken = createAccessToken(); StatusListener listener = new UserStreamListener() { // override a whole load of methods - removed for brevity  public void onStatus(Status status) { String theTweet = status.</description>
    </item>
    
    <item>
      <title>My Software Development journey: 2011</title>
      <link>https://markhneedham.com/blog/2012/01/03/my-software-development-journey-2011/</link>
      <pubDate>Tue, 03 Jan 2012 01:48:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/03/my-software-development-journey-2011/</guid>
      <description>A couple of years agoI used to write a blog postreflecting on what I&amp;rsquo;d worked on in the preceding year and what I&amp;rsquo;d learned and having read 2011 reviews by a coupleof otherpeopleI thought I&amp;rsquo;d have a go.
Often I&amp;rsquo;d work on something and know exactly how it should be designed and where we could go wrong since I&amp;rsquo;d done the same thing several times before and the challenge of not knowing what to do had disappeared somewhat.</description>
    </item>
    
    <item>
      <title>Learning Android: Authenticating with Twitter using OAuth</title>
      <link>https://markhneedham.com/blog/2012/01/02/learning-android-authenticating-with-twitter-using-oauth/</link>
      <pubDate>Mon, 02 Jan 2012 02:39:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/02/learning-android-authenticating-with-twitter-using-oauth/</guid>
      <description>I want to be able to get the tweets from my timeline into my app which means I need to authorise the app with Twitter using OAuth.
The last time I tried to authenticate using OAuth a couple of years ago was a bit of a failure but luckily this time Honza Pokorny has written a blog post explaining what to do.
I had to adjust the code a little bit from what&amp;rsquo;s written on his post so I thought I&amp;rsquo;d document what I&amp;rsquo;ve done.</description>
    </item>
    
    <item>
      <title>Learning Android: &#39;Unable to start service Intent not found&#39;</title>
      <link>https://markhneedham.com/blog/2012/01/01/learning-android-unable-to-start-service-intent-not-found/</link>
      <pubDate>Sun, 01 Jan 2012 03:22:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2012/01/01/learning-android-unable-to-start-service-intent-not-found/</guid>
      <description>In the Android application that I&amp;rsquo;ve been playing around with I wrote a service which consumes the Twitter streaming API which I trigger from the app&amp;rsquo;s main activity like so:
public class MyActivity extends Activity { ... @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Intent intent = new Intent(this, TweetService.class); startService(intent); ... } } Where TweetServiceis defined roughly like this:
public class TweetService extends IntentService { @Override protected void onHandleIntent(Intent intent) { // Twitter streaming API stuff goes here  } } Unfortunately when I tried to deploy the app the service wasn&amp;rsquo;t starting and I got this message in the log:</description>
    </item>
    
    <item>
      <title>Clojure: Casting to a Java class...or not!</title>
      <link>https://markhneedham.com/blog/2011/12/31/clojure-casting-to-a-java-class-or-not/</link>
      <pubDate>Sat, 31 Dec 2011 17:47:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/31/clojure-casting-to-a-java-class-or-not/</guid>
      <description>I have a bit of Java code for working out the final destination of a URLassuming that there might be one redirect which looks like this:
private String resolveUrl(String url) { try { HttpURLConnection con = (HttpURLConnection) (new URL(url).openConnection()); con.setInstanceFollowRedirects(false); con.connect(); int responseCode = con.getResponseCode(); if (String.valueOf(responseCode).startsWith(&amp;#34;3&amp;#34;)) { return con.getHeaderField(&amp;#34;Location&amp;#34;); } } catch (IOException e) { return url; } return url; } I need to cast to HttpURLConnectionon the first line so that I can make the call to setInstanceFollowRedirectswhich isn&amp;rsquo;t available on URLConnection.</description>
    </item>
    
    <item>
      <title>Yak Shaving: Tracking the yak stack</title>
      <link>https://markhneedham.com/blog/2011/12/31/yak-shaving-tracking-the-yak-stack/</link>
      <pubDate>Sat, 31 Dec 2011 03:54:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/31/yak-shaving-tracking-the-yak-stack/</guid>
      <description>While I&amp;rsquo;ve been learning how to write an android applicationthere&amp;rsquo;s been plenty of opportunities for me to go off shaving yaks, it&amp;rsquo;s pretty much Yakville Central.
Typically I&amp;rsquo;d end up spending hours trying to work out some obscure thing which I didn&amp;rsquo;t really need to know so I wanted to try and avoid that this time.
I started keeping a track of the &amp;lsquo;yak stack&amp;rsquo; which I was currently following and mentally noting exactly where I was up to.</description>
    </item>
    
    <item>
      <title>The Language of Risk</title>
      <link>https://markhneedham.com/blog/2011/12/30/the-language-of-risk/</link>
      <pubDate>Fri, 30 Dec 2011 03:38:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/30/the-language-of-risk/</guid>
      <description>A few weeks ago Chris Matts wrote an interesting blog post &amp;lsquo;the language of risk&amp;rsquo; in which he describes an approach he used to explain the processes his team uses to an auditor.
Because I explained everything we did in terms of risk. When they asked for a “process”, I explained the risk the process was meant to address. I then explained how our different process addressed the risk more effectively.</description>
    </item>
    
    <item>
      <title>Learning Android: Sharing with Twitter/the &#39;share via&#39; dialog</title>
      <link>https://markhneedham.com/blog/2011/12/29/learning-android-sharing-with-twitterthe-share-via-dialog/</link>
      <pubDate>Thu, 29 Dec 2011 22:40:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/29/learning-android-sharing-with-twitterthe-share-via-dialog/</guid>
      <description>One thing I wanted to do in the little application I&amp;rsquo;m working on was send data to other apps on my phone using the &amp;lsquo;share via&amp;rsquo; dialog which I&amp;rsquo;ve seen used on the Twitter app.
In this case I wanted to send a link and its title to twitter and came across a StackOverflow post which explained how to do so.
To keep it simple I added a button to the view and then shared the data via the on click event on that button:</description>
    </item>
    
    <item>
      <title>Reading Code: Know what you&#39;re looking for</title>
      <link>https://markhneedham.com/blog/2011/12/29/reading-code-know-what-youre-looking-for/</link>
      <pubDate>Thu, 29 Dec 2011 02:43:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/29/reading-code-know-what-youre-looking-for/</guid>
      <description>In the last week or so before Christmas I got the chance to spend some time pairing with my colleague Alex Harinwhile trying to understand how an existing application which we were investigating was written.
We knew from watching a demo of the application that the user was able to send some processing off to be done in the background and that they would be emailed once that had happened.</description>
    </item>
    
    <item>
      <title>Learning Android: WebView character encoding</title>
      <link>https://markhneedham.com/blog/2011/12/27/learning-android-webview-character-encoding/</link>
      <pubDate>Tue, 27 Dec 2011 23:53:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/27/learning-android-webview-character-encoding/</guid>
      <description>In my continued attempts to learn how to write an Android application I came across a problem with character encoding when trying to load some text into a WebView.
I was initially trying to write the text to the WebView like this:
WebView webview = new WebView(collection.getContext()); webview.loadData(textWithQuotesIn, &amp;#34;text/html&amp;#34;, &amp;#34;UTF-8&amp;#34;); But ended up with the output in the picture on the left hand side. I tried playing around with the encoding and debugged the application all the way through until it hit the WebView but there didn&amp;rsquo;t seem to be any problem with the text.</description>
    </item>
    
    <item>
      <title>Leiningen: Using goose via a local Maven repository</title>
      <link>https://markhneedham.com/blog/2011/12/27/leiningen-using-goose-via-a-local-maven-repository/</link>
      <pubDate>Tue, 27 Dec 2011 12:48:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/27/leiningen-using-goose-via-a-local-maven-repository/</guid>
      <description>I&amp;rsquo;ve been playing around a little bit with goose- a HTML content/article extractor - originally in Java but later in clojure where I needed to work out how to include goose and all its dependencies via Leiningen.
goose isn&amp;rsquo;t included in a Maven repository so I needed to create a local repository, something which I&amp;rsquo;ve got stuck on in the past.
Luckily Paul Gross has written a cool blog postexplaining how his team got past this problem.</description>
    </item>
    
    <item>
      <title>Learning Android: Deploying application to phone from Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/12/23/learning-android-deploying-application-to-phone-from-mac-os-x/</link>
      <pubDate>Fri, 23 Dec 2011 22:55:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/23/learning-android-deploying-application-to-phone-from-mac-os-x/</guid>
      <description>I&amp;rsquo;ve been playing around a little bit today with writing an Android application and while for the majority of the time I&amp;rsquo;ve been deploying to an emulator I wanted to see what it&amp;rsquo;d look like on my phone.
The developer guide contains all the instructionson how to do this but unfortunately I&amp;rsquo;m blessed with the ability to skim over instructions which meant that my phone wasn&amp;rsquo;t getting picked up by the Android Debug Bridge.</description>
    </item>
    
    <item>
      <title>The supposed black box</title>
      <link>https://markhneedham.com/blog/2011/12/20/the-supposed-black-box/</link>
      <pubDate>Tue, 20 Dec 2011 23:57:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/20/the-supposed-black-box/</guid>
      <description>On a reasonable number of the systems that I&amp;rsquo;ve worked on over the past few years there&amp;rsquo;s been a &amp;lsquo;black box&amp;rsquo; component which the team I&amp;rsquo;ve been on has needed to integrate with.
I&amp;rsquo;ve always found it a little strange that you wouldn&amp;rsquo;t need to/want to know how that part of the system worked or that you could actually believe that it was truly a black box.
If it doesn&amp;rsquo;t work then you have no way of diagnosing the problem - did you do something wrong, was there something wrong inside the black box or was it something else.</description>
    </item>
    
    <item>
      <title>The Lean Startup: Book Review</title>
      <link>https://markhneedham.com/blog/2011/12/18/the-lean-startup-book-review/</link>
      <pubDate>Sun, 18 Dec 2011 21:00:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/18/the-lean-startup-book-review/</guid>
      <description>I&amp;rsquo;d heard about The Lean Startupfor a long time before I actually read it, mainly from following the &amp;lsquo;Startup Lessons Learned&amp;rsquo; blog, but I didn&amp;rsquo;t get the book until a colleague suggested a meetup to discuss how we might apply the ideas on our projects.
My general learning from the book is that we need to take the idea of creating tight feedback loops, which we&amp;rsquo;ve learnt in the agile/lean worlds, and apply it to product development.</description>
    </item>
    
    <item>
      <title>WebDriver: Getting it to play nicely with Xvfb</title>
      <link>https://markhneedham.com/blog/2011/12/15/webdriver-getting-it-to-play-nicely-with-xvfb/</link>
      <pubDate>Thu, 15 Dec 2011 23:19:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/15/webdriver-getting-it-to-play-nicely-with-xvfb/</guid>
      <description>Another thing we&amp;rsquo;ve been doing with WebDriver is having it run with the FirefoxDriver while redirecting the display output into the Xvfb framebufferso that we can run it on our continuous integration agents which don&amp;rsquo;t have a display attached.
The first thing we needed to do was set the environment property &amp;lsquo;webdriver.firefox.bin&amp;rsquo; to our own script which would point the display to Xvfb before starting Firefox:
import java.lang.System._ lazy val firefoxDriver: FirefoxDriver = { setProperty(&amp;#34;webdriver.</description>
    </item>
    
    <item>
      <title>WebDriver: Getting it to play nicely with jQuery ColorBox</title>
      <link>https://markhneedham.com/blog/2011/12/13/webdriver-getting-it-to-play-nicely-with-jquery-colorbox/</link>
      <pubDate>Tue, 13 Dec 2011 23:31:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/13/webdriver-getting-it-to-play-nicely-with-jquery-colorbox/</guid>
      <description>As I mentioned in an earlier post about removing manual test scenarioswe&amp;rsquo;ve been trying to automate some parts of our application where a user action leads to a jQuery ColorBoxpowered overlay appearing.
With this type of feature there tends to be some sort of animation which accompanies the overlay so we have to wait for an element inside the overlay to become visible on the screen before trying to do any assertions on the overlay.</description>
    </item>
    
    <item>
      <title>The 5 Whys/Root cause analysis - Douglas Squirrel</title>
      <link>https://markhneedham.com/blog/2011/12/10/the-5-whysroot-cause-analysis-douglas-squirrel/</link>
      <pubDate>Sat, 10 Dec 2011 14:11:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/10/the-5-whysroot-cause-analysis-douglas-squirrel/</guid>
      <description>At XP Day I was chatting to Benjamin Mitchellabout the 5 whysexercisesthat we&amp;rsquo;d tried on my team and I suggested that beyond Eric Ries&amp;rsquo; post on the subjectI hadn&amp;rsquo;t come across an article/video which explained how to do it.
Benjamin mentioned that Douglas Squirrel had recently done a talk on this very subject at Skillsmatter and as with most Skillsmatter talks there&amp;rsquo;s a video of the presentation online.
Gojko wrote a post summarising the talk at the timebut I was interested in seeing how a 5 whys facilitated by Douglas would compare to the ones that we&amp;rsquo;d done.</description>
    </item>
    
    <item>
      <title>Continuous Delivery: Removing manual scenarios</title>
      <link>https://markhneedham.com/blog/2011/12/05/continuous-delivery-removing-manual-scenarios/</link>
      <pubDate>Mon, 05 Dec 2011 23:13:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/12/05/continuous-delivery-removing-manual-scenarios/</guid>
      <description>On the project that I&amp;rsquo;m currently working on we&amp;rsquo;re trying to move to the stage where we&amp;rsquo;d be able to deploy multiple times a week while still having a reasonable degree of confidence that the application still works.
One of the (perhaps obvious) things that we&amp;rsquo;ve had to do as a result of wanting to do this is reduce the number of manual scenariosthat our QAs need to run through.</description>
    </item>
    
    <item>
      <title>XP Day: Visualizing what&#39;s happening on our project</title>
      <link>https://markhneedham.com/blog/2011/11/30/xp-day-visualizing-whats-happening-on-our-project/</link>
      <pubDate>Wed, 30 Nov 2011 02:25:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/30/xp-day-visualizing-whats-happening-on-our-project/</guid>
      <description>Another presentation that I gave at XP Day was one covering some visualisations Liz, Udayand I have created from various data we have about our project, gathered from Git, Go and Mingle.
These were some of the things that I learned from doing the presentation:
As a result it was necessary to scroll up and down/side to side when demonstrating each visualisationso that people could actually see them.
Either I need to work out how to get the resolution of the projector higher or be able to shrink the images to the right size so they&amp;rsquo;d fit more naturally.</description>
    </item>
    
    <item>
      <title>Scala: Our Retrospective of the benefits/drawbacks</title>
      <link>https://markhneedham.com/blog/2011/11/28/scala-our-retrospective-of-the-benefitsdrawbacks/</link>
      <pubDate>Mon, 28 Nov 2011 00:15:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/28/scala-our-retrospective-of-the-benefitsdrawbacks/</guid>
      <description>As the closing part of a Scala Experience ReportLizand I gave at XP Day we detailed a retrospective that we&amp;rsquo;d carried out on the project after 3 months where the team outlined the positives/negatives of working with Scala.
The team members who were there right at the beginning of the project 3 months earlier had come up with what they thought the proposed benefits/drawbacks would be so it was quite interesting to look at our thoughts at both times.</description>
    </item>
    
    <item>
      <title>XP Day: Scala: An Experience Report (Liz Douglass and me)</title>
      <link>https://markhneedham.com/blog/2011/11/24/xp-day-scala-an-experience-report-liz-douglass-and-me/</link>
      <pubDate>Thu, 24 Nov 2011 23:52:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/24/xp-day-scala-an-experience-report-liz-douglass-and-me/</guid>
      <description>At XP Day my colleague Liz Douglassand I presented the following experience report on our last 6 months working together on our project.
We wanted to focus on answering the following questions with our talk:
We covered the testing approach we&amp;rsquo;ve taken, our transition from using Mustacheas our templating language to using Jadeand the different features of the language and how we&amp;rsquo;ve been using/abusing them.
The approach we used while presenting was to cover each topic in chronological ordersuch that we showed how the code had evolved from June until November and the things we&amp;rsquo;d learned over that time.</description>
    </item>
    
    <item>
      <title>XP Day: Cynefin &amp; Agile (Joseph Pelrine/Steve Freeman)</title>
      <link>https://markhneedham.com/blog/2011/11/24/xp-day-cynefin-agile-joseph-pelrinesteve-freeman/</link>
      <pubDate>Thu, 24 Nov 2011 22:25:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/24/xp-day-cynefin-agile-joseph-pelrinesteve-freeman/</guid>
      <description>Another session that I attended at XP Day was one facilitated by Steve Freemanand Joseph Pelrinewhere we discussed the Cynefin model, something that I first came across earlier in the year at XP 2011.
We spent the first part of the session drawing out the model and coming up with some software examples which might fit into each domain.
Steve pointed out that with simple/complicated the important thing to remember is that things on the right hand side are repeatablewhereas on the other side we could do the same thing again and get a completely different result.</description>
    </item>
    
    <item>
      <title>XP Day: Refactoring to functional style (Julian Kelsey/Andrew Parker)</title>
      <link>https://markhneedham.com/blog/2011/11/22/xp-day-refactoring-to-functional-style-julian-kelseyandrew-parker/</link>
      <pubDate>Tue, 22 Nov 2011 00:13:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/22/xp-day-refactoring-to-functional-style-julian-kelseyandrew-parker/</guid>
      <description>I&amp;rsquo;m attending XP Daythis year and the first talk I attended was one by Julian Kelseyand Andrew Parkertitled &amp;lsquo;Refactoring to functional style&amp;rsquo;.
I&amp;rsquo;ve worked on a Scala project for the last 6 months and previously given a coupleof talksabout adopting a functional style of programming in C# so this is a subject area that I find quite interesting.
The talk focused on 5 refactorings that the presenters have identified to help move imperative code to a more functional style:</description>
    </item>
    
    <item>
      <title>Java/Scala: Runtime.exec hanging/in &#39;pipe_w&#39; state</title>
      <link>https://markhneedham.com/blog/2011/11/20/javascala-runtime-exec-hangingin-pipe_w-state/</link>
      <pubDate>Sun, 20 Nov 2011 20:20:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/20/javascala-runtime-exec-hangingin-pipe_w-state/</guid>
      <description>On the system that I&amp;rsquo;m currently working on we have a data ingestion process which needs to take zip files, unzip them and then import their contents into the database.
As a result we delegate from Scala code to the system unzip command like so:
def extract { var command = &amp;#34;unzip %s -d %s&amp;#34; format(&amp;#34;/file/to/unzip.zip&amp;#34;, &amp;#34;/place/to/unzip/to&amp;#34;) var process: Process = null try { process = Runtime.getRuntime.exec(command) val exitCode = process.</description>
    </item>
    
    <item>
      <title>Dr Nic&#39;s &#39;How to stop killing people with your public speeches&#39;</title>
      <link>https://markhneedham.com/blog/2011/11/16/dr-nics-how-to-stop-killing-people-with-your-public-speeches/</link>
      <pubDate>Wed, 16 Nov 2011 22:56:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/16/dr-nics-how-to-stop-killing-people-with-your-public-speeches/</guid>
      <description>I recently came across a really cool blog post by Dr Nic titled &amp;lsquo;How to stop killing people with your public speeches&amp;rsquo; where he talks about the importance of practicing our presentations so that they actually make an impact on our audience.
Towards the end of the post he suggests joining Toastmastersas a useful first step for getting used to speaking to a group of people and as an added bonus you get feedback after each speech you give.</description>
    </item>
    
    <item>
      <title>Scala: scala.xml.SpecialNode: StackOverFlowError</title>
      <link>https://markhneedham.com/blog/2011/11/15/scala-scala-xml-specialnode-stackoverflowerror/</link>
      <pubDate>Tue, 15 Nov 2011 00:26:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/15/scala-scala-xml-specialnode-stackoverflowerror/</guid>
      <description>We have some code in our application where we parse reasonably complex XML structures and then sometimes choose to get rid of certain elements from the structure.
When we wanted to get rid of an element we replaced that element with a SpecialNode:
val emptyNode = new scala.xml.SpecialNode() { def buildString(sb:StringBuilder) = new StringBuilder() def label = null } Unfortunately when you call #text on the node it results in the following exception which we only found out today:</description>
    </item>
    
    <item>
      <title>The 5 whys: Another attempt</title>
      <link>https://markhneedham.com/blog/2011/11/13/the-5-whys-another-attempt/</link>
      <pubDate>Sun, 13 Nov 2011 23:08:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/13/the-5-whys-another-attempt/</guid>
      <description>Towards the end of the week before last and the beginning of last week we&amp;rsquo;d been having quite a few problems with our QA environment to the point where we were unable to deploy anything to it for 3 days.
A few weeks ago I wrote about a 5 whys exercise that we did in a retrospectiveand in our weekly code review we decided to give it a go and see what we could learn.</description>
    </item>
    
    <item>
      <title>fgrep: Searching for a list of identifiers</title>
      <link>https://markhneedham.com/blog/2011/11/10/fgrep-searching-for-a-list-of-identifiers/</link>
      <pubDate>Thu, 10 Nov 2011 23:37:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/10/fgrep-searching-for-a-list-of-identifiers/</guid>
      <description>We had a problem to solve earlier in the week where we wanted to try and find out which files we had ingested into our database based on a unique identifier.
We had a few hundred thousand files to search through to try and find the ones where around 50,000 identifiers were mentioned so that we could re-ingest them.
Running a normal grep for each identifier individually took a ridiculously long time so we needed to find a way to search for all of the identifiers at the same time to speed up the process.</description>
    </item>
    
    <item>
      <title>Scala: Setting default argument for function parameter</title>
      <link>https://markhneedham.com/blog/2011/11/08/scala-setting-default-argument-for-function-parameter/</link>
      <pubDate>Tue, 08 Nov 2011 22:46:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/08/scala-setting-default-argument-for-function-parameter/</guid>
      <description>Yesterday I wrote about a problem we&amp;rsquo;ve been having with trying to work out how to default a function parameter that we have in one of our methods.
Our current version of the code defines the function parameter as implicit which means that if it isn&amp;rsquo;t passed in it defaults to Predef.conforms():
def foo[T](bar: String)(implicit blah:(String =&amp;gt; T)) = { println(blah(bar)); bar } It&amp;rsquo;s not entirely clear just from reading the code where the implicit value is coming from so we want to try and make the code a bit more expressive.</description>
    </item>
    
    <item>
      <title>Scala: Which implicit conversion is being used?</title>
      <link>https://markhneedham.com/blog/2011/11/06/scala-which-implicit-conversion-is-being-used/</link>
      <pubDate>Sun, 06 Nov 2011 21:25:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/06/scala-which-implicit-conversion-is-being-used/</guid>
      <description>Last week my colleague Patcreated a method which had a parameter which he wanted to make optional so that consumers of the API wouldn&amp;rsquo;t have to provide it if they didn&amp;rsquo;t want to.
We ended up making the method take in an implicit value such that the method signature looked a bit like this:
def foo[T](implicit blah:(String =&amp;gt; T)) = { println(blah(&amp;#34;mark&amp;#34;)) &amp;#34;foo&amp;#34; } We can call foo with or without an argument:</description>
    </item>
    
    <item>
      <title>Scala: Option.isDefined as the new null check</title>
      <link>https://markhneedham.com/blog/2011/11/01/scala-option-isdefined-as-the-new-null-check/</link>
      <pubDate>Tue, 01 Nov 2011 00:58:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/11/01/scala-option-isdefined-as-the-new-null-check/</guid>
      <description>One cool thing about using Scala on my current project is that we don&amp;rsquo;t have nulls anywhere in our code, instead when something may or may not be there we make use of the Option type.
Unfortunately what we&amp;rsquo;ve (heavily contributed by me) ended up with in our code base is repeated use of the isDefinedmethod whenever we want to make a decision depending on whether or not the option is populated.</description>
    </item>
    
    <item>
      <title>Working with external identifiers</title>
      <link>https://markhneedham.com/blog/2011/10/31/working-with-external-identifiers/</link>
      <pubDate>Mon, 31 Oct 2011 22:58:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/31/working-with-external-identifiers/</guid>
      <description>As part of the ingestion process for our application we import XML documents and corresponding PDFs into a database and onto the file system respectively.
Since the user needs to be able to search for documents by the userFacingIdwe reference it by that identifier in the database and the web application.
Each document also has an external identifier and we use this to identify the PDFs on the file system.</description>
    </item>
    
    <item>
      <title>Canonical Identifiers</title>
      <link>https://markhneedham.com/blog/2011/10/30/canonical-identifiers/</link>
      <pubDate>Sun, 30 Oct 2011 22:32:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/30/canonical-identifiers/</guid>
      <description>Duncanand I had an interesting problem recently where we had to make it possible to search within an &amp;lsquo;item&amp;rsquo; to find possible sub items that exist inside it.
The URIfor the item was something like this:
/items/234 Let&amp;rsquo;s say Item 234 contains the following sub items:
We have a search box on the page which allows us to type in the name of a sub item and go the sub item&amp;rsquo;s page if it exists or see an error message if it doesn&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>Gaming the system: Some project examples</title>
      <link>https://markhneedham.com/blog/2011/10/26/gaming-the-system-some-project-examples/</link>
      <pubDate>Wed, 26 Oct 2011 23:55:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/26/gaming-the-system-some-project-examples/</guid>
      <description>Earlier this year Liz Keoghgave a talk at QCon London titled &amp;lsquo;Learning and Perverse Incentives: The Evil Hat&amp;rsquo; where she eventually encouraged people to try and game the systems that they take part in.
Over the last month or so we&amp;rsquo;ve had two different metrics visibly on show and are therefore prime targets for being gamed.
The first metric is one we included on our build radiator which shows how many commits to the git repository each person has for that day.</description>
    </item>
    
    <item>
      <title>Scala: Adding logging around a repository</title>
      <link>https://markhneedham.com/blog/2011/10/25/scala-adding-logging-around-a-repository/</link>
      <pubDate>Tue, 25 Oct 2011 21:19:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/25/scala-adding-logging-around-a-repository/</guid>
      <description>We wanted to add some logging around one of our repositories to track how many times users were trying to do various things on the application and came across a cool blog post explaining how we might be able to do this.
We ended up with the following code:
class BarRepository { def all: Seq[Bar] = Seq() def find(barId:String) : Bar = Bar(&amp;#34;myBar&amp;#34;) } class TrackService(barRepository:BarRepository) { def all : Seq[Bar] = { var bars = barRepository.</description>
    </item>
    
    <item>
      <title>Scala: Creating an Xml element with an optional attribute</title>
      <link>https://markhneedham.com/blog/2011/10/25/scala-creating-an-xml-element-with-an-optional-attribute/</link>
      <pubDate>Tue, 25 Oct 2011 20:38:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/25/scala-creating-an-xml-element-with-an-optional-attribute/</guid>
      <description>We have a lot of Xml in our application and one of the things that we need to do reasonably frequently in our test code is create elements which have optional attributes on them.
Our simple first approach looked like this:
def createElement(attribute: Option[String]) = if(attribute.isDefined) &amp;lt;p bar={attribute.get} /&amp;gt; else &amp;lt;p /&amp;gt; That works but it always seemed like we should be able to do it in a simpler way.</description>
    </item>
    
    <item>
      <title>Retrospective: The 5 whys</title>
      <link>https://markhneedham.com/blog/2011/10/24/retrospective-the-5-whys/</link>
      <pubDate>Mon, 24 Oct 2011 22:53:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/24/retrospective-the-5-whys/</guid>
      <description>Last week my colleague Pat Fornasierran our team&amp;rsquo;s fortnightly retrospective and one of the exercises we did was &amp;lsquo;the 5 whys&amp;rsquo;.
I&amp;rsquo;ve always wanted to see how the 5 why&amp;rsquo;s would pan out but could never see how you could fit it into a normal retrospective.
Pat was able to do this by using the data gathered by an earlier timeline exercise where the team had to plot the main events that had happened over the last 6 months.</description>
    </item>
    
    <item>
      <title>Learning Unix find: Searching in/Excluding certain folders</title>
      <link>https://markhneedham.com/blog/2011/10/21/learning-unix-find-searching-inexcluding-certain-folders/</link>
      <pubDate>Fri, 21 Oct 2011 21:25:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/21/learning-unix-find-searching-inexcluding-certain-folders/</guid>
      <description>I love playing around with commands on the Unix shell but one of the ones that I&amp;rsquo;ve found the most difficult to learn beyond the very basics is find.
I think this is partially because I find the find man page quite difficult to read and partially because it&amp;rsquo;s usually quicker to work out how to solve my problem with a command I already know than to learn another one.</description>
    </item>
    
    <item>
      <title>Getting stuck and agile software teams</title>
      <link>https://markhneedham.com/blog/2011/10/20/getting-stuck-and-agile-software-teams/</link>
      <pubDate>Thu, 20 Oct 2011 22:09:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/20/getting-stuck-and-agile-software-teams/</guid>
      <description>I came across an interesting set of posts by Jeff Wofford where he talks about programmers gettingstuckand it made me think that, despite its faults, agile software development does have some useful practices for stopping us getting stuck for too long.
Many of the examples that Jeff describes sound like yak shavingto me which is part of what makes programming fun but doesn&amp;rsquo;t always correlate to adding value to the product that you&amp;rsquo;re building.</description>
    </item>
    
    <item>
      <title>git: Only pushing some changes from local repository</title>
      <link>https://markhneedham.com/blog/2011/10/20/git-only-pushing-some-changes-from-local-repository/</link>
      <pubDate>Thu, 20 Oct 2011 06:50:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/20/git-only-pushing-some-changes-from-local-repository/</guid>
      <description>Something that we want to do reasonable frequently on my current project is to push some changes which have been committed to our local repository to master but not all of them.
For example we might end up with 3 changes we haven&amp;rsquo;t pushed:
&amp;gt;&amp;gt; ~/github/local$ git status # On branch master # Your branch is ahead of &amp;#39;origin/master&amp;#39; by 3 commits. # nothing to commit (working directory clean) &amp;gt;&amp;gt; ~/github/local$ git hist * bb7b139 Thu, 20 Oct 2011 07:37:11 +0100 | mark: one last time (HEAD, master) [Mark Needham] * 1cef99a Thu, 20 Oct 2011 07:36:35 +0100 | mark:another new line [Mark Needham] * 850e105 Thu, 20 Oct 2011 07:36:01 +0100 | mark: new line [Mark Needham] * 2b25622 Thu, 20 Oct 2011 07:32:43 +0100 | mark: adding file for first time (origin/master) [Mark Needham] And we only want to push the commit with hash 850e105for example.</description>
    </item>
    
    <item>
      <title>Unix: Some useful tools</title>
      <link>https://markhneedham.com/blog/2011/10/17/unix-some-useful-tools/</link>
      <pubDate>Mon, 17 Oct 2011 22:58:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/17/unix-some-useful-tools/</guid>
      <description>On my current project we regularly use a few Unix tools which aren&amp;rsquo;t on the standard installation so I thought I&amp;rsquo;d collate them here so I don&amp;rsquo;t forget about them in the future.
We suspected we&amp;rsquo;d ended up with some rogue characters in a file that we weren&amp;rsquo;t able to detect in our normal text editor recently and wanted to view the byte by byte representation of the file to check it out.</description>
    </item>
    
    <item>
      <title>Bash: Reusing previous commands</title>
      <link>https://markhneedham.com/blog/2011/10/13/bash-reusing-previous-commands/</link>
      <pubDate>Thu, 13 Oct 2011 19:46:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/13/bash-reusing-previous-commands/</guid>
      <description>A lot of the time when I&amp;rsquo;m using the bash shell I want to re-use commands that I&amp;rsquo;ve previously entered and I&amp;rsquo;ve recently learnt some neat ways to do this from my colleagues Tomand Kief.
If we want to list the history of all the commands we&amp;rsquo;ve entered in a shell session then the following command does the trick:
&amp;gt; history ... 761 sudo port search pdfinfo 762 to_ipad andersen-phd-thesis.pdf 763 vi ~/.</description>
    </item>
    
    <item>
      <title>Unix: Getting the page count of a linearized PDF</title>
      <link>https://markhneedham.com/blog/2011/10/09/unix-getting-the-page-count-of-a-linearized-pdf/</link>
      <pubDate>Sun, 09 Oct 2011 11:34:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/09/unix-getting-the-page-count-of-a-linearized-pdf/</guid>
      <description>We were doing some work last week to rasterize a PDF document into a sequence of images and wanted to get a rough idea of how many pages we&amp;rsquo;d be dealing with if we created an image per page.
The PDFs we&amp;rsquo;re dealing with are linearizedsince they&amp;rsquo;re available for viewing on the web:
The ﬁle is valid PDF in all respects, and is compatible with all existing viewers and other PDF applications.</description>
    </item>
    
    <item>
      <title>Git: Getting the history of a deleted file</title>
      <link>https://markhneedham.com/blog/2011/10/04/git-getting-the-history-of-a-deleted-file/</link>
      <pubDate>Tue, 04 Oct 2011 22:33:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/10/04/git-getting-the-history-of-a-deleted-file/</guid>
      <description>We recently wanted to get the Git history of a file which we knew existed but had now been deleted so we could find out what had happened to it.
Using a simple git logdidn&amp;rsquo;t work:
git log deletedFile.txt fatal: ambiguous argument &amp;#39;deletedFile.txt&amp;#39;: unknown revision or path not in the working tree. We eventually came across Francois Marier&amp;rsquo;s blog postwhich points out that you need to use the following command instead:</description>
    </item>
    
    <item>
      <title>Scala: Replacing a trait with a fake one for testing</title>
      <link>https://markhneedham.com/blog/2011/09/25/scala-replacing-a-trait-with-a-fake-one-for-testing/</link>
      <pubDate>Sun, 25 Sep 2011 10:24:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/25/scala-replacing-a-trait-with-a-fake-one-for-testing/</guid>
      <description>We recently wanted to replace a trait mixed into one of our classes with a fake version to make it easier to test but forgot how exactly to do that!
The class is roughly like this:
trait Foo { def foo : String = &amp;#34;real foo&amp;#34; } class Mark extends Foo {} We originally tried to replace it like this:
trait BrokenFakeFoo { def foo : String = &amp;#34;broken fake foo&amp;#34; } val m = new Mark with BrokenFakeFoo error: overriding method foo in trait Foo of type =&amp;gt; String; method foo in trait BrokenFakeFoo of type =&amp;gt; String needs `override&amp;#39; modifier val m = new Mark with BrokenFakeFoo If mcompiled it would have two versions of foobut it wouldn&amp;rsquo;t know which one to use, hence the error message.</description>
    </item>
    
    <item>
      <title>jQuery: Collecting the results from a collection of asynchronous requests</title>
      <link>https://markhneedham.com/blog/2011/09/25/jquery-collecting-the-results-from-a-collection-of-asynchronous-requests/</link>
      <pubDate>Sun, 25 Sep 2011 09:26:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/25/jquery-collecting-the-results-from-a-collection-of-asynchronous-requests/</guid>
      <description>Lizand I recently spent some time building a pair stair to show how long ago people had paired with each other and one of the things we had to do was make AJAX requests to get the pairing data for each person and then collate it all to build the stair.
The original attempt to do this looked a bit like this:
var people = [&amp;#34;Marc&amp;#34;, &amp;#34;Liz&amp;#34;, &amp;#34;Ken&amp;#34;, &amp;#34;Duncan&amp;#34;, &amp;#34;Uday&amp;#34;, &amp;#34;Mark&amp;#34;, &amp;#34;Charles&amp;#34;]; var grid = []; $.</description>
    </item>
    
    <item>
      <title>Retrospectives: Getting overly focused on actions</title>
      <link>https://markhneedham.com/blog/2011/09/24/retrospectives-getting-overly-focused-on-actions/</link>
      <pubDate>Sat, 24 Sep 2011 06:56:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/24/retrospectives-getting-overly-focused-on-actions/</guid>
      <description>I&amp;rsquo;ve attended a lot of different retrospectives over the last few years and one thing that seems to happen quite frequently is that a problem will be raised and there will become a massive urgency to find an action to match with that problem.
As a result of this we don&amp;rsquo;t tend to go very deeply into working out why that problem happened in the first place and how we can stop it happening in the first place.</description>
    </item>
    
    <item>
      <title>node.js: child_process.exec not returning all results</title>
      <link>https://markhneedham.com/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</link>
      <pubDate>Thu, 22 Sep 2011 19:55:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</guid>
      <description>I&amp;rsquo;ve been playing around with some node.js code to get each of the commits from our git repository but noticed that it didn&amp;rsquo;t seem to be returning me all the results.
I had the following code:
var exec = require(&amp;#39;child_process&amp;#39;).exec; var gitRepository = &amp;#39;/some/local/path&amp;#39;; exec(&amp;#39;cd &amp;#39; + gitRepository + &amp;#39; &amp;amp;&amp;amp; git log --pretty=format:&amp;#34;%H | %ad | %s%d&amp;#34; --date=raw &amp;#39;, function(error, stdout, stderror) { var commits = stdout.split(&amp;#34;\n&amp;#34;); // do some stuff with commits }); We have around 2000 commits in the repository but I was only getting back 1600 of them when I checked the lengthof commits.</description>
    </item>
    
    <item>
      <title>The &#39;window fixing&#39; wall</title>
      <link>https://markhneedham.com/blog/2011/09/20/the-window-fixing-wall/</link>
      <pubDate>Tue, 20 Sep 2011 06:49:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/20/the-window-fixing-wall/</guid>
      <description>On my current project we have a wall where we keep track of &amp;lsquo;window fixing&amp;rsquo; tasks - things that people want to fix in the code base but chose to defer until a later date.
Every now and then we take what&amp;rsquo;s on the wall and prioritise it according to Fabio Pereira&amp;rsquo;s effort/pain matrixso that we know which clean up tasks will provide the greatest value to the team.
While I think it&amp;rsquo;s a nice way of getting a team understanding of technical debt I think it can lead to a couple of problems which come with most attempts at group responsibility for something.</description>
    </item>
    
    <item>
      <title>Scala: for comprehensions with Options</title>
      <link>https://markhneedham.com/blog/2011/09/15/scala-for-comprehensions-with-options/</link>
      <pubDate>Thu, 15 Sep 2011 22:21:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/15/scala-for-comprehensions-with-options/</guid>
      <description>I&amp;rsquo;ve generally avoided using for expressions in Scala because the keyword reminds me of for loops in Java/C# and I want to learn to program in a less imperative way.
After working with my colleague MushtaqI realised that in some cases using for comprehensions can lead to much more readable code.
An interesting use case where this is the case is when we want to create an object from a bunch of parameters that may or may not be set.</description>
    </item>
    
    <item>
      <title>Javascript: Internet Explorer 8 - trim() leads to &#39;Object doesn&#39;t support this property or method&#39; error</title>
      <link>https://markhneedham.com/blog/2011/09/13/javascript-internet-explorer-8-trim-leads-to-object-doesnt-support-this-property-or-method-error/</link>
      <pubDate>Tue, 13 Sep 2011 13:33:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/13/javascript-internet-explorer-8-trim-leads-to-object-doesnt-support-this-property-or-method-error/</guid>
      <description>We make use of the Javascript trim()function in our application but didn&amp;rsquo;t realise that it isn&amp;rsquo;t implemented by Internet Explorer until version 9.
This led to the following error on IE8 when we used it:
There&amp;rsquo;s a stackoverflow threadsuggesting some different ways of implementing your own &amp;lsquo;trim()&amp;rsquo; method but since we&amp;rsquo;re using jQuery already we decided to just use the &amp;lsquo;$.trim()&amp;rsquo; function from there.
Therefore:
var cleaned = ourString.trim(); becomes:</description>
    </item>
    
    <item>
      <title>gawk: Getting story numbers from git commit messages</title>
      <link>https://markhneedham.com/blog/2011/09/12/gawk-getting-story-numbers-from-git-commit-messages/</link>
      <pubDate>Mon, 12 Sep 2011 07:05:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/12/gawk-getting-story-numbers-from-git-commit-messages/</guid>
      <description>As I mentioned in my previous post I&amp;rsquo;ve been writing a little application to create graphs based on our git repository history and in one of them we wanted to try and create a graph showing which people had been working on which stories.
I needed a way to extract a story number from the git commit message and then store them all in a text file.
A typical commit with a story number in might look like this:</description>
    </item>
    
    <item>
      <title>Learning node.js: Step</title>
      <link>https://markhneedham.com/blog/2011/09/11/learning-node-js-step/</link>
      <pubDate>Sun, 11 Sep 2011 22:37:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/11/learning-node-js-step/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js to generate some graphs from our git repository which effectively meant chaining together a bunch of shell commands to give me the repository data in the format I wanted.
I was able to do this by making use of child_processwhich comes with the core library.
The first version looked like this:
var exec = require(&amp;#39;child_process&amp;#39;).exec, _ = require(&amp;#34;underscore&amp;#34;); ... function parseCommitsFromRepository(fn) { var gitRepository = &amp;#34;/tmp/core&amp;#34;; var gitPlayArea = &amp;#34;/tmp/&amp;#34; + new Date().</description>
    </item>
    
    <item>
      <title>Learning Regular Expressions: Non capturing match</title>
      <link>https://markhneedham.com/blog/2011/09/07/learning-regular-expressions-non-capturing-match/</link>
      <pubDate>Wed, 07 Sep 2011 20:47:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/07/learning-regular-expressions-non-capturing-match/</guid>
      <description>I&amp;rsquo;ve been working my way slowly through the O&amp;rsquo;Reilly &amp;lsquo;Mastering Regular Expressions&amp;rsquo; book and recently read about the non capturing match operator which came in useful for some Git log parsing I&amp;rsquo;ve been doing.
On the project I&amp;rsquo;m working on we all commit as the same user and then put our names at the beginning of the commit message.
We wanted to try and find out the statistics of who&amp;rsquo;d been pairing with each other and therefore needed to extract the pairs from commits.</description>
    </item>
    
    <item>
      <title>Pair Programming: The disadvantages of 100% pairing</title>
      <link>https://markhneedham.com/blog/2011/09/06/pair-programming-the-disadvantages-of-100-pairing/</link>
      <pubDate>Tue, 06 Sep 2011 23:34:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/06/pair-programming-the-disadvantages-of-100-pairing/</guid>
      <description>I&amp;rsquo;ve written a lot of blog posts in the past about pair programming and the advantages that I&amp;rsquo;ve seen from using this techniquebut lately I find myself increasingly frustrated at the need to pair 100% of the time which happens on most teams I work on.
From my experience it&amp;rsquo;s certainly useful as a coaching tool, as I&amp;rsquo;ve mentioned before I think it&amp;rsquo;s a very useful for increasing the amount of collaboration between team membersand an excellent way for ensuring that knowledge of the code base is spread across the team.</description>
    </item>
    
    <item>
      <title>Parsing XML from the unix terminal/shell</title>
      <link>https://markhneedham.com/blog/2011/09/03/parsing-xml-from-the-unix-terminalshell/</link>
      <pubDate>Sat, 03 Sep 2011 23:42:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/03/parsing-xml-from-the-unix-terminalshell/</guid>
      <description>I spent a bit of time today trying to put together a quick script which would allow me to grab story numbers from the commits in our Git repository and then work out which functional areas those stories were in by querying mingle.
Therefore I wanted to make a curlrequest to the mingle and then pipe that result somewhere and run an xpath expression to get my element.
I didn&amp;rsquo;t want to have to write code in another script file and then reference that file from the shell and in my search to achieve that I came across XMLStarleton stackoverflow.</description>
    </item>
    
    <item>
      <title>Coding: The value in finding the generic abstraction</title>
      <link>https://markhneedham.com/blog/2011/08/31/coding-the-value-in-finding-the-generic-abstraction/</link>
      <pubDate>Wed, 31 Aug 2011 06:49:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/31/coding-the-value-in-finding-the-generic-abstraction/</guid>
      <description>I recently worked on adding the meta data section for each of the different document types that it serves which involved showing 15-20 pieces of data for each document type.
There are around 4-5 document types and although the meta data for each document type is similar it&amp;rsquo;s not exactly the same!
When we got to the second document type it wasn&amp;rsquo;t obvious where the abstraction was so we went for the copy/paste approach to see if it would be any easier to see the commonality if we put the two templates side by side.</description>
    </item>
    
    <item>
      <title>The read-only database</title>
      <link>https://markhneedham.com/blog/2011/08/29/the-read-only-database/</link>
      <pubDate>Mon, 29 Aug 2011 23:32:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/29/the-read-only-database/</guid>
      <description>The last couple of applications I&amp;rsquo;ve worked on have had almost completely read only databases where we had to populate the database in an offline process and then provide various ways for users to access the data.
This creates an interesting situation with respect to how we should setup our development environment.
Our normal setup would probably have an individual version of that database on every development machine and we would populate and then truncate the database during various test scenarios.</description>
    </item>
    
    <item>
      <title>Pain Driven Development</title>
      <link>https://markhneedham.com/blog/2011/08/21/pain-driven-development/</link>
      <pubDate>Sun, 21 Aug 2011 17:33:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/21/pain-driven-development/</guid>
      <description>My colleague Pat Fornasierhas been using an interesting spin on the idea of making decisions at the last responsible moment by encouraging our team to &amp;lsquo;feel the pain&amp;rsquo; before introducing any constraint in our application.
These are some of the decisions which we&amp;rsquo;ve been delaying/are still delaying:
We decided to just create a trait where we wired up the dependencies ourself and then inject that trait into the entry point of our application.</description>
    </item>
    
    <item>
      <title>node.js: Building a graph of build times using the Go API</title>
      <link>https://markhneedham.com/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</link>
      <pubDate>Sat, 13 Aug 2011 14:52:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js again and one thing that I wanted to do was take a CSV file generated by the Go APIand extract the build times so that we could display it on a graph.
Since I don&amp;rsquo;t have a Go instance on my machine I created a URL in my node application which would mimic the API and return a CSV file.
I&amp;rsquo;m using the express web frameworkto take care of some of the plumbing:</description>
    </item>
    
    <item>
      <title>Scala: Do modifiers on functions really matter?</title>
      <link>https://markhneedham.com/blog/2011/08/13/scala-do-modifiers-on-functions-really-matter/</link>
      <pubDate>Sat, 13 Aug 2011 02:10:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/13/scala-do-modifiers-on-functions-really-matter/</guid>
      <description>A couple of colleagues and I were having an interesting discussion this afternoon about the visibility of functions which are mixed into an object from a trait.
The trait in question looks like this:
trait Formatting { def formatBytes(bytes: Long): Long = { math.round(bytes.toDouble / 1024) } } And is mixed into various objects which need to display the size of a file in kB like this:
class SomeObject extends Formatting { } By mixing that function into SomeObjectany of the clients of SomeObjectwould now to be able to call that function and transform a bytes value of their own!</description>
    </item>
    
    <item>
      <title>Scala, WebDriver and the Page Object Pattern</title>
      <link>https://markhneedham.com/blog/2011/08/09/scala-webdriver-and-the-page-object-pattern/</link>
      <pubDate>Tue, 09 Aug 2011 00:54:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/09/scala-webdriver-and-the-page-object-pattern/</guid>
      <description>We&amp;rsquo;re using WebDriver on my project to automate our functional tests and as a result are using the Page Object patternto encapsulate each page of the application in our tests.
We&amp;rsquo;ve been trying to work out how to effectively reuse code since some of the pages have parts of them which work exactly the same as another page.
For example we had a test similar to this&amp;hellip;
class FooPageTests extends Spec with ShouldMatchers with FooPageSteps { it(&amp;#34;is my dummy test&amp;#34;) { .</description>
    </item>
    
    <item>
      <title>Clojure: Getting caught out by lazy collections</title>
      <link>https://markhneedham.com/blog/2011/07/31/clojure-getting-caught-out-by-lazy-collections/</link>
      <pubDate>Sun, 31 Jul 2011 21:40:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/31/clojure-getting-caught-out-by-lazy-collections/</guid>
      <description>Most of the work that I&amp;rsquo;ve done with Clojure has involved running a bunch of functions directly in the REPL or through Leiningen&amp;rsquo;s runtarget which led to me getting caught out when I created a JAR and tried to run that.
As I mentioned a few weeks agoI&amp;rsquo;ve been rewriting part of our system in Clojure to see how the design would differ and a couple of levels down the Clojure version comprises of applying a map function over a collection of documents.</description>
    </item>
    
    <item>
      <title>Performance tuning our data import: Gather precise data</title>
      <link>https://markhneedham.com/blog/2011/07/29/performance-tuning-our-data-import-gather-precise-data/</link>
      <pubDate>Fri, 29 Jul 2011 01:34:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/29/performance-tuning-our-data-import-gather-precise-data/</guid>
      <description>One of the interesting problems that we have to solve on my current project is working out how to import a few million XML documents into our database in a reasonable amount of time.
The stages of the import process are as follows:
We&amp;rsquo;ve been working on this quite a bit recently and one of the main things we&amp;rsquo;ve learnt is the value of gathering detailing information about what&amp;rsquo;s actually happening in the code.</description>
    </item>
    
    <item>
      <title>Unix: Summing the total time from a log file</title>
      <link>https://markhneedham.com/blog/2011/07/27/unix-summing-the-total-time-from-a-log-file/</link>
      <pubDate>Wed, 27 Jul 2011 23:02:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/27/unix-summing-the-total-time-from-a-log-file/</guid>
      <description>As I mentioned in my last postwe&amp;rsquo;ve been doing some profiling of a data ingestion job and as a result have been putting some logging into our code to try and work out where we need to work on.
We end up with a log file peppered with different statements which looks a bit like the following:
18:50:08.086 [akka:event-driven:dispatcher:global-5] DEBUG - Imported document. /Users/mneedham/foo.xml in: 1298 18:50:09.064 [akka:event-driven:dispatcher:global-1] DEBUG - Imported document.</description>
    </item>
    
    <item>
      <title>A crude way of telling if a remote machine is a VM</title>
      <link>https://markhneedham.com/blog/2011/07/27/a-crude-way-of-telling-if-a-remote-machine-is-a-vm/</link>
      <pubDate>Wed, 27 Jul 2011 22:31:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/27/a-crude-way-of-telling-if-a-remote-machine-is-a-vm/</guid>
      <description>We were doing a bit of profiling of a data importing process we&amp;rsquo;ve been running across various environments and wanted to check whether or not one of the environments was a physical machine or a VM.
A bit of googling first led me to the following sitewhere you can fill a MAC address and it will tell you which vendor it belongs to.
macvendorlookup.comis even better though because it&amp;rsquo;s more easily scriptable!</description>
    </item>
    
    <item>
      <title>Scala: Prettifying test builders with package object</title>
      <link>https://markhneedham.com/blog/2011/07/26/scala-prettifying-test-builders-with-package-object/</link>
      <pubDate>Tue, 26 Jul 2011 22:31:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/26/scala-prettifying-test-builders-with-package-object/</guid>
      <description>We have several different test buildersin our code base which look roughly like this:
case class FooBuilder(bar : String, baz : String) { def build = new Foo(bar, baz) } In our tests we originally used them like this:
class FooPageTest extends Specs with ShouldMatchers { it(&amp;#34;should let us load a foo&amp;#34;) { when(databaseHas(FooBuilder(bar = &amp;#34;Bar&amp;#34;, baz = &amp;#34;Bazz&amp;#34;))) // and so on... 	} } This works well but we wanted our tests to only contain domain language and no implementation details.</description>
    </item>
    
    <item>
      <title>Retrospectives: The 4 L&#39;s Retrospective</title>
      <link>https://markhneedham.com/blog/2011/07/25/retrospectives-the-4-ls-retrospective/</link>
      <pubDate>Mon, 25 Jul 2011 21:00:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/25/retrospectives-the-4-ls-retrospective/</guid>
      <description>I facilitated the latest retrospective my team had last week and decided to try The 4 L&amp;rsquo;s techniquewhich I&amp;rsquo;d come across while browsing the &amp;lsquo;retrospectives&amp;rsquo; tag on del.icio.us.
We had 4 posters around the room representing each of the L&amp;rsquo;s:
I&amp;rsquo;m not really a fan of the majority of a retrospective being dominated by a full group discussion as many people aren&amp;rsquo;t comfortable giving their opinions to that many peopleand therefore end up not participating at all.</description>
    </item>
    
    <item>
      <title>Scala: Making it easier to abstract code</title>
      <link>https://markhneedham.com/blog/2011/07/23/scala-making-it-easier-to-abstract-code/</link>
      <pubDate>Sat, 23 Jul 2011 12:05:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/23/scala-making-it-easier-to-abstract-code/</guid>
      <description>A couple of months ago I attended Michael Feathers&amp;rsquo; &amp;lsquo;Brutal Refactoring&amp;rsquo; workshopat XP 2011 where he opined that developers generally do the easiest thing when it comes to code bases.
More often than not this means adding to an existing method or existing class rather than finding the correct place to put the behaviour that they want to add.
Something interesting that I&amp;rsquo;ve noticed so far on the project I&amp;rsquo;m working on is that so far we haven&amp;rsquo;t been seeing the same trend.</description>
    </item>
    
    <item>
      <title>Scala: Companion Objects</title>
      <link>https://markhneedham.com/blog/2011/07/23/scala-companion-objects/</link>
      <pubDate>Sat, 23 Jul 2011 11:57:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/23/scala-companion-objects/</guid>
      <description>One of the language features available to us in Scala which I think is having a big impact in helping us to make our code base easier to follow is the companion object.
We&amp;rsquo;ve been using companion objects quite liberally in our code base to define factory methods for our classes.
As I mentioned in a previous post a lot of our objects are acting as wrappers around XML documentsand we&amp;rsquo;ve been pushing some of the data extraction from the XML into companion objects so that our classes can take in non XML values.</description>
    </item>
    
    <item>
      <title>Clojure: Creating XML document with namespaces</title>
      <link>https://markhneedham.com/blog/2011/07/20/clojure-creating-xml-document-with-namespaces/</link>
      <pubDate>Wed, 20 Jul 2011 20:28:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/20/clojure-creating-xml-document-with-namespaces/</guid>
      <description>As I mentioned in an earlier post we&amp;rsquo;ve been parsing XML documents with the Clojure zip-filter APIand the next thing we needed to do was create a new XML document containing elements which needed to be inside a namespace.
We wanted to end up with a document which looked something like this:
&amp;lt;root&amp;gt; &amp;lt;mynamespace:foo xmlns:mynamespace=&amp;#34;http://www.magicalurlfornamespace.com&amp;#34;&amp;gt; &amp;lt;mynamespace:bar&amp;gt;baz&amp;lt;/mynamespace:bar&amp;gt; &amp;lt;/mynamespace:foo&amp;gt; &amp;lt;/root&amp;gt; We can make use of lazy-xml/emitto output an XML string from some sort of input?</description>
    </item>
    
    <item>
      <title>Scala: Rolling with implicit</title>
      <link>https://markhneedham.com/blog/2011/07/19/scala-rolling-with-implicit/</link>
      <pubDate>Tue, 19 Jul 2011 06:39:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/19/scala-rolling-with-implicit/</guid>
      <description>We&amp;rsquo;ve been coding in Scala on my project for around 6 weeks now and are getting to the stage where we&amp;rsquo;re probably becoming a big dangerous with our desire to try out some of the language features.
One that we&amp;rsquo;re trying out at the moment is the implicitkey word which allows you to pass arguments to objects and methods without explicitly defining them in the parameter list.
The website we&amp;rsquo;re working on needs to be accessible in multiple languages and therefore we need to be able to translate some words before they get displayed on the page.</description>
    </item>
    
    <item>
      <title>Emacs: Re-mapping the Control and Meta Keys on Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/07/17/emacs-re-mapping-the-control-and-meta-keys-on-mac-os-x/</link>
      <pubDate>Sun, 17 Jul 2011 10:24:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/17/emacs-re-mapping-the-control-and-meta-keys-on-mac-os-x/</guid>
      <description>Since I&amp;rsquo;ve started playing around with Clojure again I thought it&amp;rsquo;d make sense to use emacs as my editor and therefore needed to work out how to remap the Ctrl and Meta to keys which are more accessible on the MBP&amp;rsquo;s keyboard.
I&amp;rsquo;ve found that I like using the Caps Lock for Ctrl and that&amp;rsquo;s reasonably easy to change by navigating to &amp;lsquo;System Preferences &amp;gt; Keyboard &amp;gt; Modifier Keys&amp;rsquo;:
The Meta key is Escape by default and I wanted to map it to the right Command key as that&amp;rsquo;s much easier for me to get to.</description>
    </item>
    
    <item>
      <title>Clojure: Extracting child elements from an XML document with zip-filter</title>
      <link>https://markhneedham.com/blog/2011/07/16/clojure-extracting-child-elements-from-an-xml-document-with-zip-filter/</link>
      <pubDate>Sat, 16 Jul 2011 22:19:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/16/clojure-extracting-child-elements-from-an-xml-document-with-zip-filter/</guid>
      <description>I&amp;rsquo;ve been following Nurullah Akkaya&amp;rsquo;s blog postabout navigating XML documents using the Clojure zip-filterAPI and I came across an interesting problem in a document I&amp;rsquo;m parsing which goes beyond what&amp;rsquo;s covered in his post.
Nurullah provides a neat zip-strfunction which we can use to convert an XML string into a zipper object:
(require &amp;#39;[clojure.zip :as zip] &amp;#39;[clojure.xml :as xml]) (use &amp;#39;[clojure.contrib.zip-filter.xml]) (defn zip-str [s] (zip/xml-zip (xml/parse (java.io.ByteArrayInputStream. (.getBytes s))))) The fragment of the document I&amp;rsquo;m parsing looks like this:</description>
    </item>
    
    <item>
      <title>Scala: An attempt to eradicate the if</title>
      <link>https://markhneedham.com/blog/2011/07/12/scala-an-attempt-to-eradicate-the-if/</link>
      <pubDate>Tue, 12 Jul 2011 22:50:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/12/scala-an-attempt-to-eradicate-the-if/</guid>
      <description>In a previous postI included a code sample where we were formatting a page range differently depending on whether the start page and end pages were the same.
The code looked like this:
trait PageAware { def startPage:String def endPage:String def pageRange = if(firstPage == lastPage) &amp;#34;page %s&amp;#34;.format(firstPage) else &amp;#34;pages %s-%s&amp;#34;.format(firstPage, lastPage) } Looking at the if statement on the last line we were curious whether it would be possible to get rid of it and replace it with something else.</description>
    </item>
    
    <item>
      <title>Scala: Pattern matching a pair inside map/filter</title>
      <link>https://markhneedham.com/blog/2011/07/12/scala-pattern-matching-a-pair-inside-mapfilter/</link>
      <pubDate>Tue, 12 Jul 2011 22:42:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/12/scala-pattern-matching-a-pair-inside-mapfilter/</guid>
      <description>More than a few times recently we&amp;rsquo;ve wanted to use pattern matching on a collection of pairs/tuples and have run into trouble doing so.
It&amp;rsquo;s easy enough if you don&amp;rsquo;t try and pattern match:
&amp;gt; List((&amp;#34;Mark&amp;#34;, 4), (&amp;#34;Charles&amp;#34;, 5)).filter(pair =&amp;gt; pair._2 == 4) res6: List[(java.lang.String, Int)] = List((Mark,4)) But if we try to use pattern matching:
List((&amp;#34;Mark&amp;#34;, 4), (&amp;#34;Charles&amp;#34;, 5)).filter(case(name, number) =&amp;gt; number == 4) We end up with this error:</description>
    </item>
    
    <item>
      <title>Clojure: Language as thought shaper</title>
      <link>https://markhneedham.com/blog/2011/07/10/clojure-language-as-thought-shaper/</link>
      <pubDate>Sun, 10 Jul 2011 22:21:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/10/clojure-language-as-thought-shaper/</guid>
      <description>I recently read an interesting article by Tom Van Cutsemwhere he describes some of the goals that influence the design of programming languages and one which stood out to me is that of viewing &amp;lsquo;language as a thought shaper&amp;rsquo;:
The goal of a thought shaper language is to change the way a programmer thinks about structuring his or her program.
I&amp;rsquo;ve been rewriting part of the current system that I&amp;rsquo;m working on in Clojure in my spare time to see how the design would differ and it&amp;rsquo;s interesting to see that it&amp;rsquo;s quite different.</description>
    </item>
    
    <item>
      <title>Scala: Traits galore</title>
      <link>https://markhneedham.com/blog/2011/07/09/scala-traits-galore/</link>
      <pubDate>Sat, 09 Jul 2011 19:54:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/09/scala-traits-galore/</guid>
      <description>We recently came across a problem where we had some logic that we wanted to be used by two classes.
Our original thought was to pull it up into an abstract class which ended up looking like this:
abstract class SomeArbitraryClass(root:xml.Node) { def unrelatedField1:String def unrelatedField2:String def startPage:String def endPage:String def pageRange = if(firstPage == lastPage) &amp;#34;page %s&amp;#34;.format(firstPage) else &amp;#34;pages %s-%s&amp;#34;.format(firstPage, lastPage) } Writing a test link to scala test for the page logic helped us to see more clearly that the design was a bit awkward:</description>
    </item>
    
    <item>
      <title>Scala: Martin Odersky&#39;s Object-oriented meets functional: An exploration of Scala</title>
      <link>https://markhneedham.com/blog/2011/07/05/scala-martin-oderskys-object-oriented-meets-functional-an-exploration-of-scala/</link>
      <pubDate>Tue, 05 Jul 2011 05:02:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/05/scala-martin-oderskys-object-oriented-meets-functional-an-exploration-of-scala/</guid>
      <description>My colleague Charlesand I attended Martin Odersky&amp;rsquo;s &amp;lsquo;Object-oriented meets functional: An exploration of Scala&amp;rsquo; two day Scala workshop hosted by Skills Matter at the end of last week.
It was run by Iulian Dragos who wrote his Phd thesis on how to improve the performance of the Scala compiler.
The course was a bit adapted from the original in that it came at Scala more from an application developer&amp;rsquo;s point of view rather than that of a language geek.</description>
    </item>
    
    <item>
      <title>Clojure: Equivalent to Scala&#39;s flatMap/C#&#39;s SelectMany</title>
      <link>https://markhneedham.com/blog/2011/07/03/clojure-equivalent-to-scalas-flatmapcs-selectmany/</link>
      <pubDate>Sun, 03 Jul 2011 22:50:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/07/03/clojure-equivalent-to-scalas-flatmapcs-selectmany/</guid>
      <description>I&amp;rsquo;ve been playing around with Clojure a bit over the weekend and one thing I got stuck with was working out how to achieve the functionality provided by Scala&amp;rsquo;s flatMapor C#&amp;lsquo;s SelectManymethods on collections.
I had a collection of zip files and wanted to transform that into a collection of all the file entries in those files.
If we just use mapthen we&amp;rsquo;ll end up with a collection of collections which is more difficult to deal with going forward.</description>
    </item>
    
    <item>
      <title>Git: Deleting a remote branch on a gitolite configured repository</title>
      <link>https://markhneedham.com/blog/2011/06/28/git-deleting-a-remote-branch-on-a-gitolite-configured-repository/</link>
      <pubDate>Tue, 28 Jun 2011 22:09:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/28/git-deleting-a-remote-branch-on-a-gitolite-configured-repository/</guid>
      <description>We&amp;rsquo;ve had an xsbtbranch on our gitolitepowered repository for the last couple of weeks while we worked out how to move our build from sbt 0.7 to sbt 0.10 but having finally done that we needed to delete it.
I originally tried running the following command from one of our developer workstations:
git push origin :xsbt But ended up with the following error:
! [remote rejected] xsbt (deletion prohibited)
A bit of googling led me to this stackoverflow threadwhich suggested that you needed to be an administrator in order to delete a remote branch.</description>
    </item>
    
    <item>
      <title>Scala: Self type annotations and structured types</title>
      <link>https://markhneedham.com/blog/2011/06/27/scala-self-type-annotations-and-structured-types/</link>
      <pubDate>Mon, 27 Jun 2011 23:21:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/27/scala-self-type-annotations-and-structured-types/</guid>
      <description>A few days ago I tweeted that I didn&amp;rsquo;t really see the point in structured types in Scala&amp;hellip;
&amp;hellip;but today my colleague Uday came up with a cool way of combining self type annotationswith structured types inside a trait we defined.
We had some code duplicated across two classes which looked roughly like this:
class OnePageType { lazy val peopleNodes = root \\ &amp;#34;SomeNode&amp;#34; \ &amp;#34;SomeSubNode&amp;#34; \ &amp;#34;People&amp;#34; \ &amp;#34;Person&amp;#34; private def fullName(personName: Node): String = // code to build person&amp;#39;s name  lazy val people: String = peopleNodes.</description>
    </item>
    
    <item>
      <title>Bounded Rationality</title>
      <link>https://markhneedham.com/blog/2011/06/26/bounded-rationality/</link>
      <pubDate>Sun, 26 Jun 2011 17:05:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/26/bounded-rationality/</guid>
      <description>In &amp;lsquo;Thinking In Systems: A Primer&amp;rsquo; one of the most interesting ideas that Donella Meadows describes is what Herbert Simon coined &amp;lsquo;bounded rationality&amp;rsquo;:
Later on in the chapter the following idea is suggested:
This helps explains something that I&amp;rsquo;ve noticed happen quite frequently.
Someone who was previously non management gets pulled into a management position and &amp;lsquo;mysteriously&amp;rsquo; starts acting exactly like all the others in that type of role rather than having a holistic view.</description>
    </item>
    
    <item>
      <title>Coding: Light weight wrapper vs serialisation/deserialisation</title>
      <link>https://markhneedham.com/blog/2011/06/26/coding-light-weight-wrapper-vs-serialisationdeserialisation/</link>
      <pubDate>Sun, 26 Jun 2011 13:58:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/26/coding-light-weight-wrapper-vs-serialisationdeserialisation/</guid>
      <description>As I&amp;rsquo;ve mentionedbefore, we&amp;rsquo;re making use of a MarkLogic database on the project I&amp;rsquo;m working on which means that we&amp;rsquo;re getting quite big XML data structures coming into our application whenever we execute a query.
The normal way that I&amp;rsquo;ve seen for dealing with external systems would be to create an anti corruption layerwhere we initialise objects in our system with the required data from the external system.
In this case we&amp;rsquo;ve decided that approach doesn&amp;rsquo;t seem to make as much sense because we don&amp;rsquo;t need to do that much with the data that we get back.</description>
    </item>
    
    <item>
      <title>Tech Leading: Keeping the passion</title>
      <link>https://markhneedham.com/blog/2011/06/22/tech-leading-keeping-the-passion/</link>
      <pubDate>Wed, 22 Jun 2011 23:48:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/22/tech-leading-keeping-the-passion/</guid>
      <description>As I mentioned a couple of months ago, while I was in India I was acting as the Tech Lead on the project the TWU grads were working on and one thing I learnt from doing that is the importance of trying to keep the passion of the developers on the team.
When we started off I was more focused on trying to encourage the team to try and develop as many of the stories as possible.</description>
    </item>
    
    <item>
      <title>Scala: val, lazy val and def</title>
      <link>https://markhneedham.com/blog/2011/06/22/scala-val-lazy-val-and-def/</link>
      <pubDate>Wed, 22 Jun 2011 23:04:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/22/scala-val-lazy-val-and-def/</guid>
      <description>We have a variety of val, lazy valand defdefinitions across our code base but have been led to believe that idiomatic Scala would have us using lazy valas frequently as possible.
As far as I understand so far this is what the different things do:
In Java, C# or Ruby I would definitely favour the 3rd option because it reduces the amount of state that an object has to hold.</description>
    </item>
    
    <item>
      <title>Scala/Mustache: Creating a comma separated list</title>
      <link>https://markhneedham.com/blog/2011/06/22/scalamustache-creating-a-comma-separated-list/</link>
      <pubDate>Wed, 22 Jun 2011 21:24:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/22/scalamustache-creating-a-comma-separated-list/</guid>
      <description>We&amp;rsquo;re using the Mustachetemplating engine on my project at the moment and one thing that we wanted to do was build a comma separated list.
Mustache is designed so that you pretty much can&amp;rsquo;t do any logic in the template which made it really difficult to do what we wanted.
It&amp;rsquo;s easy enough to get a comma after each item in a list with something like the following code:
{{#people}}&amp;lt;a href=&amp;#34;/link/to/{{toString}}&amp;#34;&amp;gt;{{toString}}&amp;lt;/a&amp;gt;{{/people}} where peopleis passed to the template as a collection of strings.</description>
    </item>
    
    <item>
      <title>MarkLogic: Customising a result set</title>
      <link>https://markhneedham.com/blog/2011/06/20/marklogic-customising-a-result-set/</link>
      <pubDate>Mon, 20 Jun 2011 22:36:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/20/marklogic-customising-a-result-set/</guid>
      <description>One of the stories we worked on last week had us needing to be able to customise the output of a MarkLogic search query to include some elements which aren&amp;rsquo;t included in the default view.
We started off with this:
search.xqy
xquery version &amp;#34;1.0-ml&amp;#34;; import module namespace search = &amp;#34;http://marklogic.com/appservices/search&amp;#34; at &amp;#34;/MarkLogic/appservices/search/search.xqy&amp;#34;; declare variable $term as xs:string := xdmp:get-request-field(&amp;#34;query&amp;#34;, &amp;#34;&amp;#34;); search:search($term) Which gives us back a list of results showing where in the documents the search term appeared.</description>
    </item>
    
    <item>
      <title>Chef, Fedora and &#39;ArgumentError: Attribute domain is not defined!&#39;</title>
      <link>https://markhneedham.com/blog/2011/06/18/chef-fedora-and-argumenterror-attribute-domain-is-not-defined/</link>
      <pubDate>Sat, 18 Jun 2011 18:45:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/18/chef-fedora-and-argumenterror-attribute-domain-is-not-defined/</guid>
      <description>I&amp;rsquo;ve been playing around with Chef Soloon Fedora and executing the following:
sudo chef-solo -c config/solo.rb -j config/node.json (where node.jsonjust contains the example code from the resolver example on the Chef documentation pageand the cookbooks folder contains all the opscode cookbooks.)
leads to the following error:
... ERROR: Running exception handlers ERROR: Exception handlers complete FATAL: Stacktrace dumped to /home/mark/chef-solo/chef-stacktrace.out FATAL: ArgumentError: Attribute domain is not defined! A bit of googling led me to believe that this error is happening because the machine doesn&amp;rsquo;t have a fully qualified domain name (fqdn) definedwhich can be seen by calling the following command:</description>
    </item>
    
    <item>
      <title>MarkLogic: Deleting all the documents in a database</title>
      <link>https://markhneedham.com/blog/2011/06/18/marklogic-deleting-all-the-documents-in-a-database/</link>
      <pubDate>Sat, 18 Jun 2011 16:08:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/18/marklogic-deleting-all-the-documents-in-a-database/</guid>
      <description>We&amp;rsquo;re using the MarkLogicdatabase on my current project and something that we wanted to do recently was delete all the documents as part of a deployment script.
Getting all of the documents is reasonably easy - we just need to make a call to the doc()function.
We can then iterate through the documents like so:
for $doc in doc() return $doc We wanted to make use of the xdmp:document-deletefunction to tear down all of the modules but that needs a uri representing the location of the document in the database which isn&amp;rsquo;t available in $doc:</description>
    </item>
    
    <item>
      <title>Fedora: Recovering from the IntelliJ &#39;Ctrl-Alt-F7&#39;</title>
      <link>https://markhneedham.com/blog/2011/06/16/fedora-recovering-from-the-intellij-ctrl-alt-f7/</link>
      <pubDate>Thu, 16 Jun 2011 07:27:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/16/fedora-recovering-from-the-intellij-ctrl-alt-f7/</guid>
      <description>We&amp;rsquo;re using Fedora on our local developer work stations and some of the default key bindings of the operating system seem to conflict with ones provided by IntelliJ IDEA.
One particular amusing one is &amp;lsquo;Ctrl-Alt-F7&amp;rsquo; which you use in IntelliJ to see the usages of a piece of code.
In Fedora that seems to switch into a different X Server session and you just see a blank screen with seemingly no way out!</description>
    </item>
    
    <item>
      <title>Parkinson&#39;s Law and Iteration Zero</title>
      <link>https://markhneedham.com/blog/2011/06/13/parkinsons-law-and-iteration-zero/</link>
      <pubDate>Mon, 13 Jun 2011 23:02:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/13/parkinsons-law-and-iteration-zero/</guid>
      <description>I&amp;rsquo;ve been thinking a bit about Parkinson&amp;rsquo;s Lawrecently and its&amp;rsquo; applicability in software development.
Parkinson&amp;rsquo;s law is defined as follows:
“Work expands so as to fill the time available for its completion”
My colleagues quite frequently reference this law with respect to stories taking the amount of time that reflects the story point estimate assigned to them.
I haven&amp;rsquo;t noticed this so much but I think we&amp;rsquo;re more susceptible to the law when what we&amp;rsquo;re working on doesn&amp;rsquo;t have a clear goal or doesn&amp;rsquo;t have a fast feedback loop.</description>
    </item>
    
    <item>
      <title>Scala: Setting a default value</title>
      <link>https://markhneedham.com/blog/2011/06/12/scala-setting-a-default-value/</link>
      <pubDate>Sun, 12 Jun 2011 16:03:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/12/scala-setting-a-default-value/</guid>
      <description>We wanted to try and generate a build label to use for the name of the artifacts archive that gets generated each time we run the build but wanted to default it to a hard coded value if the system property representing the build label wasn&amp;rsquo;t available.
In Ruby we would be able to do something like this:
buildLabel = ENV[&amp;#34;GO_PIPELINE_LABEL&amp;#34;] || &amp;#34;LOCAL&amp;#34; There isn&amp;rsquo;t a function in Scala that does that so we initially ended up with this:</description>
    </item>
    
    <item>
      <title>Sbt: Rolling with continuous/incremental compilation and Jetty</title>
      <link>https://markhneedham.com/blog/2011/06/10/sbt-rolling-with-continuousincremental-compilation-and-jetty/</link>
      <pubDate>Fri, 10 Jun 2011 00:16:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/10/sbt-rolling-with-continuousincremental-compilation-and-jetty/</guid>
      <description>As I mentioned in an earlier postwe&amp;rsquo;re using SBT on our project and one of it&amp;rsquo;s cool features is that it will listen to the source directory and then automatically recompile the code when it detects file changes.
We&amp;rsquo;ve also installed the sbt-jetty-embedplugin which allows us to create a war which has Jetty embedded so that we can keep our application containerless.
That plugin adds an action called &amp;lsquo;jetty&amp;rsquo; to sbt so we (foolishly in hindsight) thought that we would be able to launch the application in triggered execution mode by making use of a ~ in front of that:</description>
    </item>
    
    <item>
      <title>IntelliJ: Adding resources with unusual extensions onto the classpath</title>
      <link>https://markhneedham.com/blog/2011/06/09/intellij-adding-resources-with-unusual-extensions-onto-the-classpath/</link>
      <pubDate>Thu, 09 Jun 2011 23:10:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/09/intellij-adding-resources-with-unusual-extensions-onto-the-classpath/</guid>
      <description>We&amp;rsquo;re making use of MarkLogicand therefore xqueryon the project I&amp;rsquo;m currently working on and recently wanted to add our xquery setup files onto the classpath so they could be used in a test.
We added them into &amp;lsquo;src/main/resources&amp;rsquo; and set that as a source path in IntelliJ assuming that was all we needed to do.
Despite doing that our test kept failing because it couldn&amp;rsquo;t locate the files on the classpath.</description>
    </item>
    
    <item>
      <title>Sbt: Zipping files without their directory structure</title>
      <link>https://markhneedham.com/blog/2011/06/04/sbt-zipping-files-without-their-directory-structure/</link>
      <pubDate>Sat, 04 Jun 2011 17:24:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/06/04/sbt-zipping-files-without-their-directory-structure/</guid>
      <description>We&amp;rsquo;re using SBTon our project and Patand I have been trying to work out how to zip together some artifacts so that they&amp;rsquo;re all available from the top level of the zip file i.e. we don&amp;rsquo;t want to copy the directory structure where the files come from.
I&amp;rsquo;ve been playing around with this in the Scala REPL which we can launch with our project&amp;rsquo;s dependencies loaded with the following command:</description>
    </item>
    
    <item>
      <title>Developer Experience (#devexp) and the 5 minute experience</title>
      <link>https://markhneedham.com/blog/2011/05/31/developer-experience-devexp-and-the-5-minute-experience/</link>
      <pubDate>Tue, 31 May 2011 21:29:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/31/developer-experience-devexp-and-the-5-minute-experience/</guid>
      <description>My former colleague Ade Oshineye recently linked me to a post he&amp;rsquo;s written about Developer Experience (#devexp)which is described as:
I think it&amp;rsquo;s quite an interesting idea and I particularly like two of the ideas suggested:
The idea here is that if you provide a library, developers should be able to go from downloading to &amp;ldquo;Hello World&amp;rdquo; in 5 minutes.
For instance if your users struggle with getting OAuth working then create abstractions that handle it for them rather than documenting the 6 most common problems or writing up the &amp;lsquo;simple 12 step process&amp;rsquo; for getting it working.</description>
    </item>
    
    <item>
      <title>XP 2011: How complex is software?</title>
      <link>https://markhneedham.com/blog/2011/05/19/xp-2011-how-complex-is-software/</link>
      <pubDate>Thu, 19 May 2011 09:44:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/19/xp-2011-how-complex-is-software/</guid>
      <description>The last session I attended at XP 2011 was a workshop run by John Mcfadyenwhere he introduced us to Dave Snowden&amp;rsquo;sCynefinmodel, which is a model used to describe problems, situations and systems.
I&amp;rsquo;d come across the model previously and it had been all over my twitter stream a couple of weeks ago as a result of Dave Snowden giving a key note at the Lean Systems and Software conference.
These are some of the things I learnt from the workshop:</description>
    </item>
    
    <item>
      <title>&#34;In what world does that make sense&#34;</title>
      <link>https://markhneedham.com/blog/2011/05/14/in-what-world-does-that-make-sense/</link>
      <pubDate>Sat, 14 May 2011 21:12:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/14/in-what-world-does-that-make-sense/</guid>
      <description>In her keynote at XP 2011Esther Derbyencouraged us to ask the question &amp;ldquo;in what world does that make sense?&amp;rdquo; whenever we encounter something which we consider to be stupid or ridiculous.
I didn&amp;rsquo;t think much of it at the time but my colleague Pat Kuahas been asking me the question whenever I&amp;rsquo;ve been describing something that I find confusing to him.
After about the third time I noticed that its quite a nice tool for getting us to reflect on the systems and feedback loops that may be encouraging the behaviour witnessed.</description>
    </item>
    
    <item>
      <title>System Traps: Rule Beating</title>
      <link>https://markhneedham.com/blog/2011/05/14/system-traps-rule-beating/</link>
      <pubDate>Sat, 14 May 2011 21:02:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/14/system-traps-rule-beating/</guid>
      <description>In &amp;lsquo;Thinking In Systems&amp;rsquo; section five focuses on systems which produce &amp;ldquo;truly problematic behaviour&amp;rdquo; and one of these so called system traps is known as &amp;lsquo;rule beating&amp;rsquo;.
Rule beating occurs when the agents in a system take evasive action to get around the intent of rules in a system:
A common system where we see this in organisations is around training budgets.
Each individual will be given a certain amount of money to spend each year and if they don&amp;rsquo;t spend it then they lose it.</description>
    </item>
    
    <item>
      <title>XP 2011: Esther Derby - Still no silver bullets</title>
      <link>https://markhneedham.com/blog/2011/05/13/xp-2011-esther-derby-still-no-silver-bullets/</link>
      <pubDate>Fri, 13 May 2011 12:26:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/13/xp-2011-esther-derby-still-no-silver-bullets/</guid>
      <description>The first keynote at XP 2011 was one given by Esther Derbytitled &amp;lsquo;Still no silver bullets&amp;rsquo; where she talked about some of the reasons why agile adoption seems to work in the small but often fails in the large.
Esther quoted Donella Meadows, the author of &amp;lsquo;Thinking in Systems&amp;rsquo;, a few times which was an interesting coincidence for me as I&amp;rsquo;m currently reading her book.
One of the first quotes from that book was the following:</description>
    </item>
    
    <item>
      <title>XP 2011: Michael Feathers - Brutal Refactoring</title>
      <link>https://markhneedham.com/blog/2011/05/11/xp-2011-michael-feathers-brutal-refactoring/</link>
      <pubDate>Wed, 11 May 2011 13:35:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/11/xp-2011-michael-feathers-brutal-refactoring/</guid>
      <description>The second session that I attended at XP 2011 was Michael Feathers&amp;rsquo; tutorial &amp;lsquo;Brutal Refactoring&amp;rsquo; where he talked through some of the things that he&amp;rsquo;s learned since he finished writing &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
I&amp;rsquo;ve found some of Michael&amp;rsquo;s recent blog posts about analysing the data in our code repositoriesquite interesting to read and part of this tutorial was based on the research he&amp;rsquo;s done in that area.
The session started off discussing the difference between clean codeand understandable code.</description>
    </item>
    
    <item>
      <title>Feedback: In public</title>
      <link>https://markhneedham.com/blog/2011/05/11/feedback-in-public/</link>
      <pubDate>Wed, 11 May 2011 12:12:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/11/feedback-in-public/</guid>
      <description>One of the areas that I covered during a session I ran at XP 2011on making feedback work in teams was the idea of giving feedback in public.
The general consensus seems to be that giving feedback in public isn&amp;rsquo;t a good idea and it&amp;rsquo;d much more effective to give that feedback privately.
I think this is a good rule of thumb and my observations are that feedback given in public tends to not be given in a very constructive manner and therefore leads to a defensive response from the recipient.</description>
    </item>
    
    <item>
      <title>XP 2011: J.B. Rainsberger - A Simple Approach to Modular Design</title>
      <link>https://markhneedham.com/blog/2011/05/11/xp-2011-j-b-rainsberger-a-simple-approach-to-modular-design/</link>
      <pubDate>Wed, 11 May 2011 12:11:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/11/xp-2011-j-b-rainsberger-a-simple-approach-to-modular-design/</guid>
      <description>After finishing my own session at XP 2011 I attended the second half of J.B. Rainsberger&amp;rsquo;stutorial on modular design.
For most of the time that I was there he drove out the design for a point of sale system in Java while showing how architectural patterns can emerge in the code just by focusing on improving names and removing duplication.
The second half of the session was much more interesting to watch as this was when J.</description>
    </item>
    
    <item>
      <title>Discussing the Undiscussable: Book Review</title>
      <link>https://markhneedham.com/blog/2011/05/07/discussing-the-undiscussable-book-review/</link>
      <pubDate>Sat, 07 May 2011 00:45:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/07/discussing-the-undiscussable-book-review/</guid>
      <description>I came across the work of Chris Argyris at the start of the yearand in a twitter conversation with Benjamin Mitchellhe suggested that Bill Noonan&amp;rsquo;s &amp;lsquo;Discussing the Undiscussable&amp;rsquo; was the most accessible text for someone new to the subject.
In the book Noonan runs through a series of different tools that Chris Argyrisoriginally came up with for helping people to handle difficult conversational situations more effectively.
I really like the way the book is written.</description>
    </item>
    
    <item>
      <title>Feedback Loops: Human Decisions</title>
      <link>https://markhneedham.com/blog/2011/05/05/feedback-loops-human-decisions/</link>
      <pubDate>Thu, 05 May 2011 18:04:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/05/feedback-loops-human-decisions/</guid>
      <description>I&amp;rsquo;ve been reading Donella Meadows&amp;rsquo; &amp;lsquo;Thinking In Systems: A Primer&amp;rsquo;, an introductory text on systems thinking, and after 30 pages or so the author poses the following challenge:
Meadows has quite a nice way of guiding us to thinking about systems by referring to &amp;lsquo;stocks&amp;rsquo; and &amp;lsquo;flows&amp;rsquo;.
For example the following diagram represents the flows into and out from a water reservoir:
The &amp;lsquo;water in reservoir&amp;rsquo; is the stock in this system while rain/river inflow act as the in flows and evaporation/discharge are the out flows.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Retrospective Coherence</title>
      <link>https://markhneedham.com/blog/2011/05/01/thoughtworks-university-retrospective-coherence/</link>
      <pubDate>Sun, 01 May 2011 11:25:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/05/01/thoughtworks-university-retrospective-coherence/</guid>
      <description>I recently came across Joseph Pelrine&amp;rsquo;s blog postwhere he describes the way that you might go about organising a great party.
He describes a party that a friend of his hosted and all the things which contributed to it being great, such as the people you invite, the music that is played, the food and drink that are served and the conversations that are had.
If you then wanted to replicate a &amp;lsquo;great party&amp;rsquo; you might think that you could just replay his friend&amp;rsquo;s party, with the same guests, same music, a script of the conversations had and so on.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: v2.0 vs v1.0</title>
      <link>https://markhneedham.com/blog/2011/04/27/thoughtworks-university-v2-0-vs-v1-0/</link>
      <pubDate>Wed, 27 Apr 2011 12:33:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/27/thoughtworks-university-v2-0-vs-v1-0/</guid>
      <description>Since we finished the most recent ThoughtWorks University session last week a few people have been asking me how the experience was and I&amp;rsquo;ve found myself comparing this experience to my own as an attendee in August 2006.
Back then ThoughtWorks University was much different. We had 5 weeks of workshop style sessions and then spent the last week working on an internal application.
This time we spent 1 week doing the workshop style sessions, 1 week working together on a story and then 4 weeks working on the application.</description>
    </item>
    
    <item>
      <title>The ladder of inference</title>
      <link>https://markhneedham.com/blog/2011/04/24/the-ladder-of-inference/</link>
      <pubDate>Sun, 24 Apr 2011 14:11:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/24/the-ladder-of-inference/</guid>
      <description>In Discussing the UndiscussableWilliam Noonan describes the ladder of inference, a tool which can be used to help us achieve double loop learning with respect to our interactions with other people.
It also helps people understand how they interpret that information and how they apply their interpretation to the issue or problem at hand.
Essentially, the Ladder of Inference is a metaphorical tool designed to help people understand and describe their use of inductive reasoning.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Things people found difficult</title>
      <link>https://markhneedham.com/blog/2011/04/23/thoughtworks-university-things-people-found-difficult/</link>
      <pubDate>Sat, 23 Apr 2011 19:47:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/23/thoughtworks-university-things-people-found-difficult/</guid>
      <description>After six weeks ThoughtWorks University #21 finished on Thursday so I thought it&amp;rsquo;d be interesting to summarise some of the things that people seemed to find difficult over the course of TWU.
These were most frequently related to incorrect wiring of Spring components but there were other reasons too.
People seemed to find these stack traces quite difficult to understand, particularly when one stack trace was nested inside another, and often just started guessing why the code wasn&amp;rsquo;t working.</description>
    </item>
    
    <item>
      <title>The sunk cost fallacy</title>
      <link>https://markhneedham.com/blog/2011/04/17/the-sunk-cost-fallacy/</link>
      <pubDate>Sun, 17 Apr 2011 12:05:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/17/the-sunk-cost-fallacy/</guid>
      <description>I recently came across David McRaney&amp;rsquo;s post about the sunk cost fallacy with reference to Farmville, a fallacy that is very applicable to software.
David starts off with the following statements which describe the fallacy pretty well:
The Truth: Your decisions are tainted by the emotional investments you accumulate, and the more you invest in something the harder it becomes to abandon it.
I think this is very true in a lot of IT organisations in particular when they&amp;rsquo;ve made a big investment on some sort of middleware, usually an ESB.</description>
    </item>
    
    <item>
      <title>Tech Leading: Initial Thoughts</title>
      <link>https://markhneedham.com/blog/2011/04/17/tech-leading-initial-thoughts/</link>
      <pubDate>Sun, 17 Apr 2011 11:27:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/17/tech-leading-initial-thoughts/</guid>
      <description>As I mentioned in an earlier post I&amp;rsquo;ve been playing the role of tech lead on the project that we&amp;rsquo;ve been doing at ThoughtWorks University so I thought it&amp;rsquo;d be interesting to note down some of my observations so far.
Out of the tech leads that I&amp;rsquo;ve had I liked the style of Dave Cameronthe best.
He viewed himself more as a technical facilitator rather than as a person who should make every single decision about how a system got built which meant that others also got a chance to take some responsibility.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: &#34;It&#39;s your project&#34;</title>
      <link>https://markhneedham.com/blog/2011/04/13/thoughtworks-university-its-your-project/</link>
      <pubDate>Wed, 13 Apr 2011 20:28:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/13/thoughtworks-university-its-your-project/</guid>
      <description>One of the things that we&amp;rsquo;ve struggled with at ThoughtWorks University is giving the attendees the opportunity to run the project that we&amp;rsquo;ve been working on.
The first few weeks were the most frustrating both for the trainers and for the attendees because we spent a lot of time telling the attendees that it was their project but then didn&amp;rsquo;t display behaviour consistent with that message.
From my observations this happened because the role of the trainers was defined as &amp;lsquo;senior team member&amp;rsquo; which meant that if a trainer saw something going wrong they&amp;rsquo;d try and fix it since that&amp;rsquo;s what they&amp;rsquo;d do in a normal team.</description>
    </item>
    
    <item>
      <title>Feedback: Easing in</title>
      <link>https://markhneedham.com/blog/2011/04/13/feedback-easing-in/</link>
      <pubDate>Wed, 13 Apr 2011 02:33:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/13/feedback-easing-in/</guid>
      <description>One of the most common techniques of feedback which I&amp;rsquo;ve come across is one that William Noonan describes in &amp;lsquo;Discussing the Undiscussable&amp;rsquo; as easing in.
From the book:
From my experience we&amp;rsquo;ll try to do this because giving our point of view could lead to an awkward conversation so we&amp;rsquo;d rather they express our opinion for us instead.
Amusingly I managed to create an example of easing in while showing a colleague (colleague 1) the chapter about easing in!</description>
    </item>
    
    <item>
      <title>HTML encoding/escaping with StringTemplate and Spring MVC</title>
      <link>https://markhneedham.com/blog/2011/04/09/html-encodingescaping-with-stringtemplate-and-spring-mvc/</link>
      <pubDate>Sat, 09 Apr 2011 10:54:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/09/html-encodingescaping-with-stringtemplate-and-spring-mvc/</guid>
      <description>Last week my colleague T.C. and I had to work out how to HTML encode the values entered by the user when redisplaying those onto the page to prevent a cross site scripting attack on the website.
I wrote a blog post a couple of years ago describing how to do this in ASP.NET MVCand the general idea is that we need to have a custom renderer which HTML encodes any strings that pass through it.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Similarities with &#39;Discussing the Undiscussable&#39;</title>
      <link>https://markhneedham.com/blog/2011/04/09/thoughtworks-university-similarities-with-discussing-the-undiscussable/</link>
      <pubDate>Sat, 09 Apr 2011 10:38:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/09/thoughtworks-university-similarities-with-discussing-the-undiscussable/</guid>
      <description>I&amp;rsquo;m currently reading the final chapter of William Noonan&amp;rsquo;s Discussing the Undiscussabletitled &amp;lsquo;Helping Those Who Teach, Learn&amp;rsquo; and a couple of the ideas that he describes seem quite applicable to what we&amp;rsquo;re doing at ThoughtWorks University.
I think this is the same with teaching/facilitating the learning of ThoughtWorks University and it seems to centre around the espoused theory and theory in action.
The espoused theory describes our theory of what we think we do in a situation whereas the theory in action describes what we actually do.</description>
    </item>
    
    <item>
      <title>Unix: Getting the sound from &#39;say&#39; as a wav file</title>
      <link>https://markhneedham.com/blog/2011/04/07/unix-getting-the-sound-from-say-as-a-wav-file/</link>
      <pubDate>Thu, 07 Apr 2011 19:18:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/07/unix-getting-the-sound-from-say-as-a-wav-file/</guid>
      <description>I spent a bit of time yesterday afternoon working out how to get the output from the Unix command &amp;lsquo;say&amp;rsquo; to be played whenever our build breaks.
We&amp;rsquo;re using cctrayon a Windows box for that purpose which means that we need to have the file in the &amp;lsquo;wav&amp;rsquo; format.
Unfortunately &amp;lsquo;say&amp;rsquo; doesn&amp;rsquo;t seem to be able to output a file in that format:
&amp;gt; say &amp;#34;WARNING! Drainage has occurred, please fix it.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Letting people explore</title>
      <link>https://markhneedham.com/blog/2011/04/06/thoughtworks-university-letting-people-explore/</link>
      <pubDate>Wed, 06 Apr 2011 01:34:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/06/thoughtworks-university-letting-people-explore/</guid>
      <description>I&amp;rsquo;ve been acting as the tech lead on the project that we&amp;rsquo;re working on at ThoughtWorks University and as a result I sometimes find myself being dragged away from my pair to help someone else.
An interesting thing which I&amp;rsquo;ve noticed on more than one occasion is that when I&amp;rsquo;ve come back from helping - maybe 15 or 20 minutes later - my pair has actually got much further than I expected them to.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: The coaching/training conflict</title>
      <link>https://markhneedham.com/blog/2011/04/03/thoughtworks-university-the-coachingtraining-conflict/</link>
      <pubDate>Sun, 03 Apr 2011 17:11:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/04/03/thoughtworks-university-the-coachingtraining-conflict/</guid>
      <description>As I mentioned in an earlier postSumeet has been encouraging us to act more as coaches rather than trainers during ThoughtWorks University but it&amp;rsquo;s not quite as easy as it seems.
I&amp;rsquo;ve noticed that there are a few things that contribute to this difficulty.
The biggest obstacle is that by the end of TWU the trainers are required to send a review about each of the grads to the respective Resource Managers describing each person&amp;rsquo;s current level of skill in various categories.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: The use of games</title>
      <link>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-the-use-of-games/</link>
      <pubDate>Wed, 30 Mar 2011 20:34:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-the-use-of-games/</guid>
      <description>When I attended ThoughtWorks University in August 2006 we spent quite a bit of time playing games which had been designed to help us to achieve various learning objectives.
At the time I didn&amp;rsquo;t think much about it but now being on the other side as a trainer I&amp;rsquo;ve started to doubt whether these types of sessions are as useful as I originally thought.
I recently came across a blog post Sumeet wrote last year where he talks about effective e-learning environmentsand I think his point still applies here:</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: A double loop learning example</title>
      <link>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-a-double-loop-learning-example/</link>
      <pubDate>Wed, 30 Mar 2011 19:17:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/30/thoughtworks-university-a-double-loop-learning-example/</guid>
      <description>One of the most interesting things that I&amp;rsquo;ve been reading about recently is the idea of single and double loop learning which were defined by Chris Argyris and Donald Schon in their book &amp;lsquo;Organizational Learning: A theory of action perspective&amp;rsquo; in 1978.
I quite like the definitions that Mark Smith gives for these types of learning in his article about Chris Argyris:
Single Loop LearningAny reflection is directed toward making the strategy more effective.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Pulling the &#39;pearls&#39;</title>
      <link>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-pulling-the-pearls/</link>
      <pubDate>Tue, 29 Mar 2011 18:32:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-pulling-the-pearls/</guid>
      <description>I recently wrote about the coding dojo style week that we ran at ThoughtWorks University last weekand I briefly mentioned that we used break out sessions to cover topics (&amp;lsquo;the pearls&amp;rsquo;) that people didn&amp;rsquo;t totally understand.
To describe that in more detail what we did to start with was write the name of each of the 90/180 minute sessions on a card and put it on the wall under a &amp;lsquo;To Do&amp;rsquo; heading:</description>
    </item>
    
    <item>
      <title>The working long hours culture</title>
      <link>https://markhneedham.com/blog/2011/03/29/the-working-long-hours-culture/</link>
      <pubDate>Tue, 29 Mar 2011 17:25:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/29/the-working-long-hours-culture/</guid>
      <description>One of the aspects of software development that I&amp;rsquo;ve thankfully seen relatively infrequently over the last few years is that of some people in teams working long hours on a consistent basis.
I have seen it happen on a few occasions and I think it can have a detrimental effect on a team rather than the good which is presumably intended.
The biggest disadvantage is that it makes other people in the team feel guilty that they aren&amp;rsquo;t working long hours and they may feel peer pressured into matching the hours of their colleagues.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Coding Dojo Style</title>
      <link>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-coding-dojo-style/</link>
      <pubDate>Tue, 29 Mar 2011 17:15:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/29/thoughtworks-university-coding-dojo-style/</guid>
      <description>One of the things that Sumeethas been encouraging at ThoughtWorks University is the idea that the &amp;lsquo;trainers&amp;rsquo; should be in a coaching role rather than a training one.
As a result of this suggestion one of the things we&amp;rsquo;ve done is to change the style of the second weekso that it wasn&amp;rsquo;t full of sessions/workshops but instead involved working on code as a group.
Jimcame up with the idea of the &amp;lsquo;exploded story&amp;rsquo; whereby we spent the whole of last week as a group working on one story for Sukrupawhile spending quite a bit of time exploring the different activities that playing a story end to end would involve.</description>
    </item>
    
    <item>
      <title>Java: Faking System.in</title>
      <link>https://markhneedham.com/blog/2011/03/24/java-faking-system-in/</link>
      <pubDate>Thu, 24 Mar 2011 21:58:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/24/java-faking-system-in/</guid>
      <description>We ran a refactoring dojoa couple of days ago at ThoughtWorks University and in preparation I wrote some system level tests around the coding problemthat we were going to use during the session.
It&amp;rsquo;s a command line application which is called through the main method of &amp;lsquo;Program&amp;rsquo; and since there&amp;rsquo;s no dependency injection we need to be able to set System.in and System.out in order to do any testing.
My initial thinking was that it should be possible to fake System.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Brain dumping</title>
      <link>https://markhneedham.com/blog/2011/03/23/twu-brain-dumping/</link>
      <pubDate>Wed, 23 Mar 2011 18:45:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/23/twu-brain-dumping/</guid>
      <description>One of the things that I&amp;rsquo;m learning while working at ThoughtWorks University is to bite my tongue a bit to allow people to learn in their own way.
I noticed this particularly yesterday in a refactoring session we were doing.
For about 10-15 minutes in the middle of the session we&amp;rsquo;d managed to get the code into a state where it didn&amp;rsquo;t compile and we couldn&amp;rsquo;t run the tests.
The &amp;lsquo;natural&amp;rsquo; inclination in that situation for me would be to step in and impart some &amp;lsquo;wisdom&amp;rsquo; about the importance of taking small steps while refactoring.</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: A refactoring dojo</title>
      <link>https://markhneedham.com/blog/2011/03/22/thoughtworks-university-a-refactoring-dojo/</link>
      <pubDate>Tue, 22 Mar 2011 19:10:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/22/thoughtworks-university-a-refactoring-dojo/</guid>
      <description>I facilitated a refactoring session today at ThoughtWorks University where we spent the morning refactoring our way through one of the problems the grads had to work on as part of the pre coursework.
The previous version of this session has been more structured, whereby one of the trainers worked solo at the keyboard and took suggestions from the group about which refactoring to cover next.
There are a certain number of refactorings that the session aims to introduce and the trainer would have practiced beforehand so they could make these fairly flawlessly.</description>
    </item>
    
    <item>
      <title>Retrospectives: Mini Group Discussions</title>
      <link>https://markhneedham.com/blog/2011/03/20/retrospectives-mini-group-discussions/</link>
      <pubDate>Sun, 20 Mar 2011 18:36:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/20/retrospectives-mini-group-discussions/</guid>
      <description>One of the approaches that I like the best in retrospectives is when the facilitator splits the team into smaller groups during the brainstorming part of the retrospective.
I decided to try this out in a retrospective we ran after one week of ThoughtWorks University, using The Retrospective Starfishto provide a framework in which people could frame their thoughts.
Usually what I&amp;rsquo;ve seen happen in these mini groups is that everyone will write down their own ideas on stickies and then discuss them as a group but still put up all the stickies even if the group didn&amp;rsquo;t agree with everything.</description>
    </item>
    
    <item>
      <title>Confirmation Bias and Loss of Autonomy</title>
      <link>https://markhneedham.com/blog/2011/03/20/confirmation-bias-and-loss-of-autonomy/</link>
      <pubDate>Sun, 20 Mar 2011 18:08:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/20/confirmation-bias-and-loss-of-autonomy/</guid>
      <description>I&amp;rsquo;ve mentioned confirmation bias ina fewof my previous blog postsbut I hadn&amp;rsquo;t realised quite how widespread it can be in organisations until quite recently.
Confirmation biasAs a result, people gather evidence and recall information from memory selectively, and interpret it in a biased way.
The biases appear in particular for emotionally significant issues and for established beliefs.
I&amp;rsquo;ve noticed that it is particularly prevalent in organisations when people feel that they are being told what to do i.</description>
    </item>
    
    <item>
      <title>Pair Presenting</title>
      <link>https://markhneedham.com/blog/2011/03/17/pair-presenting/</link>
      <pubDate>Thu, 17 Mar 2011 06:52:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/17/pair-presenting/</guid>
      <description>Over the last year or so I&amp;rsquo;ve had some opportunities to pair with a few different people on sessions/presentations that we&amp;rsquo;ve been giving.
I much prefer doing this than presenting something by myself mainly because it&amp;rsquo;s much more fun and seems to encourage more participation than when I do something alone.
I feel that it&amp;rsquo;s probably easier to pair present if you both have similar opinions on the subject matter and are comfortable with a similar style of delivery.</description>
    </item>
    
    <item>
      <title>TWU: Fishbowl</title>
      <link>https://markhneedham.com/blog/2011/03/15/twu-fishbowl/</link>
      <pubDate>Tue, 15 Mar 2011 01:11:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/15/twu-fishbowl/</guid>
      <description>As part of a session on ThoughtWorks valuesat ThoughtWorks Univesity we held a fishbowlto discuss the trade offs we often have to make between the values when confronted with real life situations.
Four to five chairs are arranged in an inner circle. This is the fishbowl. The remaining chairs are arranged outside the fishbowl. A few participants are selected to fill the fishbowl, while the rest of the group sit on the chairs outside the fishbowl.</description>
    </item>
    
    <item>
      <title>Use of language: Intuitive</title>
      <link>https://markhneedham.com/blog/2011/03/13/use-of-language-intuitive/</link>
      <pubDate>Sun, 13 Mar 2011 13:39:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/13/use-of-language-intuitive/</guid>
      <description>Sumeetand I were recently discussing the difference between the use of Google Groups for internal communication compared to the Jive platformwhich we&amp;rsquo;re now moving to and I suggested that I found the former more intuitive to use.
Sumeet suggested that the word &amp;lsquo;intuitive&amp;rsquo; is quite overloaded and later pointed me to an article on the Moodle websitewhich advocates the same thing:
It is generally accepted that a large part of usability is based on familiarity and experience.</description>
    </item>
    
    <item>
      <title>&#34;Everything I know everyone else knows&#34;</title>
      <link>https://markhneedham.com/blog/2011/03/13/everything-i-know-everyone-else-knows/</link>
      <pubDate>Sun, 13 Mar 2011 12:03:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/13/everything-i-know-everyone-else-knows/</guid>
      <description>For as long as I can remember I&amp;rsquo;ve had the belief that, at least as far as software is concerned, everything I know how to do everyone else also knows how to do.
I carried that assumption for quite a while and only realised relatively recently how harmful it can be.
The most observable outcome I noticed is that I either didn&amp;rsquo;t give my opinion in group situations or just didn&amp;rsquo;t take part in them because I assumed that what I wanted to say would eventually be contributed by someone else anyway.</description>
    </item>
    
    <item>
      <title>TWU: Session Preparation - Limited WIP</title>
      <link>https://markhneedham.com/blog/2011/03/09/twu-session-preparation-limited-wip/</link>
      <pubDate>Wed, 09 Mar 2011 14:42:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/09/twu-session-preparation-limited-wip/</guid>
      <description>I&amp;rsquo;ve spent a fair percentage of the last couple of weeks preparing sessions for ThoughtWorks University and one thing Frankiehas been trying to encourage is only preparing one at a time i.e. limited work in progress
Normally I&amp;rsquo;d be completely in favour of that approach but it doesn&amp;rsquo;t seem to work at all for me with this type of work.
There seem to be a few parts to creating a session, including:</description>
    </item>
    
    <item>
      <title>Kano Model: Some ThoughtWorks examples</title>
      <link>https://markhneedham.com/blog/2011/03/06/kano-model-some-thoughtworks-examples/</link>
      <pubDate>Sun, 06 Mar 2011 08:37:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/06/kano-model-some-thoughtworks-examples/</guid>
      <description>My colleague Jason Yip recently linkedto the Kano Modeland although it&amp;rsquo;s a theory about product development the definition of what counts as a product seems like it can be quite broad.
The best explanation of the model that I&amp;rsquo;ve come across so far is a post by Jean Claude Grosjeanwhich Frankielinked me to.
Grosjean describes the three types of requirements like so:
This is the happy surprise that can make a difference but if they are not there then there won&amp;rsquo;t be any dissatisfaction or frustration because they’re not expected.</description>
    </item>
    
    <item>
      <title>Coding: Reflection vs Action mode</title>
      <link>https://markhneedham.com/blog/2011/03/06/coding-reflection-vs-action-mode/</link>
      <pubDate>Sun, 06 Mar 2011 04:19:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/06/coding-reflection-vs-action-mode/</guid>
      <description>It recently struck me while preparing some ThoughtWorks University sessions that there appear to be two modes that I spend my time switching between while coding:
I spent the majority of 2008 and 2009 in reflective mode on the systems I was working on which can be seen by scanning through a lot of the blog posts that I wrote during that time.
I&amp;rsquo;m sure would have been times when I was action mode but I was far more interested in how something was being built and whether that could be done more successfully.</description>
    </item>
    
    <item>
      <title>TWU: Session Design - Measurable goals</title>
      <link>https://markhneedham.com/blog/2011/03/04/twu-session-design-measurable-goals/</link>
      <pubDate>Fri, 04 Mar 2011 02:49:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/03/04/twu-session-design-measurable-goals/</guid>
      <description>We&amp;rsquo;ve been spending our time recently preparing the sessions for the next ThoughtWorks University batch and one thing Sumeethas encouraged us to do is ensure that we have a measurable goal for each session.
In our case that means that we need to design our sessions with the intention of the grads being able to do something rather than understand something after the session.
It&amp;rsquo;s very difficult to measure whether someone understands something and from what I&amp;rsquo;ve noticed having a goal of someone understanding something can encourage you to put in more than is strictly necessary.</description>
    </item>
    
    <item>
      <title>Ruby: Refactoring from hash to object</title>
      <link>https://markhneedham.com/blog/2011/02/27/ruby-refactoring-from-hash-to-object/</link>
      <pubDate>Sun, 27 Feb 2011 20:10:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/27/ruby-refactoring-from-hash-to-object/</guid>
      <description>Something I&amp;rsquo;ve noticed when I play around with Ruby in my own time is that I nearly always end up with the situation where I&amp;rsquo;m passing hashes all over my code and to start with it&amp;rsquo;s not a big deal.
Unfortunately I eventually get to the stage where I&amp;rsquo;m effectively modelling an object inside a hash and it all gets very difficult to understand.
I&amp;rsquo;ve written a few times before about incrementally refactoringcode so this seemed like a pretty good chance for me to try that out.</description>
    </item>
    
    <item>
      <title>Pair Programming: Doodling</title>
      <link>https://markhneedham.com/blog/2011/02/26/pair-programming-doodling/</link>
      <pubDate>Sat, 26 Feb 2011 05:20:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/26/pair-programming-doodling/</guid>
      <description>Another interesting pair programming &amp;lsquo;technique&amp;rsquo; which I rediscovered while pairing with Priyankis that of doodling or drawing various parts of the solution when your pair is writing code. I find that this helps to stop my brain wondering off and lets me reflect on what we&amp;rsquo;re doing from a higher level.
As an added bonus it also seems to allow me to listen more effectivelyto my pair.
From what I&amp;rsquo;ve noticed it works most effectively when the other person is reasonably comfortable with the code base and language which was certainly the case when I was pairing with Priyank.</description>
    </item>
    
    <item>
      <title>Pecha Kucha: My first attempt</title>
      <link>https://markhneedham.com/blog/2011/02/26/pecha-kucha-my-first-attempt/</link>
      <pubDate>Sat, 26 Feb 2011 04:39:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/26/pecha-kucha-my-first-attempt/</guid>
      <description>The first time I came across the Pecha Kuchastyle of presenting was at the XP 2010 conference during the Agile Suitcasesession where Pat Kuaand some others talked about the practices, principles and values they most favoured.
I&amp;rsquo;ve never done one before but as part of the preparation work for ThoughtWorks Universityeach of the trainers had to prepare one which we then presented to each other yesterday.
Despite the format being different than a normal presentation I still think the general idea of presenting any information applies - if you can tell it as a story then you have a much greater chance of keeping people&amp;rsquo;s attention.</description>
    </item>
    
    <item>
      <title>Books: Know why you&#39;re reading it </title>
      <link>https://markhneedham.com/blog/2011/02/26/books-know-why-youre-reading-it/</link>
      <pubDate>Sat, 26 Feb 2011 03:06:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/26/books-know-why-youre-reading-it/</guid>
      <description>Something which I frequently forget while reading books is that it&amp;rsquo;s actually quite useful to know exactly why you&amp;rsquo;re reading it i.e. what knowledge are you trying to gain by doing so.
I noticed this again recently while reading The Agile Samurai- it&amp;rsquo;s one of the books we ask ThoughtWorks Universityparticipants to read before they come to India.
Implicitly I knew that I just wanted to get a rough idea of what sort of things it&amp;rsquo;s telling people but I somewhat foolishly just started reading it cover to cover.</description>
    </item>
    
    <item>
      <title>Pair Programming: &#34;What are you trying to learn?&#34;</title>
      <link>https://markhneedham.com/blog/2011/02/23/pair-programming-what-are-you-trying-to-learn/</link>
      <pubDate>Wed, 23 Feb 2011 02:58:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/23/pair-programming-what-are-you-trying-to-learn/</guid>
      <description>I&amp;rsquo;ve noticed recently that while pairing with various different people that I frequently ask my pair what they&amp;rsquo;re trying to learn through the approach that they&amp;rsquo;re about to take.
I tend to use it when I don&amp;rsquo;t really understand what my pair is doing and want to find out so that I can stay engaged.
It seems to be a more effective and less confrontational way of finding out than saying &amp;ldquo;What are you doing?</description>
    </item>
    
    <item>
      <title>Espoused theory, theory in action &amp; hypocrisy </title>
      <link>https://markhneedham.com/blog/2011/02/23/espoused-theory-theory-in-action-hypocrisy/</link>
      <pubDate>Wed, 23 Feb 2011 01:34:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/23/espoused-theory-theory-in-action-hypocrisy/</guid>
      <description>Earlier in the year I wrote about Chris Argyris&amp;rsquo; espoused theory and theory in actionand one of the interesting aspects to it which I hadn&amp;rsquo;t previously considered is how we treat people when their espoused theory and theory in action don&amp;rsquo;t match.
My tendency is to think that these people are hypocrites but Benjamin Mitchellpointed out in a conversation on twitter that it&amp;rsquo;s not really helpful to think that way:</description>
    </item>
    
    <item>
      <title>Pomodoro: Observations from giving it a go</title>
      <link>https://markhneedham.com/blog/2011/02/20/pomodoro-observations-from-giving-it-a-go/</link>
      <pubDate>Sun, 20 Feb 2011 19:26:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/20/pomodoro-observations-from-giving-it-a-go/</guid>
      <description>I learnt about the pomodoro techniquea couple of years ago and while I did try it out sporadically back then, it&amp;rsquo;s only recently that I thought I&amp;rsquo;d properly give it a try when managing my spare time.
My approach without the pomodoro technique is to have a long list of things that I could do and then not really doing any of them because I feel bad about not doing one of the other things instead.</description>
    </item>
    
    <item>
      <title>Communication: Listening</title>
      <link>https://markhneedham.com/blog/2011/02/20/communication-listening/</link>
      <pubDate>Sun, 20 Feb 2011 18:43:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/20/communication-listening/</guid>
      <description>I realised a couple of weeks ago while pairing with a colleague that I&amp;rsquo;ve become quite bad at interrupting people while they&amp;rsquo;re speaking.
I did have an inkling that I&amp;rsquo;d let my ability to properly listen to someone drift a bit but I hadn&amp;rsquo;t seen any evidenceuntil my colleague pointed it out.
Somewhat ironically I actually wrote a post about active listeningwhen I first started working at ThoughtWorks in 2006 and reading back over the listening barriers that I listed I realise that there are a few that I tend to break:</description>
    </item>
    
    <item>
      <title>ThoughtWorks University: Balancing helping and learning</title>
      <link>https://markhneedham.com/blog/2011/02/19/thoughtworks-university-balancing-helping-and-learning/</link>
      <pubDate>Sat, 19 Feb 2011 15:15:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/19/thoughtworks-university-balancing-helping-and-learning/</guid>
      <description>6 months after my first attempt to train one of the ThoughtWorks Universitybatches was cut short I&amp;rsquo;m back in Bangalore again and spent the first few days of this week pairing with the grads.
It&amp;rsquo;s been interesting for me trying to balance how much I help and suggest ideas while still allowing them to learn at the same time.
At the moment I think I&amp;rsquo;m leaning too far towards helping and not realising until later on that my colleague hadn&amp;rsquo;t quite understood why I&amp;rsquo;d suggested what I did and therefore hadn&amp;rsquo;t learnt anything from my suggestion.</description>
    </item>
    
    <item>
      <title>Increasing team sizes: Collective unresponsibility</title>
      <link>https://markhneedham.com/blog/2011/02/16/increasing-team-sizes-collective-unresponsibility/</link>
      <pubDate>Wed, 16 Feb 2011 18:00:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/16/increasing-team-sizes-collective-unresponsibility/</guid>
      <description>After a few recent conversations with colleagues as well as my observations of several projects I&amp;rsquo;m coming to the conclusion that the way that people react in situations often differs significantly depending on whether they&amp;rsquo;re working in a large or small team.
One of the most obvious ways that this manifests itself is when there comes a need for someone to volunteer to take care of something - be it a particular functional area, communication with the onshore team or something else.</description>
    </item>
    
    <item>
      <title>Vim: Copying to and retrieving from the clipboard</title>
      <link>https://markhneedham.com/blog/2011/02/14/vim-copying-to-and-retrieving-from-the-clipboard/</link>
      <pubDate>Mon, 14 Feb 2011 14:13:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/14/vim-copying-to-and-retrieving-from-the-clipboard/</guid>
      <description>My memory when it comes to remembering how to get text to and from Vim via the clipboard is pretty bad so I thought I&amp;rsquo;d try summarising what I know and see if that works out any better.
We can access the system clipboard via the &amp;lsquo;+&amp;rsquo; buffer so the commands revolve around that.
To copy the whole file to the clipboard we can use this command:
:%y+ Or if we want to get the data between lines 4 and 10 then we could do:</description>
    </item>
    
    <item>
      <title>CouchDB: Join like behaviour with link functions</title>
      <link>https://markhneedham.com/blog/2011/02/13/couchdb-join-like-behaviour-with-link-functions/</link>
      <pubDate>Sun, 13 Feb 2011 17:58:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/13/couchdb-join-like-behaviour-with-link-functions/</guid>
      <description>I&amp;rsquo;ve been playing around with the Twitter streaming APIa bit lately to see which links are being posted most frequently by the people I follow and then storing the appropriate tweets in CouchDB.
I recently came across a problem which I struggled to solve for quite a while.
Based on the following map function:
{ &amp;#34;_id&amp;#34; : &amp;#34;_design/query&amp;#34;, &amp;#34;views&amp;#34; : { &amp;#34;by_link&amp;#34; : { &amp;#34;map&amp;#34; : &amp;#34;function(doc){ emit(doc.actual_link, { user : doc.</description>
    </item>
    
    <item>
      <title>CouchDB: &#39;badmatch&#39; when executing view</title>
      <link>https://markhneedham.com/blog/2011/02/12/couchdb-badmatch-when-executing-view/</link>
      <pubDate>Sat, 12 Feb 2011 18:03:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/12/couchdb-badmatch-when-executing-view/</guid>
      <description>I&amp;rsquo;ve been playing around with CouchDBagain in my annual attempt to capture the links appearing on my twitter stream and I managed to create the following error for myself:
$ curl http://127.0.0.1:5984/twitter_links/_design/cleanup/_view/find_broken_links {&amp;#34;error&amp;#34;:&amp;#34;badmatch&amp;#34;,&amp;#34;reason&amp;#34;:&amp;#34;{\n \&amp;#34;find_broken_links\&amp;#34;: {\n \&amp;#34;map\&amp;#34;: \&amp;#34;function(doc) { \nvar prefix = doc.actual_link.match(/.*/); \n if(true) { emit(doc.actual_link, null); } }\&amp;#34;\n }\n}&amp;#34;} It turns out this error is because I&amp;rsquo;ve managed to create new line characters in the view while editing it inside CouchDBX.</description>
    </item>
    
    <item>
      <title>Sed: Extended regular expressions</title>
      <link>https://markhneedham.com/blog/2011/02/11/sed-extended-regular-expressions/</link>
      <pubDate>Fri, 11 Feb 2011 20:34:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/11/sed-extended-regular-expressions/</guid>
      <description>Irfanand I were looking at how to do some text substitution in a text file this afternoon and turned to sed to help us in our quest.
He had originally used grep to find what he wanted to replace on each line, using a grep regular expression to match one or more numbers:
cat the_file.txt | grep &amp;#34;[0-9]\+&amp;#34; That works pretty well but since I knew how to do the substitution in sed we needed to convert the regular expression to work with sed.</description>
    </item>
    
    <item>
      <title>University coding</title>
      <link>https://markhneedham.com/blog/2011/02/06/university-coding/</link>
      <pubDate>Sun, 06 Feb 2011 16:57:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/06/university-coding/</guid>
      <description>We went to do some university recruitment recently and pairing with some of the students reminded me of some things that I&amp;rsquo;ve started doing better since I started working professionally.
I wanted to note them down so that I&amp;rsquo;m more aware that these might be common areas to improve on for university graduates that I work with in the future.
It seemed the same for the students I paired with and I therefore found it quite difficult to understand some of the code that they&amp;rsquo;d written.</description>
    </item>
    
    <item>
      <title>Feedback: Making the request specific</title>
      <link>https://markhneedham.com/blog/2011/02/06/feedback-making-the-request-specific/</link>
      <pubDate>Sun, 06 Feb 2011 15:47:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/06/feedback-making-the-request-specific/</guid>
      <description>My colleagues in Pune have been collecting feedback over the past week as part of the quarterly feedback cycle and it&amp;rsquo;s got me thinking about the way that people ask for the feedback.
The most popular way is to ask for general feedback which answers questions like this:
The problem I have with this is that it&amp;rsquo;s extremely generic and it&amp;rsquo;s much easier to drift towards giving evaluative feedbackwhere you judge the person against some perception of what they &amp;lsquo;should&amp;rsquo; be doing.</description>
    </item>
    
    <item>
      <title>Ruby: Where to define the method?</title>
      <link>https://markhneedham.com/blog/2011/02/03/ruby-where-to-define-the-method/</link>
      <pubDate>Thu, 03 Feb 2011 19:37:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/03/ruby-where-to-define-the-method/</guid>
      <description>In our application we deal with items which can be put into a shopping cart.
An item is defined like so:
class Item &amp;lt; ActiveRecord::Base end One problem that we had to solve recently was working out how to display a message to the user if the item they wanted to buy was out of stock.
We can find out if items are out of stock by making a call to an external service:</description>
    </item>
    
    <item>
      <title>&#39;Why&#39; often unhelpful</title>
      <link>https://markhneedham.com/blog/2011/02/03/why-often-unhelpful/</link>
      <pubDate>Thu, 03 Feb 2011 18:51:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/02/03/why-often-unhelpful/</guid>
      <description>Something which I&amp;rsquo;ve noticed recently in particular when interviewing people but also in some other situations is that frequently posing a question which begins with &amp;lsquo;why&amp;rsquo; results in quite a defensive response.
While discussing this with Priyankhe pointed out that asking a question in this way can often be construed as a criticism of the idea being questioned.
Admittedly it is often the case that I&amp;rsquo;m questioning something which has been done differently than what I might have done but I&amp;rsquo;m still curious as to the reasoning behind it.</description>
    </item>
    
    <item>
      <title>Increasing team sizes: Boredom</title>
      <link>https://markhneedham.com/blog/2011/01/27/increasing-team-sizes-boredom/</link>
      <pubDate>Thu, 27 Jan 2011 22:59:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/27/increasing-team-sizes-boredom/</guid>
      <description>Although the majority of the teams that I&amp;rsquo;ve worked on over the past few years have been relatively small in size I have worked on a few where the team size has been pretty big and perhaps inevitably the productivity has felt much lower.
I think this is somewhat inevitable since although the overall throughput of these teams may be higher than on smaller teams, due to problems such as having difficulty parallelising work, not every pair is working at maximum productivity.</description>
    </item>
    
    <item>
      <title>The Five Orders of Ignorance - Phillip G. Armour</title>
      <link>https://markhneedham.com/blog/2011/01/26/the-five-orders-of-ignorance-phillip-g-armour/</link>
      <pubDate>Wed, 26 Jan 2011 18:08:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/26/the-five-orders-of-ignorance-phillip-g-armour/</guid>
      <description>While trawling the comments of Dan North&amp;rsquo;s &amp;lsquo;Deliberate Discovery&amp;rsquo; post I came across an interesting article written by Phillip G. Armour titled &amp;lsquo;The Five Orders of Ignorance&amp;rsquo;.
The main thing I took from the article is that the author uses the metaphor of software as a &amp;lsquo;knowledge acquisition activity&#39;for which he then defines five orders of ignorance that we can have in our attempts to acquire that knowledge.
These are as follows:</description>
    </item>
    
    <item>
      <title>Deliberate Discovery: The stuff I don&#39;t know list</title>
      <link>https://markhneedham.com/blog/2011/01/26/deliberate-discovery-the-stuff-i-dont-know-list/</link>
      <pubDate>Wed, 26 Jan 2011 18:07:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/26/deliberate-discovery-the-stuff-i-dont-know-list/</guid>
      <description>Towards the end of Dan North&amp;rsquo;s post on Deliberate Discoveryhe makes the following suggestion:
This reminded me a lot of what I used to do when I came across things that I didn&amp;rsquo;t know how to do a few years ago.
I would write down the thing that I didn&amp;rsquo;t know and then make sure that I looked up the things on my list at the end of the day and then discuss what I&amp;rsquo;d read/learnt with a colleague the next day.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Stories -  Negotiable</title>
      <link>https://markhneedham.com/blog/2011/01/24/distributed-agile-stories-negotiable/</link>
      <pubDate>Mon, 24 Jan 2011 03:34:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/24/distributed-agile-stories-negotiable/</guid>
      <description>I was recently reading an article about how to write meaningful user storiesand towards the end of it the author mentioned the INVEST acronym which suggests that stories should be:
From what I&amp;rsquo;ve seen the most difficult one to achieve in a distributed context is that stories should be &amp;lsquo;negotiable&amp;rsquo;, in particular when it comes to negotiating the way that the UX of a bit of functionality should work.
On most of the projects that I&amp;rsquo;ve worked on the people designing the UX tend to work slightly detached from the development team and then send their designs over as wire frames.</description>
    </item>
    
    <item>
      <title>While in India: Osmotic communication</title>
      <link>https://markhneedham.com/blog/2011/01/24/while-in-india-osmotic-communication/</link>
      <pubDate>Mon, 24 Jan 2011 03:33:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/24/while-in-india-osmotic-communication/</guid>
      <description>One of the things that has been puzzling me during my time in India is the amount of time that is spent in meetings pushing information to people rather than them pulling it.
In previous projects that I&amp;rsquo;ve worked on a lot of the knowledge was moved between around as a result of osmotic communicationThis is normally accomplished by seating them in the same room.
Then, when one person asks a question, others in the room can either tune in or tune out, contributing to the discussion or continuing with their work.</description>
    </item>
    
    <item>
      <title>Listening to feedback mechanisms</title>
      <link>https://markhneedham.com/blog/2011/01/21/listening-to-feedback-mechanisms/</link>
      <pubDate>Fri, 21 Jan 2011 03:46:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/21/listening-to-feedback-mechanisms/</guid>
      <description>In Growing Object Oriented Softwarethe authors talk about the value of listening to our tests to understand potential problems with our code and I&amp;rsquo;ve started to notice recently that there are implicit feedback mechanisms dotted around at a higher level which we can also listen to.
A couple of examples come to mind:
I&amp;rsquo;ve worked on a couple of projects where we&amp;rsquo;ve got to the end of the iteration and realised that we don&amp;rsquo;t actually have anything tangible to show the product owner.</description>
    </item>
    
    <item>
      <title>Coding: Spike Driven Development</title>
      <link>https://markhneedham.com/blog/2011/01/19/coding-spike-driven-development/</link>
      <pubDate>Wed, 19 Jan 2011 17:46:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/19/coding-spike-driven-development/</guid>
      <description>While reading Dan North&amp;rsquo;s second post about software craftsmanshipI was able to resonate quite a lot with a point he made in the &amp;lsquo;On value&amp;rsquo; section:
I&amp;rsquo;ve been finding that quite frequently with some of the problems I&amp;rsquo;ve worked on recently that we haven&amp;rsquo;t known exactly how to solve it when we started and ended up hacking/spiking the code quite a bit at that stage until we figured out what we needed to do.</description>
    </item>
    
    <item>
      <title>MySQL: The used command is not allowed with this MySQL version</title>
      <link>https://markhneedham.com/blog/2011/01/18/mysql-the-used-command-is-not-allowed-with-this-mysql-version/</link>
      <pubDate>Tue, 18 Jan 2011 18:58:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/18/mysql-the-used-command-is-not-allowed-with-this-mysql-version/</guid>
      <description>For my own reference more than anything else, on my version of MySQL on Mac OS X, which is:
When I try to use the &amp;lsquo;LOAD DATA LOCAL&amp;rsquo; option to load data into tables I get the following error message:
ERROR 1148 (42000) at line 4: The used command is not allowed with this MySQL version Which we can get around by using the following flag as described in the comments of the documentation:</description>
    </item>
    
    <item>
      <title>Installing git-svn on Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/01/15/installing-git-svn-on-mac-os-x/</link>
      <pubDate>Sat, 15 Jan 2011 19:05:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/15/installing-git-svn-on-mac-os-x/</guid>
      <description>I somehow managed to uninstall git-svn on my machine and Emmanuel Bernard&amp;rsquo;s blog postsuggested it could be installed using ports:
sudo port install git-core +svn I tried that and was ending up with the following error:
---&amp;gt; Computing dependencies for git-core ---&amp;gt; Dependencies to be installed: p5-svn-simple subversion-perlbindings apr-util db46 cyrus-sasl2 neon serf subversion p5-term-readkey ---&amp;gt; Verifying checksum(s) for db46 Error: Checksum (md5) mismatch for patch.4.6.21.1 Error: Checksum (md5) mismatch for patch.</description>
    </item>
    
    <item>
      <title>mount_smbfs: mount error..File exists</title>
      <link>https://markhneedham.com/blog/2011/01/15/mount_smbfs-mount-error-file-exists/</link>
      <pubDate>Sat, 15 Jan 2011 18:31:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/15/mount_smbfs-mount-error-file-exists/</guid>
      <description>I&amp;rsquo;ve been playing around with mounting a Windows file share onto my machine via the terminal because I&amp;rsquo;m getting bored of constantly having to go to Finder and manually mounting it each time!
After a couple of times of mounting and unmounting the drive I ended up with this error:
&amp;gt; mount_smbfs //mneedham@punedc02/shared punedc02_shared/ mount_smbfs: mount error: /Volumes/punedc02_shared: File exists I originally thought the &amp;lsquo;file exists&amp;rsquo; part of the message was suggesting that I&amp;rsquo;d already mounted a share on &amp;lsquo;punedc02_shared&amp;rsquo; but calling the &amp;lsquo;umount&amp;rsquo; command led to the following error:</description>
    </item>
    
    <item>
      <title>Sed: &#39;sed: 1: invalid command code R&#39; on Mac OS X</title>
      <link>https://markhneedham.com/blog/2011/01/14/sed-sed-1-invalid-command-code-r-on-mac-os-x/</link>
      <pubDate>Fri, 14 Jan 2011 14:15:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/14/sed-sed-1-invalid-command-code-r-on-mac-os-x/</guid>
      <description>A few days ago I wrote about how we&amp;rsquo;d been using Sed to edit multiple filesand while those examples were derived from what we&amp;rsquo;d been using on Ubuntu I realised that they didn&amp;rsquo;t actually work on Mac OS X.
For example, the following command:
sed -i &amp;#39;s/require/include/&amp;#39; Rakefile Throws this error:
sed: 1: &amp;#34;Rakefile&amp;#34;: invalid command code R What I hadn&amp;rsquo;t realised is that on the Mac version of sed the &amp;lsquo;-i&amp;rsquo; flag has a mandatory suffix, as described in this post.</description>
    </item>
    
    <item>
      <title>Chris Argyris: Espoused Theory vs Theory in Action</title>
      <link>https://markhneedham.com/blog/2011/01/13/chris-argyris-espoused-theory-vs-theory-in-action/</link>
      <pubDate>Thu, 13 Jan 2011 20:02:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/13/chris-argyris-espoused-theory-vs-theory-in-action/</guid>
      <description>Via some combination of Christian Blunden, Pat Kua, David Joyceand Benjamin MitchellI&amp;rsquo;ve been spending some time lately reading about the work of Chris Argyris.
I&amp;rsquo;ve previously come across his name while reading The Fifth Disciplinebut I didn&amp;rsquo;t realise how interesting his work actually is.
One of the interesting concepts I&amp;rsquo;ve come across so far is the difference between espoused theory and theory in use:
Espoused theory
Theory-in-use
There are two areas that really stood out for me when I read these definitions.</description>
    </item>
    
    <item>
      <title>Rails: Using helpers inside a controller</title>
      <link>https://markhneedham.com/blog/2011/01/11/rails-using-helpers-inside-a-controller/</link>
      <pubDate>Tue, 11 Jan 2011 17:09:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/11/rails-using-helpers-inside-a-controller/</guid>
      <description>For about an hour or so this afternoon we were following the somewhat evil practice of using a method defined in a helper inside a controller.
The method was defined in the ApplicationHelper module:
module ApplicationHelper def foo # do something end end So we initially assumed that we&amp;rsquo;d just be able to reference that method inside any of our controllers since they all derive from ApplicationController.
That wasn&amp;rsquo;t the case so our next attempt was to try and add it as a helper:</description>
    </item>
    
    <item>
      <title>Sed across multiple files</title>
      <link>https://markhneedham.com/blog/2011/01/11/sed-across-multiple-files/</link>
      <pubDate>Tue, 11 Jan 2011 16:43:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/11/sed-across-multiple-files/</guid>
      <description>Pankhuriand I needed to rename a method and change all the places where it was used and decided to see if we could work out how to do it using sed.
We needed to change a method call roughly like this:
home_link(current_user) To instead read:
homepage_path For which we need the following sed expression:
sed -i &amp;#39;s/home_link([^)]*)/homepage_path/&amp;#39; [file_name] Which works pretty well if you know which file you want to change but we wanted to run it over the whole code base.</description>
    </item>
    
    <item>
      <title>Jet Airways: Lacking conceptual integrity and the power of twitter</title>
      <link>https://markhneedham.com/blog/2011/01/10/jet-airways-lacking-conceptual-integrity-and-the-power-of-twitter/</link>
      <pubDate>Mon, 10 Jan 2011 18:08:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/10/jet-airways-lacking-conceptual-integrity-and-the-power-of-twitter/</guid>
      <description>I recently travelled to London and back for Christmas using Jet Airways and the whole journey got off to an &amp;lsquo;interesting&amp;rsquo; start.
I originally booked two Jet Airways flights - one from Pune to Delhi and another from Delhi to London.
A couple of weeks later I was sent an email cancelling my Pune to Delhi flight and informing me that I should contact their customer support centre.
I quickly browsed their website to check what had happened to my flight and found out that it had actually changed from being a Jet Airways flight and was now in fact a Jet Lite flight - their sister airline.</description>
    </item>
    
    <item>
      <title>Failure of integration point doesn&#39;t have to stop the user: A real life example</title>
      <link>https://markhneedham.com/blog/2011/01/10/failure-of-integration-point-doesnt-have-to-stop-the-user-a-real-life-example/</link>
      <pubDate>Mon, 10 Jan 2011 15:28:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/10/failure-of-integration-point-doesnt-have-to-stop-the-user-a-real-life-example/</guid>
      <description>Ashwinand I were recently discussing integration points in software systems and in particular how many systems are designed in such a way that they will stop the user from going any further if one of those integration points is down.
The main point in favour of designing systems in this way is that it&amp;rsquo;s logically very simple - all operations are synchronous and we don&amp;rsquo;t have to worry about any offline processing.</description>
    </item>
    
    <item>
      <title>Ruby: Sorting by boolean fields</title>
      <link>https://markhneedham.com/blog/2011/01/08/ruby-sorting-by-boolean-fields/</link>
      <pubDate>Sat, 08 Jan 2011 13:15:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/01/08/ruby-sorting-by-boolean-fields/</guid>
      <description>We were doing a bit of work on RapidFTRin the ThoughtWorks Pune office today and one problem my pair and I were trying to solve was how to sort a collection of objects by a boolean field.
Therefore given the following array of values:
form_sections = [FormSection.new(:enabled =&amp;gt; false, :name =&amp;gt; &amp;#34;a&amp;#34;, :order =&amp;gt; 1), FormSection.new(:enabled =&amp;gt; true, :name =&amp;gt; &amp;#34;b&amp;#34;, :order =&amp;gt; 2)] We wanted to display those form sections which were disabled at the bottom of the page.</description>
    </item>
    
    <item>
      <title>Vim: Learnings so far</title>
      <link>https://markhneedham.com/blog/2010/12/27/vim-learnings-so-far/</link>
      <pubDate>Mon, 27 Dec 2010 19:15:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/27/vim-learnings-so-far/</guid>
      <description>I&amp;rsquo;ve been using Vim instead of RubyMinefor the last month or so and it&amp;rsquo;s been interesting observing the way that I browse code as I add plugins to make my life easier.
Yahuda Katz wrote a blog postearlier in the year where he listed some of the plugins he&amp;rsquo;s been using - one of which is called Command-Tand allows exactly this functionality.
I also quite like the ability to quickly access files that I&amp;rsquo;ve recently opened i.</description>
    </item>
    
    <item>
      <title>India Cultural Differences: Hierarchy</title>
      <link>https://markhneedham.com/blog/2010/12/27/india-cultural-differences-hierarchy/</link>
      <pubDate>Mon, 27 Dec 2010 14:16:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/27/india-cultural-differences-hierarchy/</guid>
      <description>One of the more interesting differences between Indian culture and my own is that in India there appears to be more adherence to a hierarchy than I&amp;rsquo;ve experienced before.
ThoughtWorks tries to keep a reasonably flat hierarchy so I think the idea of hierarchy would be much more obvious if I was working at one of the big Indian services organisations.
Between peers conversations don&amp;rsquo;t seem to play out any differently but someone in a position of authority is more likely to be able to get their opinion across and accepted with less resistance than they might experience without that authority.</description>
    </item>
    
    <item>
      <title>Theory of Constraints: Blaming the bottleneck</title>
      <link>https://markhneedham.com/blog/2010/12/26/theory-of-constraints-blaming-the-bottleneck/</link>
      <pubDate>Sun, 26 Dec 2010 00:04:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/26/theory-of-constraints-blaming-the-bottleneck/</guid>
      <description>I&amp;rsquo;ve been reading The Goalover the last week or so where Eliyahu Goldratt describes the theory of constraintsas a philosophy for allowing organisations to continually achieve their goal.
Goldratt goes on to describe bottlenecks- resources which have a capacity less than the capacity being demanded of the system.
The capacity of the system cannot be higher than that of the bottleneck which means that we need to find a way to optimise the bottlenecks in any system.</description>
    </item>
    
    <item>
      <title>India Cultural Differences: Language</title>
      <link>https://markhneedham.com/blog/2010/12/24/india-cultural-differences-language/</link>
      <pubDate>Fri, 24 Dec 2010 18:12:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/24/india-cultural-differences-language/</guid>
      <description>For the majority of the time that I&amp;rsquo;ve spent in Pune so far language hasn&amp;rsquo;t been a big deal at all but there are a couple of differences that I didn&amp;rsquo;t initially anticipate.
I initially found it tremendously frustrating that I couldn&amp;rsquo;t understand what was going on in group discussions and while I did point it out people don&amp;rsquo;t realise when they&amp;rsquo;re switching into Hindi so it&amp;rsquo;s a difficult problem to fix.</description>
    </item>
    
    <item>
      <title>Communication when it&#39;s not going your way</title>
      <link>https://markhneedham.com/blog/2010/12/22/communication-when-its-not-going-your-way/</link>
      <pubDate>Wed, 22 Dec 2010 23:32:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/22/communication-when-its-not-going-your-way/</guid>
      <description>I&amp;rsquo;ve been reading some of the articles written about the disruption caused by the snow across Europe and I found one quote in The Daily Telegraphby Phillip Hammond particularly interesting
I was stuck in Brussels Airport for almost a day and the communication by just about everybody there was as non existent as it sounds like it&amp;rsquo;s been at Heathrow.
I think part of the reason for that was that the people in charge didn&amp;rsquo;t know what was happening and part of it was because they didn&amp;rsquo;t want to give people bad news.</description>
    </item>
    
    <item>
      <title>India Cultural Differences: Stretched work day</title>
      <link>https://markhneedham.com/blog/2010/12/20/india-cultural-differences-stretched-work-day/</link>
      <pubDate>Mon, 20 Dec 2010 21:23:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/20/india-cultural-differences-stretched-work-day/</guid>
      <description>A couple of months ago I briefly touched on the very stretched days I&amp;rsquo;ve experienced while working in India.
This is in contrast to what I&amp;rsquo;ve experienced in the UK and Australia where the day was much more time boxed and tended to go from 9am to 6pm.
At the moment we also have a call with colleagues in Chicago at 9pm for about 30-45 minutes so the day has now stretched out until nearly 10pm.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Bringing onshore people offshore</title>
      <link>https://markhneedham.com/blog/2010/12/20/distributed-agile-bringing-onshore-people-offshore/</link>
      <pubDate>Mon, 20 Dec 2010 08:58:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/20/distributed-agile-bringing-onshore-people-offshore/</guid>
      <description>For the last two weeks we&amp;rsquo;ve had a ThoughtWorks colleague from the onshore team working with us in Pune and it&amp;rsquo;s been really cool having someone who has been working on &amp;lsquo;the other side&amp;rsquo;.
In my time in India there seem to have been many more people going from offshore to onshore than the other way around but based on this experience I don&amp;rsquo;t think that should necessarily be the case.</description>
    </item>
    
    <item>
      <title>India Cultural Differences: Tolerance/Patience</title>
      <link>https://markhneedham.com/blog/2010/12/15/india-cultural-differences-tolerancepatience/</link>
      <pubDate>Wed, 15 Dec 2010 19:08:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/15/india-cultural-differences-tolerancepatience/</guid>
      <description>Some colleagues have been asking me recently what cultural differences I&amp;rsquo;ve noticed working in India compared to my experiences in the UK and Australia and one of the biggest differences by far is the amount of tolerance and patience people here have compared to me.
These attributes seem to show themselves in roughly two situations:
I was quite amazed to watch colleagues continuing with their conversations as if nothing had happened - I was totally distracted and had to go and sit in a meeting room away from the noise.</description>
    </item>
    
    <item>
      <title>Ask someone vs work it out yourself</title>
      <link>https://markhneedham.com/blog/2010/12/14/ask-someone-vs-work-it-out-yourself/</link>
      <pubDate>Tue, 14 Dec 2010 18:04:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/14/ask-someone-vs-work-it-out-yourself/</guid>
      <description>Back in 2007/2008 when I worked on my first couple of projects at ThoughtWorks I always found it strange how frequently my colleagues would try and figure something out themselves rather than asking someone else (who already knew how to do it) how to do it.
Fast forward to 2010 and I find myself being the one encouraging people to figure things out themselves.
There&amp;rsquo;s still merit in communicating with colleagues when we&amp;rsquo;ve tried to work out how to do something and haven&amp;rsquo;t managed to figure it out but it&amp;rsquo;s also useful to not have this as our default mode.</description>
    </item>
    
    <item>
      <title>Technical implementation heavy stories</title>
      <link>https://markhneedham.com/blog/2010/12/13/technical-implementation-heavy-stories/</link>
      <pubDate>Mon, 13 Dec 2010 21:29:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/13/technical-implementation-heavy-stories/</guid>
      <description>Earlier this year I wrote about some of the problems that we can run into when we have implicit assumptions in storiesand another problematic approach I&amp;rsquo;ve seen around this area is where we end up with stories that are very heavily focused on technical implementation.
Initially this seems like it will work out pretty well since all the developer then needs to do is follow the steps that have been outlined for them but from my experience it seems to create more problems than it solves.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Other observations</title>
      <link>https://markhneedham.com/blog/2010/12/12/distributed-agile-other-observations/</link>
      <pubDate>Sun, 12 Dec 2010 08:11:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/12/distributed-agile-other-observations/</guid>
      <description>Some of the difficulties of working in an offshore environment were clear to me before I even came to India but I&amp;rsquo;ve come across a few others lately which I either didn&amp;rsquo;t think about before or didn&amp;rsquo;t realise how annoying they were!
If we were working in the same building then it would be very quick to download that and use it for whatever we needed.
Working offshore we&amp;rsquo;ve been downloading those dumps via scp which can take around 5 hours for a 300 MB file.</description>
    </item>
    
    <item>
      <title>Bugs: Prioritising by bucket</title>
      <link>https://markhneedham.com/blog/2010/12/12/bugs-prioritising-by-bucket/</link>
      <pubDate>Sun, 12 Dec 2010 07:59:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/12/bugs-prioritising-by-bucket/</guid>
      <description>At a lot of organisations that I&amp;rsquo;ve worked there is a tendency to prioritise bugs by a priority bucket.
We might therefore have priority buckets 1-4 where the bucket number indicates how important the bug is to fix and then any buckets ranked below 4 would not be fixed but would be logged anyway.
From what I&amp;rsquo;ve noticed this isn&amp;rsquo;t a particularly effective way of managing bugs.
To start with there tend to be a lot of discussions around what the priority of each bug should be where a QA will argue that it should be a higher priority while a developer disagrees.</description>
    </item>
    
    <item>
      <title>Why am I working in India?</title>
      <link>https://markhneedham.com/blog/2010/12/10/why-am-i-working-in-india/</link>
      <pubDate>Fri, 10 Dec 2010 03:47:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/10/why-am-i-working-in-india/</guid>
      <description>A few colleagues have asked me why I chose to work in India so I thought it would be interesting to explore what it is that appealed to me about working here.
I&amp;rsquo;ve come to the conclusion that there were 2 main drivers for me:
It was really buzzing with noise and I thought it would be really fun to have the chance to work in that type of environment.</description>
    </item>
    
    <item>
      <title>Ruby: One method, two parameter types</title>
      <link>https://markhneedham.com/blog/2010/12/07/ruby-one-method-two-parameter-types/</link>
      <pubDate>Tue, 07 Dec 2010 05:01:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/07/ruby-one-method-two-parameter-types/</guid>
      <description>One interesting thing that I&amp;rsquo;ve noticed while coding in Ruby is that due to the dynamicness of the language it&amp;rsquo;s possible to pass values of different types into a given method as parameters.
For example, I&amp;rsquo;ve recently come across a few examples of methods designed like this:
def calculate_foo_prices(foos) ... [foos].flatten.each do |foo| # do something end end This allows us to use the method like this:
# foos would come in as an array from the UI foos = [Foo.</description>
    </item>
    
    <item>
      <title>Ruby: Exiting a &#39;loop&#39; early</title>
      <link>https://markhneedham.com/blog/2010/12/01/ruby-exiting-a-loop-early/</link>
      <pubDate>Wed, 01 Dec 2010 17:56:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/12/01/ruby-exiting-a-loop-early/</guid>
      <description>We recently had a problem to solve which at its core required us to iterate through a collection, look up a value for each key and then exit as soon as we&amp;rsquo;d found a value.
The original solution looped through the collection and then explicitly returned once a value had been found:
def iterative_version v = nil [1,2,3,4,5].each do |i| v = long_running_method i return v unless v.nil? end v end def long_running_method(value) puts &amp;#34;inside the long running method with #{value}&amp;#34; return nil if value &amp;gt; 3 value end Which we run like so:</description>
    </item>
    
    <item>
      <title>Noone wants your stupid process - Jeff Patton</title>
      <link>https://markhneedham.com/blog/2010/11/30/noone-wants-your-stupid-process-jeff-patton/</link>
      <pubDate>Tue, 30 Nov 2010 20:35:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/30/noone-wants-your-stupid-process-jeff-patton/</guid>
      <description>My former colleague Alexandre Martinsrecently pointed me to a presentation given by Jeff Pattonat Agile Roots titled &amp;lsquo;Noone wants your stupid process&amp;rsquo; and it&amp;rsquo;s one of the most interesting talks I&amp;rsquo;ve watched recently.
In the talk Jeff cites globo.comas a case study of a company which is using an agile approach to development of their website but are starting to doubt whether it&amp;rsquo;s the best way to go about things.</description>
    </item>
    
    <item>
      <title>&#34;Consulting is like inception&#34;</title>
      <link>https://markhneedham.com/blog/2010/11/30/consulting-is-like-inception/</link>
      <pubDate>Tue, 30 Nov 2010 19:25:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/30/consulting-is-like-inception/</guid>
      <description>My colleague Jason Yip recently tweeted the following&amp;hellip;
&amp;hellip;which reminded me of a conversation I was having with a colleague here who&amp;rsquo;s been working on consulting engagements here for the last few months.
I was describing some of the things that I wanted to change on my team and she pointed out that I always described each change as something that I wanted to change rather than something which I wanted to see change.</description>
    </item>
    
    <item>
      <title>Local port forwarding</title>
      <link>https://markhneedham.com/blog/2010/11/29/local-port-forwarding/</link>
      <pubDate>Mon, 29 Nov 2010 19:42:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/29/local-port-forwarding/</guid>
      <description>A colleague and I ran into an interesting problem today which we wanted to use local port forwarding to solve.
In our environment.rb file we have a Solr instance url defined like so:
SOLR_CONFIG = { :service_url =&amp;gt; &amp;#34;http://some.internal.address:9983/solr/sco_slave_1&amp;#34; } It&amp;rsquo;s defined like that because our colleagues in Chicago have setup a Solr instance on a test environment and all the developers hit the same box.
In Pune everyone has Solr configured on their own box so we really wanted to configure that url to be &amp;lsquo;localhost&amp;rsquo; on port &amp;lsquo;8983&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Team Communication: Learning models</title>
      <link>https://markhneedham.com/blog/2010/11/27/team-communication-learning-models/</link>
      <pubDate>Sat, 27 Nov 2010 10:50:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/27/team-communication-learning-models/</guid>
      <description>One of the problems I&amp;rsquo;ve noticed in several of the &amp;lsquo;agile&amp;rsquo; communication mechanisms (such as the standup or dev huddle) that we typically use on teams is that they focus almost entirely on verbal communication which only covers one of our learning styles - the auditory learning style.
The VAK learning style modeldescribes a simple model covering the different learning styles that people have:
My own learning style is predominantly visual so I tend to find that a well drawn diagram will help me understand something far more quickly than a colleague spending 10 minutes explaining something using only words.</description>
    </item>
    
    <item>
      <title>Increasing team sizes: Parallelising work</title>
      <link>https://markhneedham.com/blog/2010/11/26/increasing-team-sizes-parallelising-work/</link>
      <pubDate>Fri, 26 Nov 2010 03:53:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/26/increasing-team-sizes-parallelising-work/</guid>
      <description>One of the trickiest things to do when working in bigger teams is ensuring that it is possible to parallelise the work we have across the number of pairs that we have available.
From my experience this problem happens much less frequently in smaller teams. Perhaps inevitably it&amp;rsquo;s much easier to find 2 or 3 things that can be worked on in parallel than it is to find 6 or 7 or more.</description>
    </item>
    
    <item>
      <title>Interviewing: Communication</title>
      <link>https://markhneedham.com/blog/2010/11/26/interviewing-communication/</link>
      <pubDate>Fri, 26 Nov 2010 03:50:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/26/interviewing-communication/</guid>
      <description>I&amp;rsquo;ve been in India for around 4 months and in that time I think I&amp;rsquo;ve probably interviewed more people than I have in the last 4 years.
Over this time I&amp;rsquo;ve come to realise that the two main things I&amp;rsquo;m looking for in candidates are passion and ability to communicate effectively.
It&amp;rsquo;s relatively easy to pick up on whether someone is passionate about what they do in a conversation or while pairing with them but I find the communication aspect a bit more tricky.</description>
    </item>
    
    <item>
      <title>A dirty hack to get around aliases not working in a shell script</title>
      <link>https://markhneedham.com/blog/2010/11/24/a-dirty-hack-to-get-around-aliases-not-working-in-a-shell-script/</link>
      <pubDate>Wed, 24 Nov 2010 18:48:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/24/a-dirty-hack-to-get-around-aliases-not-working-in-a-shell-script/</guid>
      <description>In another script I&amp;rsquo;ve been working on lately I wanted to call &amp;lsquo;mysql&amp;rsquo; but unfortunately on my machine it&amp;rsquo;s &amp;lsquo;mysql5&amp;rsquo; rather than &amp;lsquo;mysql&amp;rsquo;.
I have an alias defined in &amp;lsquo;~/.bash_profile&amp;rsquo; so I can call &amp;lsquo;mysql&amp;rsquo; from the terminal whenever I want to.
alias mysql=mysql5 Unfortunately shell scripts don&amp;rsquo;t seem to have access to this alias and the only suggestionI&amp;rsquo;ve come across while googling this is to source &amp;lsquo;~/.bash_profile&amp;rsquo; inside the script.</description>
    </item>
    
    <item>
      <title>Ruby: Checking for environment variables in a script</title>
      <link>https://markhneedham.com/blog/2010/11/24/ruby-checking-for-environment-variables-in-a-script/</link>
      <pubDate>Wed, 24 Nov 2010 18:34:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/24/ruby-checking-for-environment-variables-in-a-script/</guid>
      <description>I&amp;rsquo;ve been working on a Ruby script to allow us to automate part of our Solrdata setup and part of the task was to check that some environment variables were set and throw an exception if not.
I got a bit stuck initially trying to work out how to return a message showing only the missing environment variables but it turned out to be pretty simple when I came back to it a couple of hours later.</description>
    </item>
    
    <item>
      <title>Systems Thinking: Individuals and the environment</title>
      <link>https://markhneedham.com/blog/2010/11/23/systems-thinking-individuals-and-the-environment/</link>
      <pubDate>Tue, 23 Nov 2010 20:20:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/23/systems-thinking-individuals-and-the-environment/</guid>
      <description>Something which I&amp;rsquo;ve become fairly convinced about recently is that the environment that someone works in has far more impact on their perceived performance than their own individual skills.
Given that belief I&amp;rsquo;ve often got stuck answering why some people are better able to handle a difficult environment than others - in terms of accepting the situation and finding a way of being productive regardless.
Does this mean that they&amp;rsquo;re better than people who can&amp;rsquo;t work in that environment as effectively?</description>
    </item>
    
    <item>
      <title>Make it interesting for yourself</title>
      <link>https://markhneedham.com/blog/2010/11/22/make-it-interesting-for-yourself/</link>
      <pubDate>Mon, 22 Nov 2010 19:58:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/22/make-it-interesting-for-yourself/</guid>
      <description>Just over a year ago I wrote a post about learning one thing each dayand since I&amp;rsquo;ve been struggling to do this lately I thought I&amp;rsquo;d come back to this topic again.
My general thinking at the time I wrote that post was that sometimes it would be really difficult to find a way to learn anything on the project I was working on and the only way to learn would be to play around with something outside work.</description>
    </item>
    
    <item>
      <title>The Adventures of Johnny Bunko -  The Last Career Guide You&#39;ll Ever Need: Book Review</title>
      <link>https://markhneedham.com/blog/2010/11/21/the-adventures-of-johnny-bunko-the-last-career-guide-youll-ever-need-book-review/</link>
      <pubDate>Sun, 21 Nov 2010 17:02:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/21/the-adventures-of-johnny-bunko-the-last-career-guide-youll-ever-need-book-review/</guid>
      <description>I read Dan Pink&amp;rsquo;s A Whole New Mindearlier in the year but I hadn&amp;rsquo;t heard of The Adventures of Johnny Bunkountil my colleague Sumeet Moghementioned it in a conversation during ThoughtWorks India&amp;rsquo;s XConf, an internal conference run here.
The book is written in the Mangaformat so it&amp;rsquo;s incredibly quick to read and it gives 6 ideas around building a career.
I&amp;rsquo;m generally not a fan of the idea of &amp;lsquo;building a career&amp;rsquo; - generally when I hear that phrase it involves having a &amp;lsquo;five year&amp;rsquo; plan and other such concepts which I consider to be pointless.</description>
    </item>
    
    <item>
      <title>From unconsciously incompetent to consciously incompetent</title>
      <link>https://markhneedham.com/blog/2010/11/19/from-unconsciously-incompetent-to-consciously-incompetent/</link>
      <pubDate>Fri, 19 Nov 2010 20:20:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/19/from-unconsciously-incompetent-to-consciously-incompetent/</guid>
      <description>One of the cool things about software development is that despite writing code for 5 years professionally and just under 10 altogether, there are still a phenomenal number of things that I don&amp;rsquo;t know how to do.
The learning opportunities are vast!
One of the areas which I&amp;rsquo;ve known I don&amp;rsquo;t know that much about is Unix command line tools such as awk and sed.
Since the majority of projects that I&amp;rsquo;ve worked on have involved using Windows as the development environment I&amp;rsquo;ve never had extended exposure to the types of problems we get on a project which require their use.</description>
    </item>
    
    <item>
      <title>Capistrano, sed, escaping forward slashes and &#39;p&#39; is not &#39;puts&#39;!</title>
      <link>https://markhneedham.com/blog/2010/11/18/capistrano-sed-escaping-forward-slashes-and-p-is-not-puts/</link>
      <pubDate>Thu, 18 Nov 2010 18:40:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/18/capistrano-sed-escaping-forward-slashes-and-p-is-not-puts/</guid>
      <description>Priyankand I have been working on automating part of our deployment process and one task we needed to do as part of this is replace some variables used in one of our shell scripts.
All the variables in the script refer to production specific locations but we needed to change a couple of them in order to run the script in our QA environment.
We&amp;rsquo;re therefore written a sed command, which we call from Capistrano, to allow us to do this.</description>
    </item>
    
    <item>
      <title>Rails: A slightly misleading error</title>
      <link>https://markhneedham.com/blog/2010/11/16/rails-a-slightly-misleading-error/</link>
      <pubDate>Tue, 16 Nov 2010 21:17:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/16/rails-a-slightly-misleading-error/</guid>
      <description>We recently created a new project to handle the reporting part of our application and as with all our projects we decided not to checkin any configuration &amp;ldquo;.yml&amp;rsquo; files but rather &amp;lsquo;.yml.example&amp;rsquo; files which people can then customise for their own environments.
So in our config directory would look something like this when you first checkout the project:
And we&amp;rsquo;d need to copy those files to get &amp;lsquo;.yml&amp;rsquo; versions, changing any parameters that we need to for our local environment.</description>
    </item>
    
    <item>
      <title>Retrospectives: My first time facilitating</title>
      <link>https://markhneedham.com/blog/2010/11/15/retrospectives-my-first-time-facilitating/</link>
      <pubDate>Mon, 15 Nov 2010 19:52:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/15/retrospectives-my-first-time-facilitating/</guid>
      <description>Despite being part of numerous retrospectives over the past few years I don&amp;rsquo;t remember actually facilitating one until my current team&amp;rsquo;s last week.
I&amp;rsquo;ve gradually come to appreciate the skill involved in facilitating this type of meeting having originally been of the opinion that there wasn&amp;rsquo;t much to it.
I recently read Agile Retrospectiveswhich has loads of different ideas for activities beyond just creating &amp;lsquo;went well&amp;rsquo; and &amp;lsquo;could improve&amp;rsquo; columns and then filling those in as a group.</description>
    </item>
    
    <item>
      <title>Agile: Increasing team sizes</title>
      <link>https://markhneedham.com/blog/2010/11/14/agile-increasing-team-sizes/</link>
      <pubDate>Sun, 14 Nov 2010 11:51:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/14/agile-increasing-team-sizes/</guid>
      <description>A fairly common trend on nearly every project I&amp;rsquo;ve worked on is that at some stage the client will ask for more people to be added to the team in order to &amp;lsquo;improve&amp;rsquo; the velocity.
Some of the most common arguments against doing so are that it will initially slow down the team&amp;rsquo;s velocity as the new members learn the domain, code base and get to know the other members of the team.</description>
    </item>
    
    <item>
      <title>Experiments in not using the mouse</title>
      <link>https://markhneedham.com/blog/2010/11/12/experiments-in-not-using-the-mouse/</link>
      <pubDate>Fri, 12 Nov 2010 15:43:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/12/experiments-in-not-using-the-mouse/</guid>
      <description>Priyankand I have been pairing a bit lately and we thought it&amp;rsquo;d be interesting to try and not use the mouse for anything that we had to do while pairing.
Priyank uses GVim(Yehuda Katzrecommends MacVimif you&amp;rsquo;re using Mac OS) so we already don&amp;rsquo;t need to use the mouse at all when we&amp;rsquo;re inside the editor.
One annoying thing we found is that sometimes we wanted to copy stuff from the terminal into GVim and couldn&amp;rsquo;t think of a good way to do that without selecting the text on the terminal with a mouse and then &amp;lsquo;Ctrl-C&amp;rsquo;ing.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Communicating big design decisions</title>
      <link>https://markhneedham.com/blog/2010/11/10/distributed-agile-communicating-big-design-decisions/</link>
      <pubDate>Wed, 10 Nov 2010 19:58:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/10/distributed-agile-communicating-big-design-decisions/</guid>
      <description>Although we mostly split the work on my project so that there aren&amp;rsquo;t too many dependencies between the teams in Chicago and Pune, there have still been some times when we&amp;rsquo;ve designed major parts of the code base in Pune and have needed to communicate that to our Chicago colleagues.
I&amp;rsquo;ve never seen this situation so it&amp;rsquo;s been interesting to see which approaches work in trying to do this effectively and allowing the people in the other location to have input as well.</description>
    </item>
    
    <item>
      <title>Active Record: Nested attributes</title>
      <link>https://markhneedham.com/blog/2010/11/09/active-record-nested-attributes/</link>
      <pubDate>Tue, 09 Nov 2010 18:37:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/09/active-record-nested-attributes/</guid>
      <description>I recently learnt about quite a neat feature of Active Record called nested attributeswhich allows you to save attributes on associated records of a parent model.
It&amp;rsquo;s been quite useful for us as we have a few pages in our application where the user is able to update models like this.
We would typically end up with parameters coming into the controller like this:
class FoosController &amp;lt; ApplicationController def update # params = { :id =&amp;gt; &amp;#34;1&amp;#34;, :foo =&amp;gt; { :baz =&amp;gt; &amp;#34;new_baz&amp;#34;, :bar_attributes =&amp;gt; { :value =&amp;gt; &amp;#34;something&amp;#34; } } } Foo.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Communication - Reliance on one person</title>
      <link>https://markhneedham.com/blog/2010/11/08/distributed-agile-communication-reliance-on-one-person/</link>
      <pubDate>Mon, 08 Nov 2010 13:56:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/08/distributed-agile-communication-reliance-on-one-person/</guid>
      <description>Continuing with my series of observations on what it&amp;rsquo;s like working in a distributed agile team, another thing that I&amp;rsquo;ve noticed is that it&amp;rsquo;s useful to try and ensure that there is communication between as many people as possible in the two cities.
This means that we want to ensure that we don&amp;rsquo;t have an over reliance on one person to handle any communication.
We have a call once a day between developers in Pune and Chicago and the Chicago guys have been able to achieve this by rotating the person attending the call.</description>
    </item>
    
    <item>
      <title>Retrospectives: General observations</title>
      <link>https://markhneedham.com/blog/2010/11/06/retrospectives-general-observations/</link>
      <pubDate>Sat, 06 Nov 2010 17:17:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/06/retrospectives-general-observations/</guid>
      <description>Following on from my blog post about some observations about the actions that we create in retrospectivesI&amp;rsquo;ve also noticed some general ways that retrospectives might not end up being as useful as we&amp;rsquo;d hope.
I&amp;rsquo;ve noticed that there can be a tendency for people to direct any comments they make during the retrospective towards the manager, thereby excluding others from the conversation.
Having the facilitator call out their role at the beginning of the retrospective and encourage participants to address any comments to the group can help to counter this situation.</description>
    </item>
    
    <item>
      <title>Retrospectives: Actions</title>
      <link>https://markhneedham.com/blog/2010/11/06/retrospectives-actions/</link>
      <pubDate>Sat, 06 Nov 2010 11:59:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/11/06/retrospectives-actions/</guid>
      <description>My colleague Ashwin Raghav wrote a blog post earlier in the week in which he noted some patterns that he&amp;rsquo;s noticed in retrospectives in his time working in ThoughtWorks.
In it he talks quite generally about things he&amp;rsquo;s noticed but in my experience one of the areas in which teams typically struggle is when it comes to action items.
We find so many things that we can improve in our team and we want to try and do all of them straight away.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Context</title>
      <link>https://markhneedham.com/blog/2010/10/31/distributed-agile-context/</link>
      <pubDate>Sun, 31 Oct 2010 18:27:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/31/distributed-agile-context/</guid>
      <description>From my last couple of months working for ThoughtWorks in Pune I think the most common subject that I&amp;rsquo;ve heard discussed is how to ensure that the team offshore is receiving all the context about the decisions and direction being taken onshore.
What I&amp;rsquo;ve found most interesting is that I think out of all the teams that I&amp;rsquo;ve worked on in the last four years my current team has by far the most context about what the client wants to do and the approaches they want to take over the next few months.</description>
    </item>
    
    <item>
      <title>Meetings: Guerilla Collaboration</title>
      <link>https://markhneedham.com/blog/2010/10/31/meetings-guerilla-collaboration/</link>
      <pubDate>Sun, 31 Oct 2010 14:53:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/31/meetings-guerilla-collaboration/</guid>
      <description>As I&amp;rsquo;ve mentioned on twitter a few times my current team has a lot of meetings and apart from using the passive aggressive approach that Toby Tripp&amp;rsquo;s meeting tickerprovides I&amp;rsquo;ve also been flicking through Chapter 19, &amp;lsquo;Guerilla Collaboration&amp;rsquo;, of Jean Tabaka&amp;rsquo;s &amp;lsquo;Collaboration Explained: Facilitation skills for software project leaders&amp;rsquo; which gives other ideas.
I&amp;rsquo;ve also seen some useful ideas that my colleagues have used in meetings that I&amp;rsquo;ve been part of.</description>
    </item>
    
    <item>
      <title>Ruby: Getting Active Record validation errors twice</title>
      <link>https://markhneedham.com/blog/2010/10/29/ruby-getting-active-record-validation-errors-twice/</link>
      <pubDate>Fri, 29 Oct 2010 04:27:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/29/ruby-getting-active-record-validation-errors-twice/</guid>
      <description>I managed to create an interesting problem for myself while playing around with some code whereby I was ending up with validation errors appearing twice every time I called &amp;lsquo;valid?&amp;rsquo; on a specific model.
I figured I was probably doing something stupid and in fact a few replies by Aaron Baldwin on a mailing list thread on &amp;lsquo;rubyonrails-talk&#39;helped explain exactly what I&amp;rsquo;d done:
I&amp;rsquo;d put the following code into a controller elsewhere somewhat unnecessarily since it didn&amp;rsquo;t seem to be picking up the location of my model at the time:</description>
    </item>
    
    <item>
      <title>Ruby: Using a variable in a  regex</title>
      <link>https://markhneedham.com/blog/2010/10/27/ruby-using-a-variable-in-a-regex/</link>
      <pubDate>Wed, 27 Oct 2010 13:55:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/27/ruby-using-a-variable-in-a-regex/</guid>
      <description>We&amp;rsquo;re using Web Mock on my current project to stub out some of the external web requests in some of our integration tests and I managed to get myself very confused while trying to use a variable inside a regular expression that I was trying to pass to the &amp;lsquo;stub_request&amp;rsquo; method.
The code was roughly like this:
some_url = &amp;#34;http://service.com/method&amp;#34; stub_request(:any, /some_url/). to_return(:body =&amp;gt; File.new(&amp;#39;/path/to/some.xml&amp;#39;), :headers =&amp;gt; {&amp;#39;Content-Length&amp;#39; =&amp;gt; 666, &amp;#39;Content-Type&amp;#39; =&amp;gt; &amp;#39;text/xml&amp;#39;}, :status =&amp;gt; 200, :headers =&amp;gt; {&amp;#39;Content-Type&amp;#39; =&amp;gt; &amp;#39;text/xml&amp;#39;}) The request was being stubbed when I hard coded the url inside the regular expression but not being stubbed when I used the variable like in the example above.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Communication</title>
      <link>https://markhneedham.com/blog/2010/10/27/distributed-agile-communication/</link>
      <pubDate>Wed, 27 Oct 2010 13:50:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/27/distributed-agile-communication/</guid>
      <description>I&amp;rsquo;d always heard that communication when you&amp;rsquo;re working offshore was much more difficult than in a co-located team but it&amp;rsquo;s quite difficult to imagine exactly what the difficulties are until you see them for yourself.
These are some of my latest observations in this area so far.
Of course it is possible to do remote white boarding but that increases the overhead of the calls and sometimes participants in these calls only have their phone available and don&amp;rsquo;t have access to their computer or the internet.</description>
    </item>
    
    <item>
      <title>Communication: Logging levels</title>
      <link>https://markhneedham.com/blog/2010/10/25/communication-logging-levels/</link>
      <pubDate>Mon, 25 Oct 2010 18:49:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/25/communication-logging-levels/</guid>
      <description>I think one of the most important skills to perfect when communicating with other people is to understand the level of detail that we need to be speaking at, something my colleague Ashwin Raghavrefers to as our logging level.
We log various things in our code at varying logging levels ranging from &amp;lsquo;error&amp;rsquo; through &amp;lsquo;debug&amp;rsquo; to &amp;lsquo;warn&amp;rsquo;, and each of these is useful for understanding what our code is doing.</description>
    </item>
    
    <item>
      <title>Ruby: Mocking or stubbing methods on the system under test</title>
      <link>https://markhneedham.com/blog/2010/10/24/ruby-mocking-or-stubbing-methods-on-the-system-under-test/</link>
      <pubDate>Sun, 24 Oct 2010 17:30:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/24/ruby-mocking-or-stubbing-methods-on-the-system-under-test/</guid>
      <description>An approach to testing which I haven&amp;rsquo;t seen before and am therefore assuming is more specific to Ruby is the idea of stubbing or mocking out functions on the system under test.
I&amp;rsquo;ve come across a couple of situations where this seems to be done:
I think the first approach is fine because typically we&amp;rsquo;ll have a direct test against that module&amp;rsquo;s methods elsewhere and it doesn&amp;rsquo;t make much sense to test the same thing again.</description>
    </item>
    
    <item>
      <title>Feedback loops: Overcompensating</title>
      <link>https://markhneedham.com/blog/2010/10/24/feedback-loops-overcompensating/</link>
      <pubDate>Sun, 24 Oct 2010 08:39:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/24/feedback-loops-overcompensating/</guid>
      <description>One of the things that I&amp;rsquo;ve noticed while working with various colleagues over the last few years is that the more experienced ones are much more skilled at making slight adjustments to their approach based on feedback that they receive from the environment.
I&amp;rsquo;ve been reading a coupleof bookson systems thinking over the last few months and one of the takeaways for me has been that we need to be careful when reacting to feedback we get from a system to ensure that we don&amp;rsquo;t over compensate and end up creating a new problem for ourselves instead.</description>
    </item>
    
    <item>
      <title>Agile: Story Wall - A couple of learnings</title>
      <link>https://markhneedham.com/blog/2010/10/22/agile-story-wall-a-couple-of-learnings/</link>
      <pubDate>Fri, 22 Oct 2010 17:13:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/22/agile-story-wall-a-couple-of-learnings/</guid>
      <description>I wrote earlier in the week about the benefits of having a physical story wall on a distributed teamand in the process of getting one in place on the project we learnt a few things that I&amp;rsquo;d previously taken for granted.
The problem with this approach was that it wasn&amp;rsquo;t easy to glance at the wall from wherever you were sitting and be able to quickly gauge the state of the project at any given time.</description>
    </item>
    
    <item>
      <title>Learning: Writing about simple things</title>
      <link>https://markhneedham.com/blog/2010/10/20/learning-writing-about-simple-things/</link>
      <pubDate>Wed, 20 Oct 2010 20:51:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/20/learning-writing-about-simple-things/</guid>
      <description>My colleague Aman Kingis back in Pune for the time being and during one of our conversations he was asking me why I didn&amp;rsquo;t wait a bit longer and learn more about Ruby before writing about it.
In a way he is right and I didn&amp;rsquo;t write anything at all about C# or Java when I was first learning how to write code in those languages because I didn&amp;rsquo;t have the confidence to write about something that I knew nothing about.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Physical story wall still useful</title>
      <link>https://markhneedham.com/blog/2010/10/20/distributed-agile-physical-story-wall-still-useful/</link>
      <pubDate>Wed, 20 Oct 2010 17:21:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/20/distributed-agile-physical-story-wall-still-useful/</guid>
      <description>When I started working on my current project there was no physical story wall, instead the whole project was being tracked on Mingle.
The current state of the Mingle story wall was sometimes visible on a shared monitor and sometimes wasn&amp;rsquo;t, depending on whether or not the monitor had been turned off.
There was also a small wall used to track which stories were in development but after that there was no physical visibility of the status of anything.</description>
    </item>
    
    <item>
      <title>Coding: Context independent code</title>
      <link>https://markhneedham.com/blog/2010/10/18/coding-context-independent-code/</link>
      <pubDate>Mon, 18 Oct 2010 15:52:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/18/coding-context-independent-code/</guid>
      <description>I&amp;rsquo;ve been flicking through Growing Object Oriented Software Guided By Testsagain and in Chapter 6 on Object Oriented Style I came across the part of the chapter which talks about writing context independent code which reminded me of some code I&amp;rsquo;ve worked on recently.
The authors suggest the following:
I was writing a bit of code in our ApplicationHelper which would only be used in a certain context within one of the views.</description>
    </item>
    
    <item>
      <title>Ruby: Using alias with &#39;indexers&#39;</title>
      <link>https://markhneedham.com/blog/2010/10/18/ruby-using-alias-with-indexers/</link>
      <pubDate>Mon, 18 Oct 2010 04:24:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/18/ruby-using-alias-with-indexers/</guid>
      <description>I&amp;rsquo;ve been browsing through some of the Rails routing code while following Jamis&amp;rsquo; Buck&amp;rsquo;s blog postand I came across something I hadn&amp;rsquo;t seen before while inside the &amp;lsquo;NamedRouteCollection&amp;rsquo; class.
The bit of code which initially confused me is in RouteSet.add_named_route:
module ActionController module Routing class RouteSet def initialize ... self.named_routes = NamedRouteCollection.new end def add_named_route(name, path, options = {}) # TODO - is options EVER used? name = options[:name_prefix] + name.</description>
    </item>
    
    <item>
      <title>Distributed Agile: Cultural Differences/Expectation disconnect</title>
      <link>https://markhneedham.com/blog/2010/10/17/distributed-agile-cultural-differencesexpectation-disconnect/</link>
      <pubDate>Sun, 17 Oct 2010 15:06:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/17/distributed-agile-cultural-differencesexpectation-disconnect/</guid>
      <description>I came across an article written a few months ago titled &amp;lsquo;Outsourcing doesn&amp;rsquo;t work&amp;rsquo; which discussed some of the problems the author has experienced while working with teams offshore.
The article is provocatively titled but has some interesting observations which I thought I could contrast with my own after working offshore in Pune, India for a couple of months now.
The team I&amp;rsquo;m working on is distributed between Pune and Chicago so it&amp;rsquo;s not exactly the same situation as the author&amp;rsquo;s but the majority of the team are in a different country to the client.</description>
    </item>
    
    <item>
      <title>Ruby: Hash default value</title>
      <link>https://markhneedham.com/blog/2010/10/16/ruby-hash-default-value/</link>
      <pubDate>Sat, 16 Oct 2010 14:02:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/16/ruby-hash-default-value/</guid>
      <description>I&amp;rsquo;ve been pairing a fair bit with Ashwinthis week and one thing he showed me which I hadn&amp;rsquo;t previously seen is the ability to set a default value for a hashwhich gets returned if we search for a key that doesn&amp;rsquo;t exist.
This is an idea that I originally came across while playing around with Clojure but with Clojure the default value was defined in the calling code rather than in the hash definition.</description>
    </item>
    
    <item>
      <title>RSpec: Testing Rails routes</title>
      <link>https://markhneedham.com/blog/2010/10/13/rspec-testing-rails-routes/</link>
      <pubDate>Wed, 13 Oct 2010 18:25:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/13/rspec-testing-rails-routes/</guid>
      <description>Something which I keep forgetting is how to write controller tests where I want to check whether an action correctly redirected to another action.
With most of the routes in our application we&amp;rsquo;ve created a &amp;lsquo;resourceful route&amp;rsquo; where each action maps to a CRUD operation in the database.
We can do that with this type of code in routes.rb:
ActionController::Routing::Routes.draw do |map| map.resources :foos end Several helper methods based on named rotes get created and included in our controllerswhen we do this and we have access to those inside our specs.</description>
    </item>
    
    <item>
      <title>Agile: Constraints</title>
      <link>https://markhneedham.com/blog/2010/10/13/agile-constraints/</link>
      <pubDate>Wed, 13 Oct 2010 14:03:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/13/agile-constraints/</guid>
      <description>I recently came across quite an interesting post written by Steve Garnett where he discusses the difference between constraints and impediments inside organisations.
He comes to the following conclusion:
If whoever is working with the obstacle believes it can be removed then it is considered an impediment, if the same person doesn&amp;rsquo;t not believe it can be removed, or doesn&amp;rsquo;t wish to work towards it&amp;rsquo;s removal, it&amp;rsquo;s considered a constraint.</description>
    </item>
    
    <item>
      <title>Ruby: Active Record - Using &#39;exclusive_scope&#39; in IRB</title>
      <link>https://markhneedham.com/blog/2010/10/11/ruby-active-record-using-exclusive_scope-in-irb/</link>
      <pubDate>Mon, 11 Oct 2010 19:03:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/11/ruby-active-record-using-exclusive_scope-in-irb/</guid>
      <description>Ashwinand I have been working recently on a bit of code to make it possible to &amp;lsquo;soft delete&amp;rsquo; some objects in our system.
We&amp;rsquo;re doing this by creating an additional column in that table called &amp;lsquo;deleted_at_date&amp;rsquo; which we populate if a record is &amp;lsquo;deleted&amp;rsquo;.
As we wanted the rest of the application to ignore &amp;lsquo;deleted&amp;rsquo; records we added a default scopeto it:
class Foo &amp;lt; ActiveRecord::Base default_scope :conditions =&amp;gt; &amp;#34;deleted_at_date is null&amp;#34; end This works fine but we wanted to be able to see the status of all the records in IRB and with the default scope &amp;lsquo;Foo.</description>
    </item>
    
    <item>
      <title>Agile: The curse of meetings</title>
      <link>https://markhneedham.com/blog/2010/10/09/agile-the-curse-of-meetings/</link>
      <pubDate>Sat, 09 Oct 2010 03:39:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/09/agile-the-curse-of-meetings/</guid>
      <description>Something which can often happen with agile software development teams is that in the desire to take everyone&amp;rsquo;s opinion into account for every decision we end up having a lot of meetings.
Toni wrote about this a while agoand described a situation where he&amp;rsquo;d managed to get rid of a meeting and just have a discussion after the stand up with the necessary people.
While this is a good idea I still think there are occasions where it&amp;rsquo;s not necessary to discuss every problem down to the minute details with the whole team.</description>
    </item>
    
    <item>
      <title>Ruby: Getting the caller method with Kernel.caller</title>
      <link>https://markhneedham.com/blog/2010/10/08/ruby-getting-the-caller-method-with-kernel-caller/</link>
      <pubDate>Fri, 08 Oct 2010 13:19:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/08/ruby-getting-the-caller-method-with-kernel-caller/</guid>
      <description>One of the things I&amp;rsquo;ve been finding when debugging Cucumber specs is that due to the number of levels of indirection present in those examples it becomes quite difficult to work out exactly how certain pieces of code got called.
In one cuke we were trying to work out how 4 objects of the same type were ending up in the database when it seemed like there should only be two.</description>
    </item>
    
    <item>
      <title>Rails: before_filter, rescue_from and so on</title>
      <link>https://markhneedham.com/blog/2010/10/05/rails-before_filter-rescue_from-and-so-on/</link>
      <pubDate>Tue, 05 Oct 2010 08:53:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/05/rails-before_filter-rescue_from-and-so-on/</guid>
      <description>One thing I&amp;rsquo;ve noticed while browsing our Rails code base is that the first entry point inside a controller is much less frequently the method corresponding to the action than it would be with a C# ASP.NET MVC application.
The concept of filters exists in ASP.NET MVC but on the projects I&amp;rsquo;ve worked on they&amp;rsquo;ve been used significantly less than before filters would be in a Rails application.
As a result I&amp;rsquo;m getting much more in the habit of checking for the before filters in the ApplicationController when an action isn&amp;rsquo;t working as expected to try and figure out what&amp;rsquo;s going on.</description>
    </item>
    
    <item>
      <title>Coding: Write the first one ugly</title>
      <link>https://markhneedham.com/blog/2010/10/03/coding-write-the-first-one-ugly/</link>
      <pubDate>Sun, 03 Oct 2010 05:03:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/10/03/coding-write-the-first-one-ugly/</guid>
      <description>I just came across a really cool blog post written a couple of months ago by Evan Light where he proposes that we &amp;lsquo;write the first one ugly&amp;rsquo;:
I think this is a really good piece of advice and it seems along the same lines as a suggestion from Uncle Bob in Clean Code:
I find myself following a similar approach to Evan these days whereas previously I&amp;rsquo;d probably have spent a lot of time thinking through the problem in my head trying to come up with a design I was happy with.</description>
    </item>
    
    <item>
      <title>RSpec: Another newbie mistake</title>
      <link>https://markhneedham.com/blog/2010/09/30/rspec-another-newbie-mistake/</link>
      <pubDate>Thu, 30 Sep 2010 07:03:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/30/rspec-another-newbie-mistake/</guid>
      <description>We recently had a spec which was checking that we didn&amp;rsquo;t receive a call to a specific method on an object&amp;hellip;
describe &amp;#34;Our Object&amp;#34; do it &amp;#34;should not update property if user is not an admin&amp;#34; do our_user = Factory(&amp;#34;user_with_role_x) User.stub!(:find).and_return(our_user) user.stub!(:is_admin?).and_return(false) user.should_not_receive(:property) end end &amp;hellip;where &amp;lsquo;property&amp;rsquo; refers to a field in the users table. In the code &amp;lsquo;property&amp;rsquo; would get set like this:
class ObjectUnderTest def method_under_test user = User.</description>
    </item>
    
    <item>
      <title>Ruby: ActiveRecord 2.3.5 object equality</title>
      <link>https://markhneedham.com/blog/2010/09/30/ruby-activerecord-2-3-5-object-equality/</link>
      <pubDate>Thu, 30 Sep 2010 07:00:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/30/ruby-activerecord-2-3-5-object-equality/</guid>
      <description>We learnt something interesting about the equality of ActiveRecord objects today while comparing two user objects - one which was being provided to our application by Warden and the other that we&amp;rsquo;d retrieved by a &amp;lsquo;User.find&amp;rsquo; call.
Both objects referred to the same user in the database but were different instances in memory.
We needed to check that we were referring to the same user for one piece of functionality and were therefore able to make use of the &amp;lsquo;==&amp;rsquo; method defined on ActiveRecord::Base which is defined in the documentation like so:</description>
    </item>
    
    <item>
      <title>Ruby: Intersection/Difference/Concatenation with collections</title>
      <link>https://markhneedham.com/blog/2010/09/29/ruby-intersectiondifferenceconcatenation-with-collections/</link>
      <pubDate>Wed, 29 Sep 2010 03:28:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/29/ruby-intersectiondifferenceconcatenation-with-collections/</guid>
      <description>We came across a couple of situations yesterday where we wanted to perform operations on two different arrays.
My immediate thought was that there should be some methods available similar to what we have in C# which Mike Wagg and I spoke about in our talk about using functional programming techniques in C#.
I was expecting to find methods with names indicating the operation they perform but in actual fact the methods are more like operatorswhich makes for code that reads really well.</description>
    </item>
    
    <item>
      <title>FactoryGirl: &#39;has_and_belongs_to_many&#39; associations and the &#39;NoMethodError&#39;</title>
      <link>https://markhneedham.com/blog/2010/09/27/factorygirl-has_and_belongs_to_many-associations-and-the-nomethoderror/</link>
      <pubDate>Mon, 27 Sep 2010 14:18:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/27/factorygirl-has_and_belongs_to_many-associations-and-the-nomethoderror/</guid>
      <description>We ran into a somewhat frustrating problem while using Factory Girlto create an object which had a &amp;lsquo;has_and_belongs_to_many&amp;rsquo; association with another object.
The relevant code in the two classes was like this..
class Bar &amp;lt; ActiveRecord::Base has_and_belongs_to_many :foos, :class_name =&amp;gt; &amp;#34;Foo&amp;#34;, :join-table =&amp;gt; &amp;#34;bar_foos&amp;#34; end class Foo &amp;lt; ActiveRecord::Base has_many :bars end &amp;hellip;and we originally defined our &amp;lsquo;Bar&amp;rsquo; factory like so:
Factory.define :bar do |f| f.association(:foos, :factory =&amp;gt; :foo) end Factory.</description>
    </item>
    
    <item>
      <title>RSpec: Fooled by stub!...with</title>
      <link>https://markhneedham.com/blog/2010/09/26/rspec-fooled-by-stub-with/</link>
      <pubDate>Sun, 26 Sep 2010 19:03:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/26/rspec-fooled-by-stub-with/</guid>
      <description>We had an RSpec spec setup roughly like this the other day&amp;hellip;
describe &amp;#34;my stub test&amp;#34; do it &amp;#34;should be amazin&amp;#34; do Mark.stub!(:random).with(&amp;#34;some_wrong_argument&amp;#34;).and_return(&amp;#34;something&amp;#34;) Another.new.a_method end end &amp;hellip;where &amp;lsquo;Mark&amp;rsquo; and &amp;lsquo;Another&amp;rsquo; were defined like so:
class Mark def self.random(params) &amp;#34;do some amazing stuff&amp;#34; end end class Another def a_method random = Mark.random(&amp;#34;foo&amp;#34;) # use random for something end end When we ran the spec we would get the following error message which was initially a little baffling:</description>
    </item>
    
    <item>
      <title>RSpec: Causing ourselves much pain through &#39;attr&#39; misuse</title>
      <link>https://markhneedham.com/blog/2010/09/26/rspec-causing-ourselves-much-pain-through-attr-misuse/</link>
      <pubDate>Sun, 26 Sep 2010 18:57:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/26/rspec-causing-ourselves-much-pain-through-attr-misuse/</guid>
      <description>While testing some code that we were mixing into one of our controllers we made what I thought was an interesting mistake.
The module we wanted to test had some code a bit like this&amp;hellip;
module OurModule def some_method @User = User.find(params[:id]) # in the test code this is always true if @user == user ... end end end ..and we had the spec setup like so:
describe &amp;#39;OurController&amp;#39; do class TestController include OurModule attr_accessor :user end before(:each) do @controller = TestController.</description>
    </item>
    
    <item>
      <title>Ruby: Control flow using &#39;and&#39;</title>
      <link>https://markhneedham.com/blog/2010/09/23/ruby-control-flow-using-and/</link>
      <pubDate>Thu, 23 Sep 2010 14:33:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/23/ruby-control-flow-using-and/</guid>
      <description>Something I&amp;rsquo;ve noticed while reading Ruby code is that quite frequently the flow of a program is controlled by the &amp;lsquo;chaining&amp;rsquo; of different operations through use of the &amp;lsquo;and&amp;rsquo; keyword.
I&amp;rsquo;ve noticed that this pattern is used in Javascript code as welland it&amp;rsquo;s particularly prevalent when we want to get a status for those operations after they&amp;rsquo;ve all been executed.
For example we might have the following code&amp;hellip;
status = user.</description>
    </item>
    
    <item>
      <title>Ruby: Returning hashes using merge! and merge</title>
      <link>https://markhneedham.com/blog/2010/09/21/ruby-returning-hashes-using-merge-and-merge/</link>
      <pubDate>Tue, 21 Sep 2010 20:24:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/21/ruby-returning-hashes-using-merge-and-merge/</guid>
      <description>We came across an interesting problem today with some code which was unexpectedly returning nil.
The code that we had looked like this&amp;hellip;
class SomeClass def our_method	a_hash = { :a =&amp;gt; 2 } a_hash.merge!({:b =&amp;gt; 3}) unless some_condition.nil? end end &amp;hellip;and we didn&amp;rsquo;t notice the &amp;lsquo;unless&amp;rsquo; statement on the end which meant that if &amp;lsquo;some_condition&amp;rsquo; was nil then the return value of the method would be nil.
One way around it is to ensure that we explicitly return a_hash at the end of the method&amp;hellip;</description>
    </item>
    
    <item>
      <title>Learning cycles at an overall project level</title>
      <link>https://markhneedham.com/blog/2010/09/20/learning-cycles-at-an-overall-project-level/</link>
      <pubDate>Mon, 20 Sep 2010 18:56:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/20/learning-cycles-at-an-overall-project-level/</guid>
      <description>I was looking back over a post I wrote a couple of years ago where I described some learning cycles that I&amp;rsquo;d noticed myself going through with respect to codeand although at the time I was thinking of those cycles in terms of code I think they are applicable at a project level as well.
The cycles I described were as follows:
I think I&amp;rsquo;ve followed similar cycles with respect to how an overall project is run.</description>
    </item>
    
    <item>
      <title>Rails: Faking a delete method with &#39;form_for&#39;</title>
      <link>https://markhneedham.com/blog/2010/09/20/rails-faking-a-delete-method-with-form_for/</link>
      <pubDate>Mon, 20 Sep 2010 18:52:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/20/rails-faking-a-delete-method-with-form_for/</guid>
      <description>We recently had a requirement to delete an item based on user input and wanting to adhere to the &amp;lsquo;RESTful&amp;rsquo; approach that Rails encourages we therefore needed to fake a HTTP Delete method request.
The documentation talks a little about this:
Rails works around this issue by emulating other methods over POST with a hidden input named &amp;ldquo;_method&amp;rdquo;, which is set to reflect the desired method:
The example provided is for the &amp;lsquo;form_tag&amp;rsquo; helper method where you just need to pass a hash containing an entry with a key &amp;lsquo;:method&amp;rsquo; and value &amp;lsquo;delete&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Ruby: Random Observations</title>
      <link>https://markhneedham.com/blog/2010/09/19/ruby-random-observations/</link>
      <pubDate>Sun, 19 Sep 2010 11:35:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/19/ruby-random-observations/</guid>
      <description>I thought it&amp;rsquo;d be interesting to write down some of my observations after working with Ruby and Rails for a couple more weeks so here are some more things I&amp;rsquo;ve come across and others that I&amp;rsquo;ve got confused with&amp;hellip;
I came across this while looking at some of the rails_warden codeto try to understand how that gem opens the ActionController::Base class to add helper methods to it.
The code reads as follows:</description>
    </item>
    
    <item>
      <title>Ruby: Testing declarative_authorization</title>
      <link>https://markhneedham.com/blog/2010/09/17/ruby-testing-declarative_authorization/</link>
      <pubDate>Fri, 17 Sep 2010 19:53:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/17/ruby-testing-declarative_authorization/</guid>
      <description>As I mentioned in a post earlier in the weekwe&amp;rsquo;re using the declarative_authorizationgem to control access to various parts of our application and as we&amp;rsquo;ve been migrating parts of the code base over to use that framework one thing we&amp;rsquo;ve noticed is that there seems to be a diminishing return in how much value we get from writing specs to cover each rule that we create.
We found that while it is possible to write a spec to cover every single rule it sometimes seems like the spec is just duplicating what the rule already describes.</description>
    </item>
    
    <item>
      <title>SICP: Iterative process vs Recursive process functions</title>
      <link>https://markhneedham.com/blog/2010/09/16/sicp-iterative-process-vs-recursive-process-functions/</link>
      <pubDate>Thu, 16 Sep 2010 18:48:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/16/sicp-iterative-process-vs-recursive-process-functions/</guid>
      <description>I was working my way through some of the exercises in SICPover the weekend and one that I found particularly interesting was 1.11where you have to write a function by means of a recursive process and then by means of an iterative process.
To write that function recursively is relatively straight forward:
(in Clojure)
(defn f [n] (if (&amp;lt; n 3) n (+ (f (- n 1)) (* 2 (f (- n 2))) (* 3 (f (- n 3)))))) The solution to this problem by means of an iterative process will still use recursion but we won&amp;rsquo;t need to keep a track of all the previous calls to the function on the stack because we will keep the current state of the calculation in parameters that we pass to the function.</description>
    </item>
    
    <item>
      <title>Ruby: Caught out by no type checking</title>
      <link>https://markhneedham.com/blog/2010/09/13/ruby-caught-out-by-no-type-checking/</link>
      <pubDate>Mon, 13 Sep 2010 17:44:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/13/ruby-caught-out-by-no-type-checking/</guid>
      <description>I got caught out for a little while today when comparing a value coming into a controller from &amp;lsquo;params&amp;rsquo; which we were then comparing with a collection of numbers.
The code was roughly like this&amp;hellip;
class SomeController def some_action some_collection = [1,2,3,4,5] selected_item = some_collection.find { |item| item == params[:id] } end end &amp;hellip;and since the &amp;lsquo;id&amp;rsquo; being passed in was &amp;lsquo;1&amp;rsquo; I was expected that we should have a selected item but we didn&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>Ruby: FactoryGirl &amp; declarative_authorization - Random thoughts</title>
      <link>https://markhneedham.com/blog/2010/09/12/ruby-factorygirl-declarative_authorization-random-thoughts/</link>
      <pubDate>Sun, 12 Sep 2010 14:25:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/12/ruby-factorygirl-declarative_authorization-random-thoughts/</guid>
      <description>Two other gems that we&amp;rsquo;re using on my current project are FactoryGirland declarative_authorization.
We use declarative_authorization for controlling access to various parts of the application and FactoryGirl allows us to build objects for use in our tests.
We wanted to be able to deactivate the authorization when creating test objects because otherwise our test wouldn&amp;rsquo;t have permission to create certain objects.
Our original approach was to create a &amp;lsquo;God&amp;rsquo; role which we could assign to the &amp;lsquo;current_user&amp;rsquo; in our tests therefore allowing us to create whatever objects we wanted.</description>
    </item>
    
    <item>
      <title>Learning: Study habits</title>
      <link>https://markhneedham.com/blog/2010/09/12/learning-study-habits/</link>
      <pubDate>Sun, 12 Sep 2010 13:27:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/12/learning-study-habits/</guid>
      <description>I came across an interesting article from the New York Times that Michael Feathers originally linked to on twitterwhich discusses some of the common ideas that we have about good study habits, pointing out the flaws in them and suggesting alternative approaches.
The author starts out by making some interesting observations about spacing out our learning:
No one knows for sure why. It may be that the brain, when it revisits material at a later time, has to relearn some of what it has absorbed before adding new stuff — and that that process is itself self-reinforcing.</description>
    </item>
    
    <item>
      <title>Rails: Polymorphism through &#39;constantize&#39;</title>
      <link>https://markhneedham.com/blog/2010/09/10/rails-polymorphism-through-constantize/</link>
      <pubDate>Fri, 10 Sep 2010 21:26:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/10/rails-polymorphism-through-constantize/</guid>
      <description>One interesting feature of Rails which Shishirpointed out the other day is the ability to take a user provided value and make use of Active Support&amp;rsquo;s &amp;lsquo;constantize&amp;rsquo; method to effectively achieve polymorphism directly from the user&amp;rsquo;s input.
As an example if we were creating different types of widgets from the same web page we might have several different forms that the user could submit.
We could have a hidden field representing the type of the widget like so:</description>
    </item>
    
    <item>
      <title>Ruby: Checking an array contains an item</title>
      <link>https://markhneedham.com/blog/2010/09/08/ruby-checking-an-array-contains-an-item/</link>
      <pubDate>Wed, 08 Sep 2010 18:54:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/08/ruby-checking-an-array-contains-an-item/</guid>
      <description>A couple of times in the past few days I&amp;rsquo;ve wanted to check if a particular item exists in an array and presumably influenced by working for too long with the .NET/Java APIs I keep expecting there to be a &amp;lsquo;contains&amp;rsquo; method that I can call on the array!
More as an attempt to help myself remember than anything else, the method we want is actually called &amp;lsquo;include?&#39;.
Therefore&amp;hellip;
[1,2,3].include?(2) =&amp;gt; true [1,2,3,4].</description>
    </item>
    
    <item>
      <title>jQuery UI Tabs: Changing selected tab</title>
      <link>https://markhneedham.com/blog/2010/09/08/jquery-ui-tabs-changing-selected-tab/</link>
      <pubDate>Wed, 08 Sep 2010 18:32:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/08/jquery-ui-tabs-changing-selected-tab/</guid>
      <description>We&amp;rsquo;re using the tabs part of the jQuery UI libraryon the project I&amp;rsquo;m currently working on and one thing we wanted to do was change the default tab that was being selected.
The documentation suggested that one way to do this was to give the index of the tab we wanted selected when calling the tabs function:
$( &amp;#34;.selector&amp;#34; ).tabs({ selected: 3 }); Since we wanted to select the tab by name based on a value from the query string we thought it would probably be simpler if we could just set the selected tab using a css class.</description>
    </item>
    
    <item>
      <title>Ruby: Hash ordering</title>
      <link>https://markhneedham.com/blog/2010/09/07/ruby-hash-ordering/</link>
      <pubDate>Tue, 07 Sep 2010 03:52:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/07/ruby-hash-ordering/</guid>
      <description>The application that I&amp;rsquo;m working on at the moment is deployed into production on JRuby but we also use the C Ruby 1.8.7 interpreter when developing locally since this allows us much quicker feedback.
As a result we sometimes come across interesting differences in the way that the two runtimes work.
One that we noticed yesterday is that if you create a hash, the order of the keys in the hash will be preserved when interpreted on JRuby but not with the C Ruby interpreter.</description>
    </item>
    
    <item>
      <title>Flow in software teams</title>
      <link>https://markhneedham.com/blog/2010/09/05/flow-in-software-teams/</link>
      <pubDate>Sun, 05 Sep 2010 17:34:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/05/flow-in-software-teams/</guid>
      <description>My former colleague Greg Gigon has written an interesting blog post where he talks about the pain that we cause ourselves by multi-tasking, a point which Kevin Fox also makes on the Theory of Constraints blog.
I think the overall point that he makes is very true:
I&amp;rsquo;ve often found that when I try and switch between multiple different tasks I end up finishing none of them and it&amp;rsquo;s certainly true that twitter, facebook and emails can be amazingly distracting.</description>
    </item>
    
    <item>
      <title>Design Simplicity: Partially updating an object</title>
      <link>https://markhneedham.com/blog/2010/09/05/design-simplicity-partially-updating-an-object/</link>
      <pubDate>Sun, 05 Sep 2010 17:32:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/09/05/design-simplicity-partially-updating-an-object/</guid>
      <description>One of the most common discussions that I have with my colleagues is around designing bits of code in the simplest way possible.
I&amp;rsquo;ve never quite been able to put my finger on exactly what makes a design simple and there is frequently disagreement about what is even considered simple.
On the last project I worked on we had an interesting problem where we wanted to partially update different parts of an object from different pages of the application.</description>
    </item>
    
    <item>
      <title>Objective C: Observations</title>
      <link>https://markhneedham.com/blog/2010/08/31/objective-c-observations/</link>
      <pubDate>Tue, 31 Aug 2010 18:27:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/31/objective-c-observations/</guid>
      <description>I&amp;rsquo;ve been playing around with Objective C over the last month or so and although my knowledge of the language is still very much limited I thought it&amp;rsquo;d be interesting to describe some of the things about the language that I think are quite interesting and others that keep catching me out.
I touched on protocols a bit in my first postbut they seem like an interesting middle ground between interfaces and duck typing.</description>
    </item>
    
    <item>
      <title>Rails: Populating a dropdown list using &#39;form_for&#39;</title>
      <link>https://markhneedham.com/blog/2010/08/31/rails-populating-a-dropdown-list-using-form_for/</link>
      <pubDate>Tue, 31 Aug 2010 01:22:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/31/rails-populating-a-dropdown-list-using-form_for/</guid>
      <description>Last week we were trying to make use of Rails&amp;rsquo; &amp;lsquo;form_for&amp;rsquo; helperto populate a dropdown list with the values of a collection that we&amp;rsquo;d set to an instance variable in our controller.
My colleague pointed out that we&amp;rsquo;d need to use &amp;lsquo;collection_select&amp;rsquo; in order to do this.
We want to put the values in the &amp;lsquo;foos&amp;rsquo; collection onto the page. &amp;lsquo;foos&amp;rsquo; is a hash which defines some display values and their corresponding values like so:</description>
    </item>
    
    <item>
      <title>Coding: Mutating parameters</title>
      <link>https://markhneedham.com/blog/2010/08/26/coding-mutating-parameters/</link>
      <pubDate>Thu, 26 Aug 2010 07:47:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/26/coding-mutating-parameters/</guid>
      <description>One of the earliest rules of thumb that I was taught by my colleagues is the idea that we should try and avoid mutating/changing values passed into a function as a parameter.
The underlying reason as I understand it is that if you&amp;rsquo;re just skimming through the code you wouldn&amp;rsquo;t necessarily expect the values of incoming parameters to be different depending where in the function they&amp;rsquo;re used.
I think the most dangerous example of this is when we completely change the value of a parameter, like so:</description>
    </item>
    
    <item>
      <title>Ruby: &#39;method_missing&#39; and slightly misled by RubyMine</title>
      <link>https://markhneedham.com/blog/2010/08/23/ruby-method_missing-and-slightly-misled-by-rubymine/</link>
      <pubDate>Mon, 23 Aug 2010 21:07:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/23/ruby-method_missing-and-slightly-misled-by-rubymine/</guid>
      <description>Another library that we&amp;rsquo;re using on my project is ActionMailerand before reading through the documentation I was confused for quite a while with respect to how it actually worked.
We have something similar to the following piece of code&amp;hellip;
Emailer.deliver_some_email &amp;hellip;which when you click its definition in RubyMine takes you to this class definition:
class Emailer &amp;lt; ActionMailer::Base def some_email recipients &amp;#34;some@email.com&amp;#34; from &amp;#34;some_other_email@whatever.com&amp;#34; # and so on end end I initially thought that method was called &amp;lsquo;deliver_some_mail&amp;rsquo; but having realised that it wasn&amp;rsquo;t I was led to the &amp;lsquo;magic&amp;rsquo; that is &amp;lsquo;method_missing&amp;rsquo; on &amp;lsquo;ActionMailer::Base&amp;rsquo; which is defined as follows:</description>
    </item>
    
    <item>
      <title>Distributed Agile: Initial observations</title>
      <link>https://markhneedham.com/blog/2010/08/23/distributed-agile-initial-observations/</link>
      <pubDate>Mon, 23 Aug 2010 02:52:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/23/distributed-agile-initial-observations/</guid>
      <description>One of the reasons I wanted to come and work for ThoughtWorks in India is that I wanted to see how a distributed agile project is run and see the ways in which it differs to one which is done co-located.
I worked on a project which was distributed between Sydney and Melbourne in 2008/2009 and while some of the challenges seem to be quite similar to the ones we faced there, some are completely different.</description>
    </item>
    
    <item>
      <title>Ruby: Accessing fields</title>
      <link>https://markhneedham.com/blog/2010/08/22/ruby-accessing-fields/</link>
      <pubDate>Sun, 22 Aug 2010 18:26:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/22/ruby-accessing-fields/</guid>
      <description>I&amp;rsquo;ve spent a little time browsing through some of the libraries used by my project and one thing which I noticed in ActiveSupportis that fields don&amp;rsquo;t seem to be accessed directly but rather are accessed through a method which effectively encapsulates them inside the object.
For example the following function is defined in &amp;lsquo;inheritable_attributes.rb&amp;rsquo;
def write_inheritable_attribute(key, value) if inheritable_attributes.equal?(EMPTY_INHERITABLE_ATTRIBUTES) @inheritable_attributes = {} end inheritable_attributes[key] = value end def inheritable_attributes @inheritable_attributes ||= EMPTY_INHERITABLE_ATTRIBUTES end EMPTY_INHERITABLE_ATTRIBUTES = {}.</description>
    </item>
    
    <item>
      <title>Ultimate configurability</title>
      <link>https://markhneedham.com/blog/2010/08/21/ultimate-configurability/</link>
      <pubDate>Sat, 21 Aug 2010 11:04:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/21/ultimate-configurability/</guid>
      <description>In Continuous Deliverythe authors talk about the danger of ultimate configurability&amp;hellip;
&amp;hellip;and from my experience when you take this over configurability to its logical conclusion you end up developing a framework that can hopefully just be &amp;lsquo;configured&amp;rsquo; for any number of &amp;lsquo;front ends&amp;rsquo;.
This seems to be quite a common thing to do across organisations and typically the decision about what needs to go into the framework is made before there&amp;rsquo;s been much/any development on the applications which will make use of said framework.</description>
    </item>
    
    <item>
      <title>The fear tax</title>
      <link>https://markhneedham.com/blog/2010/08/20/the-fear-tax/</link>
      <pubDate>Fri, 20 Aug 2010 14:14:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/20/the-fear-tax/</guid>
      <description>Seth Godin recently wrote a post about &amp;lsquo;the fear tax&amp;rsquo; which he describes as a &amp;lsquo;tax&amp;rsquo; that we pay when we do something in order to try and calm our fear about something else but don&amp;rsquo;t necessarily end up calming those fears.
I think one common example of a time we fall into this trap when developing software is around the security of financial systems.
Due to legal requirements that firms operating in that domain operate under we can often end up with a very complicated security solution which is unnecessary for allowing us to achieve what we want to.</description>
    </item>
    
    <item>
      <title>Database configuration: Just like any other change</title>
      <link>https://markhneedham.com/blog/2010/08/18/database-configuration-just-like-any-other-change/</link>
      <pubDate>Wed, 18 Aug 2010 10:07:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/18/database-configuration-just-like-any-other-change/</guid>
      <description>I&amp;rsquo;ve been flicking through Continuous Deploymentand one section early on about changing configuration information in our applications particularly caught my eye:
In many organisations where I&amp;rsquo;ve worked this is generally adhered to except when it comes to configuration which is controlled from the database!
If there was a change to be made to source code or configuration on the file system then the application would go through a series of regression tests (often manual) to ensure that the application would still work after the change.</description>
    </item>
    
    <item>
      <title>iPad: Getting PragProg books onto the Kindle App</title>
      <link>https://markhneedham.com/blog/2010/08/16/ipad-getting-pragprog-books-onto-the-kindle-app/</link>
      <pubDate>Mon, 16 Aug 2010 07:18:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/16/ipad-getting-pragprog-books-onto-the-kindle-app/</guid>
      <description>As I&amp;rsquo;ve mentioned previouslyI think the Kindle application on the iPadis the best one for reading books and as a result of that I wanted to be able to read some books which I&amp;rsquo;d bought from the PragProgstore onto it.
The first step is to download the &amp;lsquo;.mobi&amp;rsquo; version of the book and use iPhoneExplorerto drag the file into the &amp;lsquo;Kindle/Documents/eBook&amp;rsquo; folder on the iPad.
This works fine but if you add more than one book in this way they all have the same cover image when viewed on the iPad which is quite annoying when trying to work out which book is which.</description>
    </item>
    
    <item>
      <title>Creativity - John Cleese</title>
      <link>https://markhneedham.com/blog/2010/08/16/creativity-john-cleese/</link>
      <pubDate>Mon, 16 Aug 2010 05:42:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/16/creativity-john-cleese/</guid>
      <description>Jonas Bonerrecently linked to a really cool (and short) presentation by John Cleese about creativitywhich I think is very applicable to software development.
Cleese describes some observations he&amp;rsquo;s made about creativity from his experiences working in comedy. These were some of the key ideas:
He was surprised to see that the rewritten version was actually an improvement over the original even though he&amp;rsquo;d written it much more quickly the second time and concludes that his unconscious mind must have still been working on the script even after he&amp;rsquo;d stopped writing it.</description>
    </item>
    
    <item>
      <title>Can we always release to production incrementally?</title>
      <link>https://markhneedham.com/blog/2010/08/16/can-we-always-release-to-production-incrementally/</link>
      <pubDate>Mon, 16 Aug 2010 04:22:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/16/can-we-always-release-to-production-incrementally/</guid>
      <description>Jez recently linkedto a post written by Timothy Fitz about a year ago where he talks about the way his team use continuous deliverywhich means that every change made to the code base goes into production immediately as long as it passes their test suite.
I&amp;rsquo;ve become fairly convinced recently that it should always be possible to deploy to production frequently but we recently came across a situation where it seemed like doing that wouldn&amp;rsquo;t make much sense.</description>
    </item>
    
    <item>
      <title>Objective C: Expected &#39;(&#39; before &#39;Project&#39;</title>
      <link>https://markhneedham.com/blog/2010/08/14/objective-c-expected-before-project/</link>
      <pubDate>Sat, 14 Aug 2010 10:33:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/14/objective-c-expected-before-project/</guid>
      <description>A mistake I&amp;rsquo;ve made more than a few times while declaring headers in Objective C is forgetting to explicitly import the classes used in the interface definition.
I&amp;rsquo;ve been refactoring some of the code I wrote earlier in the weekand wanted to create a &amp;lsquo;LabelFactory&amp;rsquo;. I had the following code:
LabelFactory.h
#import &amp;lt;UIKit/UIKit.h&amp;gt;  @interface LabelFactory : NSObject { } + (UILabel*)createLabelFrom:(Project *)project withXCoordinate:(NSInteger)x withYCoordinate:(NSInteger)y; @end Which gives this error on compilation:</description>
    </item>
    
    <item>
      <title>Rules of thumb vs Exercise your judgement</title>
      <link>https://markhneedham.com/blog/2010/08/13/rules-of-thumb-vs-exercise-your-judgement/</link>
      <pubDate>Fri, 13 Aug 2010 10:05:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/13/rules-of-thumb-vs-exercise-your-judgement/</guid>
      <description>I spent a bit of time working through the first Micro Testing album of the Industrial Logic eLearning suitea few weeks ago and there&amp;rsquo;s an interesting piece of advice towards the end of the album:
Don&amp;rsquo;t let any technique or recommendation or rule of thumb become an excuse for not exercising your judgment.
While I think this is good advice I thought it was interesting that it seems to goes against the rules of thumbapproach that I described in a blog post towards the end of last year.</description>
    </item>
    
    <item>
      <title>One idea at a time</title>
      <link>https://markhneedham.com/blog/2010/08/12/one-idea-at-a-time/</link>
      <pubDate>Thu, 12 Aug 2010 18:59:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/12/one-idea-at-a-time/</guid>
      <description>One thing I noticed while pairing with some of the ThoughtWorks Universityguys a few weeks ago is that I had an almost overwhelming urge to show them all sorts of coding techniques that I&amp;rsquo;ve learned, probably to the point where it&amp;rsquo;d be more confusing than helpful.
JKpointed out that it&amp;rsquo;s more effective to bite your tongue and just focus on one idea at a time which is something that the authors of Agile Coachingtouch on briefly at the beginning of the book:</description>
    </item>
    
    <item>
      <title>Coding: Using a library/rolling your own</title>
      <link>https://markhneedham.com/blog/2010/08/10/coding-using-a-libraryrolling-your-own/</link>
      <pubDate>Tue, 10 Aug 2010 17:25:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/10/coding-using-a-libraryrolling-your-own/</guid>
      <description>One of the things that I&amp;rsquo;ve noticed as we&amp;rsquo;ve started writing more client side code is that I&amp;rsquo;m much more likely to look for a library which solves a problem than I would be with server side code.
A requirement that we&amp;rsquo;ve had on at least the last 3 or 4 projects I&amp;rsquo;ve worked on is to do client side validation on the values entered into a form by the user.</description>
    </item>
    
    <item>
      <title>Learning and Situated cognition</title>
      <link>https://markhneedham.com/blog/2010/08/10/learning-and-situated-cognition/</link>
      <pubDate>Tue, 10 Aug 2010 03:26:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/10/learning-and-situated-cognition/</guid>
      <description>Sumeet recently blogged about the new style ThoughtWorks University that he and the other trainers have introducedand although I only got to see it in action for a few days it seemed clear to me that it was an improvement on the original version.
The questions being asked, discussions being had and situations that were coming up were pretty much the same as I&amp;rsquo;ve seen on any software project that I&amp;rsquo;ve worked on.</description>
    </item>
    
    <item>
      <title>iPad: Redrawing the screen</title>
      <link>https://markhneedham.com/blog/2010/08/09/ipad-redrawing-the-screen/</link>
      <pubDate>Mon, 09 Aug 2010 04:38:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/09/ipad-redrawing-the-screen/</guid>
      <description>As I mentioned in a post I wrote last week I&amp;rsquo;ve been writing a little iPad application to parse a cctray feedand then display the status of the various builds on the screen.
The way I&amp;rsquo;ve been doing this is by dynamically adding labels to the view and colouring the background of those labels red or green depending on the build status.
FirstViewController.h
@interface FirstViewController : UIViewController { ... NSMutableArray *dynamicallyAddedFields; } FirstViewController.</description>
    </item>
    
    <item>
      <title>Coding: Tools/Techniques influence the way we work</title>
      <link>https://markhneedham.com/blog/2010/08/07/coding-toolstechniques-influence-the-way-we-work/</link>
      <pubDate>Sat, 07 Aug 2010 13:14:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/07/coding-toolstechniques-influence-the-way-we-work/</guid>
      <description>Dave Astels mentions in his BDD paperthat the way we use language influences the way that we write code, quoting the Sapir-Whorf hypothesisIn a similar way, something which I didn&amp;rsquo;t fully appreciate until the last project I worked on is how much the tools and techniques that you use can influence the way that you work.
There were still times when we&amp;rsquo;d end up working on something locally for too long but it seemed to become much more visible when this was happening and the endless ribbing that a pair got when they hadn&amp;rsquo;t checked in for a while ensured that it didn&amp;rsquo;t last for long.</description>
    </item>
    
    <item>
      <title>Objective C: Back to being a novice</title>
      <link>https://markhneedham.com/blog/2010/08/06/objective-c-back-to-being-a-novice/</link>
      <pubDate>Fri, 06 Aug 2010 03:59:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/06/objective-c-back-to-being-a-novice/</guid>
      <description>As I mentioned in my previous post about parsing an XML file in Objective CI&amp;rsquo;m a novice on the Dreyfus Modelwhen it comes to this type of development and I&amp;rsquo;ve found it interesting that I&amp;rsquo;ve dropped back into habits from my PHP days when I was first learning how to program.
My first instinct after I&amp;rsquo;d created a project in XCode was to try and understand how an iPad application fits together.</description>
    </item>
    
    <item>
      <title>Objective C: Parsing an XML file</title>
      <link>https://markhneedham.com/blog/2010/08/04/objective-c-parsing-an-xml-file/</link>
      <pubDate>Wed, 04 Aug 2010 05:00:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/08/04/objective-c-parsing-an-xml-file/</guid>
      <description>I&amp;rsquo;ve been wanting to try out some iPad development for a while and as a hello worldish exercise for myself I thought I&amp;rsquo;d try and work out how to parse the cctray.xmlfile from Sam Newman&amp;rsquo;s bigvisiblewall.
Realising that I&amp;rsquo;m a novice on the Dreyfus Modelwhen it comes to Objective C I started out by following a tutorial from iPhone SDK Articleswhich explained how to do this.
The first thing I learnt is that the built in library follows an event driven approach to handling XML.</description>
    </item>
    
    <item>
      <title>The value of naming things</title>
      <link>https://markhneedham.com/blog/2010/07/31/the-value-of-naming-things/</link>
      <pubDate>Sat, 31 Jul 2010 07:05:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/31/the-value-of-naming-things/</guid>
      <description>Nikhiland I were discussing some of the ideas around Test Driven Development earlier in the week and at one stage I pointed out that I quite liked Bryan Liles&amp;rsquo; idea of &amp;lsquo;make it pass or change the message&amp;rsquo;.
Bryan suggests that when we have a failing test our next step should be to make that test pass or at least write some code which results in us getting a different error message and hopefully one step closer to making the test pass.</description>
    </item>
    
    <item>
      <title>Kent Beck&#39;s Test Driven Development Screencasts</title>
      <link>https://markhneedham.com/blog/2010/07/28/kent-becks-test-driven-development-screencasts/</link>
      <pubDate>Wed, 28 Jul 2010 10:44:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/28/kent-becks-test-driven-development-screencasts/</guid>
      <description>Following the recommendations of Corey Haines, Michael Guterl, James Martinand Michael HungerI decided to get Kent Beck&amp;rsquo;s screencasts on Test Driven Developmentwhich have been published by the Pragmatic Programmers.
I read Kent&amp;rsquo;s &amp;lsquo;Test Driven Development By Example&amp;rsquo; book a couple of years ago and remember enjoying that so I was intrigued as to what it would be like to see some of those ideas put into practice in real time.</description>
    </item>
    
    <item>
      <title>TDD: Call your shots</title>
      <link>https://markhneedham.com/blog/2010/07/28/tdd-call-your-shots/</link>
      <pubDate>Wed, 28 Jul 2010 07:39:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/28/tdd-call-your-shots/</guid>
      <description>One of the other neat ideas I was reminded of when watching Kent Beck&amp;rsquo;s TDD screencastsis the value of &amp;lsquo;calling your shots&amp;rsquo; i.e. writing a test and then saying what&amp;rsquo;s going to happen when you run that test.
It reminds me of an exercise we used to do in tennis training when I was younger.
The coach would feed the ball to you and just before you hit it you had to say exactly where on the court you were going to place it - cross court/down the line and short/deep.</description>
    </item>
    
    <item>
      <title>TDD: Testing collections</title>
      <link>https://markhneedham.com/blog/2010/07/28/tdd-testing-collections/</link>
      <pubDate>Wed, 28 Jul 2010 06:05:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/28/tdd-testing-collections/</guid>
      <description>I&amp;rsquo;ve been watching Kent Beck&amp;rsquo;s TDD screencastsand in the 3rd episode he reminded me of a mistake I used to make when I was first learning how to test drive code.
The mistake happens when testing collections and I would write a test which would pass even if the collection had nothing in it.
The code would look something like this:
[Test] public void SomeTestOfACollection() { var someObject = new Object(); var aCollection = someObject.</description>
    </item>
    
    <item>
      <title>Agile: Developer attendance at showcases</title>
      <link>https://markhneedham.com/blog/2010/07/27/agile-developer-attendance-at-showcases/</link>
      <pubDate>Tue, 27 Jul 2010 07:31:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/27/agile-developer-attendance-at-showcases/</guid>
      <description>On the majority of the projects that I&amp;rsquo;ve worked on at ThoughtWorks we&amp;rsquo;ve held a showcase at the end of each iteration to show our client what we&amp;rsquo;ve been working on and finished over the previous one or two weeks.
The format of these showcases has been fairly similar each time but the people who attended has tended to vary depending on the situation.
As part of the project being worked on at ThoughtWorks Universitywe&amp;rsquo;ve run a showcase at the end of each week which the whole team have been attending.</description>
    </item>
    
    <item>
      <title>Technical Debt around release time</title>
      <link>https://markhneedham.com/blog/2010/07/25/technical-debt-around-release-time/</link>
      <pubDate>Sun, 25 Jul 2010 14:21:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/25/technical-debt-around-release-time/</guid>
      <description>One of the requirements that the ThoughtWorks University grads have been given on the internal project they&amp;rsquo;re working on is to ensure that they leave the code base in a good state so that the next batch can potentially continue from where they left off.
The application will be deployed on Thursday and this means that a lot of the time this week will be spent refactoring certain areas of the code base rather than only adding new functionality.</description>
    </item>
    
    <item>
      <title>Bundler: Don&#39;t forget to call &#39;source&#39;</title>
      <link>https://markhneedham.com/blog/2010/07/25/bundler-dont-forget-to-call-source/</link>
      <pubDate>Sun, 25 Jul 2010 11:48:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/25/bundler-dont-forget-to-call-source/</guid>
      <description>Brian, Tejasand I (well mainly them) have been working on an application to give badges to people based on their GitHub activity at the Yahoo Open Hack Dayin Bangalore and we&amp;rsquo;ve been making use of Bundlerto pull in our dependencies.
Our Gemfile was originally like this:
gem &amp;#34;sinatra&amp;#34;, &amp;#34;1.0&amp;#34; gem &amp;#34;haml&amp;#34;, &amp;#34;3.0.13&amp;#34; gem &amp;#34;activesupport&amp;#34;, &amp;#34;3.0.0.beta4&amp;#34;, :require =&amp;gt; false gem &amp;#34;tzinfo&amp;#34;, &amp;#34;0.3.22&amp;#34; gem &amp;#34;nokogiri&amp;#34;, &amp;#34;1.4.2&amp;#34; ... For quite a while we were wondering why &amp;lsquo;bundle install&amp;rsquo; wasn&amp;rsquo;t actually resolving anything at all before we RTFMand realised that we needed to call &amp;lsquo;source&amp;rsquo; at the top so that bundler knows where to pull the dependencies from.</description>
    </item>
    
    <item>
      <title>TDD, small steps and no need for comments</title>
      <link>https://markhneedham.com/blog/2010/07/23/tdd-small-steps-and-no-need-for-comments/</link>
      <pubDate>Fri, 23 Jul 2010 02:52:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/23/tdd-small-steps-and-no-need-for-comments/</guid>
      <description>I recently came a blog post written by Matt Ward describing some habits to make you a better coderand while he presented a lot of good ideas I found myself disagreeing with his 2nd tip:
When it comes to coding, there are many tenets and ideas I stand by. One of this is that code is 95% logic. Another is that logic doesn’t change when translated from human language into a programming language.</description>
    </item>
    
    <item>
      <title>The prepared mind vs having context when learning new ideas</title>
      <link>https://markhneedham.com/blog/2010/07/22/the-prepared-mind-vs-having-context-when-learning-new-ideas/</link>
      <pubDate>Thu, 22 Jul 2010 04:06:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/22/the-prepared-mind-vs-having-context-when-learning-new-ideas/</guid>
      <description>I&amp;rsquo;m currently working as a trainer for ThoughtWorks University (TWU)and the participants have some Industrial Logic e-learning materialto work through before they take part in the 6 week training program.
I&amp;rsquo;ve been working through the refactoring/code smellscourses myself and while I&amp;rsquo;ve been finding it really useful, I think this was partly because I&amp;rsquo;ve been able to link the material to situations that I&amp;rsquo;ve seen in code bases that I&amp;rsquo;ve worked on over the past few years.</description>
    </item>
    
    <item>
      <title>Feedback, the environment and other people</title>
      <link>https://markhneedham.com/blog/2010/07/20/feedback-the-environment-and-other-people/</link>
      <pubDate>Tue, 20 Jul 2010 17:30:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/20/feedback-the-environment-and-other-people/</guid>
      <description>Something that I&amp;rsquo;ve noticed over the last few years is that when people give feedback to each other there is often an over emphasis on the individual and less attention paid to the environment in which they were working.
I covered this a bit in a blog post I wrote about a year ago titled &amp;lsquo;Challenging projects and the Kubler Ross Grief Cycle&amp;rsquo; which I converted into a presentation that I gave at XP2010 in June.</description>
    </item>
    
    <item>
      <title>Writing off a badly executed practice</title>
      <link>https://markhneedham.com/blog/2010/07/17/writing-off-a-badly-executed-practice/</link>
      <pubDate>Sat, 17 Jul 2010 11:13:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/17/writing-off-a-badly-executed-practice/</guid>
      <description>I recently came across an interesting post about pair programming by Paritosh Ranjan where he outlines some of the problems he&amp;rsquo;s experienced with this practice.
While some of the points that he raises are certainly valid I think they&amp;rsquo;re more evidence of pair programming not being done in an effective way rather than a problem with the idea in itself.
To take one example:
While it&amp;rsquo;s certainly possible to end up with this scenario, I&amp;rsquo;ve also taken part in pairing sessions where we were able to think through a problem and come up with a design much more effectively than either of us would have been able to alone.</description>
    </item>
    
    <item>
      <title>TDD: I hate deleting unit tests</title>
      <link>https://markhneedham.com/blog/2010/07/15/tdd-i-hate-deleting-unit-tests/</link>
      <pubDate>Thu, 15 Jul 2010 23:15:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/15/tdd-i-hate-deleting-unit-tests/</guid>
      <description>Following on from my post about the value we found in acceptance tests on our project when doing a large scale refactoringI had an interesting discussion with Jak Charltonand Ben Hallabout deleting unit tests when they&amp;rsquo;re no longer needed.
The following is part of our discussion:
Ben:
Jak:
Me:
Jak:
While Jak and Ben are probably right I do find myself feeling way more anxious about deleting test code than I would deleting production code.</description>
    </item>
    
    <item>
      <title>Drive - Dan Pink</title>
      <link>https://markhneedham.com/blog/2010/07/15/drive-dan-pink/</link>
      <pubDate>Thu, 15 Jul 2010 00:21:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/15/drive-dan-pink/</guid>
      <description>One of the more interesting presentations doing the rounds on twitter and on our internal mailing lists is the following one by Dan Pink titled &amp;lsquo;Drive - The surprising truth about what motivates us&amp;rsquo;.
This topic generally interests me anyway but it&amp;rsquo;s quite intriguing that the research Dan has gathered support for what I imagine many people intrinsically knew.
The presentation dispels the myth that money always works as a motivator for getting people to do what we want them to do.</description>
    </item>
    
    <item>
      <title>J: Tacit Programming</title>
      <link>https://markhneedham.com/blog/2010/07/13/j-tacit-programming/</link>
      <pubDate>Tue, 13 Jul 2010 14:47:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/13/j-tacit-programming/</guid>
      <description>A couple of months ago I wrote about tacit programming with respect to F#,a term which I first came across while reading about the J programming language.
There&amp;rsquo;s a good introduction to tacit programming on the J websitewhich shows the evolution of a function which originally has several local variables into a state where it has none at all.
I&amp;rsquo;ve been having a go at writing Roy Osherove&amp;rsquo;s TDD Katain J and while I haven&amp;rsquo;t got very far yet I saw a good opportunity to move the code I&amp;rsquo;ve written so far into a more tacit style.</description>
    </item>
    
    <item>
      <title>Linchpin: Book Review</title>
      <link>https://markhneedham.com/blog/2010/07/12/linchpin-book-review/</link>
      <pubDate>Mon, 12 Jul 2010 16:07:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/12/linchpin-book-review/</guid>
      <description>I&amp;rsquo;ve read a couple of Seth Godin&amp;rsquo;s other books - Tribesand The Dip- and found them fairly readable so I figured his latest offering, Linchpin, would probably be worth a read too.
This is the first book that I&amp;rsquo;ve read on the iPad&amp;rsquo;s Kindle applicationand it was a reasonably good reading experience - I particularly like the fact that you can make notes and highlight certain parts of the text.</description>
    </item>
    
    <item>
      <title>The Internet Explorer 6 dilemma</title>
      <link>https://markhneedham.com/blog/2010/07/11/the-internet-explorer-6-dilemma/</link>
      <pubDate>Sun, 11 Jul 2010 19:31:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/11/the-internet-explorer-6-dilemma/</guid>
      <description>A couple of weeks ago Dermot and I showcased a piece of functionality that we&amp;rsquo;d been working on - notably hiding some options in a drop down list.
We showcased this piece of functionality to the rest of the team in Firefox and it all worked correctly.
Our business analyst, who was also acting as QA, then had a look at the story in Internet Explorer 6 and we promptly realised that the way we&amp;rsquo;d solved the problem didn&amp;rsquo;t actually work in IE6.</description>
    </item>
    
    <item>
      <title>A new found respect for acceptance tests</title>
      <link>https://markhneedham.com/blog/2010/07/11/a-new-found-respect-for-acceptance-tests/</link>
      <pubDate>Sun, 11 Jul 2010 17:08:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/11/a-new-found-respect-for-acceptance-tests/</guid>
      <description>On the project that I&amp;rsquo;ve been working on over the past few months one of the key benefits of the application was its ability to perform various calculations based on user input.
In order to check that these calculators are producing the correct outputs we created a series of acceptance tests that ran directly against one of the objects in the system.
We did this by defining the inputs and expected outputs for each scenario in an excel spreadsheet which we converted into a CSV file before reading that into an NUnit test.</description>
    </item>
    
    <item>
      <title>Performance: Do it less or find another way</title>
      <link>https://markhneedham.com/blog/2010/07/10/performance-do-it-less-or-find-another-way/</link>
      <pubDate>Sat, 10 Jul 2010 22:49:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/10/performance-do-it-less-or-find-another-way/</guid>
      <description>One thing that we tried to avoid on the project that I&amp;rsquo;ve been working on is making use of C# expressions treesin production code.
We found that the areas of the code where we compiled these expressions trees frequently showed up as being the least performant areas of the code base when run through a performance profiler.
In a discussion about the ways to improve the performance of an application Christianpointed out that once we&amp;rsquo;ve identified the area for improvement there are two ways to do this:</description>
    </item>
    
    <item>
      <title>Installing Ruby 1.9.2 with RVM on Snow Leopard</title>
      <link>https://markhneedham.com/blog/2010/07/08/installing-ruby-1-9-2-with-rvm-on-snow-leopard/</link>
      <pubDate>Thu, 08 Jul 2010 13:10:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/08/installing-ruby-1-9-2-with-rvm-on-snow-leopard/</guid>
      <description>Yesterday evening I decided to try and upgrade the Ruby installation on my Mac from 1.8.7 to 1.9.2 and went on the yak shaving mission which is doing just that.
RVMseems to be the way to install Ruby these days so I started off by installing that with the following command from the terminal:
bash &amp;lt; &amp;lt;( curl http://rvm.beginrescueend.com/releases/rvm-install-head ) That bit worked fine for me but there are further instructions on the RVM website if that doesn&amp;rsquo;t work.</description>
    </item>
    
    <item>
      <title>Group feedback</title>
      <link>https://markhneedham.com/blog/2010/07/07/group-feedback/</link>
      <pubDate>Wed, 07 Jul 2010 00:17:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/07/group-feedback/</guid>
      <description>On an internal mailing list my colleague David Pattinsonrecently described a feedback approach he&amp;rsquo;d used on a project where everyone on the team went into a room and they took turns giving direct feedback to each person.
Since we were finishing the project that we&amp;rsquo;ve been working on for the past few months, Christian, Dermotand I decided to give it a try last week.
One thing to note is that this feedback wasn&amp;rsquo;t linked to any performance review, it was just between the 3 of us to allow us to find ways that we can be more effective on projects that we work on in the future.</description>
    </item>
    
    <item>
      <title>The Limited Red Society - Joshua Kerievsky</title>
      <link>https://markhneedham.com/blog/2010/07/05/the-limited-red-society-joshua-kerievsky/</link>
      <pubDate>Mon, 05 Jul 2010 15:02:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/05/the-limited-red-society-joshua-kerievsky/</guid>
      <description>I recently watched a presentation given by Joshua Kerievsky from the Lean Software &amp;amp; Systems conference titled &amp;lsquo;The Limited Red Society&amp;rsquo; in which describes an approach to refactoring where we try to minimise the amount of time that the code is in a &amp;lsquo;red&amp;rsquo; state.
This means that the code should be compiling and the tests green for as much of this time as possible .
I think it&amp;rsquo;s very important to follow these principles in order to successfully refactor code on a project team and it&amp;rsquo;s an approach that my colleague Dave Cameronfirst introduced me to when we worked together last year.</description>
    </item>
    
    <item>
      <title>Mikado-ish method for debugging</title>
      <link>https://markhneedham.com/blog/2010/07/04/mikado-ish-method-for-debugging/</link>
      <pubDate>Sun, 04 Jul 2010 01:20:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/04/mikado-ish-method-for-debugging/</guid>
      <description>I&amp;rsquo;ve written previously about the Mikado method and how I&amp;rsquo;ve made use of it for identifying ways in which I could refactor codebut I think this approach is more generally applicable for any kind of code investigation.
Our application has a lot of calculations in it and we&amp;rsquo;ve been trying to refactor the code which wires all the calculators up to make use of a DSL which reveals the intention of the code more as well as making it easier to test.</description>
    </item>
    
    <item>
      <title>Coding: Having the design influenced by the ORM</title>
      <link>https://markhneedham.com/blog/2010/07/02/coding-having-the-design-influenced-by-the-orm/</link>
      <pubDate>Fri, 02 Jul 2010 16:56:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/07/02/coding-having-the-design-influenced-by-the-orm/</guid>
      <description>I wrote a few weeks ago about incremental refactoring using a static factory methodwhere we ended up with the following code:
public class LookUpKey { private readonly string param1; private readonly string param2; private readonly string param3; public LookUpKey(string param1, string param2, string param3) { this.param1 = param1; this.param2 = param2; this.param3 = param3; } public static LookUpKey CreateFrom(UserData userData) { var param1 = GetParam1From(userData); var param2 = GetParam2From(userData); var param3 = GetParam3From(userData); return new LookUpKey(param1, param2, param3); } public string Param1Key { { get { return param1; } } } .</description>
    </item>
    
    <item>
      <title>jQuery: Dynamically updating a drop down list</title>
      <link>https://markhneedham.com/blog/2010/06/30/jquery-dynamically-updating-a-drop-down-list/</link>
      <pubDate>Wed, 30 Jun 2010 10:46:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/30/jquery-dynamically-updating-a-drop-down-list/</guid>
      <description>We recently had a requirement to dynamically update a drop down list based on how the user had filled in other parts of the page.
Our initial approach was to populate the drop down with all potential options on page load and then add CSS selectors to the options that we wanted to hide. That worked fine in Chrome and Firefox but Internet Explorer seems to ignore CSS selectors inside a drop down list so none of the options were being hidden.</description>
    </item>
    
    <item>
      <title>NHibernate 2nd level cache: Doing it wrong?</title>
      <link>https://markhneedham.com/blog/2010/06/29/nhibernate-2nd-level-cache-doing-it-wrong/</link>
      <pubDate>Tue, 29 Jun 2010 06:45:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/29/nhibernate-2nd-level-cache-doing-it-wrong/</guid>
      <description>I wrote a couple of weeks ago about how we&amp;rsquo;d been trying to make use of the NHibernate 2nd level cacheand we were able to cache our data by following the various posts that I listed.
Unfortunately when we ran some performance tests we found that the performance of the application was significantly worse than when we just wrote our own &amp;lsquo;cache&amp;rsquo; - an object which had a dictionary containing the reference data items we&amp;rsquo;d previously tried to lookup and the appropriate values.</description>
    </item>
    
    <item>
      <title>Intuition and &#39;quit thinking and look&#39;</title>
      <link>https://markhneedham.com/blog/2010/06/28/intuition-and-quit-thinking-and-look/</link>
      <pubDate>Mon, 28 Jun 2010 08:39:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/28/intuition-and-quit-thinking-and-look/</guid>
      <description>Something which Dermot, Christianand I noticed last week is that on our project we&amp;rsquo;ve reached the stage where we intuitively know what the underlying problem is for any given error message in the application we&amp;rsquo;re working on.
We&amp;rsquo;re pretty much at the stage where we&amp;rsquo;re effectively pattern matching what&amp;rsquo;s going on without needing to think that much anymore.
This is a good thing because it saves a lot of time analysing every single message to try and work out what&amp;rsquo;s going on - I think this means that we&amp;rsquo;ve reached a higher level of the Dreyfus modelwhen it comes to this particular situation.</description>
    </item>
    
    <item>
      <title>Is &#39;be the worst&#39; ever limiting?</title>
      <link>https://markhneedham.com/blog/2010/06/26/is-be-the-worst-ever-limiting/</link>
      <pubDate>Sat, 26 Jun 2010 10:03:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/26/is-be-the-worst-ever-limiting/</guid>
      <description>One of my favourite patterns from Ade Oshineye and Dave Hoover&amp;rsquo;s &amp;lsquo;Apprenticeship Patterns&amp;rsquo; is &amp;lsquo;Be the worst&amp;rsquo; which is described as follows:
Be the Worst was the seminal pattern of this pattern language. It was lifted from some advice that Pat Metheny offered to young musicians: “Be the worst guy in every band you’re in.” Pat’s advice struck a chord with Dave, and was one of the reasons he started writing this book.</description>
    </item>
    
    <item>
      <title>Mercurial: Only pushing some local changes</title>
      <link>https://markhneedham.com/blog/2010/06/25/mercurial-only-pushing-some-local-changes/</link>
      <pubDate>Fri, 25 Jun 2010 23:32:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/25/mercurial-only-pushing-some-local-changes/</guid>
      <description>One problem we&amp;rsquo;ve come across a few times over the last couple of months while using Mercurial is the situation where we want to quickly commit a local change without committing other local changes that we&amp;rsquo;ve made.
The example we came across today was where we wanted to make a change to the build file as we&amp;rsquo;d made a mistake in the target that runs on our continuous integration server and hadn&amp;rsquo;t noticed for a while during which time we&amp;rsquo;d accumulated other local changes.</description>
    </item>
    
    <item>
      <title>Leadership and software teams: Some thoughts</title>
      <link>https://markhneedham.com/blog/2010/06/22/leadership-and-software-teams-some-thoughts/</link>
      <pubDate>Tue, 22 Jun 2010 22:51:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/22/leadership-and-software-teams-some-thoughts/</guid>
      <description>Roy Osherove wrote a post about a month ago describing the different maturity levels of software teamsand the strategies that he uses when leading each of these which I found quite interesting.
He describes the following states of maturity for a team:
Later on in the article he goes on to describe the best approach as a leader of each of these types of team:
My experience over the last few years is that a lot of tech leads seem to start off with the assumption that their team is a chaotic one and that they need to make every decision if a project is going to be successful.</description>
    </item>
    
    <item>
      <title>C#: StackTrace</title>
      <link>https://markhneedham.com/blog/2010/06/22/c-stacktrace/</link>
      <pubDate>Tue, 22 Jun 2010 22:27:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/22/c-stacktrace/</guid>
      <description>Dermotand I were doing a bit of work on a mini testing DSL that we&amp;rsquo;ve been writing to try and make some of our interaction tests a bit more explicit and one of the things that we wanted to do was find out which method was being called on one of our collaborators.
We have a stub collaborator which gets injected into our system under test. It looks roughly like this:</description>
    </item>
    
    <item>
      <title>iPad: First thoughts</title>
      <link>https://markhneedham.com/blog/2010/06/21/ipad-first-thoughts/</link>
      <pubDate>Mon, 21 Jun 2010 21:30:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/21/ipad-first-thoughts/</guid>
      <description>I&amp;rsquo;ve had the iPad for about a month now and since my colleagues Martin Fowler, Neal Fordand Chris Stevensonhave already previously written about their experiences with it I thought I&amp;rsquo;d share the way I&amp;rsquo;m using it as well.
I follow a lot of people involved in software development on twitter and come across a lot of interesting articles/blogs that people link to or write. A lot of the time I don&amp;rsquo;t really want to read those posts when I come across them - it would be much better if I could just save them to read later on.</description>
    </item>
    
    <item>
      <title>Coding: Controlled Technical Debt</title>
      <link>https://markhneedham.com/blog/2010/06/20/coding-controlled-technical-debt/</link>
      <pubDate>Sun, 20 Jun 2010 22:37:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/20/coding-controlled-technical-debt/</guid>
      <description>A couple of months ago I wrote about an approach to storiesthat Christian has been encouraging on our project whereby we slim stories down to allow us to deliver the core functionality of the application as quickly as possible.
In our case we had a requirement to setup a range of different parameters used to lookup reference data used in the different calculations that we have in our application.
At the time we created an interface that the rest of the application would interact with so that we could easily substitute the real version in when we needed to:</description>
    </item>
    
    <item>
      <title>Git/Mercurial: Pushing regularly</title>
      <link>https://markhneedham.com/blog/2010/06/19/gitmercurial-pushing-regularly/</link>
      <pubDate>Sat, 19 Jun 2010 22:14:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/19/gitmercurial-pushing-regularly/</guid>
      <description>I was reading a recent blog post by Gabriel Schenker where he discusses how his team is making use of Gitand about half way through he says the following:
We&amp;rsquo;ve been using Mercurial on the project I&amp;rsquo;m currently working on over the past few months and although it&amp;rsquo;s a similar tool we&amp;rsquo;ve been following a different approach.
We&amp;rsquo;ve got it setup the same way we would setup Subversion:
We&amp;rsquo;ve been trying to push to the central repository as frequently as possible, just as we would if we were using Subversion.</description>
    </item>
    
    <item>
      <title>Slack time</title>
      <link>https://markhneedham.com/blog/2010/06/18/slack-time/</link>
      <pubDate>Fri, 18 Jun 2010 17:36:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/18/slack-time/</guid>
      <description>Ken Schwaber recently wrote a blog post where he compared the differences between the kanban, lean and scrum approaches to software developmentand although I haven&amp;rsquo;t had the same experiences as he has with the first two, one interesting thing he implies is that with a scrum approach we have slack time built in.
The project that I&amp;rsquo;m currently working on has switched emphasis from being in pure delivery mode into a combination of delivery and handover and it&amp;rsquo;s been quite noticeable how much more slack we have in the system as a result.</description>
    </item>
    
    <item>
      <title>Using real life metaphors</title>
      <link>https://markhneedham.com/blog/2010/06/17/using-real-life-metaphors/</link>
      <pubDate>Thu, 17 Jun 2010 07:00:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/17/using-real-life-metaphors/</guid>
      <description>My colleague Dermot Kilroyattended the DDD 2010 Excangein London last week and one of the ideas that he&amp;rsquo;s been sharing with us from that is that of thinking how the user would solve a given problem without a technological solution i.e. how was something done before computers existed.
This encourages us to take a bigger picture view and can actually lead to a much simpler solution than we&amp;rsquo;d otherwise come up with.</description>
    </item>
    
    <item>
      <title>Incremental Refactoring: Create factory method</title>
      <link>https://markhneedham.com/blog/2010/06/17/incremental-refactoring-create-factory-method/</link>
      <pubDate>Thu, 17 Jun 2010 00:43:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/17/incremental-refactoring-create-factory-method/</guid>
      <description>Dermotand I spent a bit of time today refactoring some code where the logic had ended up in the wrong place.
The code originally looked a bit like this:
public class LookupService { public LookUp Find(UserData userData) { var param1 = GetParam1From(userData); var param2 = GetParam2From(userData); var param3 = GetParam3From(userData); var lookupKey = new LookUpKey(param1, param2, param3); return lookupRepository.Find(lookupKey); } } public class LookUpKey { private readonly string param1; private readonly string param2; private readonly string param3; public LookUpKey(string param1, string param2, string param3) { this.</description>
    </item>
    
    <item>
      <title>Fluent NHibernate and the 2nd level cache</title>
      <link>https://markhneedham.com/blog/2010/06/16/fluent-nhibernate-and-the-2nd-level-cache/</link>
      <pubDate>Wed, 16 Jun 2010 00:07:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/16/fluent-nhibernate-and-the-2nd-level-cache/</guid>
      <description>We&amp;rsquo;ve been trying to cache some objects using NHibernate&amp;rsquo;s second level cache which always proves to be a trickier task than I remember it being the previous time!
We&amp;rsquo;re storing some reference data in the database and then using LINQ to NHibernate to query for the specific row that we want based on some user entered criteria.
We can cache that query by calling &amp;lsquo;SetCacheable&amp;rsquo; on the &amp;lsquo;QueryOptions&amp;rsquo; property of our query:</description>
    </item>
    
    <item>
      <title>Fluent NHibernate: Seeing the mapping files generated</title>
      <link>https://markhneedham.com/blog/2010/06/15/fluent-nhibernate-seeing-the-mapping-files-generated/</link>
      <pubDate>Tue, 15 Jun 2010 23:15:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/15/fluent-nhibernate-seeing-the-mapping-files-generated/</guid>
      <description>We&amp;rsquo;ve been fiddling around with Fluent NHibernatea bit over the last couple of days and one of the things that we wanted to do was output the NHibernate mapping files being generated so we could see if they were as expected.
I couldn&amp;rsquo;t figure out how to do it but thanks to the help of James Gregory, Andrew Bullockand Matthew Erbson twitter this is the code that you need in order to do that:</description>
    </item>
    
    <item>
      <title>TDD: Driving from the assertion up</title>
      <link>https://markhneedham.com/blog/2010/06/14/tdd-driving-from-the-assertion-up/</link>
      <pubDate>Mon, 14 Jun 2010 22:46:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/14/tdd-driving-from-the-assertion-up/</guid>
      <description>About a year ago I wrote a post about a book club we ran in Sydney covering &amp;lsquo;The readability of tests&#39;from Steve Freeman and Nat Pryce&amp;rsquo;s book in which they suggest that their preferred way of writing tests is to drive them from the assertion up:
Although we stick to a canonical format for test code, we don&amp;rsquo;t necessarily write tests from top to bottom. What we often do is: write the test name, which helps us decide what we want to achieve; write the call to the target code, which is the entry point for the feature; write the expectations and assertions, so we know what effects the feature should have; and, write the setup and teardown to define the context for the test.</description>
    </item>
    
    <item>
      <title>C#: A failed attempt at F#-ish pattern matching</title>
      <link>https://markhneedham.com/blog/2010/06/13/c-a-failed-attempt-at-f-ish-pattern-matching/</link>
      <pubDate>Sun, 13 Jun 2010 22:35:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/13/c-a-failed-attempt-at-f-ish-pattern-matching/</guid>
      <description>A few weeks ago we had some C# code around calcuationswhich had got a bit too imperative in nature.
The code looked roughly like this:
public class ACalculator { public double CalculateFrom(UserData userData) { if(userData.Factor1 == Factor1.Option1) { return 1.0; } if(userData.Factor2 == Factor2.Option3) { return 2.0; } if(userData.Factor3 == Factor3.Option2) { return 3.0 } return 0.0; } } I think there should be a more object oriented way to write this code whereby we push some of the logic onto the &amp;lsquo;UserData&amp;rsquo; object but it struck me that it reads a little bit like pattern matching code you might see in F#.</description>
    </item>
    
    <item>
      <title>The Refactoring Dilemma</title>
      <link>https://markhneedham.com/blog/2010/06/13/the-refactoring-dilemma/</link>
      <pubDate>Sun, 13 Jun 2010 13:37:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/13/the-refactoring-dilemma/</guid>
      <description>On several of the projects that I&amp;rsquo;ve worked on over the last couple of years we&amp;rsquo;ve seen the following situation evolve:
In the situations I describe the refactorings could have been done incrementally but doing that would take longer than continuing with the original approach and also leave the code in an inconsistent state.
I think the reason this situation evolves consistently in this manner is because although we talk about writing maintainable code, delivery is often considered more important.</description>
    </item>
    
    <item>
      <title>Retrospectives: Some thoughts</title>
      <link>https://markhneedham.com/blog/2010/06/10/retrospectives-some-thoughts/</link>
      <pubDate>Thu, 10 Jun 2010 07:22:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/10/retrospectives-some-thoughts/</guid>
      <description>I&amp;rsquo;ve worked on two different teams this year which had quite different approaches to retrospectives.
In the first team we had a retrospective at the beginning of every iterationi.e. once every two weeks and in the second team we tried out the idea of having a rolling retrospectivei.e. we put up potential retrospective items on the wall and when there were enough of those we discussed them in the standup.</description>
    </item>
    
    <item>
      <title>XP2010: General thoughts</title>
      <link>https://markhneedham.com/blog/2010/06/09/xp2010-general-thoughts/</link>
      <pubDate>Wed, 09 Jun 2010 15:29:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/09/xp2010-general-thoughts/</guid>
      <description>I had the chance to attend the XP2010 conferencein Trondheim, Norway for a couple of days last week as I was presenting a lightening talk based on a blog post I wrote last year titled &amp;lsquo;Tough projects and the Kubler Ross Grief Cycle&amp;rsquo;.
It was interesting to see the way another conference was organised as the only other conference I&amp;rsquo;ve attended was QCon which is a much more technical conference.</description>
    </item>
    
    <item>
      <title>XP2010: Coding Dojo Open Space</title>
      <link>https://markhneedham.com/blog/2010/06/04/xp2010-coding-dojo-open-space/</link>
      <pubDate>Fri, 04 Jun 2010 21:05:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/04/xp2010-coding-dojo-open-space/</guid>
      <description>I attended an open space hosted by Emily Bacheat the XP2010 conference in Trondheim, Norway with several other people who have been organising coding dojos around the world.
It was really interesting to hear about some of the different approaches that people have taken and how a lot of the issues we had with the one we used to run in Sydneywere the same as what others had experienced.
These were some of the things that I took from the session:</description>
    </item>
    
    <item>
      <title>Ask for forgiveness, not for permission</title>
      <link>https://markhneedham.com/blog/2010/06/04/ask-for-forgiveness-not-for-permission/</link>
      <pubDate>Fri, 04 Jun 2010 21:03:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/06/04/ask-for-forgiveness-not-for-permission/</guid>
      <description>I gave a presentation at our ThoughtWorks Brazil office in Porto Alegre last way on some of the things that I&amp;rsquo;ve learned while working at ThoughtWorks and the first point I made was that it was better to &amp;lsquo;ask for forgiveness, not for permission&amp;rsquo;.
This was something that was taught to me a few years ago and the idea behind this is that if there&amp;rsquo;s some idea we want to try out it makes much more sense to start trying it now and then we can always apologise later on if someone has a problem with us doing that.</description>
    </item>
    
    <item>
      <title>C#: Using a dictionary instead of if statements</title>
      <link>https://markhneedham.com/blog/2010/05/30/c-using-a-dictionary-instead-of-if-statements/</link>
      <pubDate>Sun, 30 May 2010 23:13:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/30/c-using-a-dictionary-instead-of-if-statements/</guid>
      <description>A problem we had to solve on my current project is how to handle form submission where the user can click on a different button depending whether they want to go to the previous page, save the form or go to the next page.
An imperative approach to this problem might yield code similar to the following:
public class SomeController { public ActionResult TheAction(string whichButton, UserData userData) { if(whichButton == &amp;#34;Back&amp;#34;) { // do the back action 	} else if(whichButton == &amp;#34;Next&amp;#34;) { // do the next action 	} else if(whichButton == &amp;#34;Save&amp;#34;) { // do the save action 	} throw Exception(&amp;#34;&amp;#34;); } } A neat design idea which my colleague Dermot Kilroyintroduced on our project is the idea of using a dictionary to map to the different actions instead of using if statements.</description>
    </item>
    
    <item>
      <title>Evolving a design: Some thoughts</title>
      <link>https://markhneedham.com/blog/2010/05/13/evolving-a-design-some-thoughts/</link>
      <pubDate>Thu, 13 May 2010 07:00:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/13/evolving-a-design-some-thoughts/</guid>
      <description>Phil wrote an interesting post recently about the Ubuntu decision making process with respect to designand suggested that we should look to follow something similar on agile software development teams.
The Ubuntu design process basically comes down to this:
Phil suggests the following:
What that means is that, every time a design decision has to be made, the decision must come from an individual or very small group of people that have the skills and experience required –excluding coaching and teaching, of course.</description>
    </item>
    
    <item>
      <title>Agile: Chasing a points total</title>
      <link>https://markhneedham.com/blog/2010/05/11/agile-chasing-a-points-total/</link>
      <pubDate>Tue, 11 May 2010 22:28:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/11/agile-chasing-a-points-total/</guid>
      <description>I&amp;rsquo;ve previously written about the danger of using velocity as a goalbut on almost every project I&amp;rsquo;ve worked on at some stage we do actually end up chasing a points total.
Something I find quite interesting towards the end of an iteration is that if there is a choice of two stories to pick up then the project manager will nearly always press for one which can be completed within the remaining time in order to get the points total for that iteration higher.</description>
    </item>
    
    <item>
      <title>F#: Tacit programming</title>
      <link>https://markhneedham.com/blog/2010/05/10/f-tacit-programming/</link>
      <pubDate>Mon, 10 May 2010 23:24:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/10/f-tacit-programming/</guid>
      <description>I recently came across the idea of tacit programmingwhich is described as such:
The simplicity behind this idea allows its use on several programming languages, such as J programming language and APL and especially in stack or concatenative languages, such as PostScript, Forth, Joy or Factor. Outside of the APL and J communities, tacit programming is referred to as point-free style.
I realised that this approach quite closely describes what I&amp;rsquo;ve been trying to drive towards in my most recent playing around with F# and it&amp;rsquo;s actually quite fun trying to drive any intermediate state or storing of data in variables out of a program and just relying completely on function composition and higher order functions.</description>
    </item>
    
    <item>
      <title>Learnings from my first project of 2010</title>
      <link>https://markhneedham.com/blog/2010/05/09/learnings-from-my-first-project-of-2010/</link>
      <pubDate>Sun, 09 May 2010 22:17:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/09/learnings-from-my-first-project-of-2010/</guid>
      <description>Pat Kua recently wrote a retrospective of his time working at ThoughtWorksand since I recently finished the first project I&amp;rsquo;ve worked on in 2010 I thought it would be interesting to have a look at what I&amp;rsquo;d learned and observed while working on it.
I initially felt that this would be a problem but the code was still pretty easy to changeand everyone on the team was able to understand it without any problem so that seemed to outweigh any other concerns.</description>
    </item>
    
    <item>
      <title>Coding: Paying attention</title>
      <link>https://markhneedham.com/blog/2010/05/09/coding-paying-attention/</link>
      <pubDate>Sun, 09 May 2010 13:04:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/09/coding-paying-attention/</guid>
      <description>Jeremy Millertweeted earlier in the week about the dangers of using an auto mocking containerand how it can encourage sloppy design:
I haven&amp;rsquo;t used an auto mocking container but it seems to me that although that type of tool might be useful for reducing the amount of code we have to write in our tests it also hides the actual problem that we have - an object has too many dependencies.</description>
    </item>
    
    <item>
      <title>F#: My current coding approach</title>
      <link>https://markhneedham.com/blog/2010/05/06/f-my-current-coding-approach/</link>
      <pubDate>Thu, 06 May 2010 23:36:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/06/f-my-current-coding-approach/</guid>
      <description>I spent a bit of time over the weekend coding a simple generic builder for test objectsin F# and I noticed that although there were similarity with the ways I drive code in C# or Java my approach didn&amp;rsquo;t seem to be exactly the same.
I&amp;rsquo;ve previously written about the importance of getting quick feedbackwhen programming and how I believe that this can often be achieved faster by using the REPL rather than unit testing.</description>
    </item>
    
    <item>
      <title>Consistency in the code base and incremental refactoring</title>
      <link>https://markhneedham.com/blog/2010/05/05/consistency-in-the-code-base-and-incremental-refactoring/</link>
      <pubDate>Wed, 05 May 2010 22:34:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/05/consistency-in-the-code-base-and-incremental-refactoring/</guid>
      <description>I wrote a post a while ago about keeping consistency in the code basewhere I covered some of the reasons that you might want to rewrite parts of a code base and the potential impact of those changes but an interesting side to this discussion which I didn&amp;rsquo;t cover that much but which seems to play a big role is the role of incremental refactoring.
In our code base we recently realised that the naming of the fields in some parts of a form don&amp;rsquo;t really make sense and I wanted to start naming new fields with the new naming style and then go back and change the existing ones incrementally when it was a good time to do so.</description>
    </item>
    
    <item>
      <title>F#: The Kestrel Revisited</title>
      <link>https://markhneedham.com/blog/2010/05/04/f-the-kestrel-revisited/</link>
      <pubDate>Tue, 04 May 2010 18:36:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/04/f-the-kestrel-revisited/</guid>
      <description>A couple of days I wrote about a &amp;lsquo;returning&amp;rsquo; functionthat I&amp;rsquo;d written to simplify a bit of F# code that I&amp;rsquo;ve been working on.
It&amp;rsquo;s defined like so:
let returning t f = f(t); t And can then be used like this:
let build (t:Type) = returning (Activator.CreateInstance(t)) (fun t -&amp;gt; t.GetType().GetProperties() |&amp;gt; Array.iter (fun p -&amp;gt; p.SetValue(t, createValueFor p, null))) While I quite like this function it didn&amp;rsquo;t quite feel like idiomatic F# to me.</description>
    </item>
    
    <item>
      <title>Coding: Make the mutation obvious</title>
      <link>https://markhneedham.com/blog/2010/05/04/coding-make-the-mutation-obvious/</link>
      <pubDate>Tue, 04 May 2010 18:32:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/04/coding-make-the-mutation-obvious/</guid>
      <description>Although I&amp;rsquo;m generally quite opposed to coding approaches whereby we mutate objects, sometimes the way a framework is designed seems to make this a preferable option.
We came across a situation like this last week when we wanted to hydrate an object with data coming back from the browser.
The signature of the action in question looked like this:
public class SomeController { public ActionResult SomeAction(string id, UserData userData) { } We were able to automatically bind most of the values onto &amp;lsquo;UserData&amp;rsquo; except for the &amp;lsquo;id&amp;rsquo; which was coming in from the URL.</description>
    </item>
    
    <item>
      <title>Coding: The Kestrel</title>
      <link>https://markhneedham.com/blog/2010/05/03/coding-the-kestrel/</link>
      <pubDate>Mon, 03 May 2010 00:28:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/05/03/coding-the-kestrel/</guid>
      <description>Reg Braithwaite has a cool series of posts where he covers the different combinatorsfrom Raymond Smullyan&amp;rsquo;s &amp;lsquo;To Mock a Mockingbird&amp;rsquo; book and one of my favourites is the &#39;Kestrel&amp;rsquo; or &amp;lsquo;K Combinator&amp;rsquo; which describes a function that returns a constant function.
It&amp;rsquo;s described like so:
Kxy = x The Kestrel function would take in 2 arguments and return the value of the first one. The second argument would probably be a function that takes in the first argument and then performs some side effects with that value.</description>
    </item>
    
    <item>
      <title>Coding: Generalising too early</title>
      <link>https://markhneedham.com/blog/2010/04/30/coding-generalising-too-early/</link>
      <pubDate>Fri, 30 Apr 2010 07:12:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/30/coding-generalising-too-early/</guid>
      <description>I&amp;rsquo;ve previously written about the value of addingduplicationto code before removing it and we had an interesting situation this week where we failed to do that and ended up generalising a piece of code too early to the point where it actually didn&amp;rsquo;t solve the problem anymore.
The problem we were trying to solve was around the validation of some dependent fields and to start with we had this requirement:</description>
    </item>
    
    <item>
      <title>QTB: thetrainline.com - &#39;Scale at speed&#39;</title>
      <link>https://markhneedham.com/blog/2010/04/29/qtb-thetrainline-com-scale-at-speed/</link>
      <pubDate>Thu, 29 Apr 2010 23:51:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/29/qtb-thetrainline-com-scale-at-speed/</guid>
      <description>About 18 months on from the first ThoughtWorks QTB that I saw about offshoring, on Wednesday night I attended the latest QTB in Manchester titled &amp;lsquo;thetrainline.com - Scale at speed&amp;rsquo;.
The presenters were thetrainline.com&amp;rsquo;s CIO David Jack and the Managing Director of ThoughtWorks India, Mahesh Baxi.
They took us on the journey that thetrainline.com have taken while working with ThoughtWorks to re-architect part of their system to allow them to quickly deliver new functionality on the 2,500 websites that their portal technology powers.</description>
    </item>
    
    <item>
      <title>Listening to your tests: An example</title>
      <link>https://markhneedham.com/blog/2010/04/27/listening-to-your-tests-an-example/</link>
      <pubDate>Tue, 27 Apr 2010 22:34:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/27/listening-to-your-tests-an-example/</guid>
      <description>I was recently reading a blog post by Esko Luontola where he talks about the direct and indirect effects of TDDand one particularly interesting point he makes is that driving our code with a TDD approach helps to amplify the problems caused by writing bad code.
This is something Steve Freeman and Nat Pryce talk about in their bookand we recently had an example of this which really stemmed from a failure to drive this particular piece of code from the outside in.</description>
    </item>
    
    <item>
      <title>Small step refactoring: Overload constructor</title>
      <link>https://markhneedham.com/blog/2010/04/25/small-step-refactoring-overload-constructor/</link>
      <pubDate>Sun, 25 Apr 2010 22:48:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/25/small-step-refactoring-overload-constructor/</guid>
      <description>I&amp;rsquo;ve previously written about some approaches that I&amp;rsquo;ve been taught with respect to taking small stepswhen refactoring codeand another approach which a couple of colleagues have been using recently is the idea of overloading the constructorwhen refactoring objects.
On a couple of occasions we&amp;rsquo;ve been trying to completely change the way an object was designed and changing the current constructor would mean that we&amp;rsquo;d have to change all the tests against that object before checking if the new design was actually going to work or not.</description>
    </item>
    
    <item>
      <title>Iron Ruby: &#39;unitialized constant...NameError&#39;</title>
      <link>https://markhneedham.com/blog/2010/04/25/iron-ruby-unitialized-constant-nameerror/</link>
      <pubDate>Sun, 25 Apr 2010 17:27:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/25/iron-ruby-unitialized-constant-nameerror/</guid>
      <description>I&amp;rsquo;ve been playing around a bit with Iron Ruby and cucumber following Rupak Ganguly&amp;rsquo;s tutorialand I tried to change the .NET example provided in the 0.4.2 release of cucumberto call a class wrapping Castle&amp;rsquo;s WindsorContainer.
The feature file now looks like this:
# &amp;#39;MyAssembly.dll&amp;#39; is in the &amp;#39;C:/Ruby/lib/ruby/gems/1.8/gems/cucumber-0.6.4/examples/cs&amp;#39; folder require &amp;#39;MyAssembly&amp;#39; ... Before do @container = Our::Namespace::OurContainer.new.Container end The class is defined roughly like this:
public class OurContainer : IContainerAccessor { private WindsorContainer container = new WindsorContainer(); public SwintonContainer() { container.</description>
    </item>
    
    <item>
      <title>Haskell: parse error on input `=&#39;</title>
      <link>https://markhneedham.com/blog/2010/04/22/haskell-parse-error-on-input/</link>
      <pubDate>Thu, 22 Apr 2010 23:35:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/22/haskell-parse-error-on-input/</guid>
      <description>I&amp;rsquo;ve been trying to follow the &amp;lsquo;Monads for Java/C++ programmers&amp;rsquo; post in ghci and getting the following type of error when trying out the code snippets:
Prelude&amp;gt; a = 3 &amp;lt;interactive&amp;gt;:1:2: parse error on input `=&amp;#39; I figured there must be something wrong with my installation of the compiler since I was copying and pasting the example across and having this problem. Having reinstalled that, however, I still had the same problem.</description>
    </item>
    
    <item>
      <title>Lured in by the complexity</title>
      <link>https://markhneedham.com/blog/2010/04/21/lured-in-by-the-complexity/</link>
      <pubDate>Wed, 21 Apr 2010 07:21:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/21/lured-in-by-the-complexity/</guid>
      <description>We recently ran into an interesting problem when running the website we&amp;rsquo;re building on our &amp;lsquo;user replica machine&amp;rsquo; where you can access the application via a web browser running on Citrix.
The problem we were having was that the result of a post redirect get request that we were making via the jQuery Form pluginwas failing to update the fragment of the page correctly. It looked like it was replacing it with the original HTML.</description>
    </item>
    
    <item>
      <title>Functional C#: An imperative to declarative example</title>
      <link>https://markhneedham.com/blog/2010/04/20/functional-c-an-imperative-to-declarative-example/</link>
      <pubDate>Tue, 20 Apr 2010 07:08:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/20/functional-c-an-imperative-to-declarative-example/</guid>
      <description>I wrote previously about how we&amp;rsquo;ve been working on some calculationson my current project and one thing we&amp;rsquo;ve been trying to do is write this code in a fairly declarative way.
Since we&amp;rsquo;ve been test driving the code it initially started off being quite imperative and looked a bit like this:
public class TheCalculator { ... public double CalculateFrom(UserData userData) { return Calculation1(userData) + Calculation2(userData) + Calculation3(userData); } public double Calculation1(UserData userData) { // do calculation stuff here 	} public double Calculation2(UserData userData) { // do calculation stuff here 	} .</description>
    </item>
    
    <item>
      <title>Coding: Another outside in example</title>
      <link>https://markhneedham.com/blog/2010/04/18/coding-another-outside-in-example/</link>
      <pubDate>Sun, 18 Apr 2010 22:46:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/18/coding-another-outside-in-example/</guid>
      <description>I&amp;rsquo;ve written before about my thoughts on outside in developmentand we came across another example last week where we made our life difficult by not initially following this approach.
The rough design of what we were working on looked like this:
My pair and I were working on the code to do the calculations and we deliberately chose not to drive the functionality from the UI because the other pair were reworking all our validation code and we didn&amp;rsquo;t want to step on each others toes.</description>
    </item>
    
    <item>
      <title>Late integration: Some thoughts</title>
      <link>https://markhneedham.com/blog/2010/04/18/late-integration-some-thoughts/</link>
      <pubDate>Sun, 18 Apr 2010 21:19:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/18/late-integration-some-thoughts/</guid>
      <description>John Daniels has an interesting post summarising GOOSgaggle, an event run a few weeks ago where people met up to talk about the ideas in &amp;lsquo;Growing Object Oriented Software, Guided by Tests&amp;rsquo;.
It&amp;rsquo;s an interesting post and towards the end he states the following:
My first thought on reading this was that it seems like a reasonable thing to say but what if we can&amp;rsquo;t do anything about the fact that it&amp;rsquo;s blocked?</description>
    </item>
    
    <item>
      <title>Functional C#: Using custom delegates to encapsulate Funcs</title>
      <link>https://markhneedham.com/blog/2010/04/17/functional-c-using-custom-delegates-to-encapsulate-funcs/</link>
      <pubDate>Sat, 17 Apr 2010 12:16:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/17/functional-c-using-custom-delegates-to-encapsulate-funcs/</guid>
      <description>One of the problems that I&amp;rsquo;ve frequently run into when writing C# code in a more functional way is that we can often end up with &amp;lsquo;Funcs&amp;rsquo; all over the place which don&amp;rsquo;t really describe what concept they&amp;rsquo;re encapsulating.
We had some code similar to this where it wasn&amp;rsquo;t entirely obvious what the Func being stored in the dictionary was actually doing:
public class Calculator { private Dictionary&amp;lt;string, Func&amp;lt;double, double, double&amp;gt;&amp;gt; lookups = new Dictionary&amp;lt;string, Func&amp;lt;double, double, double&amp;gt;&amp;gt;(); public Blah() { lookups.</description>
    </item>
    
    <item>
      <title>C#: Java-ish enums</title>
      <link>https://markhneedham.com/blog/2010/04/17/c-java-ish-enums/</link>
      <pubDate>Sat, 17 Apr 2010 10:33:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/17/c-java-ish-enums/</guid>
      <description>We&amp;rsquo;ve been writing quite a bit of code on my current project trying to encapsulate user selected values from drop down menus where we then want to go and look up something in another system based on the value that they select.
Essentially we have the need for some of the things that a Java Enum would give us but which a C# one doesn&amp;rsquo;t!
Right now we have several classes similar to the following in our code base to achieve this:</description>
    </item>
    
    <item>
      <title>hg: Reverting committed changes</title>
      <link>https://markhneedham.com/blog/2010/04/15/hg-reverting-committed-changes/</link>
      <pubDate>Thu, 15 Apr 2010 22:35:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/15/hg-reverting-committed-changes/</guid>
      <description>Continuing with our learning with Mercurial, yesterday we wanted to revert a couple of change sets that we had previously committed and go back to an old version of the code and continue working from there.
As an example, say we wanted to go back to Revision 1 and had the following changes committed:
Revision 3 Revision 2 Revision 1 Revision 0 My original thought was that we could merge revision 1 with the current tip:</description>
    </item>
    
    <item>
      <title>Agile: Slimming down stories</title>
      <link>https://markhneedham.com/blog/2010/04/14/agile-slimming-down-stories/</link>
      <pubDate>Wed, 14 Apr 2010 22:53:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/14/agile-slimming-down-stories/</guid>
      <description>On the project I&amp;rsquo;m currently working on we have several stories around writing the code that does various different calculations based on user input and then shows the results on the screen.
The original assumption on these stories was that we would be looking up the data of the business rules from a local database. The data would be copied across from a central database into that one for this project.</description>
    </item>
    
    <item>
      <title>Maverick: Book review</title>
      <link>https://markhneedham.com/blog/2010/04/14/maverick-book-review/</link>
      <pubDate>Wed, 14 Apr 2010 07:23:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/14/maverick-book-review/</guid>
      <description>My colleagues Frankieand Danilohave been recommending &amp;lsquo;Maverick&amp;rsquo; to me for a long time and I finally got around to reading it.
In this book Ricardo Semler, the CEO of Semco, tells the story of the company and how he helped evolved the organisation into one which is more employee led and embraces ideas such as open &amp;amp; self set salaries while encouraging civil obedience in the workforce as a necessity to alert the organisation to its problems.</description>
    </item>
    
    <item>
      <title>F#: The &#39;defaultArg&#39; function</title>
      <link>https://markhneedham.com/blog/2010/04/12/f-the-defaultarg-function/</link>
      <pubDate>Mon, 12 Apr 2010 18:21:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/12/f-the-defaultarg-function/</guid>
      <description>While reading through an old blog post by Matthew Podwysocki about writing F# code in a functional rather than imperative wayI came across the &amp;lsquo;defaultArg&amp;rsquo; function which I haven&amp;rsquo;t seen previously.
It&amp;rsquo;s quite a simple function that we can use when we want to set a default value if an option type has a value of &amp;lsquo;None&amp;rsquo;:
The type signature is as follows:
&amp;gt; defaultArg;; val it : (&amp;#39;a option -&amp;gt; &amp;#39;a -&amp;gt; &amp;#39;a) = &amp;lt;fun:clo@0&amp;gt; And the definition is relatively simple:</description>
    </item>
    
    <item>
      <title>Mercurial: Early thoughts</title>
      <link>https://markhneedham.com/blog/2010/04/10/mercurial-early-thoughts/</link>
      <pubDate>Sat, 10 Apr 2010 11:43:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/10/mercurial-early-thoughts/</guid>
      <description>We&amp;rsquo;re using Mercurialas our source control system on the project I&amp;rsquo;m working on at the moment and since I&amp;rsquo;ve not yet used a distributed source control system on a team I thought it&amp;rsquo;d be interesting to note some of my initial thoughts.
One of the neat things about having a local repository and a central one is that you can check in lots of times locally and then push those changes to the central repository when you want everyone else to get the changes that you&amp;rsquo;ve made.</description>
    </item>
    
    <item>
      <title>Coding: Maybe vs Null Object patterns</title>
      <link>https://markhneedham.com/blog/2010/04/10/coding-maybe-vs-null-object-patterns/</link>
      <pubDate>Sat, 10 Apr 2010 11:21:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/10/coding-maybe-vs-null-object-patterns/</guid>
      <description>On the project I&amp;rsquo;m currently working on my colleague Christian Blundenhas introduced a version of the Maybetype into the code base, a concept that originally derives from the world of functional programming.
The code looks a bit like this:
public interface Maybe&amp;lt;T&amp;gt; { bool HasValue(); T Value(); }	public class Some&amp;lt;T&amp;gt; : Maybe&amp;lt;T&amp;gt; { private readonly T t; public Some(T t) { this.t = t; } public bool HasValue() {	return true; } public T Value() {	return t; }	} public class None&amp;lt;T&amp;gt; : Maybe&amp;lt;T&amp;gt; { public bool HasValue() {	return false; } public T Value() {	throw new NotImplementedException(); }	} We would then use it in the code like this:</description>
    </item>
    
    <item>
      <title>Coding: FindOrCreateUser and similar methods</title>
      <link>https://markhneedham.com/blog/2010/04/09/coding-findorcreateuser-and-similar-methods/</link>
      <pubDate>Fri, 09 Apr 2010 07:09:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/09/coding-findorcreateuser-and-similar-methods/</guid>
      <description>One of the general guidelines that I like to follow when writing methods is trying to ensure that it&amp;rsquo;s only doing one thing but on several recent projects I&amp;rsquo;ve noticed us breaking this guideline and it feels like the right thing to do.
The method in question typically takes in some user details, looks up that user in some data store and then returning it if there is an existing user and creating a new user if not.</description>
    </item>
    
    <item>
      <title>Velocity as a goal </title>
      <link>https://markhneedham.com/blog/2010/04/07/velocity-as-a-goal/</link>
      <pubDate>Wed, 07 Apr 2010 23:36:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/07/velocity-as-a-goal/</guid>
      <description>Grant Joung wrote a post a while ago about velocity goalsand whether they&amp;rsquo;re a good or bad idea, a topic which seems to come up from time to time on agile teams.
My colleague Danilo Sato previously wrote about the dangers of using velocity as a performance measurebecause it&amp;rsquo;s something that&amp;rsquo;s directly within our control and can therefore be gamed:
Danilo suggests that we should look to use metrics which are outside of our immediate control but which we can score high on if we focus on doing a good job.</description>
    </item>
    
    <item>
      <title>LDNUG: Mixing functional and object oriented approaches to programming in C#</title>
      <link>https://markhneedham.com/blog/2010/04/02/ldnug-mixing-functional-and-object-oriented-approaches-to-programming-in-c/</link>
      <pubDate>Fri, 02 Apr 2010 23:11:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/02/ldnug-mixing-functional-and-object-oriented-approaches-to-programming-in-c/</guid>
      <description>On Wednesday evening my colleague Mike Waggand I presented a variation of a talk I originally presented at Developer Developer Developer 8titled &amp;lsquo;Mixing functional and object oriented approaches to programming in C#&amp;rsquo; to the London .NET User Group at Skillsmatter.
The slides from the talk are below and there is a video of the talk on the Skillsmatter website.
These were some of the lessons I learned from this version of the talk:</description>
    </item>
    
    <item>
      <title>How I Learned to Let My Workers Lead</title>
      <link>https://markhneedham.com/blog/2010/04/01/how-i-learned-to-let-my-workers-lead/</link>
      <pubDate>Thu, 01 Apr 2010 09:38:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/04/01/how-i-learned-to-let-my-workers-lead/</guid>
      <description>I recently came across a really interesting article written by Ralph Stayer titled &amp;lsquo;How I Learned to Let My Workers Lead&amp;rsquo; about his experiences at Johnsonville Foods.
It describes the way that he was able to help change the company culture from one where he made all the decisions and took all responsibility to one where everyone in the company was involved in decision making, resulting in a more successful organisation.</description>
    </item>
    
    <item>
      <title>Saved from an episode of bear shaving</title>
      <link>https://markhneedham.com/blog/2010/03/30/saved-from-an-episode-of-bear-shaving/</link>
      <pubDate>Tue, 30 Mar 2010 06:57:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/30/saved-from-an-episode-of-bear-shaving/</guid>
      <description>As part of our continuous integration build we have a step in the build which tears down a Windows service, uninstalls it and then reinstalls it later on from the latest files checked into the repository.
One problem we&amp;rsquo;ve been having recently is that despite the fact it should already have been uninstalled a lock has been kept on the log4net dll in our build directory, a directory that we tear down as one of the next steps.</description>
    </item>
    
    <item>
      <title>Reading Code: underscore.js</title>
      <link>https://markhneedham.com/blog/2010/03/28/reading-code-underscore-js/</link>
      <pubDate>Sun, 28 Mar 2010 20:02:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/28/reading-code-underscore-js/</guid>
      <description>I&amp;rsquo;ve been spending a bit of time reading through the source code of underscore.js, a JavaScript library that provides lots of functional programming support which my colleague Dave Yeung pointed out to me after reading my post about building a small application with node.js.
I&amp;rsquo;m still getting used to the way that JavaScript libraries are written but these were some of the interesting things that I got from reading the code:</description>
    </item>
    
    <item>
      <title>Finding the assumptions in stories</title>
      <link>https://markhneedham.com/blog/2010/03/26/finding-the-assumptions-in-stories/</link>
      <pubDate>Fri, 26 Mar 2010 01:14:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/26/finding-the-assumptions-in-stories/</guid>
      <description>My colleague J.K. has written an interesting blog post where he describes a slightly different approach that he&amp;rsquo;s been taking to writing storiesto help move the business value in a story towards the beginning of the description and avoid detailing a solution in the &amp;lsquo;I want&amp;rsquo; section of the story.
To summarise, J.K.&amp;lsquo;s current approach involves moving from the traditional story format of:
As I... I want.. So that... To the following:</description>
    </item>
    
    <item>
      <title>Selenium, Firefox and HTTPS pages</title>
      <link>https://markhneedham.com/blog/2010/03/25/selenium-firefox-and-https-pages/</link>
      <pubDate>Thu, 25 Mar 2010 08:09:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/25/selenium-firefox-and-https-pages/</guid>
      <description>A fairly common scenario that we come across when building automated test suites using Selenium is the need to get past the security exception that Firefox pops up when you try to access a self signed HTTPS page.
Luckily there is quite a cool plugin for Firefox called &amp;lsquo;Remember Certificate Exception&amp;rsquo; which automatically clicks through the exception and allows the automated tests to keep running and not get stuck on the certificate exception page.</description>
    </item>
    
    <item>
      <title>TDD: Consistent test structure</title>
      <link>https://markhneedham.com/blog/2010/03/24/tdd-consistent-test-structure/</link>
      <pubDate>Wed, 24 Mar 2010 06:53:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/24/tdd-consistent-test-structure/</guid>
      <description>While pairing with Damianwe came across the fairly common situation where we&amp;rsquo;d written two different tests - one to handle the positive case and one the negative case.
While tidying up the tests after we&amp;rsquo;d got them passing we noticed that the test structure wasn&amp;rsquo;t exactly the same. The two tests looked a bit like this:
[Test] public void ShouldSetSomethingIfWeHaveAFoo() { var aFoo = FooBuilder.Build.WithBar(&amp;#34;bar&amp;#34;).WithBaz(&amp;#34;baz&amp;#34;).AFoo(); // some random setup 	// some stubs/expectations  var result = new Controller(.</description>
    </item>
    
    <item>
      <title>Defensive Programming and the UI</title>
      <link>https://markhneedham.com/blog/2010/03/22/defensive-programming-and-the-ui/</link>
      <pubDate>Mon, 22 Mar 2010 23:42:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/22/defensive-programming-and-the-ui/</guid>
      <description>A few weeks ago I was looking at quite an interesting bug in our system which initially didn&amp;rsquo;t seem possible.
On one of our screens we have some questions that the user fills in which read a bit like this:
i.e. you would only see the 2nd and 3rd questions on the screen if you answered yes to the first question.
However, if you went to the next page on the form having answered &amp;lsquo;Yes&amp;rsquo; to the first question and then came back to this page and changed your answer to the first question to &amp;lsquo;No&amp;rsquo; then when the data got submitted to the server the answers to the other two questions would still be posted.</description>
    </item>
    
    <item>
      <title>node.js: A little application with Twitter &amp; CouchDB</title>
      <link>https://markhneedham.com/blog/2010/03/21/node-js-a-little-application-with-twitter-couchdb/</link>
      <pubDate>Sun, 21 Mar 2010 22:13:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/21/node-js-a-little-application-with-twitter-couchdb/</guid>
      <description>I&amp;rsquo;ve been continuing to play around with node.jsand I thought it would be interesting to write a little application to poll Twitter every minute and save any new Tweets into a CouchDBdatabase.
I first played around with CouchDB in May last year and initially spent a lot of time trying to work out how to install it before coming across CouchDBXwhich gives you one click installation for Mac OS X.</description>
    </item>
    
    <item>
      <title>TDD: Expressive test names</title>
      <link>https://markhneedham.com/blog/2010/03/19/tdd-expressive-test-names/</link>
      <pubDate>Fri, 19 Mar 2010 18:06:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/19/tdd-expressive-test-names/</guid>
      <description>Towards the end of a post I wrote just over a year agoI suggested that I wasn&amp;rsquo;t really bothered about test names anymore because I could learn what I wanted from reading the test body.
Recently, however, I&amp;rsquo;ve come across several tests that I wrote previously which were testing the wrong thing and had such generic test names that it wasn&amp;rsquo;t obvious that it was happening.
The tests in question were around code which partially clones an object but doesn&amp;rsquo;t copy some fields for various reasons.</description>
    </item>
    
    <item>
      <title>Functional C#: Continuation Passing Style</title>
      <link>https://markhneedham.com/blog/2010/03/19/functional-c-continuation-passing-style/</link>
      <pubDate>Fri, 19 Mar 2010 07:48:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/19/functional-c-continuation-passing-style/</guid>
      <description>Partly inspired by my colleague Alex Scordellis&amp;rsquo; recent post about lambda passing styleI spent some time trying out a continuation passing stylestyle on some of the code in one of our controllers to see how different the code would look compared to its current top to bottom imperative style.
We had code similar to the following:
public ActionResult Submit(string id, FormCollection form) { var shoppingBasket = CreateShoppingBasketFrom(id, form); if (!validator.IsValid(shoppingBasket, ModelState)) { return RedirectToAction(&amp;#34;index&amp;#34;, &amp;#34;ShoppingBasket&amp;#34;, new { shoppingBasket.</description>
    </item>
    
    <item>
      <title>Essential and accidental complexity</title>
      <link>https://markhneedham.com/blog/2010/03/18/essential-and-accidental-complexity/</link>
      <pubDate>Thu, 18 Mar 2010 23:21:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/18/essential-and-accidental-complexity/</guid>
      <description>I&amp;rsquo;ve been reading Neal Ford&amp;rsquo;s series of articles on Evolutionary architecture and emergent designand in the one about &amp;lsquo;Investigating architecture and design&amp;rsquo; he discusses Essential and accidental complexity which I&amp;rsquo;ve previously read about in Neal&amp;rsquo;s book, &amp;lsquo;The Productive Programmer&amp;rsquo;.
Neal defines these terms like so:
I find it interesting to consider where the line is for when something becomes essential complexity and when it&amp;rsquo;s accidental complexity although Neal suggests that there&amp;rsquo;s a spectrum between these two definitions upon which a piece of complexity sit.</description>
    </item>
    
    <item>
      <title>Parallel Pair Programming</title>
      <link>https://markhneedham.com/blog/2010/03/16/parallel-pair-programming/</link>
      <pubDate>Tue, 16 Mar 2010 23:56:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/16/parallel-pair-programming/</guid>
      <description>I&amp;rsquo;ve spent a bit of time working with Lesrecently and it&amp;rsquo;s been quite interesting working out the best way for us to pair together as he&amp;rsquo;s working as a front end developer on the team which means he&amp;rsquo;s best utilised working on the CSS/JavaScript/HTML side of things.
Having said that there are often features which require both front end and backend collaboration and we&amp;rsquo;ve been trying to drive these features from the front end through to the backend rather than working on the backend code separately and then working with Les later on to hook it all up to the frontend.</description>
    </item>
    
    <item>
      <title>node.js: First thoughts</title>
      <link>https://markhneedham.com/blog/2010/03/15/node-js-first-thoughts/</link>
      <pubDate>Mon, 15 Mar 2010 00:09:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/15/node-js-first-thoughts/</guid>
      <description>I recently came across node.jsvia a blog post by Paul Grossand I&amp;rsquo;ve been playing around with it a bit over the weekend trying to hook up some code to call through to the Twitter API and then return the tweets on my friend timeline.
node.js gives us event driven I/O using JavaScript running server side on top of Google&amp;rsquo;s V8 JavaScript engine.
Simon Willison has part of a presentation on slidesharewhere he describes the difference between the typical thread per request approach and the event based approach to dealing with web requests using the metaphor of bunnies.</description>
    </item>
    
    <item>
      <title>A reminder of the usefulness of Git</title>
      <link>https://markhneedham.com/blog/2010/03/14/a-reminder-of-the-usefulness-of-git/</link>
      <pubDate>Sun, 14 Mar 2010 00:45:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/14/a-reminder-of-the-usefulness-of-git/</guid>
      <description>Despite the fact that none of the projects that I&amp;rsquo;ve worked on have used Gitor Mercurialas the team&amp;rsquo;s main repository I keep forgetting how useful those tools can be even if they&amp;rsquo;re just being used locally.
I ran into a problem when trying to work out why a Rhino Mocks expectation wasn&amp;rsquo;t working as I expected last week having refactored a bit of code to include a constructor.
I wanted to include the Rhino Mocks source code in our solution before and after the refactoring and step through the code to see what was different in the way the expectations were being setup.</description>
    </item>
    
    <item>
      <title>Preventing systematic errors: An example</title>
      <link>https://markhneedham.com/blog/2010/03/13/preventing-systematic-errors-an-example/</link>
      <pubDate>Sat, 13 Mar 2010 23:26:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/13/preventing-systematic-errors-an-example/</guid>
      <description>James Shore has an interesting recent blog post where he describes some alternatives to over reliance on acceptance testingand one of the ideas that he describes is fixing the process whenever a bug is found in exploratory testing.
He describes two ways of preventing bugs from making it through to exploratory testing:
When we can&amp;rsquo;t make defects impossible, we try to catch them automatically, typically by improving our build or test suite.</description>
    </item>
    
    <item>
      <title>Does an organisation need to be fully committed to agile/lean/scrum?</title>
      <link>https://markhneedham.com/blog/2010/03/11/does-an-organisation-need-to-be-fully-committed-to-agileleanscrum/</link>
      <pubDate>Thu, 11 Mar 2010 08:05:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/11/does-an-organisation-need-to-be-fully-committed-to-agileleanscrum/</guid>
      <description>Alan Atlas has a recent blog post where he discusses agile, lean and scrum and suggests that you can&amp;rsquo;t truly achieve agility unless your company is fully committed to itwhich differs slightly from my experiences.
Alan makes a valid point that we&amp;rsquo;re not really following an approach just because we use all the practices:
It&amp;rsquo;s quite easy to put our work up on a story wall, run a daily standupand unit test our codeand not really get the full benefit that those practices are supposed to give us.</description>
    </item>
    
    <item>
      <title>Javascript: Function scoping</title>
      <link>https://markhneedham.com/blog/2010/03/10/javascript-function-scoping/</link>
      <pubDate>Wed, 10 Mar 2010 23:06:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/10/javascript-function-scoping/</guid>
      <description>My colleague John Hume wrote an interesting post about his experience with the &amp;lsquo;const&amp;rsquo; keyword in ActionScriptwhere he describes the problems with trying to capture a loop variable in a closure and then evaluating it later on in the code.
Since ActionScript and JavaScript are both dialects of ECMAscript, this is a problem in JavaScript as well, and is due to the fact that variables in JavaScript have function scope rather than block scopewhich is the case in many other languages.</description>
    </item>
    
    <item>
      <title>Pair Programming: Some thoughts</title>
      <link>https://markhneedham.com/blog/2010/03/09/pair-programming-some-thoughts/</link>
      <pubDate>Tue, 09 Mar 2010 23:04:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/09/pair-programming-some-thoughts/</guid>
      <description>Mark Wilden pointed me to a post he&amp;rsquo;s written about his experience pair programming at Pivotal Labswhere he makes some interesting although not uncommon observations.
I&amp;rsquo;ve previously written wondering what we should do if our pair isn&amp;rsquo;t aroundwhere I was leaning more towards the opinion that we should try to continue along the same path that we were on when working with our pair if they&amp;rsquo;re gone for a short amount of time and to find a new pair or work alone if they&amp;rsquo;re gone for longer.</description>
    </item>
    
    <item>
      <title>Getting real: Book review</title>
      <link>https://markhneedham.com/blog/2010/03/08/getting-real-book-review/</link>
      <pubDate>Mon, 08 Mar 2010 21:56:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/08/getting-real-book-review/</guid>
      <description>I recently came across 37 Signals &amp;lsquo;Getting Real&amp;rsquo; book where they go through their approach to building web applications and there have certainly been some good reminders and ideas on the best way to do this.
These are some of my favourite parts:
Often on projects I&amp;rsquo;ve worked on we&amp;rsquo;ve taken the approach that bugs get worked on before new stories which makes sense in a way because it means that we are fixing problems quickly and keeping the quality of the application high.</description>
    </item>
    
    <item>
      <title>Javascript: The &#39;new&#39; keyword</title>
      <link>https://markhneedham.com/blog/2010/03/06/javascript-the-new-keyword/</link>
      <pubDate>Sat, 06 Mar 2010 15:16:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/06/javascript-the-new-keyword/</guid>
      <description>I came across an interesting post by John Resig where he describes a &amp;lsquo;makeClass&amp;rsquo; functionthat he uses in his code to create functions which can instantiate objects regardless of whether the user calls that function with or without the new keyword.
The main reason that the new keyword seems to be considered harmful is because we might make assumptions in our function that it will be called with the new keyword which changes the meaning of &amp;lsquo;this&amp;rsquo; inside that function.</description>
    </item>
    
    <item>
      <title>Functional C#: Using Join and GroupJoin</title>
      <link>https://markhneedham.com/blog/2010/03/04/functional-c-using-join-and-groupjoin/</link>
      <pubDate>Thu, 04 Mar 2010 18:55:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/04/functional-c-using-join-and-groupjoin/</guid>
      <description>An interesting problem which I&amp;rsquo;ve come across a few times recently is where we have two collections which we want to use together in some way and get a result which could either be another collection or some other value.
In one which Chrisand I were playing around with we had a collection of years and a collection of cars with corresponding years and the requirement was to show all the years on the page with the first car we found for that year or an empty value if there was no car for that year.</description>
    </item>
    
    <item>
      <title>Riskiest thing first vs Outside in development</title>
      <link>https://markhneedham.com/blog/2010/03/02/riskiest-thing-first-vs-outside-in-development/</link>
      <pubDate>Tue, 02 Mar 2010 22:49:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/02/riskiest-thing-first-vs-outside-in-development/</guid>
      <description>I had an interesting conversation with my colleague David Santorolast week where I described the way that I often pick out the riskiest parts of a story or taskand do those first and David pointed out that this approach didn&amp;rsquo;t seem to fit in with the idea of outside in development.
The idea with outside in development as I understand it is that we would look to drive any new functionality from the UI i.</description>
    </item>
    
    <item>
      <title>A reminder about context switching</title>
      <link>https://markhneedham.com/blog/2010/03/01/a-reminder-about-context-switching/</link>
      <pubDate>Mon, 01 Mar 2010 23:12:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/01/a-reminder-about-context-switching/</guid>
      <description>I&amp;rsquo;ve spent most of my time working on agile software development teams over the last few years so for the most part each pair is only working on one story, keeping the work in progress low and allowing them to focus on that piece of work until it&amp;rsquo;s completed.
My pair and I ended up in a therefore somewhat unusual situation last week where we were attempting to work on three things at the same time and weren&amp;rsquo;t doing a particularly great job on any of them.</description>
    </item>
    
    <item>
      <title>Javascript: Confusing &#39;call&#39; and &#39;apply&#39;</title>
      <link>https://markhneedham.com/blog/2010/02/28/javascript-confusing-call-and-apply/</link>
      <pubDate>Sun, 28 Feb 2010 01:45:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/28/javascript-confusing-call-and-apply/</guid>
      <description>I wrote a couple of weeks ago about using the &amp;lsquo;call&amp;rsquo; and &amp;lsquo;apply&amp;rsquo; functions in Javascript when passing functions aroundand while working on our IE6 specific codeI realised that I&amp;rsquo;d got them mixed up.
We were writing some code to override one of our functions so that we could call the original function and then do something else after that.
The code was roughly like this:
Foo = { bar : function(duck) { console.</description>
    </item>
    
    <item>
      <title>Javascript: Isolating browser specific code</title>
      <link>https://markhneedham.com/blog/2010/02/28/javascript-isolating-browser-specific-code/</link>
      <pubDate>Sun, 28 Feb 2010 00:11:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/28/javascript-isolating-browser-specific-code/</guid>
      <description>One thing we&amp;rsquo;ve found on my current project is that despite our best efforts we&amp;rsquo;ve still ended up with some javascript code which we only want to run if the user is using Internet Explorer 6 and the question then becomes how to write that code so that it doesn&amp;rsquo;t end up being spread all over the application.
jQuery has some functions which allow you to work out which browser&amp;rsquo;s being used but I&amp;rsquo;ve noticed that when we use those you tend to end up with if statements dotted all around the code which isn&amp;rsquo;t so good.</description>
    </item>
    
    <item>
      <title>Shu Ha Ri harmful?</title>
      <link>https://markhneedham.com/blog/2010/02/26/shu-ha-ri-harmful/</link>
      <pubDate>Fri, 26 Feb 2010 23:53:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/26/shu-ha-ri-harmful/</guid>
      <description>I came across a blog post by Rachel Davies where she wonders whether the Shu-Ha-Ri approach to learning/teaching is actually harmfuland I found Rachel&amp;rsquo;s thoughts around the teaching of principles and practices quite interesting.
Only when you have mastered the basic practices are you allowed to improvise. And the last and most important – Before you have gained discipline, centering, and flexibility, you are a hazard to yourself and others.&amp;ldquo;I&amp;rsquo;m uncomfortable with approaches that force students to follow agile practices without questioning.</description>
    </item>
    
    <item>
      <title>Coding: Shared libraries</title>
      <link>https://markhneedham.com/blog/2010/02/26/coding-shared-libraries/</link>
      <pubDate>Fri, 26 Feb 2010 00:36:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/26/coding-shared-libraries/</guid>
      <description>On a few projects that I&amp;rsquo;ve worked on one of the things that we&amp;rsquo;ve done is create a shared library of objects which can be used across several different projects and while at the time it seemed like a good idea, in hindsight I&amp;rsquo;m not sure if it&amp;rsquo;s an entirely successful strategy.
I&amp;rsquo;m quite a fan of not recreating effort which is generally the goal when trying to pull out common code and within one team this seems to be a good approach the majority of the time.</description>
    </item>
    
    <item>
      <title>Pair Programming: In interviews</title>
      <link>https://markhneedham.com/blog/2010/02/25/pair-programming-in-interviews/</link>
      <pubDate>Thu, 25 Feb 2010 08:03:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/25/pair-programming-in-interviews/</guid>
      <description>I came across a couple of quite interesting blog posts recently which described some approachesto interviewingwhich suggest a more empirical approach to interviewing whereby the interview is treated more like an audition for the person being interviewed.
I like this idea and it&amp;rsquo;s something that we do when recruiting developers in a pair programming interview.
The general idea is that we pair with the candidate as they go through a coding problem.</description>
    </item>
    
    <item>
      <title>Refactoring: Small steps to pull out responsibilities</title>
      <link>https://markhneedham.com/blog/2010/02/24/refactoring-small-steps-to-pull-out-responsibilities/</link>
      <pubDate>Wed, 24 Feb 2010 00:45:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/24/refactoring-small-steps-to-pull-out-responsibilities/</guid>
      <description>I wrote previously about how I&amp;rsquo;ve been using effect sketches to identify responsibilities in objectsso that I can pull them out into other objects and once I&amp;rsquo;ve done this I often find that I can&amp;rsquo;t see a small next step to take.
At this stage in the past I&amp;rsquo;ve often then stopped and left the refactoring until I have more time to complete it but this hasn&amp;rsquo;t really worked and a lot of the time I end up only seeing the code change in my mind and not in the actual code.</description>
    </item>
    
    <item>
      <title>Coding: Effect sketches and the Mikado method</title>
      <link>https://markhneedham.com/blog/2010/02/23/coding-effect-sketches-and-the-mikado-method/</link>
      <pubDate>Tue, 23 Feb 2010 00:29:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/23/coding-effect-sketches-and-the-mikado-method/</guid>
      <description>I&amp;rsquo;ve written previously about how useful I find effect sketchesfor helping me to understand how an object&amp;rsquo;s methods and fields fit together and while drawing one a couple of weeks ago I noticed that it&amp;rsquo;s actually quite useful for seeing which parts of the code will be the easiest to change.
I was fairly sure one of the object&amp;rsquo;s in our code base was doing too many things due to the fact that it had a lot of dependencies.</description>
    </item>
    
    <item>
      <title>Javascript: Bowling Game Kata</title>
      <link>https://markhneedham.com/blog/2010/02/22/javascript-bowling-game-kata/</link>
      <pubDate>Mon, 22 Feb 2010 23:14:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/22/javascript-bowling-game-kata/</guid>
      <description>I spent some time over the weekend playing with the bowling game katain Javascript.
I thought I knew the language well enough to be able to do this kata quite easily so I was quite surprised at how much I struggled initially.
These are some of my observations from this exercise:
I don&amp;rsquo;t think I quite get the idea of the &amp;lsquo;describe&amp;rsquo; and &amp;lsquo;it&amp;rsquo; blocks which I believe are inspired by Rspec.</description>
    </item>
    
    <item>
      <title>C#: Overcomplicating with LINQ</title>
      <link>https://markhneedham.com/blog/2010/02/21/c-overcomplicating-with-linq/</link>
      <pubDate>Sun, 21 Feb 2010 12:01:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/21/c-overcomplicating-with-linq/</guid>
      <description>I recently came across an interesting bit of code which was going through a collection of strings and then only taking the first &amp;lsquo;x&amp;rsquo; number of characters and discarding the rest.
The code looked roughly like this:
var words = new[] {&amp;#34;hello&amp;#34;, &amp;#34;to&amp;#34;, &amp;#34;the&amp;#34;, &amp;#34;world&amp;#34;}; var newWords = new List&amp;lt;string&amp;gt;(); foreach (string word in words) { if (word.Length &amp;gt; 3) { newWords.Add(word.Substring(0, 3)); continue; } newWords.Add(word); } For this initial collection of words we would expect &amp;lsquo;newWords&amp;rsquo; to contain [&amp;ldquo;hel&amp;rdquo;, &amp;ldquo;to&amp;rdquo;, &amp;ldquo;the&amp;rdquo;, &amp;ldquo;wor&amp;rdquo;]</description>
    </item>
    
    <item>
      <title>C#: A lack of covariance with generics example</title>
      <link>https://markhneedham.com/blog/2010/02/20/c-a-lack-of-covariance-with-generics-example/</link>
      <pubDate>Sat, 20 Feb 2010 12:17:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/20/c-a-lack-of-covariance-with-generics-example/</guid>
      <description>One of the things I find most confusing when reading about programming languages is the idea of covariance and contravarianceand while I&amp;rsquo;ve previously read that covariance is not possible when using generics in C# I recently came across an example where I saw that this was true.
I came across this problem while looking at how to refactor some code which has been written in an imperative style:
public interface IFoo { string Bar { get; set; } } public class Foo : IFoo { public string Bar { get; set; } } private IEnumerable&amp;lt;IFoo&amp;gt; GetMeFoos() { var someStrings = new[] { &amp;#34;mike&amp;#34;, &amp;#34;mark&amp;#34; }; var someFoos = new List&amp;lt;IFoo&amp;gt;(); foreach (var s in someStrings) { someFoos.</description>
    </item>
    
    <item>
      <title>C#: Causing myself pain with LINQ&#39;s delayed evaluation</title>
      <link>https://markhneedham.com/blog/2010/02/18/c-causing-myself-pain-with-linqs-delayed-evaluation/</link>
      <pubDate>Thu, 18 Feb 2010 22:28:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/18/c-causing-myself-pain-with-linqs-delayed-evaluation/</guid>
      <description>I recently came across some code was imperatively looping through a collection and then mapping each value to go to something else by using an injected dependency to do that.
I thought I&amp;rsquo;d try to make use of functional collection parameters to try and simplify the code a bit but actually ended up breaking one of the tests.
About a month ago I wrote about how I&amp;rsquo;d written a hand rolled stub to simplify a testand this was actually where I caused myself the problem!</description>
    </item>
    
    <item>
      <title>Rules of Thumb: Don&#39;t use the session</title>
      <link>https://markhneedham.com/blog/2010/02/16/rules-of-thumb-dont-use-the-session/</link>
      <pubDate>Tue, 16 Feb 2010 23:19:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/16/rules-of-thumb-dont-use-the-session/</guid>
      <description>A while ago I wrote about some rules of thumbthat I&amp;rsquo;d been taught by my colleagues with respect to software development and I was reminded of one of them - don&amp;rsquo;t put anything in the session - during a presentation my colleague Luca Grullagave at our client on scaling applications by making use of the infrastructure of the web.
The problem with putting state in the session is that it means that requests from a specific user have to be tied to a specific server i.</description>
    </item>
    
    <item>
      <title>F#: Passing an argument to a member constraint</title>
      <link>https://markhneedham.com/blog/2010/02/15/f-passing-an-argument-to-a-member-constraint/</link>
      <pubDate>Mon, 15 Feb 2010 00:05:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/15/f-passing-an-argument-to-a-member-constraint/</guid>
      <description>I&amp;rsquo;ve written previously about function overloading in F# and my struggles working out how to do itand last week I came across the concept of inline functions and statically resolved parametersas a potential way to solve that problem.
I came across a problem where I thought I would be able to make use of this while playing around with some code parsing Xml today.
I had a &amp;lsquo;descendants&amp;rsquo; function which I wanted to be applicable against &amp;lsquo;XDocument&amp;rsquo; and &amp;lsquo;XElement&amp;rsquo; so I originally just defined the functions separately forgetting that the compiler wouldn&amp;rsquo;t allow me to do so as we would have a duplicate definition of the function:</description>
    </item>
    
    <item>
      <title>F#: Unexpected identifier in implementation file</title>
      <link>https://markhneedham.com/blog/2010/02/14/f-unexpected-identifier-in-implementation-file/</link>
      <pubDate>Sun, 14 Feb 2010 01:03:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/14/f-unexpected-identifier-in-implementation-file/</guid>
      <description>I&amp;rsquo;ve been playing around with some F# code this evening and one of the bits of code needs to make a HTTP call and return the result.
I wrote this code and then tried to make use of the &amp;lsquo;Async.RunSynchronously&amp;rsquo; function to execute the call.
The code I had looked roughly like this:
namespace Twitter module RetrieveLinks open System.Net open System.IO open System.Web open Microsoft.FSharp.Control let AsyncHttp (url:string) = async { let request = HttpWebRequest.</description>
    </item>
    
    <item>
      <title>Javascript: Some stuff I learnt this week</title>
      <link>https://markhneedham.com/blog/2010/02/12/javascript-some-stuff-i-learnt-this-week/</link>
      <pubDate>Fri, 12 Feb 2010 21:11:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/12/javascript-some-stuff-i-learnt-this-week/</guid>
      <description>I already wrote about how I&amp;rsquo;ve learnt a bit about the &amp;lsquo;call&amp;rsquo; and &amp;lsquo;apply&amp;rsquo; functions in Javascript this week but as I&amp;rsquo;ve spent the majority of my time doing front end stuff this week I&amp;rsquo;ve also learnt and noticed some other things which I thought were quite interesting.
As a result we needed to know the character codes for the banned characters. While googling to work them out we came across Uncle Jim&amp;rsquo;s CharCode Translatorwhich allows you to type in a character and get its character code and vice versa.</description>
    </item>
    
    <item>
      <title>Javascript: Passing functions around with call and apply</title>
      <link>https://markhneedham.com/blog/2010/02/12/javascript-passing-functions-around-with-call-and-apply/</link>
      <pubDate>Fri, 12 Feb 2010 20:18:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/12/javascript-passing-functions-around-with-call-and-apply/</guid>
      <description>Having read Douglas Crockford&amp;rsquo;s &amp;lsquo;Javascript: The Good Parts&amp;rsquo; I was already aware that making use of the &amp;lsquo;this&amp;rsquo; keyword in Javascript is quite dangerous but we came across what must be a fairly common situation this week where we wanted to pass around a function which made use of &amp;lsquo;this&amp;rsquo; internally.
We were writing some JSTestDrivertests around a piece of code which looked roughly like this:
function Common() { this.OtherMethod = function(value) { // do some manipulation on value 	return someMagicalNewValue;	}; this.</description>
    </item>
    
    <item>
      <title>F#: Inline functions and statically resolved type parameters</title>
      <link>https://markhneedham.com/blog/2010/02/10/f-inline-functions-and-statically-resolved-type-parameters/</link>
      <pubDate>Wed, 10 Feb 2010 23:06:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/10/f-inline-functions-and-statically-resolved-type-parameters/</guid>
      <description>One thing which I&amp;rsquo;ve often wondered when playing around with F# is that when writing the following function the type of the function is inferred to be &amp;lsquo;int -&amp;gt; int -&amp;gt; int&amp;rsquo; rather than allowing any values which can be added together:
let add x y = x + y &amp;gt; val add : int -&amp;gt; int -&amp;gt; int It turns out if you use the &amp;lsquo;inline&amp;rsquo; keyword then the compiler does exactly what we want:</description>
    </item>
    
    <item>
      <title>Javascript: File encoding when using string.replace</title>
      <link>https://markhneedham.com/blog/2010/02/10/javascript-file-encoding-when-using-string-replace/</link>
      <pubDate>Wed, 10 Feb 2010 00:02:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/10/javascript-file-encoding-when-using-string-replace/</guid>
      <description>We ran into an interesting problem today when moving some Javascript code which was making use of the &amp;lsquo;string.replace&amp;rsquo; function to strip out the £ sign from some text boxes on a form.
The code we had written was just doing this:
var textboxValue = $(&amp;#34;#fieldId&amp;#34;).val().replace(/£/, &amp;#39;&amp;#39;); So having realised that we had this code all over the place we decided it would make sense to create a common function that strip the pound sign out.</description>
    </item>
    
    <item>
      <title>Functional C#: Extracting a higher order function with generics</title>
      <link>https://markhneedham.com/blog/2010/02/08/functional-c-extracting-a-higher-order-function-with-generics/</link>
      <pubDate>Mon, 08 Feb 2010 23:17:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/08/functional-c-extracting-a-higher-order-function-with-generics/</guid>
      <description>While working on some code with Toniwe realised that we&amp;rsquo;d managed to create two functions that were almost exactly the same except they made different service calls and returned collections of a different type.
The similar functions were like this:
private IEnumerable&amp;lt;Foo&amp;gt; GetFoos(Guid id) { IEnumerable&amp;lt;Foo&amp;gt; foos = new List&amp;lt;Foo&amp;gt;(); try { foos = fooService.GetFoosFor(id); } catch (Exception e) { // do some logging of the exception  } return foos; } private IEnumerable&amp;lt;Bar&amp;gt; GetBars(Guid id) { IEnumerable&amp;lt;Bar&amp;gt; bars = new List&amp;lt;Bar&amp;gt;(); try { bars = barService.</description>
    </item>
    
    <item>
      <title>Willed vs Forced designs</title>
      <link>https://markhneedham.com/blog/2010/02/08/willed-vs-forced-designs/</link>
      <pubDate>Mon, 08 Feb 2010 22:48:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/08/willed-vs-forced-designs/</guid>
      <description>I came across an interesting post that Roy Osherove wrote a few months ago where he talks about &amp;lsquo;Willed vs Forced Designs&amp;rsquo; and some common arguments that people give for not using TypeMock on their projects.
I&amp;rsquo;m not really a fan of the TypeMock approach to dealing with dependencies in tests because it seems to avoid the fact that the code is probably bad in the first place if we have to resort to using some of the approaches it encourages.</description>
    </item>
    
    <item>
      <title>F#: function keyword</title>
      <link>https://markhneedham.com/blog/2010/02/07/f-function-keyword/</link>
      <pubDate>Sun, 07 Feb 2010 02:54:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/07/f-function-keyword/</guid>
      <description>I&amp;rsquo;ve been browsing through Chris Smith&amp;rsquo;s Programming F#book and in the chapter on pattern matching he describes the &amp;lsquo;function&amp;rsquo; key word which I haven&amp;rsquo;t used before.
It&amp;rsquo;s used in pattern matching expressions when we want to match against one of the parameters passed into the function which contains the pattern match.
For example if we have this somewhat contrived example:
let isEven value = match value with | x when (x % 2) = 0 -&amp;gt; true | _ -&amp;gt; false That could be rewritten using the function keyword to the following:</description>
    </item>
    
    <item>
      <title>Functional C#: LINQ vs Method chaining</title>
      <link>https://markhneedham.com/blog/2010/02/05/functional-c-linq-vs-method-chaining/</link>
      <pubDate>Fri, 05 Feb 2010 18:06:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/05/functional-c-linq-vs-method-chaining/</guid>
      <description>One of the common discussions that I&amp;rsquo;ve had with several colleagues when we&amp;rsquo;re making use of some of the higher order functions that can be applied on collections is whether to use the LINQ style syntax or to chain the different methods together.
I tend to prefer the latter approach although when asked the question after my talk at Developer Developer DeveloperI didn&amp;rsquo;t really have a good answer other than to suggest that it seemed to just be a personal preference thing.</description>
    </item>
    
    <item>
      <title>Coding: Wrapping/not wrapping 3rd party libraries and DSLs</title>
      <link>https://markhneedham.com/blog/2010/02/02/coding-wrappingnot-wrapping-3rd-party-libraries-and-dsls/</link>
      <pubDate>Tue, 02 Feb 2010 23:54:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/02/coding-wrappingnot-wrapping-3rd-party-libraries-and-dsls/</guid>
      <description>One of the things which Nat Pryce and Steve Freeman suggest in their book Growing Object Oriented Software guided by testsis the idea of wrapping any third party libraries that we use in our own code.
We came across a situation where we did this and then later on I made the mistake of not following this advice.
To start with my colleague Davidhad created a DSL which kept all the calls to Selenium nicely wrapped inside one class.</description>
    </item>
    
    <item>
      <title>Functional C#: Writing a &#39;partition&#39; function</title>
      <link>https://markhneedham.com/blog/2010/02/01/functional-c-writing-a-partition-function/</link>
      <pubDate>Mon, 01 Feb 2010 23:34:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/01/functional-c-writing-a-partition-function/</guid>
      <description>One of the more interesting higher order functions that I&amp;rsquo;ve come across while playing with F# is the partition function which is similar to the filter function except it returns the values which meet the predicate passed in as well as the ones which don&amp;rsquo;t.
I came across an interesting problem recently where we needed to do exactly this and had ended up taking a more imperative for each style approach to solve the problem because this function doesn&amp;rsquo;t exist in C# as far as I know.</description>
    </item>
    
    <item>
      <title>DDD8: Mixing functional and object oriented approaches to programming in C#</title>
      <link>https://markhneedham.com/blog/2010/01/31/ddd8-mixing-functional-and-object-oriented-approaches-to-programming-in-c/</link>
      <pubDate>Sun, 31 Jan 2010 14:05:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/31/ddd8-mixing-functional-and-object-oriented-approaches-to-programming-in-c/</guid>
      <description>I did a presentation titled &amp;lsquo;Mixing functional and object oriented approaches to programming in C#&amp;rsquo; at the Developer Developer Developer conferencein Reading.
The slides from the talk are below:
I&amp;rsquo;ve not done many technical talks so far. My only previous attempt was a talk on F# one at the Sydney Alt.NET user grouplast year so I&amp;rsquo;m still learning how to do this effectively.
It was quite interesting reading through some of the feedback from twitter and several people pointed out that the content was too basic which was something I was concerned about while writing the talk:</description>
    </item>
    
    <item>
      <title>Book Club: Growing Object Oriented Software - Chapter 7 (Steve Freeman &amp; Nat Pryce)</title>
      <link>https://markhneedham.com/blog/2010/01/28/book-club-growing-object-oriented-software-chapter-7-steve-freeman-nat-pryce/</link>
      <pubDate>Thu, 28 Jan 2010 19:13:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/28/book-club-growing-object-oriented-software-chapter-7-steve-freeman-nat-pryce/</guid>
      <description>My colleague David Santorohas started up a technical book club at the client we&amp;rsquo;re working at in Wales and the book choice for the first session was Chapter 7 - Achieving Object Oriented Design - of Growing Object Oriented Software, guided by tests written by Steve Freeman and Nat Pryce.
In this chapter they cover various approaches for driving towards object oriented code including techniques to find new objects and a detailed description of TDD and how we can approach this in a way that allows us to drive out new behaviour effectively.</description>
    </item>
    
    <item>
      <title>Automapper: Don&#39;t forget Mapper.Reset() at the start</title>
      <link>https://markhneedham.com/blog/2010/01/27/automapper-dont-forget-mapper-reset-at-the-start/</link>
      <pubDate>Wed, 27 Jan 2010 07:57:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/27/automapper-dont-forget-mapper-reset-at-the-start/</guid>
      <description>I wrote about my first thoughts using Automapperlast week and although I realised that it makes use of the static gateway pattern we ran into a problem where two consecutive calls to a method using AutoMapper always returned the same value for one of the mappings.
The code was roughly like this:
public Bar CreateNewBar(Bar originalBar, string someNewValue) { Mapper.CreateMap&amp;lt;Baz, Baz&amp;gt;() .ForMember(x =&amp;gt; x.Id, opts =&amp;gt; opts.Ignore()) .ForMember(x =&amp;gt; x.SomeProperty, opts =&amp;gt; opts.</description>
    </item>
    
    <item>
      <title>TDD: Rewriting/refactoring tests</title>
      <link>https://markhneedham.com/blog/2010/01/25/tdd-rewritingrefactoring-tests/</link>
      <pubDate>Mon, 25 Jan 2010 22:06:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/25/tdd-rewritingrefactoring-tests/</guid>
      <description>I&amp;rsquo;ve read several times about the dangers of thebigrewritewhen it comes to production code but I&amp;rsquo;ve recently been wondering whether or not we should apply the same rules when it comes to test code or not.
I worked with Raphael Speyerfor a few weeks last year and on the code base we were working on he often spent some time rewriting tests originally written using rMockto use mockitowhich was the framework we were driving towards.</description>
    </item>
    
    <item>
      <title>TDD: Simplifying a test with a hand rolled stub</title>
      <link>https://markhneedham.com/blog/2010/01/25/tdd-simplifying-a-test-with-a-hand-rolled-stub/</link>
      <pubDate>Mon, 25 Jan 2010 21:23:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/25/tdd-simplifying-a-test-with-a-hand-rolled-stub/</guid>
      <description>I wrote a couple of weeks ago about my thoughts on hand written stubs vs framework generated stubsand I noticed an interesting situation where it helped me out while trying to simplify some test code.
The code in question was making use of several framework generated stubs/mocks and one in particular was trying to return different values depending on the value passed as a parameter.
The test was failing and I spent about half an hour unsuccessfully trying to work out why it wasn&amp;rsquo;t working as expected before I decided to replace it with a hand rolled stub that did exactly what I wanted.</description>
    </item>
    
    <item>
      <title>TDD: Removing the clutter</title>
      <link>https://markhneedham.com/blog/2010/01/24/tdd-removing-the-clutter/</link>
      <pubDate>Sun, 24 Jan 2010 01:13:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/24/tdd-removing-the-clutter/</guid>
      <description>I got the chance to work with Philfor a couple of weeks last year and one of the most interesting things that he started teaching me was the importance of reducing the clutter in our tests and ensuring that we take some time to refactor them as well as the code as part of the &amp;lsquo;red-green-refactor&amp;rsquo; cycle.
I&amp;rsquo;m still trying to work out the best way to do this but I came across a really interesting post by J.</description>
    </item>
    
    <item>
      <title>Coding: The collecting parameter pattern</title>
      <link>https://markhneedham.com/blog/2010/01/23/coding-the-collecting-parameter-pattern/</link>
      <pubDate>Sat, 23 Jan 2010 14:45:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/23/coding-the-collecting-parameter-pattern/</guid>
      <description>The collecting parameter patternis one of my favourite ones when used well but I&amp;rsquo;ve noticed recently that it can lead to quit misleading APIs as well.
One way that we used it quite effectively was when getting objects to render themselves to a ViewData containerwhich was then used to populate the view.
public class Micro { private string micro; public Micro(string micro) { this.micro = micro; } public void renderTo(ViewData viewData) { viewData.</description>
    </item>
    
    <item>
      <title>Automapper: First thoughts</title>
      <link>https://markhneedham.com/blog/2010/01/22/automapper-first-thoughts/</link>
      <pubDate>Fri, 22 Jan 2010 23:21:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/22/automapper-first-thoughts/</guid>
      <description>I came across Jimmy Bogard&amp;rsquo;s Automapperlibrary a while ago but hadn&amp;rsquo;t had the opportunity to try it out on a project until this week.
The problem we wanted to solve was relatively simple.
We had a domain object and we wanted to create a copy of that with one of the fields changed and all of the ids cleared from the object and any objects contained within it so that we could persist the new web of objects to the database.</description>
    </item>
    
    <item>
      <title>Functional collectional parameters: Some thoughts</title>
      <link>https://markhneedham.com/blog/2010/01/20/functional-collectional-parameters-some-thoughts/</link>
      <pubDate>Wed, 20 Jan 2010 22:45:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/20/functional-collectional-parameters-some-thoughts/</guid>
      <description>I&amp;rsquo;ve been reading through a bit of Steve Freeman and Nat Pryce&amp;rsquo;s &amp;lsquo;Growing Object Oriented Software guided by tests&amp;rsquo; book and I found the following observation in chapter 7 quite interesting:
It&amp;rsquo;s interesting that they don&amp;rsquo;t try and write perfect code the first time around which is actually something I thought experienced developers did until I came across Uncle Bob&amp;rsquo;s Clean Codebook where he suggested something similar.
One thing I&amp;rsquo;ve noticed when working with collections is that if we want to do something more complicated than just doing a simple map or filter then I find myself initially trying to work through the problem in an imperative hacky way.</description>
    </item>
    
    <item>
      <title>Strategic Design (Responsibility Traps) - Eric Evans</title>
      <link>https://markhneedham.com/blog/2010/01/18/strategic-design-responsibility-traps-eric-evans/</link>
      <pubDate>Mon, 18 Jan 2010 22:52:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/18/strategic-design-responsibility-traps-eric-evans/</guid>
      <description>Reading through some of Simon Harris&amp;rsquo; blog entries I came across his thoughtson a presentation Eric Evans did at QCon titled &amp;lsquo;Strategic Design - Responsibility Traps&amp;rsquo; which seems to cover a lot of the ground from the second half of Domain Driven Designand more.
In the presentation Evans make some really insightful comments and points out a lot of mistakes that I&amp;rsquo;ve made on projects. It certainly serves as a reminder to go back and read part 4 of the book again and really understand the material from that section.</description>
    </item>
    
    <item>
      <title>Coding: Missing abstractions and LINQ</title>
      <link>https://markhneedham.com/blog/2010/01/17/coding-missing-abstractions-and-linq/</link>
      <pubDate>Sun, 17 Jan 2010 19:09:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/17/coding-missing-abstractions-and-linq/</guid>
      <description>Something which I&amp;rsquo;ve noticed quite a lot on the projects that I&amp;rsquo;ve worked on since C# 3.0 was released is that lists seem to be passed around code much more and have LINQ style filters and transformations performed on them while failing to describe the underlying abstraction explcitly in the code.
As a result of this we quite frequently we end up with this code being in multiple places and since it&amp;rsquo;s usually not very much code the repetition goes unnoticed more than other types of duplication might do.</description>
    </item>
    
    <item>
      <title>Nant: Populating templates</title>
      <link>https://markhneedham.com/blog/2010/01/16/nant-populating-templates/</link>
      <pubDate>Sat, 16 Jan 2010 00:13:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/16/nant-populating-templates/</guid>
      <description>One of the common tasks that we need to do on every project I&amp;rsquo;ve worked on is ensure that we can create a web.config file for the different environments that we need to deploy our application to.
Nant has quite a neat task called &amp;lsquo;expandproperties&amp;rsquo; which allows us to do this quite easily.
In our build file we would have the following:
build-file.build
&amp;lt;property name =&amp;#34;configFile&amp;#34; value=&amp;#34;${environment}.properties&amp;#34; readonly=&amp;#34;true&amp;#34;/&amp;gt; &amp;lt;if test=&amp;#34;${not file::exists(configFile)}&amp;#34;&amp;gt; &amp;lt;fail message=&amp;#34;Configuration file &amp;#39;${configFile}&amp;#39; could not be found.</description>
    </item>
    
    <item>
      <title>C#: A functional solution to a modeling problem</title>
      <link>https://markhneedham.com/blog/2010/01/15/c-a-functional-solutional-to-a-modeling-problem/</link>
      <pubDate>Fri, 15 Jan 2010 23:23:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/15/c-a-functional-solutional-to-a-modeling-problem/</guid>
      <description>We were working on some refactoring today where we pushed some logic backfrom a service and onto a domain object and I noticed that we were able to use functions quite effectively to reduce the amount of code we had to write while still describing differences in behaviour.
The class we want to write needs to take in two integers which represent two different situations related to Foo. Depending upon whether we have &amp;lsquo;Situation 1&amp;rsquo;, &amp;lsquo;Situation 2&amp;rsquo; or both situations we will display the results slightly differently.</description>
    </item>
    
    <item>
      <title>TDD: Thoughts on using a clock in tests</title>
      <link>https://markhneedham.com/blog/2010/01/15/tdd-thoughts-on-using-a-clock-in-tests/</link>
      <pubDate>Fri, 15 Jan 2010 21:56:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/15/tdd-thoughts-on-using-a-clock-in-tests/</guid>
      <description>A few months ago Uncle Bob wrote a post about TDD where he suggested that he preferred to use hand created stubs in his testswherever possible and only resorted to using a Mockito created stub as a last resort.
I wrote previously about my thoughts of where to use each of the two approachesand one example of where hand written stubs seems to make sense is the clock.
I wonder if this ties in with J.</description>
    </item>
    
    <item>
      <title>TDD: Hand written stubs vs Framework generated stubs</title>
      <link>https://markhneedham.com/blog/2010/01/15/tdd-hand-written-stubs-vs-framework-generated-stubs/</link>
      <pubDate>Fri, 15 Jan 2010 21:44:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/15/tdd-hand-written-stubs-vs-framework-generated-stubs/</guid>
      <description>A few months ago Uncle Bob wrote a post about TDD where he suggested that he preferred to use hand created stubs in his testswherever possible and only resorted to using a Mockito created stub as a last resort.
I&amp;rsquo;ve tended to use framework created ones but my colleague Matt Dunn and I noticed that it didn&amp;rsquo;t seem to work out too well for us writing some tests around a controller where the majority of our tests were making exactly the same call to that repository and expected to receive the same return value but a few select edge cases expected something different.</description>
    </item>
    
    <item>
      <title>F#: Refactoring to sequence/for expressions</title>
      <link>https://markhneedham.com/blog/2010/01/14/f-refactoring-to-sequencefor-expressions/</link>
      <pubDate>Thu, 14 Jan 2010 08:01:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/14/f-refactoring-to-sequencefor-expressions/</guid>
      <description>Since I started playing around with F# one of the things I&amp;rsquo;ve been trying to do is not use the &amp;lsquo;for&amp;rsquo; keyword because I was trying to avoid writing code in an imperative way and for loops are a big part of this for me.
Having read Jon Harrop&amp;rsquo;s solutionto the word count problemwhere he made use of both sequence and for expressions I thought it&amp;rsquo;d be intersting to see what some of the code I&amp;rsquo;ve written would look like using that approach.</description>
    </item>
    
    <item>
      <title>C# Test Builder Pattern: My current thinking</title>
      <link>https://markhneedham.com/blog/2010/01/13/c-test-builder-pattern-my-current-thinking/</link>
      <pubDate>Wed, 13 Jan 2010 01:37:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/13/c-test-builder-pattern-my-current-thinking/</guid>
      <description>I&amp;rsquo;ve written previously about the test builder pattern in C#and having noticed some different implementations of this pattern I thought it&amp;rsquo;d be interesting to post my current thinking on how to use it.
One thing I&amp;rsquo;ve noticed is that we often end up just creating methods which effectively act as setters rather than easing the construction of an object.
This seems to happen most commonly when the value we want to set is a boolean value.</description>
    </item>
    
    <item>
      <title>F#: Refactoring to pattern matching</title>
      <link>https://markhneedham.com/blog/2010/01/12/f-refactoring-to-pattern-matching/</link>
      <pubDate>Tue, 12 Jan 2010 01:33:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/12/f-refactoring-to-pattern-matching/</guid>
      <description>I was looking through some of the F# code I&amp;rsquo;ve written recently and I realised that I was very much writing C# in F# with respect to the number of if statements I&amp;rsquo;ve been using.
I thought it would be interesting to see what the code would look like if I was able to refactor some of that code to make use of pattern matching instead which would be a more idiomatic way of solving the problem in F#.</description>
    </item>
    
    <item>
      <title>C# Object Initializer: More thoughts</title>
      <link>https://markhneedham.com/blog/2010/01/10/c-object-initializer-more-thoughts/</link>
      <pubDate>Sun, 10 Jan 2010 18:52:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/10/c-object-initializer-more-thoughts/</guid>
      <description>I wrote previously about my dislike of C#&amp;lsquo;s object initializer syntaxand while I still think those arguments hold I came across an interesting argument for why it is a useful feature in Jeremy Miller&amp;rsquo;s MSDN article on creating internal DSLs in C#.
In the article Jeremy works through an example where he builds up a &amp;lsquo;SendMessageRequest&amp;rsquo; first by using a fluent interface and then by making use of object initializer syntax.</description>
    </item>
    
    <item>
      <title>Roy Osherove&#39;s TDD Kata: An F# attempt</title>
      <link>https://markhneedham.com/blog/2010/01/10/roy-osheroves-tdd-kata-an-f-attempt/</link>
      <pubDate>Sun, 10 Jan 2010 01:46:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/10/roy-osheroves-tdd-kata-an-f-attempt/</guid>
      <description>As I&amp;rsquo;ve mentioned in a few of my recent posts I&amp;rsquo;ve been having another goat Roy Osherove&amp;rsquo;s TDD Katabut this time in F#.
One thing I&amp;rsquo;ve been struggling with when coding in F# is working out how many intermediate variables we actually need. They can be useful for expressing intent better but they&amp;rsquo;re clutter in a way.
I&amp;rsquo;ve included my solution at the end and in the active pattern which determines whether or not we have a custom delimeter defined in our input string I can&amp;rsquo;t decide whether or not to create a value to represent the expressions that determine that.</description>
    </item>
    
    <item>
      <title>F#: Refactoring to active patterns</title>
      <link>https://markhneedham.com/blog/2010/01/07/f-refactoring-to-active-patterns/</link>
      <pubDate>Thu, 07 Jan 2010 23:31:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/07/f-refactoring-to-active-patterns/</guid>
      <description>I&amp;rsquo;ve been playing around with more F# code and after realising that I&amp;rsquo;d peppered the code with if statements I thought it would be interesting to try and refactor it to make use of active patterns.
The code is part of my F# solution to Roy Osherove&amp;rsquo;s TDD Kataand is used to parse the input string and find which delimeters are being used.
This is the original code:
let hasCustomDelimeter (value:string) = value.</description>
    </item>
    
    <item>
      <title>TDD: Hungarian notation for mocks/stubs</title>
      <link>https://markhneedham.com/blog/2010/01/06/tdd-hungarian-notation-for-mocksstubs/</link>
      <pubDate>Wed, 06 Jan 2010 00:08:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/06/tdd-hungarian-notation-for-mocksstubs/</guid>
      <description>A fairly common discussion that I&amp;rsquo;ve had with several of my colleagues is around the way that we name the variables used for mocks and stubs in our tests.
There seems to be about a 50/50 split between including &amp;lsquo;Stub&amp;rsquo; or &amp;lsquo;Mock&amp;rsquo; on the end of those variable names and not doing so.
In a simple example test using Rhino Mocks as the testing framework this would be the contrast between the two approaches:</description>
    </item>
    
    <item>
      <title>F#: String.Split with a multi character delimeter</title>
      <link>https://markhneedham.com/blog/2010/01/05/f-string-split-with-a-multi-character-delimeter/</link>
      <pubDate>Tue, 05 Jan 2010 23:10:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/05/f-string-split-with-a-multi-character-delimeter/</guid>
      <description>In my continued efforts at Roy Osherove&amp;rsquo;s TDD KataI&amp;rsquo;ve been trying to work out how to split a string based on a delimeter which contains more than one character.
My original thinking was that it should be possible to do so like this:
&amp;#34;1***2&amp;#34;.Split(&amp;#34;***&amp;#34;.ToCharArray());; I didn&amp;rsquo;t realise that splitting the string like that splits on each of the stars individually which means that we end up getting 2 empty values in the result:</description>
    </item>
    
    <item>
      <title>F#: Expressing intent and the forward/application operators</title>
      <link>https://markhneedham.com/blog/2010/01/04/f-expressing-intent-and-the-forwardapplication-operators/</link>
      <pubDate>Mon, 04 Jan 2010 11:11:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/04/f-expressing-intent-and-the-forwardapplication-operators/</guid>
      <description>A while ago I wrote about F#&amp;lsquo;s forward and application operatorswhere I&amp;rsquo;d looked at how these could be used to simplify code and while trying out Roy Osherove&amp;rsquo;s TDD KataI realised that perhaps the choice of which of these to use or whether to use them at all depends on what intent we&amp;rsquo;re expressing.
The specific bit of code I was writing was for raising an exception if negative values were provided and I originally thought I&amp;rsquo;d use the forward operator to express this code:</description>
    </item>
    
    <item>
      <title>The Last Lecture - Randy Pausch</title>
      <link>https://markhneedham.com/blog/2010/01/01/the-last-lecture-randy-pausch/</link>
      <pubDate>Fri, 01 Jan 2010 14:32:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/01/01/the-last-lecture-randy-pausch/</guid>
      <description>I recently watched Randy Pausch&amp;rsquo;s &amp;lsquo;Last Lecture: Achieving Your Childhood Dreams&amp;rsquo; and read the corresponding bookand although it&amp;rsquo;s not directly related to software development I think that some of the points that he makes are really intriguing.
These were some of the parts that particularly stood out for me:
While I think they&amp;rsquo;re certainly right I&amp;rsquo;m not sure that learning theory before putting it into practiceis the most effective way to learn.</description>
    </item>
    
    <item>
      <title>OOP: Behavioural and Structural constraints</title>
      <link>https://markhneedham.com/blog/2009/12/31/oop-behavioural-and-structural-constraints/</link>
      <pubDate>Thu, 31 Dec 2009 16:08:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/31/oop-behavioural-and-structural-constraints/</guid>
      <description>A few months ago I wrote a post describing how we should test the behaviour of code rather than the implementationwhereby we would write tests against the public API of an object rather than exposing other internal data of the object and testing against that directly.
While I still think this is a useful way of testing code I didn&amp;rsquo;t really have a good definition for what makes that a test of an object&amp;rsquo;s behaviour.</description>
    </item>
    
    <item>
      <title>Roy Osherove&#39;s TDD Kata: My first attempt</title>
      <link>https://markhneedham.com/blog/2009/12/25/roy-osheroves-tdd-kata-my-first-attempt/</link>
      <pubDate>Fri, 25 Dec 2009 22:25:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/25/roy-osheroves-tdd-kata-my-first-attempt/</guid>
      <description>I recently came across Roy Osherove&amp;rsquo;s commentaryon Corey Haines&amp;rsquo; attemptat Roy&amp;rsquo;s TDD Kataso I thought I&amp;rsquo;d try it out in C#.
Andrew Woodward has recorded his version of the katawhere he avoids using the mouse for the whole exercise so I tried to avoid using the mouse as well and it was surprisingly difficult!
I&amp;rsquo;ve only done the first part of the exercise so far which is as follows:
I know a lot of the Resharpershortcuts but I found myself using the mouse mostly to switch to the solution explorer and run the tests.</description>
    </item>
    
    <item>
      <title>Debug It: Book Review</title>
      <link>https://markhneedham.com/blog/2009/12/24/debug-it-book-review/</link>
      <pubDate>Thu, 24 Dec 2009 05:26:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/24/debug-it-book-review/</guid>
      <description>David Agans&amp;rsquo; &amp;lsquo;Debugging&amp;rsquo; is the best debugging book that I&amp;rsquo;ve read so I was intrigued to see that there was another book being written on the subject.
Paul Butcher offered me a copy of the book to review so I was keen to see whether it was more like &amp;lsquo;Debugging&amp;rsquo; or &amp;lsquo;Release It&amp;rsquo; as Ted Neward suggests.
Debug Itby Paul Butcher
Much like Krzysztof KozmicI found that a lot of the ideas early on in the book were similar to what I&amp;rsquo;ve been taught by my ThoughtWorks colleagues over the last 3 1/2 years.</description>
    </item>
    
    <item>
      <title>Duke Nukem Forever &amp; Reworking code</title>
      <link>https://markhneedham.com/blog/2009/12/23/duke-nukem-forever-reworking-code/</link>
      <pubDate>Wed, 23 Dec 2009 07:27:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/23/duke-nukem-forever-reworking-code/</guid>
      <description>Cosmin Stejereanlinked to a really interesting article on wired.com which tells the story of how Duke Nukem failed over 12 years to ship their latest game, eventually giving up.
Phil has written a post about the article from the angle of his experience working with these types of companies and working out how to get something into productionbut as I read this article it seemed to have some relation to reworking code and why/how we approach this.</description>
    </item>
    
    <item>
      <title>One change at a time</title>
      <link>https://markhneedham.com/blog/2009/12/22/one-change-at-a-time/</link>
      <pubDate>Tue, 22 Dec 2009 06:01:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/22/one-change-at-a-time/</guid>
      <description>I&amp;rsquo;m reading through Paul Butcher&amp;rsquo;s &amp;lsquo;Debug It&amp;rsquo; book and one of his suggestions when trying to diagnose a problem in our code is to only change one thing at a time.
In a way this might seem fairly obvious but I&amp;rsquo;ve certainly fallen into the trap of making multiple changes at the same time in the misled belief that it&amp;rsquo;ll lead to the problem being solved more quickly.
When making changes to code Butcher has the following piece of advice which I quite like:</description>
    </item>
    
    <item>
      <title>F#: Word Count using a Dictionary</title>
      <link>https://markhneedham.com/blog/2009/12/20/f-word-count-using-a-dictionary/</link>
      <pubDate>Sun, 20 Dec 2009 10:09:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/20/f-word-count-using-a-dictionary/</guid>
      <description>Having spent some time unsuccessfully trying to make my F# attempt at the word count problemwork I decided to follow the lead of the other examples I&amp;rsquo;ve read and make use of a Dictionary to keep count of the words.
I originally thought that I might be having a problem with the downloading of the files and storing of those strings in memory so I tried to change that bit of code to be lazily evaluated:</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 12 &amp; 13 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/12/20/book-club-working-effectively-with-legacy-code-chapters-12-13-michael-feathers/</link>
      <pubDate>Sun, 20 Dec 2009 03:52:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/20/book-club-working-effectively-with-legacy-code-chapters-12-13-michael-feathers/</guid>
      <description>In the last Sydney book club that I attended before I moved back to the UK we discussed Chapters 12 and 13 of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;
Lizhas taken over the summarising of the book clubnow that I&amp;rsquo;m not there so if you want to keep on reading about the book club Liz&amp;rsquo;s blog is the place to go!
One of the ideas suggested in this chapter is that when writing tests we should try and write these as close to the change point as possible.</description>
    </item>
    
    <item>
      <title>F#: The use keyword and using function</title>
      <link>https://markhneedham.com/blog/2009/12/19/f-the-use-keyword-and-using-function/</link>
      <pubDate>Sat, 19 Dec 2009 10:33:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/19/f-the-use-keyword-and-using-function/</guid>
      <description>While I was playing around with the little F# script that I wrote to try and solve the word count problemI noticed that in a couple of places I had used the &amp;lsquo;use&amp;rsquo; keyword when dealing with resources that needed to be released when they&amp;rsquo;d been used.
Using the &amp;lsquo;use&amp;rsquo; keyword means that the &amp;lsquo;Dispose&amp;rsquo; method will be called on the resource when it goes out of scope.
The two examples were &amp;lsquo;StreamWriter&amp;rsquo; and &amp;lsquo;StreamReader&amp;rsquo;:</description>
    </item>
    
    <item>
      <title>You and Your Research - Richard Hamming</title>
      <link>https://markhneedham.com/blog/2009/12/19/you-and-your-research-richard-hamming/</link>
      <pubDate>Sat, 19 Dec 2009 02:52:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/19/you-and-your-research-richard-hamming/</guid>
      <description>Another paper that I read on my Sydney to London flight was one titled &amp;lsquo;You and Your Research&amp;rsquo; by Richard Hamming.
It&amp;rsquo;s a transcript of a talk that Richard Hamming gave to Bellcore employees at the Morris Research and Engineering Centre in 1986.
The talk is aimed at computer science researchers and Hamming describes ways for them to do the best research that they can. I think several of the ideas in the talk relate to software development as well.</description>
    </item>
    
    <item>
      <title>Coding: An outside in observation</title>
      <link>https://markhneedham.com/blog/2009/12/19/coding-an-outside-in-observation/</link>
      <pubDate>Sat, 19 Dec 2009 00:55:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/19/coding-an-outside-in-observation/</guid>
      <description>I&amp;rsquo;ve been reading Michl Henning&amp;rsquo;s post on API designand one thing which he points out is that it&amp;rsquo;s important to drive the design of an API based on the way that it will be used by its clients:
This is similar to Michael Feathers&amp;rsquo; Golden Rule of API Design:
When you do, you learn first-hand the hurdles that your users will have to overcome when they try to test their code independently</description>
    </item>
    
    <item>
      <title>F#: Word Count - A somewhat failed attempt</title>
      <link>https://markhneedham.com/blog/2009/12/18/f-word-count-a-somewhat-failed-attempt/</link>
      <pubDate>Fri, 18 Dec 2009 02:58:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/18/f-word-count-a-somewhat-failed-attempt/</guid>
      <description>I came across Zach Cox&amp;rsquo;s word count problemvia Sam Aaronand Ola Bini&amp;rsquo;stwitter streams and I thought it&amp;rsquo;d be interesting to try it out in F# to see what the solution would be like.
The solution needs to count word frequencies from a selection of newsgroup articles.
I wanted to see if it was possible to write it in F# without using a map to keep track of how many of each word had been found.</description>
    </item>
    
    <item>
      <title>Coding: Naming</title>
      <link>https://markhneedham.com/blog/2009/12/16/coding-naming/</link>
      <pubDate>Wed, 16 Dec 2009 22:08:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/16/coding-naming/</guid>
      <description>Sarah Taraporewalla recently wrote an interesting post about the importance of words with respect to the way that we use them in our codeand it reminded me of some conversations I&amp;rsquo;ve had with Dave Cameronabout the importance of creating a shared understanding of the different types/objects in the systems that we build.
On a few projects that I&amp;rsquo;ve worked on where we didn&amp;rsquo;t have a common understanding of what different concepts in the domain should be I noticed that there was a reluctance to make changes to class names.</description>
    </item>
    
    <item>
      <title>The Computer Scientist as Toolsmith - Fred Brooks</title>
      <link>https://markhneedham.com/blog/2009/12/16/the-computer-scientist-as-toolsmith-fred-brooks/</link>
      <pubDate>Wed, 16 Dec 2009 06:15:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/16/the-computer-scientist-as-toolsmith-fred-brooks/</guid>
      <description>I&amp;rsquo;ve come across a coupleof postsrecently talking about the gender specificness of the term &amp;lsquo;Software Craftsman&amp;rsquo; and Victoria suggests that the term &amp;lsquo;Codesmith&amp;rsquo; would be a more appropriate name to use.
I&amp;rsquo;m not that bothered what the name is but I was reading the transcript of Fred Brooks&amp;rsquo; acceptance speech for winning the ACM Allen Newell Award in 1994 titled &amp;lsquo;The Computer Scientist as Toolsmith&amp;rsquo; which has some interesting ideas about what our role should be.</description>
    </item>
    
    <item>
      <title>Coding: The little details all add to our understanding</title>
      <link>https://markhneedham.com/blog/2009/12/15/coding-the-little-details-all-add-to-our-understanding/</link>
      <pubDate>Tue, 15 Dec 2009 08:09:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/15/coding-the-little-details-all-add-to-our-understanding/</guid>
      <description>I&amp;rsquo;ve been watching an interesting presentation by Scott Hanselmann titled &amp;lsquo;Information Overload and Managing the Flow&amp;rsquo; from OreDevwhere he covers various strategies to allow us to be more productive in the face of the huge amounts of information constantly threatening to overwhelm us.
One interesting suggestion he has around 37 minutes in is that when learning a new language it might be a good idea to contact someone who&amp;rsquo;s an expert in that language and get some framing knowledge on the type of stuff that&amp;rsquo;s worth learning and what we might not bother with.</description>
    </item>
    
    <item>
      <title>TDD: Only mock types you own</title>
      <link>https://markhneedham.com/blog/2009/12/13/tdd-only-mock-types-you-own/</link>
      <pubDate>Sun, 13 Dec 2009 21:47:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/13/tdd-only-mock-types-you-own/</guid>
      <description>Liz recently posted about mock objectsand the original &amp;lsquo;mock roles, not objects&amp;rsquo; paper and one thing that stood out for me is the idea that we should only mock types that we own.
I think this is quite an important guideline to follow otherwise we can end up in a world of pain.
One area which seems particularly vulnerable to this type of thing is when it comes to testing code which interacts with Hibernate.</description>
    </item>
    
    <item>
      <title>Clojure: My first attempt at a macro</title>
      <link>https://markhneedham.com/blog/2009/12/12/clojure-my-first-attempt-at-a-macro/</link>
      <pubDate>Sat, 12 Dec 2009 03:53:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/12/clojure-my-first-attempt-at-a-macro/</guid>
      <description>I&amp;rsquo;m up to the chapter on using macros in Stuart Halloway&amp;rsquo;s &amp;lsquo;Programming Clojure&amp;rsquo; book and since I&amp;rsquo;ve never used a language which has macros in before I thought it&amp;rsquo;d be cool to write one.
In reality there&amp;rsquo;s no reason to create a macro to do what I want to do but I wanted to keep the example simple so I could try and understand exactly how macros work.
I want to create a macro which takes in one argument and then prints hello and the person&amp;rsquo;s name.</description>
    </item>
    
    <item>
      <title>Clojure: Forgetting the brackets</title>
      <link>https://markhneedham.com/blog/2009/12/12/clojure-forgetting-the-brackets/</link>
      <pubDate>Sat, 12 Dec 2009 03:51:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/12/clojure-forgetting-the-brackets/</guid>
      <description>I&amp;rsquo;ve been playing around with macros over the last few days and while writing a simple one forgot to include the brackets to make it evaluate correctly:
(defmacro say-hello [person] println &amp;#34;Hello&amp;#34; person) This macro doesn&amp;rsquo;t even expand like I thought it would:
user=&amp;gt; (macroexpand-1 &amp;#39;(say-hello blah)) blah That seemed a bit strange to me but I eventually realised that I&amp;rsquo;d missed off the brackets around &amp;lsquo;println&amp;rsquo; and the arguments following it which would have resulted in &amp;lsquo;println&amp;rsquo; being evaluated with those arguments.</description>
    </item>
    
    <item>
      <title>TDD: Big leaps and small steps</title>
      <link>https://markhneedham.com/blog/2009/12/10/tdd-big-leaps-and-small-steps/</link>
      <pubDate>Thu, 10 Dec 2009 22:14:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/10/tdd-big-leaps-and-small-steps/</guid>
      <description>About a month ago or so Gary Bernhardt wrote a post showing how to get started with TDDand while the post is quite interesting, several comments on the post pointed out that he had jumped from iteratively solving the problem straight to the solution with his final step.
Something which I&amp;rsquo;ve noticed while solving algorithmic problems in couple of different functional programming languages is that the test driven approach doesn&amp;rsquo;t work so well for these types of problems.</description>
    </item>
    
    <item>
      <title>Haskell vs F#: Function composition</title>
      <link>https://markhneedham.com/blog/2009/12/09/haskell-vs-f-function-composition/</link>
      <pubDate>Wed, 09 Dec 2009 22:10:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/09/haskell-vs-f-function-composition/</guid>
      <description>I&amp;rsquo;m reading through John Hughes&amp;rsquo; &amp;lsquo;Why functional programming matters&amp;rsquo; paper and one thing I&amp;rsquo;ve come across which is a bit counter intuitive to me is the Haskell function composition operator.
I&amp;rsquo;ve written previously about F#&amp;lsquo;s function composition operatorwhich is defined as follows:
let inline (&amp;gt;&amp;gt;) f g x = g(f x) To write a function which doubled all the values in a list and then returned the odd values we&amp;rsquo;d do this:</description>
    </item>
    
    <item>
      <title>Clojure: when-let macro</title>
      <link>https://markhneedham.com/blog/2009/12/09/clojure-when-let-macro/</link>
      <pubDate>Wed, 09 Dec 2009 02:41:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/09/clojure-when-let-macro/</guid>
      <description>In my continued playing around with Clojure I came across the &amp;lsquo;when-let&amp;rsquo; macro.
&amp;lsquo;when-let&amp;rsquo; is used when we want to bind an expression to a symbol and only execute the body provided as the second argument to the macro if that symbol evaluates to true.
As I wrote previously, a value of &amp;lsquo;false&amp;rsquo; or &amp;lsquo;nil&amp;rsquo; would result in the second argument not being evaluated.
A simple example of using &amp;lsquo;when-let&amp;rsquo; would be:</description>
    </item>
    
    <item>
      <title>Our obsession with efficiency - Dan North</title>
      <link>https://markhneedham.com/blog/2009/12/07/our-obsession-with-efficiency-dan-north/</link>
      <pubDate>Mon, 07 Dec 2009 17:05:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/07/our-obsession-with-efficiency-dan-north/</guid>
      <description>Oredevhave put some of the videos from the conference on Vimeoand one of my favourites is &amp;lsquo;Our obsession with efficiency&amp;rsquo; by my colleague Dan North.
The slides for the talk are available on SlideShare.
In this talk Dan leads from the following statement about efficiency:
In lean terms we want to look to favour the big picture over local optimisationswhereby we start to measure our effectiveness rather than efficiency. i.e. we focus on the results rather than the effort.</description>
    </item>
    
    <item>
      <title>Clojure: Unit testing in the REPL</title>
      <link>https://markhneedham.com/blog/2009/12/06/clojure-unit-testing-in-the-repl/</link>
      <pubDate>Sun, 06 Dec 2009 03:28:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/06/clojure-unit-testing-in-the-repl/</guid>
      <description>One thing which I think is great about coding with F# is the quick feedback that we can get by defining and then testing out functions in the REPL.
We can do the same thing in Clojure but it&amp;rsquo;s even better because we can also define and run unit tests which I think is pretty neat.
Nurullah Akkaya has a good post which describes how to use clojure.test, a testing framework written by Stuart Sierraso I&amp;rsquo;ve been using that to define some tests cases for the little RSS feed parser that I&amp;rsquo;m writing.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 11 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/12/03/book-club-working-effectively-with-legacy-code-chapter-11-michael-feathers/</link>
      <pubDate>Thu, 03 Dec 2009 16:27:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/03/book-club-working-effectively-with-legacy-code-chapter-11-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 11 - &amp;lsquo;I Need to Make a Change. What Methods Should I Test?&amp;rsquo; - of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
In this chapter Feathers covers some techniques which allow us to work out which parts of the code we need to write tests around when we make changes.
These are some of my thoughts and our discussion of the chapter:</description>
    </item>
    
    <item>
      <title>Fundamentals of Object-Oriented Design in UML: Book Review</title>
      <link>https://markhneedham.com/blog/2009/12/01/fundamentals-of-object-oriented-design-in-uml-book-review/</link>
      <pubDate>Tue, 01 Dec 2009 23:26:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/12/01/fundamentals-of-object-oriented-design-in-uml-book-review/</guid>
      <description>One of my favourite recent blog posts is one written by Sammy Larbi on coupling and cohesionand while discussing it with Philhe suggested that I would probably like this book and in particular the chapter on connascence which I&amp;rsquo;ve previously written about.
Fundamentals of Object-Oriented Design in UMLby Meilir Page-Jones
I really enjoyed reading this book and I think it&amp;rsquo;s one that I could come back and read again to gain something else from in the future.</description>
    </item>
    
    <item>
      <title>Clojure: Parsing an RSS feed</title>
      <link>https://markhneedham.com/blog/2009/11/30/clojure-parsing-an-rss-feed/</link>
      <pubDate>Mon, 30 Nov 2009 18:33:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/30/clojure-parsing-an-rss-feed/</guid>
      <description>I&amp;rsquo;ve been playing around with a little script in Clojure to parse the ThoughtWorks Blogs RSS feedand then create a tweet for each of them which contains a link to the blog post and the person&amp;rsquo;s Twitter ID if they have one.
It&amp;rsquo;s not finished yet but I&amp;rsquo;m finding the way that we parse documents like this in Clojure quite intriguing.
The xml to parse looks roughly like this:
&amp;lt;rss version=&amp;#34;2.</description>
    </item>
    
    <item>
      <title>TDD: Testing delegation</title>
      <link>https://markhneedham.com/blog/2009/11/27/tdd-testing-delegation/</link>
      <pubDate>Fri, 27 Nov 2009 14:43:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/27/tdd-testing-delegation/</guid>
      <description>I recently came across an interesting blog post by Rod Hilton on unit testingand it reminded me of a couple of conversations Phil, Raphand I were having about the best way to test classes which delegate some responsibility to another class.
An example that we ran into recently was where we wrote some code which required one controller to delegate to another.
public class ControllerOne extends Controller { public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception { } } public class ControllerTwo extends Controller { private final ControllerOne controllerOne; public ControllerTwo(ControllerOne controllerOne) { this.</description>
    </item>
    
    <item>
      <title>Clojure: The &#39;apply&#39; function</title>
      <link>https://markhneedham.com/blog/2009/11/25/clojure-the-apply-function/</link>
      <pubDate>Wed, 25 Nov 2009 11:59:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/25/clojure-the-apply-function/</guid>
      <description>In my continued playing around with Clojure I came across the &amp;lsquo;apply&amp;rsquo; function which is used when we want to call another function with a number of arguments but have actually been given a single argument which contains the argument list.
The example that I&amp;rsquo;ve been trying to understand is applying &amp;lsquo;str&amp;rsquo; to a collection of values.
I started off with the following:
(str [1 2 3]) =&amp;gt; &amp;#34;[1 2 3]&amp;#34; This just returns the string representation of the vector that we passed it, but what we actually want is to get an output of &amp;ldquo;123&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 10 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/11/24/book-club-working-effectively-with-legacy-code-chapter-10-michael-feathers/</link>
      <pubDate>Tue, 24 Nov 2009 23:31:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/24/book-club-working-effectively-with-legacy-code-chapter-10-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 10 - &amp;lsquo;I Can&amp;rsquo;t Run This Method in a Test Harness&amp;rsquo; - of Michael Feather&amp;rsquo;s &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
In this chapter Feathers outlines some of the problems we might have getting methods under test and then suggests some ways to get around those problems.
These are some of my thoughts and our discussion of the chapter:
Tomspoke of &amp;lsquo;value fetishism&amp;rsquo; whereby we get so caught up trying to add &amp;lsquo;business value&amp;rsquo; that we forget to keep the code in good stead for future work.</description>
    </item>
    
    <item>
      <title>Writing a Java function in Clojure</title>
      <link>https://markhneedham.com/blog/2009/11/23/writing-a-java-function-in-clojure/</link>
      <pubDate>Mon, 23 Nov 2009 20:08:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/23/writing-a-java-function-in-clojure/</guid>
      <description>A function that we had to write in Java on a project that I worked on recently needed to indicate whether there was a gap in a series of data points or not.
If there were gaps at the beginning or end of the sequence then that was fine but gaps in the middle of the sequence were not.
null, 1, 2, 3 =&amp;gt; no gaps 1, 2, 3, null =&amp;gt; no gaps 1, null, 2, 3 =&amp;gt; gaps The Java version looked a bit like this:</description>
    </item>
    
    <item>
      <title>Requirements: The story points focus</title>
      <link>https://markhneedham.com/blog/2009/11/23/requirements-the-story-points-focus/</link>
      <pubDate>Mon, 23 Nov 2009 11:46:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/23/requirements-the-story-points-focus/</guid>
      <description>Something which an agile approach on a project typically gives us is the ability to change requirements rapidly based on the different types of feedback we typically get over the course of the project.
One way that we can lose this advantage is by getting caught up by the number of story points being completed and using this as the measure of success.
The flexibility to change has an impact on the number of story points that may be completed in a given iteration - if we start doing some work on a story and then get feedback from the business while it is still in progress it&amp;rsquo;s possible that we will end up with more work to do than we had previously.</description>
    </item>
    
    <item>
      <title>Pair Programming/Helping/Working Collaboratively</title>
      <link>https://markhneedham.com/blog/2009/11/22/pair-programminghelpingworking-collaboratively/</link>
      <pubDate>Sun, 22 Nov 2009 16:43:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/22/pair-programminghelpingworking-collaboratively/</guid>
      <description>Dan North has been presenting his &amp;lsquo;Pimp my architecture&amp;rsquo; talk again at QCon San Francisco this week and after reading the hugelypositivefeedbackon TwitterI decided to watch some of it again.
The idea of getting people to help each other rather than pair program is what stood out for me this time, something which Brian Guthrie also pointed out:
It&amp;rsquo;s been quite common at the places that I&amp;rsquo;ve worked at for pair programming to be frowned upon and sometimes that&amp;rsquo;s not the most important battle to fight so the team will be more selective about its use.</description>
    </item>
    
    <item>
      <title>Clojure: Checking for a nil value in a collection</title>
      <link>https://markhneedham.com/blog/2009/11/21/clojure-checking-for-a-nil-value-in-a-collection/</link>
      <pubDate>Sat, 21 Nov 2009 22:11:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/21/clojure-checking-for-a-nil-value-in-a-collection/</guid>
      <description>Something which I wanted to do recently was write a function that would indicate whether a collection contained a nil value.
I initially incorrectly thought the &amp;lsquo;contains?&amp;rsquo; function was the one that I wanted:
(contains? &amp;#39;(1 nil 2 3) nil) =&amp;gt; false I thought it would work the same as the Java equivalent but that function actually checks whether a key exists in a collection rather than a value. It&amp;rsquo;s more useful when dealing with maps.</description>
    </item>
    
    <item>
      <title>Clojure: A few things I&#39;ve been tripping up on</title>
      <link>https://markhneedham.com/blog/2009/11/20/clojure-a-few-things-ive-been-tripping-up-on/</link>
      <pubDate>Fri, 20 Nov 2009 13:11:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/20/clojure-a-few-things-ive-been-tripping-up-on/</guid>
      <description>In my continued playing with Clojure I&amp;rsquo;m noticing a few things that I keep getting confused about.
As I understand it if an expression is enclosed in parentheses then that means it will be evaluated as a function.
For example I spent quite a while trying to work out why the following code kept throwing a class cast exception:
(if (true) 1 0) If you run that code in the REPL you&amp;rsquo;ll get the following exception because &amp;lsquo;true&amp;rsquo; isn&amp;rsquo;t a function and therefore can&amp;rsquo;t be applied as such:</description>
    </item>
    
    <item>
      <title>Two controllers, type conformance and the Liskov Substitution Principle </title>
      <link>https://markhneedham.com/blog/2009/11/19/two-controllers-type-conformance-and-the-liskov-substitution-principle/</link>
      <pubDate>Thu, 19 Nov 2009 00:08:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/19/two-controllers-type-conformance-and-the-liskov-substitution-principle/</guid>
      <description>An interesting object orientation related problem that Raphand I were looking at recently revolved around the design of two controllers in the application we&amp;rsquo;ve been working on.
The two controllers in question look roughly like this:
public class GenericController extends Controller { private final SomeFactory someFactory; public GenericController(SomeFactory someFactory); this.someFactory = someFactory; } public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception { // do some stuff but never use &amp;#39;request&amp;#39; or &amp;#39;response&amp;#39;  } } public class MoreSpecificController extends GenericController { private final SomeFactory someFactory; public MoreSpecificController(SomeFactory someFactory); super(someFactory); } public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception { .</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 9 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/11/18/book-club-working-effectively-with-legacy-code-chapter-9-michael-feathers/</link>
      <pubDate>Wed, 18 Nov 2009 17:25:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/18/book-club-working-effectively-with-legacy-code-chapter-9-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 9 - &amp;lsquo;I Can&amp;rsquo;t Get This Class Into A Test Harness&amp;rsquo; - of Michael Feather&amp;rsquo;s &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
This chapter goes through various problems that we might have getting a class under test and then suggests different techniques to get around those problems.
These are some of my thoughts and our discussion of the chapter:
While I think this is a useful strategy it&amp;rsquo;s useful to keep in mind that the need to do this is often an indication that the class is doing too much and we probably need to look at breaking that class out into two smaller ones.</description>
    </item>
    
    <item>
      <title>The &#39;should&#39; word</title>
      <link>https://markhneedham.com/blog/2009/11/17/the-should-word/</link>
      <pubDate>Tue, 17 Nov 2009 23:52:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/17/the-should-word/</guid>
      <description>I&amp;rsquo;ve been reading Coders at Workrecently and one of my favourite answers from the first chapter interview with Jamie Zawinski is the following:
A variation of this which I&amp;rsquo;ve noticed myself doing is internally telling myself that I &amp;lsquo;should&amp;rsquo; know how to do certain things much better than I can.
This is most typically the case when I&amp;rsquo;m struggling with something on a new project that I&amp;rsquo;m working on and while it is indirectly useful for helping to identify areas that we can work I think the voice in itself is not that helpful to our learning.</description>
    </item>
    
    <item>
      <title>Clojure: A first look at recursive functions</title>
      <link>https://markhneedham.com/blog/2009/11/17/clojure-a-first-look-at-recursive-functions/</link>
      <pubDate>Tue, 17 Nov 2009 11:10:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/17/clojure-a-first-look-at-recursive-functions/</guid>
      <description>I&amp;rsquo;m working through Stuart Halloway&amp;rsquo;s &amp;lsquo;Programming Clojure&amp;rsquo; book and I just got to the section where it first mentions recursive functions.
It&amp;rsquo;s a simple function to countdown from a given number to zero and then return that sequence.
This was one of the examples from the book:
(defn countdown [result x] (if (zero? x) result (recur (conj result x) (dec x)))) That function could then be called like this:
(countdown [] 5) I wanted to see what the function would look if we didn&amp;rsquo;t have the empty vector as a parameter.</description>
    </item>
    
    <item>
      <title>A reminder to talk to the rubber duck</title>
      <link>https://markhneedham.com/blog/2009/11/15/a-reminder-to-talk-to-the-rubber-duck/</link>
      <pubDate>Sun, 15 Nov 2009 21:06:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/15/a-reminder-to-talk-to-the-rubber-duck/</guid>
      <description>Alongside taking a break from itperhaps one of the most effective ways to solve a tricky problem is to describe it to someone else.
This typically isn&amp;rsquo;t a problem when pair programming although it can still happen if a pair stays together too long and both start making the same possibly incorrect assumptions when trying to solve a problem.
In this case it makes sense to call someone else over who can lend a fresh perspective to the problem.</description>
    </item>
    
    <item>
      <title>Mercurial: hg bisect</title>
      <link>https://markhneedham.com/blog/2009/11/14/mercurial-hg-bisec/</link>
      <pubDate>Sat, 14 Nov 2009 11:20:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/14/mercurial-hg-bisec/</guid>
      <description>We&amp;rsquo;ve been using Mercuriallocally on the project I&amp;rsquo;ve been working on and Philshowed me a cool feature called &amp;lsquo;bisect&amp;rsquo; a couple of weeks ago which can be helpful for working out which revision we managed to break our code in.
It&amp;rsquo;s been ported across from Gitand is included in Mercurial from version 1.0.0 rather than just being an extension.
From the bisect extension page:
The usage has changed a bit now that it&amp;rsquo;s included as part of the initial download.</description>
    </item>
    
    <item>
      <title>TDD: Combining the when and then steps</title>
      <link>https://markhneedham.com/blog/2009/11/14/tdd-combining-the-when-and-then-steps/</link>
      <pubDate>Sat, 14 Nov 2009 00:17:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/14/tdd-combining-the-when-and-then-steps/</guid>
      <description>I&amp;rsquo;ve written before about my favoured approach of writing tests in such a way that they have clear &amp;lsquo;Given/When/Then&amp;rsquo; sectionsand something which I come across quite frequently is tests where the latter steps have been combined into one method call which takes care of both of these.
An example of this which I came across recently was roughly like this:
@Test public void shouldCalculatePercentageDifferences() { verifyPercentage(50, 100, 100); verifyPercentage(100, 100, 0); verifyPercentage(100, 50, -50); } private void verifyPercentage(int originalValue, int newValue, int expectedValue) { assertEquals(expectedValue, new PercentageCalculator().</description>
    </item>
    
    <item>
      <title>Adapting our approach for the context</title>
      <link>https://markhneedham.com/blog/2009/11/13/adapting-our-approach-for-the-context/</link>
      <pubDate>Fri, 13 Nov 2009 06:34:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/13/adapting-our-approach-for-the-context/</guid>
      <description>Amongst the many posts written recently about unit testing one which I quite liked was written by fallenroguewhere he describes how in different contexts/cultures a different approach is favoured which means a technique like TDD might not work so well.
cashto, the guy who wrote the original post, agrees with this in the comments on that post:
Recently I&amp;rsquo;ve started noticing that it&amp;rsquo;s quite beneficial to consider the contextthat we&amp;rsquo;re working in for all sorts of approaches we might want to take.</description>
    </item>
    
    <item>
      <title>Coding: Pushing the logic back</title>
      <link>https://markhneedham.com/blog/2009/11/11/coding-pushing-the-logic-back/</link>
      <pubDate>Wed, 11 Nov 2009 20:30:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/11/coding-pushing-the-logic-back/</guid>
      <description>I was reading a post on the law of demeter by Richard Hartrecently and it reminded me that a lot of the refactorings that we typically do on code bases are about pushing the logic back into objects instead of exposing data and performing calculations elsewhere.
An example that I spotted where we did this recently was while building a &amp;lsquo;BusinessSummary&amp;rsquo; object whose state was based on the state of a collection of other objects.</description>
    </item>
    
    <item>
      <title>Legacy Code: Sensing</title>
      <link>https://markhneedham.com/blog/2009/11/10/legacy-code-sensing/</link>
      <pubDate>Tue, 10 Nov 2009 06:33:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/10/legacy-code-sensing/</guid>
      <description>In &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; Michael Feathers describes two reasons for wanting to break dependencies in our code - to allow separation and sensing.
The former describes the need to get a piece of code into a test harness while the latter describes the need to assert whether that piece of code is doing what we want it to.
On the projects I&amp;rsquo;ve worked on we&amp;rsquo;ve tended to run into problems with the latter more frequently and Matt and I actually ran into this problem when we were refactoring some code into a role based interface approach.</description>
    </item>
    
    <item>
      <title>Coding: The agent noun class</title>
      <link>https://markhneedham.com/blog/2009/11/08/coding-the-agent-noun-class/</link>
      <pubDate>Sun, 08 Nov 2009 20:44:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/08/coding-the-agent-noun-class/</guid>
      <description>I refer quite frequently to a post written by my colleague Peter Gillard Moss where he describes the agent noun code smell for class names.
An agent noun is defined by Wikipediaas:
Some typical examples of this are classes which end in the name &amp;lsquo;Manager&amp;rsquo;, &amp;lsquo;Retriever&amp;rsquo;, &amp;lsquo;Helper&amp;rsquo; or even &amp;lsquo;Controller&amp;rsquo; as Carlos points out.
It&amp;rsquo;s often the case that these classes better describe a method which belongs on another object and I quite like Peter&amp;rsquo;s idea that agent nouns are useful for describing the roles that our objects carry out.</description>
    </item>
    
    <item>
      <title>Knowing when to persevere and when to change approach</title>
      <link>https://markhneedham.com/blog/2009/11/08/knowing-when-to-persevere-and-when-to-change-approach/</link>
      <pubDate>Sun, 08 Nov 2009 09:57:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/08/knowing-when-to-persevere-and-when-to-change-approach/</guid>
      <description>It strikes me that one of the most important skills to develop in software development is knowing when to keep going with an approach to a problem and when we should stop and try something else.
This situation doesn&amp;rsquo;t always happen because if we have two people available and realise before we start on the task that there is some doubt as to which solution is the most appropriate then we can adopt a set based approachwhereby we try out multiple potential solutions in parallel.</description>
    </item>
    
    <item>
      <title>TDD: Useful when new on a project</title>
      <link>https://markhneedham.com/blog/2009/11/06/tdd-useful-when-new-on-a-project/</link>
      <pubDate>Fri, 06 Nov 2009 21:57:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/06/tdd-useful-when-new-on-a-project/</guid>
      <description>Something which I&amp;rsquo;ve noticed over the last few projects that I&amp;rsquo;ve worked on is that at the beginning when I don&amp;rsquo;t know very much at all about the code base, domain and so on is that pairing with someone to TDD something seems to make it significantly easier for me to follow what&amp;rsquo;s going on than other approaches I&amp;rsquo;ve seen.
I thought that it was probably because I&amp;rsquo;m more used to that approach than any other but in Michael Feathers&amp;rsquo; description of TDD in &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; he points out the following:</description>
    </item>
    
    <item>
      <title>Consistency in the code base</title>
      <link>https://markhneedham.com/blog/2009/11/04/consistency-in-the-code-base/</link>
      <pubDate>Wed, 04 Nov 2009 21:39:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/04/consistency-in-the-code-base/</guid>
      <description>I&amp;rsquo;ve had quite a few discussions with various different colleagues about coding consistency over the last year or so and PatKua and Frank Trindadehave both written posts suggesting that we should look to have coding standards on projects in order to avoid the type of pain that having an inconsistent approach can lead to.
From what I&amp;rsquo;ve noticed there seem to be two reasons that we end up with inconsistent code on projects:</description>
    </item>
    
    <item>
      <title>Reading Code: Unity</title>
      <link>https://markhneedham.com/blog/2009/11/04/reading-code-unity/</link>
      <pubDate>Wed, 04 Nov 2009 01:22:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/04/reading-code-unity/</guid>
      <description>I spent a bit of time reading some of the Unitycode base recently and I decided to try out a variation of Michael Feathers &amp;lsquo;Effect Sketching&amp;rsquo; which my colleague Dave Cameronshowed me.
&amp;lsquo;Effect Sketching&amp;rsquo; is a technique Feathers describes in &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; and the idea is that we sketch a diagram showing the interactions between the fields and methods in a specific class while browsing through the code.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapter 8 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/11/03/book-club-working-effectively-with-legacy-code-chapter-8-michael-feathers/</link>
      <pubDate>Tue, 03 Nov 2009 00:16:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/11/03/book-club-working-effectively-with-legacy-code-chapter-8-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapter 8 - &amp;lsquo;How do I add a feature?&amp;rsquo; - of Michael Feather&amp;rsquo;s &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
This chapter covers Test Driven Development and a technique I hadn&amp;rsquo;t come across before called Programming By Difference.
These are some of my thoughts and our discussion of the chapter:
I&amp;rsquo;ve noticed a few times recently that delaying our desire to remove duplication until we can properly see where the duplication lies might be a better strategy than prematurely removing duplication and creating a meaningless abstraction which can be difficult to remove.</description>
    </item>
    
    <item>
      <title>Coding: Copy/Paste then refactor</title>
      <link>https://markhneedham.com/blog/2009/10/31/coding-copypaste-then-refactor/</link>
      <pubDate>Sat, 31 Oct 2009 17:54:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/31/coding-copypaste-then-refactor/</guid>
      <description>We&amp;rsquo;re currently reading Michael Feathers &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; in our technical book cluband one interesting technique which he describes in the Test Driven Development section is copying and pasting some existing code, changing the appropriate part to make the test pass before refactoring to remove the duplication we just created.
I can&amp;rsquo;t remember coming across this approach previously but I found myself using it to solve a Scala problem last week.</description>
    </item>
    
    <item>
      <title>Coding: Invariant checking on dependency injected components</title>
      <link>https://markhneedham.com/blog/2009/10/31/coding-invariant-checking-on-dependency-injected-components/</link>
      <pubDate>Sat, 31 Oct 2009 03:00:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/31/coding-invariant-checking-on-dependency-injected-components/</guid>
      <description>I&amp;rsquo;ve written a couple of times previously about invariant checkingin constructorsand I had an interesting discussion with some colleagues recently around doing this type of defensive programming when the object in question has its dependencies injected by a container.
Quite often we would see code similar to this in a controller:
public class SomeController { public SomeController(Dependency1 valueOne, Dependency2 valueTwo) { AssertThat.isNotNull(valueOne); AssertThat.isNotNull(valueTwo); // and so on 	} } Where &amp;lsquo;SomeController&amp;rsquo; would have &amp;lsquo;Dependency1&amp;rsquo; and &amp;lsquo;Dependency2&amp;rsquo; set up in a Spring configuration file in this example.</description>
    </item>
    
    <item>
      <title>Coding: Consistency when invariant checking</title>
      <link>https://markhneedham.com/blog/2009/10/29/coding-consistency-when-invariant-checking/</link>
      <pubDate>Thu, 29 Oct 2009 23:06:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/29/coding-consistency-when-invariant-checking/</guid>
      <description>I wrote a while ago about reading the ASP.NET MVC source code and noticing that it makes use of code inside its constructors to ensure that null values can&amp;rsquo;t be passed inand while I&amp;rsquo;m still not convinced this is the way to go I think if we do take this approach then we need to ensure we do so consistently.
Something which happens quite often is that you&amp;rsquo;ll come across code which makes use of defensive programming in one of its constructors like so:</description>
    </item>
    
    <item>
      <title>Coding: Connascence - Some examples</title>
      <link>https://markhneedham.com/blog/2009/10/28/coding-connascence-some-examples/</link>
      <pubDate>Wed, 28 Oct 2009 22:43:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/28/coding-connascence-some-examples/</guid>
      <description>I&amp;rsquo;ve been reading Meilir Page Jones&amp;rsquo; &amp;lsquo;Fundamentals of Object Oriented Design in UML&amp;rsquo; recently and one of the chapters that I found the most interesting is the one where he talks about &amp;lsquo;connascence&amp;rsquo;.
Connascence describes the relation between two different bits of code and two bits of code are said to be connascent if a change to one bit of code would require a change to the other bit of the code or if some change to another piece of code would require both bits of code to changefor our program to still be correct.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 6 &amp; 7 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/10/26/book-club-working-effectively-with-legacy-code-chapters-6-7-michael-feathers/</link>
      <pubDate>Mon, 26 Oct 2009 23:10:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/26/book-club-working-effectively-with-legacy-code-chapters-6-7-michael-feathers/</guid>
      <description>In our latest technical book club we covered chapters 6 &amp;amp; 7 - &amp;lsquo;I Don&amp;rsquo;t Have Much Time And I Have To Change It&amp;rsquo; and &amp;lsquo;It Takes Forever To Make A Change&amp;rsquo; - of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
The first chapter discusses various different techniques that we can use to add in new code to a legacy code base. These include:
The second chapter discusses some common problems we may experience while trying to make changes.</description>
    </item>
    
    <item>
      <title>Scala: Converting an input stream to a string</title>
      <link>https://markhneedham.com/blog/2009/10/26/scala-converting-an-input-stream-to-a-string/</link>
      <pubDate>Mon, 26 Oct 2009 06:32:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/26/scala-converting-an-input-stream-to-a-string/</guid>
      <description>I was playing around with Scala over the weekend and one thing that I wanted to do was get the data from a HTTP response as a string so that I could parse the xml returned.
The data source is fairly small so loading the stream into memory wasn&amp;rsquo;t a problem.
Carlospointed me to a bit of Java code that did thisand I converted it as literally as possible into Scala.</description>
    </item>
    
    <item>
      <title>Testing End Points: Integration tests vs Contract tests</title>
      <link>https://markhneedham.com/blog/2009/10/25/testing-integration-points-integration-tests-vs-contract-tests/</link>
      <pubDate>Sun, 25 Oct 2009 00:04:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/25/testing-integration-points-integration-tests-vs-contract-tests/</guid>
      <description>We recently changed the way that we test against our main integration point on the project I&amp;rsquo;ve been working on so that in our tests we retrieve the service object from our dependency injection container instead of &amp;lsquo;newing&amp;rsquo; one up.
Our tests therefore went from looking like this:
[Test] public void ShouldTestSomeService() { var someService = new SomeService(); // and so on } To something more like this:
[Test] public void ShouldTestSomeService() { var someService = UnityFactory.</description>
    </item>
    
    <item>
      <title>Value objects: Immutability and Equality</title>
      <link>https://markhneedham.com/blog/2009/10/23/value-objects-immutability-and-equality/</link>
      <pubDate>Fri, 23 Oct 2009 23:39:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/23/value-objects-immutability-and-equality/</guid>
      <description>A couple of weeks ago I was working on some code where I wanted to create an object composed of the attributes of several other objects.
The object that I wanted to construct was a read only object so it seemed to make sense to make it a value object. The object would be immutable and once created none of the attributes of the object would change.
This was my first attempt at writing the code for this object:</description>
    </item>
    
    <item>
      <title>Coding: The primitive obsession</title>
      <link>https://markhneedham.com/blog/2009/10/23/coding-the-primitive-obsession/</link>
      <pubDate>Fri, 23 Oct 2009 00:08:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/23/coding-the-primitive-obsession/</guid>
      <description>I recently came across an interesting post by Naresh Jain where he details a discussion at the SDTConf 2009about the code smells that hurt people the most.
Naresh describes the &amp;lsquo;primitive obsession&amp;rsquo; anti pattern as being the crux of poor design:
When I first read this post I thought Naresh was only talking about primitives such as strings, integers, decimals and so on but after discussing this pattern at today&amp;rsquo;s book clubTompointed out that the problem might also be defined as &amp;lsquo;describing high level domain concepts with low level types&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>The effect of adding new people to project teams</title>
      <link>https://markhneedham.com/blog/2009/10/21/the-effect-of-adding-new-people-to-project-teams/</link>
      <pubDate>Wed, 21 Oct 2009 18:06:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/21/the-effect-of-adding-new-people-to-project-teams/</guid>
      <description>I&amp;rsquo;ve read quite frequently about the challenges we will experience when adding new people onto teams, including Fred Brooks&amp;rsquo; &amp;lsquo;The Mythical Man Month&amp;rsquo;, but having seen quite a few new people join the project that I&amp;rsquo;ve been working on over the last few months I think there are actually some significant benefits they can provide.
I think the impact new people provide is particularly useful on a challenging projectwhere they may be able to have a much more immediate impact.</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 3,4 &amp; 5 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/10/20/book-club-working-effectively-with-legacy-code-chapters-34-5-michael-feathers/</link>
      <pubDate>Tue, 20 Oct 2009 07:01:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/20/book-club-working-effectively-with-legacy-code-chapters-34-5-michael-feathers/</guid>
      <description>In our latest technical book club we discussed chapters 3,4 and 5 of Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo; - &amp;lsquo;Sensing and Separation&amp;rsquo;, &amp;lsquo;The Seam Model&amp;rsquo; and &amp;lsquo;Tools&amp;rsquo;.
These are some of my thoughts from our discussion of these chapters:
In my time coding professionally I have experienced difficulties with the former than the latter. I have certainly written code which is bordering impossible to test but it seems like maybe writing code which is difficult to sense against is less problematic than code which we struggle to get into a test harness.</description>
    </item>
    
    <item>
      <title>Coding: Role based interfaces</title>
      <link>https://markhneedham.com/blog/2009/10/18/coding-role-based-interfaces/</link>
      <pubDate>Sun, 18 Oct 2009 20:33:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/18/coding-role-based-interfaces/</guid>
      <description>I&amp;rsquo;ve read a bit about role based interfacesbut I&amp;rsquo;ve never really quite understood how the idea could be applied into our code - this week my colleague Matt Dunn has been teaching me.
We had a requirement to show some content on every page of the website we&amp;rsquo;re working on. The content would be slightly different depending on which business process you&amp;rsquo;re doing.
Our first solution made use of an already defined &amp;lsquo;BusinessType&amp;rsquo; property which allowed us to work out which content we needed to create.</description>
    </item>
    
    <item>
      <title>Treating Javascript as an integration point</title>
      <link>https://markhneedham.com/blog/2009/10/17/treating-javascript-as-an-integration-point/</link>
      <pubDate>Sat, 17 Oct 2009 09:16:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/17/treating-javascript-as-an-integration-point/</guid>
      <description>A couple of weeks ago I wrote a post about my software development journeyover the last year and towards the end I described the difficulties we were having in making changes to some C# code while being sure that we hadn&amp;rsquo;t broken javascript functionality that also relied on that code.
We typically have code which looks like this:
public class SomeController { public ActionResult SomeControllerAction() { var someModel = new SomeModel { Property1 = &amp;#34;my Property&amp;#34; }; return new JsonResult { Data = someModel }; } } public class SomeModel { public string Property1 { get; set; } } We would make use of this type of object in javascript code like so:</description>
    </item>
    
    <item>
      <title>Book Club: Working Effectively With Legacy Code - Chapters 1 &amp; 2 (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/10/14/book-club-working-effectively-with-legacy-code-chapters-1-2-michael-feathers/</link>
      <pubDate>Wed, 14 Oct 2009 23:21:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/14/book-club-working-effectively-with-legacy-code-chapters-1-2-michael-feathers/</guid>
      <description>We&amp;rsquo;ve decided to go back to reading a book in our technical book club after a few months of discussing different papers and the chosen book is Michael Feathers&amp;rsquo; &amp;lsquo;Working Effectively With Legacy Code&amp;rsquo;.
We started off by reading the first two chapters titled &amp;lsquo;Changing Software&amp;rsquo; and &amp;lsquo;Working with Feedback&amp;rsquo; and these are some of my thoughts and our discussion of the chapters:
Tomsuggested that if we have good enough tests then we shouldn&amp;rsquo;t be fearful of making changes at any time.</description>
    </item>
    
    <item>
      <title>Scala: Code Kata #2 - Karate Chop - Array Slicing Attempt</title>
      <link>https://markhneedham.com/blog/2009/10/13/scala-code-kata-2-karate-chop-array-slicing-attempt/</link>
      <pubDate>Tue, 13 Oct 2009 07:00:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/13/scala-code-kata-2-karate-chop-array-slicing-attempt/</guid>
      <description>In my continued attempts to learn a bit of Scala I&amp;rsquo;ve been trying out the 2nd of Dave Thomas&amp;rsquo; code katas - Karate Chop- while using an array slicing approach.
I&amp;rsquo;ve tried out the iterative approach to this problem in Java about a year ago and it ends up being quite verbose so I thought the array slicing one would be much more concise.
I didn&amp;rsquo;t drive any of the solutions I worked on from the tests - in fact I only got all the tests provided by Dave Thomas running right at the end which was probably a mistake in retrospect.</description>
    </item>
    
    <item>
      <title>DSLs: Violating the builder pattern</title>
      <link>https://markhneedham.com/blog/2009/10/12/dsls-violating-the-builder-pattern/</link>
      <pubDate>Mon, 12 Oct 2009 22:20:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/12/dsls-violating-the-builder-pattern/</guid>
      <description>I recently came across an interesting post by Dave Thomaswhere he discussed several domain specific languages (DSLs) he&amp;rsquo;s come across and suggests that a lot of them seem to be trying too hard to read like the english language instead of focusing on describing a vocabulary for their specific domain
Reading this post reminded me that I fell into this trap earlier in the year while doing some work to create a builder pattern in our code which didn&amp;rsquo;t need to make use of a &amp;lsquo;Build&amp;rsquo; method but instead would make use of C#&amp;lsquo;s implicit operator to automatically convert the builder to an object at the appropriate moment.</description>
    </item>
    
    <item>
      <title>Pair Programming: API exploration</title>
      <link>https://markhneedham.com/blog/2009/10/11/pair-programming-api-exploration/</link>
      <pubDate>Sun, 11 Oct 2009 14:49:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/11/pair-programming-api-exploration/</guid>
      <description>A colleague and I were working on some code a couple of weeks ago which mostly revolved around investigating the C# reflection API to work out which methods we needed to use.
My colleague was driving while we were doing this and our progress seemed very much based on intuition about the API rather than being gradual.
In fact it was quite similar to one of the situations in which Uncle Bob suggests TDD doesn&amp;rsquo;t work so well:</description>
    </item>
    
    <item>
      <title>TDD: Keeping assertions clear</title>
      <link>https://markhneedham.com/blog/2009/10/10/tdd-keeping-assertions-clear/</link>
      <pubDate>Sat, 10 Oct 2009 11:07:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/10/tdd-keeping-assertions-clear/</guid>
      <description>Something which I noticed was a problem with the first example test that I provided in my post about API readability and testabilityis that the assertion we are making is not that great.
[Test] public void ShouldConstructModelForSomeSituation() { Assert.AreEqual(DateTime.Today.ToDisplayFormat(), model.SomeDate()); } It&amp;rsquo;s not really obvious what the expected result is supposed to be except that it should be the &amp;lsquo;DisplayFormat&amp;rsquo;. If that fails then we&amp;rsquo;ll need to navigate to the &amp;lsquo;ToDisplayFormat&amp;rsquo; method to work out what that method does.</description>
    </item>
    
    <item>
      <title>Coding: API readability/testability</title>
      <link>https://markhneedham.com/blog/2009/10/10/coding-api-readabilitytestability/</link>
      <pubDate>Sat, 10 Oct 2009 00:21:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/10/coding-api-readabilitytestability/</guid>
      <description>About a month ago or so I described how we did some work to ensure that we were calling a class the same way in our tests as in our production codeand while I think that was a good choice in that situation we came across a similar problem this week where we weren&amp;rsquo;t so sure.
The piece of code in question was being used to create the view model for a page and one of the pieces of data that we wanted to show on this page was the date on which something would be valid which is currently today&amp;rsquo;s date.</description>
    </item>
    
    <item>
      <title>Software Development Apprenticeship: Some thoughts</title>
      <link>https://markhneedham.com/blog/2009/10/07/software-development-apprenticeship-some-thoughts/</link>
      <pubDate>Wed, 07 Oct 2009 20:32:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/07/software-development-apprenticeship-some-thoughts/</guid>
      <description>I recently came across a interview with Dave Hooverwhere he talks through the idea of working as an apprentice software developer and suggests some ways to do this more effectively.
I think the easiest thing to get wrong in software development is to over estimate our ability and there is even a study that proves that theory. Hoover refers to this as &amp;lsquo;having an accurate self assessment&amp;rsquo;.
If we work on the same project for a while then we&amp;rsquo;re going to get pretty good at navigating that code base and we&amp;rsquo;ll probably be able to solve any problem and add any piece of functionality fairly easily which only helps fuel the belief.</description>
    </item>
    
    <item>
      <title>Book Club: Integration tests are a scam (J.B. Rainsberger)</title>
      <link>https://markhneedham.com/blog/2009/10/06/book-club-integration-tests-are-a-scam-j-b-rainsberger/</link>
      <pubDate>Tue, 06 Oct 2009 23:37:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/06/book-club-integration-tests-are-a-scam-j-b-rainsberger/</guid>
      <description>In our latest book club we discussed J.B. Rainsberger&amp;rsquo;s presentation from Agile 2009 titled &amp;lsquo;Integration tests are a scam&amp;rsquo;.
These are some of my thoughts and our discussion of the video:
I&amp;rsquo;m intrigued as to how repositories and factories would fit into this picture as I&amp;rsquo;m not sure whether they count as services, entities or value types. I&amp;rsquo;ve worked on code bases where we&amp;rsquo;ve created interfaces for them but I don&amp;rsquo;t know if that means they would be services or that we did something wrong.</description>
    </item>
    
    <item>
      <title>My Software Development journey: Year 3-4</title>
      <link>https://markhneedham.com/blog/2009/10/05/my-software-development-journey-year-3-4/</link>
      <pubDate>Mon, 05 Oct 2009 18:52:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/05/my-software-development-journey-year-3-4/</guid>
      <description>Just over a year ago I wrote a blog post about my software development journey up to that pointand I thought it&amp;rsquo;d be interesting to write a new version for the 13 months or so since then to see what the main things I&amp;rsquo;ve learned are.
I&amp;rsquo;ve only really scratched the surface of what there is to know about functional programming so far but some of the ideas that I&amp;rsquo;ve come across seem very intriguing and I think they can help us to write more expressive and easier to understand code.</description>
    </item>
    
    <item>
      <title>Coding: Rules of thumb</title>
      <link>https://markhneedham.com/blog/2009/10/04/coding-rules-of-thumb/</link>
      <pubDate>Sun, 04 Oct 2009 16:59:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/04/coding-rules-of-thumb/</guid>
      <description>I recently came across a post by Ayende where he talks about the need for tests to justify themselvesand describes his approach to testing which doesn&amp;rsquo;t involved TDDing all the code he writes.
While this approach clearly works well for Ayende I really like the following comment by Alex Simkin:
This reminds me of a conversation I was having with a few colleagues a while ago where we were discussing whether we should look to test drive absolutely everything that we write or whether we should make that decision on a case by case basis.</description>
    </item>
    
    <item>
      <title>Learn one thing a day</title>
      <link>https://markhneedham.com/blog/2009/10/03/learn-one-thing-a-day/</link>
      <pubDate>Sat, 03 Oct 2009 13:58:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/03/learn-one-thing-a-day/</guid>
      <description>I came across an interesting post about a month or so written by Chad Fowler on Tim Ferriss&amp;rsquo; blog where he suggested that a useful way of ensuring that we are always improving is to ask the question &amp;lsquo;Am I better than yesterday?&amp;rsquo; at the end of each day.
I really like this idea and I think it fits in quite nicely with the approach that I take which is to try and ensure that I learn one new thing each day.</description>
    </item>
    
    <item>
      <title>QTB: Agile Governance - Managing the Enterprise Issues</title>
      <link>https://markhneedham.com/blog/2009/10/01/qtb-agile-governance-managing-the-enterprise-issues/</link>
      <pubDate>Thu, 01 Oct 2009 23:10:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/01/qtb-agile-governance-managing-the-enterprise-issues/</guid>
      <description>I went to watch the latest ThoughtWorks Australia Quarterly Technology Briefing in Sydney on Wednesday where my colleague Lindy Stephens, Suncorp&amp;rsquo;s Josh Melville and Lonely Planet&amp;rsquo;s Nigel Dalton presented on &amp;lsquo;Agile Governance - Managing the Enterprise Issues&amp;rsquo;.
I was actually unsure of how interesting it would be to me as the title seemed a bit dull but it was actually quite entertaining and not at all what I expected.
These are some of the things I picked up from the presentation:</description>
    </item>
    
    <item>
      <title>Scala: 99 problems</title>
      <link>https://markhneedham.com/blog/2009/09/30/scala-99-problems/</link>
      <pubDate>Wed, 30 Sep 2009 23:39:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/30/scala-99-problems/</guid>
      <description>My colleague Liz Douglassand I have been playing around with Scala and Liz recently pointed out Phil Gold&amp;rsquo;s &amp;lsquo;Ninety Nine Scala Problems&amp;rsquo; which we&amp;rsquo;ve been working through.
One in particular which is quite interesting is number 7 where we need to flatten a nested list structure.
Therefore given this input:
flatten(List(List(1, 1), 2, List(3, List(5, 8)))) We would expect this output:
res0: List[Any] = List(1, 1, 2, 3, 5, 8) I tried this out on my own using recursion but kept ending up creating a stack overflow by writing code that never terminated!</description>
    </item>
    
    <item>
      <title>Book Club: Design Sense (Michael Feathers)</title>
      <link>https://markhneedham.com/blog/2009/09/30/book-club-design-sense-michael-feathers/</link>
      <pubDate>Wed, 30 Sep 2009 00:42:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/30/book-club-design-sense-michael-feathers/</guid>
      <description>In our latest technical book club we discussed a presentation given at the Norwegian Developers Conferenceby Michael Feathers titled &amp;lsquo;Design Sense&amp;rsquo;.
In this presentation he presents quite a number of different ideas that he has learned from his experiences in software development over the years.
These are some of my thoughts and our discussion:
Davesuggested that perhaps this is related to Benford&amp;rsquo;s Lawwhich describes exponential growth processes.
I wonder whether this observation is somehow linked to the broken window theory whereby if a method is large then it is likley to increase in size since it probably already has some problems so it doesn&amp;rsquo;t seem so bad to throw some more code into the method.</description>
    </item>
    
    <item>
      <title>Learning from others/Learning yourself</title>
      <link>https://markhneedham.com/blog/2009/09/28/learning-from-otherslearning-yourself/</link>
      <pubDate>Mon, 28 Sep 2009 00:02:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/28/learning-from-otherslearning-yourself/</guid>
      <description>Something which has become quite apparent to me recently is that I learn things far more quickly if I try it out myself and make mistakes than if I just rely on someone else&amp;rsquo;s word for it but some more experienced colleagues seem able to use information explained to them fair more effectively and don&amp;rsquo;t necessarily need to go through this process.
While reading through the Dreyfus Model one of the ideas that is suggested is that once people reach the level of &amp;lsquo;Proficient&amp;rsquo; at any given skill then they are able to learn from the experiences of others without needing to experience something themselves.</description>
    </item>
    
    <item>
      <title>The Duct Tape Programmer: Some thoughts</title>
      <link>https://markhneedham.com/blog/2009/09/26/the-duct-tape-programmer-some-thoughts/</link>
      <pubDate>Sat, 26 Sep 2009 17:16:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/26/the-duct-tape-programmer-some-thoughts/</guid>
      <description>I just came across quite an insightful post by Jak Charlton titled &amp;lsquo;Ship it or Ship out&amp;rsquo; in which he talks about the importance of shipping the software we work on, referring to Joel&amp;rsquo;s recent post &amp;lsquo;The Duct Tape Programmer&amp;rsquo;.
When I first read Joel&amp;rsquo;s post I didn&amp;rsquo;t really like it because it seems to downplay the role of unit testing when coding, something which I believe is quite important from my experience of software development so far.</description>
    </item>
    
    <item>
      <title>TDD: It makes you question what you&#39;re doing</title>
      <link>https://markhneedham.com/blog/2009/09/25/tdd-it-makes-you-question-what-youre-doing/</link>
      <pubDate>Fri, 25 Sep 2009 23:48:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/25/tdd-it-makes-you-question-what-youre-doing/</guid>
      <description>My colleague Matt Dunn and I have been putting a lot of tests around some code over the last few days so that we can safely make some changes around that area and having finally created our safety net we&amp;rsquo;ve moved onto adding in the new functionality.
We&amp;rsquo;re test driving the new bit of functionality whereas with the previous code only the code had been written with no unit tests and it&amp;rsquo;s been quite interesting seeing the contrast in the style of code which seems to come out from these differing styles.</description>
    </item>
    
    <item>
      <title>Book Club: Versioning your database (K. Scott Allen)</title>
      <link>https://markhneedham.com/blog/2009/09/24/book-club-versioning-your-database-k-scott-allen/</link>
      <pubDate>Thu, 24 Sep 2009 07:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/24/book-club-versioning-your-database-k-scott-allen/</guid>
      <description>In our latest technical book club we discussed a series of posts written by K. Scott Allen about getting your database under version control.
These are some of my thoughts and our discussion:
Several colleagues pointed out that this approach can lead to us having quite a lot of fine grained change scripts - each maybe adding or altering one column - and that an approach they had used with some success was to allow changes to be made up until a change script had been applied in an environment outside of the team&amp;rsquo;s control, typically UAT.</description>
    </item>
    
    <item>
      <title>TDD: Copying and pasting tests</title>
      <link>https://markhneedham.com/blog/2009/09/22/tdd-copying-and-pasting-tests/</link>
      <pubDate>Tue, 22 Sep 2009 23:39:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/22/tdd-copying-and-pasting-tests/</guid>
      <description>I&amp;rsquo;ve been re-reading a post my colleague Ian Cartwright wrote earlier this year about treating test code the same way as production codeand one thing which stands out as something which I&amp;rsquo;m certainly guilty off is copying and pasting tests.
Ian lists the following problems with doing this:
Despite this I&amp;rsquo;ve often felt that at some stage we should have factored tests down to a stage where removing any more of the &amp;lsquo;duplication&amp;rsquo; would actually harm the readability of the testand that at this stage perhaps it&amp;rsquo;s ok to copy the skeleton of a test and reuse it for your next test.</description>
    </item>
    
    <item>
      <title>TDD: Tests that give us a false confidence of coverage</title>
      <link>https://markhneedham.com/blog/2009/09/21/tdd-tests-that-give-us-a-false-confidence-of-coverage/</link>
      <pubDate>Mon, 21 Sep 2009 22:49:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/21/tdd-tests-that-give-us-a-false-confidence-of-coverage/</guid>
      <description>During J.B. Rainsberger&amp;rsquo;s presentation at Agile 2009 titled &amp;lsquo;Integration tests are a scam&amp;rsquo; he suggests that having lots of integrationt tests covering our code can give us a false sense of confidence that we are testing our code and I think the same can happen with unit tests as well if we&amp;rsquo;re not careful how we write them.
It&amp;rsquo;s important to ensure that our unit tests are actually testing something useful otherwise the cost of writing and maintaining them will outweigh the benefits that we derive from doing so.</description>
    </item>
    
    <item>
      <title>TDD: Keeping test intent when using test builders</title>
      <link>https://markhneedham.com/blog/2009/09/20/tdd-keeping-test-intent-when-using-test-builders/</link>
      <pubDate>Sun, 20 Sep 2009 12:06:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/20/tdd-keeping-test-intent-when-using-test-builders/</guid>
      <description>While the test data builderpattern is quite a useful one for simplifying the creation of test data in our tests I think we need to be quite careful when using it that we don&amp;rsquo;t lose the intent of the test that we&amp;rsquo;re writing.
The main advantage that I see with this pattern is that by using it we can provide default values for properties of our objects which aren&amp;rsquo;t important for the bit of functionality that we&amp;rsquo;re currently testing but which need to be provided otherwise the test can&amp;rsquo;t actually be run.</description>
    </item>
    
    <item>
      <title>Set Based Concurrent Engineering: A simple example</title>
      <link>https://markhneedham.com/blog/2009/09/19/set-based-concurrent-engineering-a-simple-example/</link>
      <pubDate>Sat, 19 Sep 2009 02:24:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/19/set-based-concurrent-engineering-a-simple-example/</guid>
      <description>One of my favourite ideas that I came across while reading the Poppendieck&amp;rsquo;s Lean Software Developmentis set based concurrent engineering which encourages us to keep our options open with regards to the solution to a problem until we absolutely need to decide on an approach after which we probably can&amp;rsquo;t easily change that decision so we will most likely stick with it.
I like the idea but on the projects I&amp;rsquo;ve worked on we often seem to take a more point based approach - there will be some discussion up front on the potential solutions to a problem and eventually one of them will be considered to be the best solution and we go and implement that one.</description>
    </item>
    
    <item>
      <title>TDD: Testing with generic abstract classes</title>
      <link>https://markhneedham.com/blog/2009/09/18/tdd-testing-with-generic-abstract-classes/</link>
      <pubDate>Fri, 18 Sep 2009 00:40:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/18/tdd-testing-with-generic-abstract-classes/</guid>
      <description>In a post I wrote earlier in the week I described a dilemma we were having testing some code which made use of abstract classesand Perryn Fowler, Liz Keogh and Pat Maddox pointed out that a useful approach for this problem would be to make use of an abstract test class.
The idea here is that we create an equivalent hierarchy to our production code for our tests which in the example that I provided would mean that we have roughly the following setup:</description>
    </item>
    
    <item>
      <title>Coding: Watch out for mutable code</title>
      <link>https://markhneedham.com/blog/2009/09/16/coding-watch-out-for-mutable-code/</link>
      <pubDate>Wed, 16 Sep 2009 23:31:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/16/coding-watch-out-for-mutable-code/</guid>
      <description>I&amp;rsquo;ve been doing some more work recently on trying to reduce the number of fields in some of our classes and moving any logic related to calculations into the methods that use the logicbut managed to break part of our application recently by doing that a bit too casually and not realising that the code I&amp;rsquo;d inlined was actually being mutated later on.
The code I&amp;rsquo;d refactored originally looked like this:</description>
    </item>
    
    <item>
      <title>Book Club: SOLID Principles (Uncle Bob Martin)</title>
      <link>https://markhneedham.com/blog/2009/09/16/book-club-solid-principles-uncle-bob-martin/</link>
      <pubDate>Wed, 16 Sep 2009 01:11:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/16/book-club-solid-principles-uncle-bob-martin/</guid>
      <description>In our latest technical book club we discussed Uncle Bob Martin&amp;rsquo;s presentation to the Norwegian Developers Conferenceon &amp;lsquo;SOLID Design&amp;rsquo;.
These principles of object oriented design are also written up on Uncle Bob&amp;rsquo;s websiteand are also in his book &amp;lsquo;Agile Principles, Patterns and Practices&amp;rsquo;.
I read most of the book a couple of years ago but I don&amp;rsquo;t always remember all of the principles when I&amp;rsquo;m coding so it was good to revisit them again.</description>
    </item>
    
    <item>
      <title>Scala: The &#39;_=&#39; mixed identifier</title>
      <link>https://markhneedham.com/blog/2009/09/14/scala-the-_-mixed-identifier/</link>
      <pubDate>Mon, 14 Sep 2009 23:49:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/14/scala-the-_-mixed-identifier/</guid>
      <description>I&amp;rsquo;ve been playing around with Scala a bit and in particular following some of the code examples from Daniel Spiewak&amp;rsquo;s &amp;lsquo;Scala for Java Refugees&amp;rsquo; article on Traits and Types.
One thing that I got a bit confused about in one of the examples was the use of the &amp;lsquo;_&amp;rsquo; at the end of one of the function definitions:
class MyContainer[T] { private var obj:T = null def value = obj def value_=(v:T) = obj = v } val cont = new MyContainer[String] cont.</description>
    </item>
    
    <item>
      <title>TDD: Testing sub classes</title>
      <link>https://markhneedham.com/blog/2009/09/13/tdd-testing-sub-classes/</link>
      <pubDate>Sun, 13 Sep 2009 22:21:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/13/tdd-testing-sub-classes/</guid>
      <description>We ran into another interesting testing dilemma while refactoring the view model code which I described in an earlier post to the point where we have an abstract class and three sub classeswhich means that we now have 3 classes which did the same thing 80% of the time.
As I mentioned in a post a couple of weeks agoone of the main refactorings that we did was to move some calls to dependency methods from the constructor and into properties so that those calls would only be made if necessary.</description>
    </item>
    
    <item>
      <title>Coding: An abstract class/ASP.NET MVC dilemma</title>
      <link>https://markhneedham.com/blog/2009/09/13/coding-an-abstract-classasp-net-mvc-dilemma/</link>
      <pubDate>Sun, 13 Sep 2009 00:19:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/13/coding-an-abstract-classasp-net-mvc-dilemma/</guid>
      <description>I previously described a refactoring that we have been working on to reduce the number of fields and delay calculationsand the actual goal behind this refactoring was to get the code into shape so that we could add in the logic for a new business process that our application needed to handle.
The code in question defines view models being used by different partial views which are rendered depending on the business process that the user is currently executing.</description>
    </item>
    
    <item>
      <title>TDD: Test only constructors</title>
      <link>https://markhneedham.com/blog/2009/09/12/tdd-test-only-constructors/</link>
      <pubDate>Sat, 12 Sep 2009 00:35:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/12/tdd-test-only-constructors/</guid>
      <description>I wrote previously how we&amp;rsquo;d been doing some work to change the way that we get a &amp;lsquo;User&amp;rsquo; object into our systemand one mistake that we made intially was to have another constructor on the &amp;lsquo;User&amp;rsquo; object which was being used in all our unit tests which involved the user in some way.
The original reason that this &amp;lsquo;test constructor&amp;rsquo; was created was to make it easier to construct a &amp;lsquo;fake user&amp;rsquo; which we were using in some of our functional tests but had ended up being used in unit tests as well.</description>
    </item>
    
    <item>
      <title>Impersonators: Using them in showcases</title>
      <link>https://markhneedham.com/blog/2009/09/10/impersonators-using-them-in-showcases/</link>
      <pubDate>Thu, 10 Sep 2009 00:23:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/10/impersonators-using-them-in-showcases/</guid>
      <description>Towards the end of my colleague Julio Maia&amp;rsquo;s blog post about the impersonator patternhe suggests that the standalone environment that we can create through the use of impersonators can be quite useful for showcases and we actually had a recent occasion where we had to switch mid-showcase from using the integration environment to make use of an impersonator.
In this case part of the environment went down in the middle of the showcase so if we wanted to keep on going then that was our only optionbut in general the expectation of the business is that our showcases show them the functionality of the application end to end.</description>
    </item>
    
    <item>
      <title>A reminder that sometimes it&#39;s best just to ask</title>
      <link>https://markhneedham.com/blog/2009/09/07/a-reminder-that-sometimes-its-best-just-to-ask/</link>
      <pubDate>Mon, 07 Sep 2009 22:27:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/07/a-reminder-that-sometimes-its-best-just-to-ask/</guid>
      <description>Recently my pair and I were trying to merge some changes into our code that we had just picked up fron updating from the trunk and realised that we weren&amp;rsquo;t actually sure how to resolve that merge since it seemed to conflict with what we&amp;rsquo;d been working on.
We hadn&amp;rsquo;t checked in for longer than we would have liked to due to a bit of a checkin pile up which had happened because the build on the CI server had been failing for a few hours due to a temporary problem we were having with an external dependency.</description>
    </item>
    
    <item>
      <title>Fiddler: Trying to work out how it all hooks together</title>
      <link>https://markhneedham.com/blog/2009/09/06/fiddler-trying-to-work-out-how-it-all-hooks-together/</link>
      <pubDate>Sun, 06 Sep 2009 23:25:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/06/fiddler-trying-to-work-out-how-it-all-hooks-together/</guid>
      <description>I mentioned previouslythat we&amp;rsquo;re making use of Fiddler quite a lot on my current project, mainly to check the traffic going to and from the service layer, and I&amp;rsquo;m quite curious how it actually works.
In particular I wanted to know:
As far as I&amp;rsquo;m aware the source code for Fiddler isn&amp;rsquo;t available so a colleague and I tracked the various proxy settings when Fiddler was turned on and off and also had a look at some registry settings.</description>
    </item>
    
    <item>
      <title>Coding: Checking invariants in a factory method</title>
      <link>https://markhneedham.com/blog/2009/09/06/coding-checking-invariants-in-a-factory-method/</link>
      <pubDate>Sun, 06 Sep 2009 00:46:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/06/coding-checking-invariants-in-a-factory-method/</guid>
      <description>Something which we discussed quite frequently when studying Domain Driven Designin our technical book club earlier this year was where the code which checked whether we had setup an object correctly should reside.
Shortly after that I suggested that I didn&amp;rsquo;t think it should go in the constructor of an objectbut that we should rely on objects to be good citizens and not pass in null values or the like to other objects.</description>
    </item>
    
    <item>
      <title>Book Club: Promiscuous Pairing &amp; Beginner&#39;s Mind (Arlo Belshee)</title>
      <link>https://markhneedham.com/blog/2009/09/05/book-club-promiscuous-pairing-beginners-mind-arlo-belkshee/</link>
      <pubDate>Sat, 05 Sep 2009 16:12:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/05/book-club-promiscuous-pairing-beginners-mind-arlo-belkshee/</guid>
      <description>In this weeks book club we discussed Arlo Belshee&amp;rsquo;s paper &amp;lsquo;Promiscuous Pairing and Beginner&amp;rsquo;s Mind&amp;rsquo; where he presents the idea of rotating pairs more frequently than we might usually, suggesting that the optimal rotation time is 90 minutes.
I remember coming across the idea of promiscuous pairing a couple of years ago but I hadn&amp;rsquo;t read the paper all the way through and so far haven&amp;rsquo;t worked on a team where we&amp;rsquo;ve really tried out his ideas.</description>
    </item>
    
    <item>
      <title>Coding Dojo #22: Scala, lamdaj, Project Euler</title>
      <link>https://markhneedham.com/blog/2009/09/04/coding-dojo-22-scala-lamdaj-project-euler/</link>
      <pubDate>Fri, 04 Sep 2009 00:26:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/04/coding-dojo-22-scala-lamdaj-project-euler/</guid>
      <description>In our latest coding dojo we played around with Scalaand lambdajwhile attempting to solve some of the problems on the Project Eulerwebsite.
We started off on two different machines with two of us having a look at solving the first Project Euler problem in Scala and the other two trying to solve it in Java while using the lambdaj library.
1.to(999).filter(x =&amp;gt; x%3 == 0 || x%5 == 0).foldLeft(0)((acc,x) =&amp;gt; acc + x) 1.</description>
    </item>
    
    <item>
      <title>Coding: Reduce fields, delay calculations</title>
      <link>https://markhneedham.com/blog/2009/09/02/coding-reduce-fields-delay-calculations/</link>
      <pubDate>Wed, 02 Sep 2009 23:52:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/02/coding-reduce-fields-delay-calculations/</guid>
      <description>A pattern in code which I&amp;rsquo;ve noticed quite frequently lately is that of executing calculations in the constructor of an object and then storing the result in a field on the object.
From the small amount of experience I have playing around with functional languages I have come across the idea of lazy evaluation of functions quite frequently and I think it&amp;rsquo;s something that we can apply in object oriented languages as well.</description>
    </item>
    
    <item>
      <title>TDD: Test the behaviour rather than implementation</title>
      <link>https://markhneedham.com/blog/2009/09/02/tdd-test-the-behaviour-rather-than-implementation/</link>
      <pubDate>Wed, 02 Sep 2009 00:42:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/09/02/tdd-test-the-behaviour-rather-than-implementation/</guid>
      <description>I previously wrote about some duplicated codewe&amp;rsquo;d taken the time to remove from our code base and one something else that we found when working with this code is that a lot of the tests around this code were testing the implementation/internal state of the object rather than testing the behaviour that they expected to see.
I find it makes more sense to test the behaviour since this is the way that the object will most likely be used in our production code.</description>
    </item>
    
    <item>
      <title>Coding: The guilty bystander</title>
      <link>https://markhneedham.com/blog/2009/08/30/coding-the-guilty-bystander/</link>
      <pubDate>Sun, 30 Aug 2009 20:07:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/30/coding-the-guilty-bystander/</guid>
      <description>While discussing the duplication in our code based which I described in an earlier postwith some other colleagues earlier this week I realised that I had actually gone past this code a couple of times previously, seen that there was a problem with it but hadn&amp;rsquo;t taken any steps to fix it other than to make a mental note that I would fix it when I got the chance.
At the time we needed to fix a bug around this code and noticed that the logic was scattered all around the place but decided to just add to the mess and put our fix in without refactoring the code to make it better for people coming to the code in future.</description>
    </item>
    
    <item>
      <title>Coding: Group the duplication, then remove it</title>
      <link>https://markhneedham.com/blog/2009/08/30/coding-group-the-duplication-then-remove-it/</link>
      <pubDate>Sun, 30 Aug 2009 13:13:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/30/coding-group-the-duplication-then-remove-it/</guid>
      <description>One of the most common activities for software developers is removing duplication from code and Daverecently showed me a technique which I hadn&amp;rsquo;t seen before for doing this more effectively - first group all the code into one place without removing any of the duplication and then remove the duplication when everything is in one place.
The code where we tried out this technique was being used to construct the model for the navigation at the top of the pages on the website we&amp;rsquo;re working on and before we grouped the duplication the code looked a bit like this:</description>
    </item>
    
    <item>
      <title>Book Club: Unshackle your domain (Greg Young)</title>
      <link>https://markhneedham.com/blog/2009/08/29/book-club-unshackle-your-domain-greg-young/</link>
      <pubDate>Sat, 29 Aug 2009 09:54:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/29/book-club-unshackle-your-domain-greg-young/</guid>
      <description>In this week&amp;rsquo;s book club we continued with the idea of discussing videos, this week&amp;rsquo;s selection being Greg Young&amp;rsquo;s &amp;lsquo;Unshackle your Domain&amp;rsquo; presentation from QCon San Francisco in November 2008. He also did a version of this talk in the February European Alt.NET meeting.
In this presentation Greg talks about Command Query Separationat the architecture level and explicit state transitions amongst other things.
Jonathan Oliver has created a useful resource pageof the material that&amp;rsquo;s been written about some of these ideas as well.</description>
    </item>
    
    <item>
      <title>jQuery: $.post, &#39;jsonp&#39; and cross-domain requests</title>
      <link>https://markhneedham.com/blog/2009/08/27/jquery-post-jsonp-and-cross-domain-requests/</link>
      <pubDate>Thu, 27 Aug 2009 22:39:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/27/jquery-post-jsonp-and-cross-domain-requests/</guid>
      <description>We spent a bit of time yesterday looking through the jQuery code trying to work out why a cross domain request we were making using jQuery&amp;rsquo;s &amp;lsquo;$.post&amp;rsquo; function wasn&amp;rsquo;t working.
In hindsight perhaps it should have been obvious that you wouldn&amp;rsquo;t be able to do that but I didn&amp;rsquo;t completely understand how we were able to do cross domain requests were possible at all but we had some &amp;lsquo;$.getJson&amp;rsquo; &amp;lsquo;jsonp&amp;rsquo; function calls around our code base which were doing just that.</description>
    </item>
    
    <item>
      <title>Pair Programming: Observations on anti-patterns</title>
      <link>https://markhneedham.com/blog/2009/08/27/pair-programming-observations-on-anti-patterns/</link>
      <pubDate>Thu, 27 Aug 2009 00:02:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/27/pair-programming-observations-on-anti-patterns/</guid>
      <description>I&amp;rsquo;ve been pairing a bit more regularly recently after more sporadic pairing sessions over the last 9 or 10 months and I&amp;rsquo;ve noticed that I&amp;rsquo;ve picked up some habits which aren&amp;rsquo;t really that effective when pairing so I&amp;rsquo;m on a mission to sort that out.
As a result of this it is useful to commentate on what you&amp;rsquo;re about to do and not move around the code at break neck speed, but instead take your time and pause after each step to allow your pair to follow where you are in the code.</description>
    </item>
    
    <item>
      <title>Coding: Coupling and Expressiveness</title>
      <link>https://markhneedham.com/blog/2009/08/25/coding-coupling-and-expressiveness/</link>
      <pubDate>Tue, 25 Aug 2009 22:42:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/25/coding-coupling-and-expressiveness/</guid>
      <description>We came across an interesting situation in our code base recently whereby two coding approaches which I consider important for writing maintainable code seemed to come into conflict with each other.
The code we were working on needed to retrieve some customer details from a backend system by making use of the current user&amp;rsquo;s &amp;lsquo;customerId&amp;rsquo; which we can retrieve from the &amp;lsquo;LoggedInUser&amp;rsquo;.
My initial thought was that since we only needed one property of the &amp;lsquo;LoggedInUser&amp;rsquo; we could just pass in the &amp;lsquo;customerId&amp;rsquo; instead of the &amp;lsquo;LoggedInUser&amp;rsquo;:</description>
    </item>
    
    <item>
      <title>Rock Scissors Paper: TDD as if you meant it</title>
      <link>https://markhneedham.com/blog/2009/08/24/rock-scissors-paper-tdd-as-if-you-meant-it/</link>
      <pubDate>Mon, 24 Aug 2009 22:11:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/24/rock-scissors-paper-tdd-as-if-you-meant-it/</guid>
      <description>I decided to spend a bit of time on Saturday having another go at writing Rock Scissors Paper while following Keith Braithwaite&amp;rsquo;s TDD as if you meant it exercise.
We previously did this exercise at a coding dojobut I wanted to see what happens when you code for a longer period of time with this exercise since we typically only code for maybe a couple of hours at a dojo.</description>
    </item>
    
    <item>
      <title>Book Club: What I&#39;ve learned about DDD since the book (Eric Evans)</title>
      <link>https://markhneedham.com/blog/2009/08/24/book-club-what-ive-learned-about-ddd-since-the-book-eric-evans/</link>
      <pubDate>Mon, 24 Aug 2009 18:20:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/24/book-club-what-ive-learned-about-ddd-since-the-book-eric-evans/</guid>
      <description>This week book club became video club as we discussed Eric Evans&amp;rsquo; QCon London presentation &amp;lsquo;What I&amp;rsquo;ve learned about DDD since the book&amp;rsquo;.
I was lucky enough to be able to attend this presentation liveand we previously ran a book club where I briefly summarised what I&amp;rsquo;d learnt but this gave everyone else an opportunity to see it first hand.
There are some of my thoughts and our discussion of the presentation:</description>
    </item>
    
    <item>
      <title>Pair Programming: Keeping both people engaged</title>
      <link>https://markhneedham.com/blog/2009/08/24/pair-programming-keeping-both-people-engaged/</link>
      <pubDate>Mon, 24 Aug 2009 18:18:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/24/pair-programming-keeping-both-people-engaged/</guid>
      <description>I&amp;rsquo;ve written a few times previously about pair programmingand how I think it&amp;rsquo;s one of the best practices I&amp;rsquo;ve seen used on agile teams but in order to ensure that we&amp;rsquo;re making the best use of this practice it&amp;rsquo;s important to ensure that both people are engaged.
It is often quite difficult to persuade people who aren&amp;rsquo;t used to extreme programming that having two people working at the same machine is actually beneficial and this task can be made even more difficult if one person is losing focus or interest and therefore isn&amp;rsquo;t actually adding much value in that pairing session.</description>
    </item>
    
    <item>
      <title>Learning: Thoughts on doing so more effectively</title>
      <link>https://markhneedham.com/blog/2009/08/24/learning-thoughts-on-doing-so-more-effectively/</link>
      <pubDate>Mon, 24 Aug 2009 18:15:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/24/learning-thoughts-on-doing-so-more-effectively/</guid>
      <description>One of the quite common sayings that I&amp;rsquo;ve come across when discussing student/teacher type situations is that it&amp;rsquo;s the teacher&amp;rsquo;s responsibility to present the material to the student in a way that they can understand and that if the student still doesn&amp;rsquo;t understand then the teacher hasn&amp;rsquo;t done their job properly.
I believe that this approach is also followed in the UK education system nowadays and while it makes sense in a way I don&amp;rsquo;t think it&amp;rsquo;s a particularly useful belief to have as a student since it seems to encourage you to be quite passive in the learning process.</description>
    </item>
    
    <item>
      <title>Coding: Unused code</title>
      <link>https://markhneedham.com/blog/2009/08/21/coding-unused-code/</link>
      <pubDate>Fri, 21 Aug 2009 08:56:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/21/coding-unused-code/</guid>
      <description>An interesting problem that we have come across a few times over the past 6 months is the dilemma about what to do when start work on a feature and get part way through it before it gets descoped from the current iteration, maybe to be picked up later on but maybe not.
The easiest, and there most common, approach is to just leave the code in the code base half complete and then hopefully return to it at some later stage.</description>
    </item>
    
    <item>
      <title>TDD: Asserting on test dependency code</title>
      <link>https://markhneedham.com/blog/2009/08/19/tdd-asserting-on-test-dependency-code/</link>
      <pubDate>Wed, 19 Aug 2009 23:19:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/19/tdd-asserting-on-test-dependency-code/</guid>
      <description>Something I&amp;rsquo;ve noticed a bit lately is tests which setup a load of dependencies for a test and then do assertions on that setup before getting on to calling the system under test.
The code tends to be similar to this:
public void ShouldHopefullyDoSomeAwesomeStuff() { // setup via expectations for dependency1 and dependency2 	Assert.IsNotNull(dependency1.DependedOnMethod);	new SystemUnderTest(dependency1, dependency2).DoThatStuff(); // test assertions } I&amp;rsquo;ve done this a fair few times myself and I used to believe that it actually made the test more valuable since we were ensuring that the dependencies were in a good state before we executed the test.</description>
    </item>
    
    <item>
      <title>Impersonators: Finding the enabling point</title>
      <link>https://markhneedham.com/blog/2009/08/19/impersonators-finding-the-enabling-point/</link>
      <pubDate>Wed, 19 Aug 2009 00:43:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/19/impersonators-finding-the-enabling-point/</guid>
      <description>One of the other interesting problems that we&amp;rsquo;ve come across while making use of different impersonators in our build process, and which Julio mentions at the end of his comment on Gil Zilberfeld&amp;rsquo;s blog post, is trying to work out where the correct place for the impersonator is.
Ideally we want to put the impersonator in a place where we can easily turn it on or off depending on whether we want to use the impersonator or the real end point.</description>
    </item>
    
    <item>
      <title>Pulling from github on Windows</title>
      <link>https://markhneedham.com/blog/2009/08/18/pulling-from-github-on-windows/</link>
      <pubDate>Tue, 18 Aug 2009 00:33:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/18/pulling-from-github-on-windows/</guid>
      <description>My colleague Dave Cameronhas been telling me about his adventures playing around with Git Sharp(a C# port of the Java Git implementation jGit) so I thought I&amp;rsquo;d get a copy of the code and have a look as well.
I tend to check out all code bases from my host machine instead of virtual machine so I got the code all checked out on the Mac and accessed it via a shared folder on my VM.</description>
    </item>
    
    <item>
      <title>Law of Demeter: Some thoughts</title>
      <link>https://markhneedham.com/blog/2009/08/17/law-of-demeter-some-thoughts/</link>
      <pubDate>Mon, 17 Aug 2009 21:12:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/17/law-of-demeter-some-thoughts/</guid>
      <description>Phil Haackwrote a post a few weeks ago about the law of demeterand how it&amp;rsquo;s not just about reducing the number of dots that appear on one line.
This is a nice side effect of following the law of demeter but I often feel that the main benefit we get from following it is that code becomes easier to changesince we haven&amp;rsquo;t exposed the state of an object all over the place.</description>
    </item>
    
    <item>
      <title>Impersonators: Why do we need them?</title>
      <link>https://markhneedham.com/blog/2009/08/16/impersonators-why-do-we-need-them/</link>
      <pubDate>Sun, 16 Aug 2009 22:11:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/16/impersonators-why-do-we-need-them/</guid>
      <description>I wrote previously about an impersonator we are using on my projectwhich Martin Fowler has dubbed the &amp;lsquo;self initializing fake&amp;rsquo; and although I thought this was the only type of situation where we might use this approach, from discussing this with my colleague Julio Maiaand from experiences on the project I&amp;rsquo;m working on I realise there are other advantages to this approach as well.
Before we used it all our acceptance tests went from the UI all the way through to the back end via a service layer which often led to tests failing due to timeouts (the service took longer than expected to respond) or problems somewhere in the back end.</description>
    </item>
    
    <item>
      <title>Builders hanging off class vs Builders in same namespace</title>
      <link>https://markhneedham.com/blog/2009/08/15/builders-hanging-off-class-vs-builders-in-same-namespace/</link>
      <pubDate>Sat, 15 Aug 2009 10:53:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/15/builders-hanging-off-class-vs-builders-in-same-namespace/</guid>
      <description>I wrote a couple of months ago about an approach we&amp;rsquo;re using to help people find test data buildersin our code base by hanging those builders off a class called &amp;lsquo;GetBuilderFor&#39;and I think it&amp;rsquo;s worked reasonably well.
However, a couple of weeks ago my colleague Lu Ningsuggested another way to achieve our goal of allowing people to find the builders easily.
The approach he suggested is to put all of the builders in the same namespace, for example &amp;lsquo;Builders&amp;rsquo;, so that if someone wants to find out if a builder already exists they can just type &amp;lsquo;Builders.</description>
    </item>
    
    <item>
      <title>Challenging projects and the five stages of grief</title>
      <link>https://markhneedham.com/blog/2009/08/13/challenging-projects-and-the-five-stages-of-grief/</link>
      <pubDate>Thu, 13 Aug 2009 17:20:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/13/challenging-projects-and-the-five-stages-of-grief/</guid>
      <description>One of the things that I&amp;rsquo;ve noticed over the past few years of working on software delivery projects is that the most challenging projects, the ones that most people hate working on, tend to last the longest yet teach you the most although maybe not immediately.
The problem is that a lot of the time we are in a state of frustration with all the things that are wrong about the project and therefore don&amp;rsquo;t focus on the things that we can do to make our situation better and improve the chances of the project to deliver.</description>
    </item>
    
    <item>
      <title>Zen Mind, Beginners Mind: Book Review</title>
      <link>https://markhneedham.com/blog/2009/08/12/zen-mind-beginners-mind-book-review/</link>
      <pubDate>Wed, 12 Aug 2009 09:06:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/12/zen-mind-beginners-mind-book-review/</guid>
      <description>Zen Mind, Beginner&amp;rsquo;s Mindby Shunryu Suzuki
I first came across the actual term beginner&amp;rsquo;s mindwhen reading through the &amp;lsquo;Wear The White Belt&amp;rsquo; chapter of Apprenticeship Patternsalthough it was often mentioned to me on one of the first projects I did at ThoughtWorks a couple of years ago that people liked teaching me things because I just took the information in pretty much without questioning.
I find nowadays that I analyse what people tell me way a lot more and then compare it against what I already know to see if it adds to my understanding.</description>
    </item>
    
    <item>
      <title>Dreyfus Model: More thoughts</title>
      <link>https://markhneedham.com/blog/2009/08/10/dreyfus-model-more-thoughts/</link>
      <pubDate>Mon, 10 Aug 2009 20:36:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/10/dreyfus-model-more-thoughts/</guid>
      <description>Since we discussed the Dreyfus Model in book cluba few weeks ago I&amp;rsquo;ve noticed that I&amp;rsquo;m more aware of my own level of skill at different tasks and references to the model appear more frequent at least amongst my colleagues.
These are some of the things I&amp;rsquo;ve been thinking about:
In Pragmatic Learning and ThinkingAndy Hunt suggested that one way to make use of the Dreyfus Model is to analyse the skill level of people that we interact with and then adjust the way we present information to them accordingly which I think is a good idea but requires a reasonable amount of skill to do.</description>
    </item>
    
    <item>
      <title>Coding Dojo #21: TDD as if you meant it revisited</title>
      <link>https://markhneedham.com/blog/2009/08/08/coding-dojo-21-tdd-as-if-you-meant-it-revisited/</link>
      <pubDate>Sat, 08 Aug 2009 23:50:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/08/coding-dojo-21-tdd-as-if-you-meant-it-revisited/</guid>
      <description>In this weeks dojo we decided to revisit the &amp;ldquo;TDD as if you meant it&amp;rsquo; exercise originally invented by Keith Braithwaite for the Software Craftsmanship Conference but recently tried out at the Alt.NET UK Conference in London.
The idea was to write code for &amp;lsquo;tic tac toe&amp;rsquo; or &amp;lsquo;naughts and crosses&amp;rsquo; and we were following these requirements:
The code from Alt.NET UK is available on Google Codeand what I found quite interesting is that the solutions are really quite different to each other.</description>
    </item>
    
    <item>
      <title>Book Club: Object Role Stereotypes (Jeremy Miller)</title>
      <link>https://markhneedham.com/blog/2009/08/08/book-club-object-role-stereotypes-jeremy-miller/</link>
      <pubDate>Sat, 08 Aug 2009 00:49:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/08/book-club-object-role-stereotypes-jeremy-miller/</guid>
      <description>In last week&amp;rsquo;s book club we discussed an article written by Jeremy Millerfor MSDN Magazine titled &amp;lsquo;Object Role Stereotypes&amp;rsquo; which discusses part of Rebecca Wirfs Brock&amp;rsquo;s book &amp;lsquo;Object Design&amp;rsquo;.
I&amp;rsquo;ve been trying to read Object Design for about a year since coming across the book while reading through the slides from JAOO Sydney 2008but I&amp;rsquo;ve often found the reading to be quite abstract and have struggled to work out how to apply the ideas to the coding I do day to day.</description>
    </item>
    
    <item>
      <title>Bear Shaving</title>
      <link>https://markhneedham.com/blog/2009/08/06/bear-shaving/</link>
      <pubDate>Thu, 06 Aug 2009 18:58:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/06/bear-shaving/</guid>
      <description>I recently came across a blog post by Seth Godin where he coins the term &amp;lsquo;bear shaving&#39;which is where we address the symptoms of a problem instead of addressing the problem.
The main example he gives is the idea of shaving a bearso that it can deal with the increased temperature caused by global warming instead of addressing the underlying problem which has led to this happening in the first place.</description>
    </item>
    
    <item>
      <title>Think a little, code a little</title>
      <link>https://markhneedham.com/blog/2009/08/05/think-a-little-code-a-little/</link>
      <pubDate>Wed, 05 Aug 2009 00:13:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/05/think-a-little-code-a-little/</guid>
      <description>I recently came across an interesting post by Frans Baumaentitled &amp;lsquo;Think first, doing is for later&amp;rsquo; which was linked to from Jeremy Miller&amp;rsquo;s blog entry about incremental delivery and continuous design.
Right now I find myself in favour of Jeremy&amp;rsquo;s approach which is more about writing some code and then getting some feedback on it and then writing some more code instead of spending a lot of time thinking before we write any code.</description>
    </item>
    
    <item>
      <title>Strong opinions, weakly held</title>
      <link>https://markhneedham.com/blog/2009/08/03/strong-opinions-weakly-held/</link>
      <pubDate>Mon, 03 Aug 2009 00:46:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/08/03/strong-opinions-weakly-held/</guid>
      <description>I find one of the most applicable mantras in software development is Bob Sutton&amp;rsquo;s idea that we should have strong opinions weakly held.
The idea as I understand it is that we shouldn&amp;rsquo;t sit on the fence but instead have an opinion that we research thoroughly and are prepared to back up. However, we shouldn&amp;rsquo;t become too attached to those opinions but instead be prepared to listen to alternative points of view and take those on where they prove more useful than our previous opinions.</description>
    </item>
    
    <item>
      <title>Coding Dojo #20: Groovy Sales Tax Problem</title>
      <link>https://markhneedham.com/blog/2009/07/31/coding-dojo-20-groovy-sales-tax-problem/</link>
      <pubDate>Fri, 31 Jul 2009 09:07:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/31/coding-dojo-20-groovy-sales-tax-problem/</guid>
      <description>Continuing with the Groovy theme, this week we worked on the ThoughtWorks code review tax problem which involved modeling different items that a customer could buy and the associated tax rules that different types of goods had.
We had 3 people this week so most of the time we had all 3 of us involved in driving the code, which was projected onto the television screen again, while rotating every 10 minutes or so.</description>
    </item>
    
    <item>
      <title>Book Club: Hexagonal Architecture (Alistair Cockburn)</title>
      <link>https://markhneedham.com/blog/2009/07/30/book-club-hexagonal-architecture-alistair-cockburn/</link>
      <pubDate>Thu, 30 Jul 2009 00:59:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/30/book-club-hexagonal-architecture-alistair-cockburn/</guid>
      <description>In our latest book club we discussed Alistair Cockburn&amp;rsquo;s Hexagonal Architecturewhich I first heard about around a year agoand was another of Dave Cameron&#39;s recommendations.
As I understand it, the article describes an architecture for our systems where the domain sits in the centre and other parts of the system depend on the domain while the domain doesn&amp;rsquo;t depend on anything concrete but is interacted with by various adapters.
These are some of my thoughts and our discussion of the article:</description>
    </item>
    
    <item>
      <title>Reading Code: Rhino Mocks</title>
      <link>https://markhneedham.com/blog/2009/07/28/reading-code-rhino-mocks/</link>
      <pubDate>Tue, 28 Jul 2009 00:05:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/28/reading-code-rhino-mocks/</guid>
      <description>I spent a bit of time recently reading through some of the Rhino Mocksto get a basic understanding of how some features work under the hood.
As well as just getting some practice at reading unfamiliar code I also wanted to know the following:
These are some of the things I learnt from my exploration:
I decided to try out MonoDevelopto see if I could keep on reading the code outside my VM.</description>
    </item>
    
    <item>
      <title>F#: Playing around with asynchronous workflows</title>
      <link>https://markhneedham.com/blog/2009/07/26/f-playing-around-with-asynchronous-workflows/</link>
      <pubDate>Sun, 26 Jul 2009 23:45:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/26/f-playing-around-with-asynchronous-workflows/</guid>
      <description>I spent a bit of time over the weekend playing around with F# asynchronous workflowsand seeing how they could be used to launch Firefox windows asynchronously for my FeedBurner graph creator.
Initially I decided to try out the &amp;lsquo;Async.RunWithContinuations&amp;rsquo; function which I recently read about on Matthew Podwysocki&amp;rsquo;s blog.
Matthew describes this as being a function which is useful for executing a single operation asynchronously and this worked out quite well for me as my application only has the ability to get one feed and then create a graph from its data.</description>
    </item>
    
    <item>
      <title>F#: Values, functions and DateTime</title>
      <link>https://markhneedham.com/blog/2009/07/25/f-values-functions-and-datetime/</link>
      <pubDate>Sat, 25 Jul 2009 14:10:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/25/f-values-functions-and-datetime/</guid>
      <description>One of the things I&amp;rsquo;ve noticed recently in my playing around with F# is that when we decide to wrap callsto the .NET DateTime methods there is a need to be quite careful that we are wrapping those calls with an F# function and not an F# value.
If we don&amp;rsquo;t do this then the DateTime method will only be evaluated once and then return the same value for every call which is probably not the behaviour we&amp;rsquo;re looking for.</description>
    </item>
    
    <item>
      <title>Cruise Agents: Reducing &#39;random&#39; build failures</title>
      <link>https://markhneedham.com/blog/2009/07/25/cruise-agents-reducing-random-build-failures/</link>
      <pubDate>Sat, 25 Jul 2009 11:28:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/25/cruise-agents-reducing-random-build-failures/</guid>
      <description>As I mentioned previously we&amp;rsquo;re making use of multiple cruise agents in our buildto allow us to run our acceptance tests in parallel, therefore allowing a build which would be nearly 2 hours if run in sequence to be completed in around 10 minutes.
Early on with this approach we were getting a lot of failures in our builds which weren&amp;rsquo;t directly related to the code being changed and were more to do with the various dependencies we were making use of.</description>
    </item>
    
    <item>
      <title>Wrapping collections: Inheritance vs Composition</title>
      <link>https://markhneedham.com/blog/2009/07/24/wrapping-collections-inheritance-vs-composition/</link>
      <pubDate>Fri, 24 Jul 2009 01:07:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/24/wrapping-collections-inheritance-vs-composition/</guid>
      <description>I wrote previously about the differences between wrapping collections and just creating extension methodsto make our use of collections in the code base more descriptive but I&amp;rsquo;ve noticed in code I&amp;rsquo;ve been reading recently that there appear to be two ways of wrapping the collection - using composition as I described previously but also extending the collection by using inheritance.
I was discussing this with Lu Ningrecently and he pointed out that if what we have is actually a collection then it might make more sense to extend the collection with a custom class whereas if the collection is just an implementation detail of some other domain concept then it would be better to use composition.</description>
    </item>
    
    <item>
      <title>Good Lazy and Bad Lazy</title>
      <link>https://markhneedham.com/blog/2009/07/21/good-lazy-and-bad-lazy/</link>
      <pubDate>Tue, 21 Jul 2009 23:10:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/21/good-lazy-and-bad-lazy/</guid>
      <description>One of the things I remember picking up from reading The Pragmatic Programmeris that developers need to be lazy in order to find better ways to solve problems and I came across a post by Philipp Lensson from a few years ago where he also suggests good developers are lazy and dumb.
Something which I&amp;rsquo;ve come to realise more recently is that it&amp;rsquo;s not necessarily true that being lazy as a developer is always a good thing - it depends in what way you are being lazy because there are certainly good and bad ways in which you can express your laziness!</description>
    </item>
    
    <item>
      <title>Coding: Quick feedback</title>
      <link>https://markhneedham.com/blog/2009/07/20/coding-quick-feedback/</link>
      <pubDate>Mon, 20 Jul 2009 21:10:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/20/coding-quick-feedback/</guid>
      <description>One of the most important things to achieve if we are to get any sort of productivity when writing code is to find ways to get the quickest feedback possible.
My general default stance with respect to this has always been to TDD code although I&amp;rsquo;ve found when coding in F# that I&amp;rsquo;m not actually sure what the overall best way to get quick feedback is.
This is partly because I haven&amp;rsquo;t been able to find a way to run tests easily from inside Visual Studio but also partly because even when you do this the code for the whole project needs to be recompiled before the tests can be run which takes time.</description>
    </item>
    
    <item>
      <title>F#: Active patterns for parsing xml</title>
      <link>https://markhneedham.com/blog/2009/07/19/f-active-patterns-for-parsing-xml/</link>
      <pubDate>Sun, 19 Jul 2009 12:12:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/19/f-active-patterns-for-parsing-xml/</guid>
      <description>I decided to spend some time doing some refactoring on the FeedBurner applicationthat I started working on last week and the first area I worked on was cleaning up the way that the xml we get from FeedBurner is parsed.
While playing around with the application from the command lineI realised that it didn&amp;rsquo;t actually cover error conditions - such as passing in an invalid feed name - very well and I thought this would be a good opportunity to make use of an active patternto handle this.</description>
    </item>
    
    <item>
      <title>Book Club: The Dreyfus Model (Stuart and Hubert Dreyfus)</title>
      <link>https://markhneedham.com/blog/2009/07/18/book-club-the-dreyfus-model-stuart-and-hubert-dreyfus/</link>
      <pubDate>Sat, 18 Jul 2009 10:40:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/18/book-club-the-dreyfus-model-stuart-and-hubert-dreyfus/</guid>
      <description>In our latest book club we discussed the Dreyfus Model, a paper written in 1980 by Stuart and Hubert Dreyfus.
I&amp;rsquo;ve become quite intrigued by the Dreyfus Model particularly since reading about its applicability to software development in Andy Hunt&amp;rsquo;s Pragmatic Learning and Thinkingand after looking through Pat Kua&amp;rsquo;s presentation on &amp;lsquo;Climbing the Dreyfus Ladder of Agile Practices&amp;rsquo; I thought it&amp;rsquo;d be interesting to study the original paper.
These are some of my thoughts and our discussion of the paper:</description>
    </item>
    
    <item>
      <title>F#: Passing command line arguments to a script</title>
      <link>https://markhneedham.com/blog/2009/07/16/f-passing-command-line-arguments-to-a-script/</link>
      <pubDate>Thu, 16 Jul 2009 07:40:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/16/f-passing-command-line-arguments-to-a-script/</guid>
      <description>I&amp;rsquo;ve been doing a bit of refactoring of my FeedBurner applicationso that I can call it from the command line with the appropriate arguments and one of the problems I came across is working out how to pass arguments from the command line into an F# script.
With a compiled application we are able to make use of the &amp;lsquo;EntryPointAttribute&amp;rsquo; to get access to the arguments passed in:
[&amp;lt;EntryPointAttribute&amp;gt;] let main args = ShowFeedBurnerStats args 0 Sadly this doesn&amp;rsquo;t work with a script but it was pointed out on Hub FSthat we can get access to all the command line arguments by using &amp;lsquo;Sys.</description>
    </item>
    
    <item>
      <title>Book Club: An agile approach to a legacy system (Chris Stevenson and Andy Pols)</title>
      <link>https://markhneedham.com/blog/2009/07/15/book-club-an-agile-approach-to-a-legacy-system-chris-stevenson-and-andy-pols/</link>
      <pubDate>Wed, 15 Jul 2009 00:53:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/15/book-club-an-agile-approach-to-a-legacy-system-chris-stevenson-and-andy-pols/</guid>
      <description>Our latest book club session was a discussion on a paper written by my colleague Chris Stevenson and Andy Pols titled &amp;lsquo;An Agile Approach to a Legacy System&amp;rsquo; which I think was written in 2004. This paper was suggested by Dave Cameron.
These are some of my thoughts and our discussion of the paper:
Although this paper is relatively short it&amp;rsquo;s probably been the most interesting one that we&amp;rsquo;ve looked at so far.</description>
    </item>
    
    <item>
      <title>Test Doubles: My current approach</title>
      <link>https://markhneedham.com/blog/2009/07/14/test-doubles-my-current-approach/</link>
      <pubDate>Tue, 14 Jul 2009 13:23:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/14/test-doubles-my-current-approach/</guid>
      <description>My colleague Sarah Taraporewalla recently wrote about her thoughts on test doubles(to use Gerard Meszaros&amp;rsquo; language) and it got me thinking about the approach I generally take in this area.
Most of the time I make use of the mocking library&amp;rsquo;s ability to stub out method calls on these dependencies.
I find that it generally seems to require less effort to do this than to create hand written stubs although chatting to Daveabout this he pointed out that one situation where it would make more sense to use a hand written stub is when stubbing out a clock/time provider.</description>
    </item>
    
    <item>
      <title>F#: A day writing a Feedburner graph creator</title>
      <link>https://markhneedham.com/blog/2009/07/12/f-a-day-writing-a-feedburner-graph-creator/</link>
      <pubDate>Sun, 12 Jul 2009 17:14:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/12/f-a-day-writing-a-feedburner-graph-creator/</guid>
      <description>I&amp;rsquo;ve spent a bit of the day writing a little application to take the xml from my Feedburner RSS feedand create a graph showing the daily &amp;amp; weekly average subscribers.
My initial thought was that I would be able to do something like this:
let ShowFeedBurnerStats feed = let statsUrl = &amp;#34;https://feedburner.google.com/api/awareness/1.0/GetFeedData?uri=%s&amp;amp;dates=2009-01-01,2009-07-11&amp;#34; sprintf statsUrl feed |&amp;gt; GetXml // more code Which actually results in the following compilation error:
The type &amp;#39;string&amp;#39; is not compatible with the type &amp;#39;Printf.</description>
    </item>
    
    <item>
      <title>F#: Wrapping .NET library calls</title>
      <link>https://markhneedham.com/blog/2009/07/12/f-wrapping-net-library-calls/</link>
      <pubDate>Sun, 12 Jul 2009 12:11:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/12/f-wrapping-net-library-calls/</guid>
      <description>I&amp;rsquo;ve been spending a bit of time writing some code to parse the xml of my Feedburner RSS feed and create a graph to show both the daily and weekly average subscribers which you can&amp;rsquo;t currently get from the Feedburner dashboard.
One thing which I found while doing this is that calls to the .NET base class library don&amp;rsquo;t seem to fit in that well with the way that you would typically compose functions together in F#.</description>
    </item>
    
    <item>
      <title>Continuous Integration: Community College Discussion</title>
      <link>https://markhneedham.com/blog/2009/07/11/continuous-integration-community-college-discussion/</link>
      <pubDate>Sat, 11 Jul 2009 14:13:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/11/continuous-integration-community-college-discussion/</guid>
      <description>We ran a session on Continuous Integration at the most recent Community College in the ThoughtWorks Sydney office.
It was roughly based around a CI Maturity Modelwhich I recently came across although the intention was to find out what other teams were doing CI wise.
I became a bit more aware of how little I know about CI after listening to a Software Engineering Radio interview with my colleague Chris Readso I was keen to see how other teams are approaching this problem.</description>
    </item>
    
    <item>
      <title>F#: Downloading a file from behind a proxy</title>
      <link>https://markhneedham.com/blog/2009/07/11/f-downloading-a-file-from-behind-a-proxy/</link>
      <pubDate>Sat, 11 Jul 2009 03:20:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/11/f-downloading-a-file-from-behind-a-proxy/</guid>
      <description>I&amp;rsquo;ve been continuing working on a little script to parse Cruise build dataand the latest task was to work out how to download my Google Graph API created image onto the local disk.
I&amp;rsquo;m using the WebClientclass to do this and the code looks like this:
let DownloadGraph (fileLocation:string) (uri:System.Uri) = async { let webClient = new WebClient() webClient.DownloadFileAsync(uri, fileLocation)} Sadly this doesn&amp;rsquo;t work when I run it from the client site where I have access to the build metrics as there is a corporate proxy sitting in the way.</description>
    </item>
    
    <item>
      <title>F#: Convert sequence to comma separated string</title>
      <link>https://markhneedham.com/blog/2009/07/09/f-convert-sequence-to-comma-separated-string/</link>
      <pubDate>Thu, 09 Jul 2009 22:32:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/09/f-convert-sequence-to-comma-separated-string/</guid>
      <description>I&amp;rsquo;ve been continuing playing around with parsing Cruise dataas I mentioned yesterday with the goal today being to create a graph from the build data.
After recommendations from Dean Cornishand Sam Newmanon Twitter I decided to give the Google Graph APIa try to do this and realised that I would need to create a comma separated string listing all the build times to pass to the Google API.
My initial thinking was that I could just pipe the sequence of values through &amp;lsquo;Seq.</description>
    </item>
    
    <item>
      <title>F#: Parsing Cruise build data</title>
      <link>https://markhneedham.com/blog/2009/07/08/f-parsing-cruise-build-data/</link>
      <pubDate>Wed, 08 Jul 2009 22:46:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/08/f-parsing-cruise-build-data/</guid>
      <description>I&amp;rsquo;ve been playing around a bit with the properties REST APIthat Cruise exposes to try and get together some build metrics and I decided it might be an interesting task to try and use F# for.
I&amp;rsquo;m making use of the &amp;lsquo;search&amp;rsquo; part of the API to return the metrics of all the builds run on a certain part of the pipeline and I then want to parse those results so that I can extract just the name of the agent that ran that build and the duration of that build.</description>
    </item>
    
    <item>
      <title>Book Club: Why noone uses functional languages (Philip Wadler)</title>
      <link>https://markhneedham.com/blog/2009/07/08/book-club-why-noone-uses-functional-languages-philip-wadler/</link>
      <pubDate>Wed, 08 Jul 2009 00:29:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/08/book-club-why-noone-uses-functional-languages-philip-wadler/</guid>
      <description>Our latest technical book club discussion was based around Philip Wadler&amp;rsquo;s paper &amp;lsquo;Why noone uses functional langauges&amp;rsquo; which he wrote in 1998. I came across this paper when reading some of the F# goals in the FAQson the Microsoft website.
These are some of my thoughts and our discussion of the paper:
I&amp;rsquo;m intrigued as to whether this will change as more people use functional languages or whether this is just something we will need to get used to.</description>
    </item>
    
    <item>
      <title>C#: Removing duplication in mapping code with partial classes</title>
      <link>https://markhneedham.com/blog/2009/07/07/c-removing-duplication-in-mapping-code-with-partial-classes/</link>
      <pubDate>Tue, 07 Jul 2009 18:11:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/07/c-removing-duplication-in-mapping-code-with-partial-classes/</guid>
      <description>One of the problems that we&amp;rsquo;ve come across while writing the mapping code for our anti corruption layeris that there is quite a lot of duplication of mapping similar types due to the fact that each service has different auto generated classes representing the same data structure.
We are making SOAP web service calls and generating classes to represent the requests and responses to those end points using SvcUtil. We then translate from those auto generated classes to our domain model using various mapper classes.</description>
    </item>
    
    <item>
      <title>Domain Driven Design: Anti Corruption Layer</title>
      <link>https://markhneedham.com/blog/2009/07/07/domain-driven-design-anti-corruption-layer/</link>
      <pubDate>Tue, 07 Jul 2009 09:05:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/07/domain-driven-design-anti-corruption-layer/</guid>
      <description>I previously wrote about someoftheDomain Driven Designpatterns we have noticed on my project and I think the pattern which ties all these together is the anti corruption layer.
The reason why you might use an anti corruption layer is to create a little padding between subsystems so that they do not leak into each other too much.
Even if the model we are using is being defined by an external subsystem I think it still makes sense to have an anti corruption layer, no matter how thin, to restrict any future changes we need to make in our code as a result of external system changes to that layer.</description>
    </item>
    
    <item>
      <title>Brownfield Application Development in .NET: Book Review</title>
      <link>https://markhneedham.com/blog/2009/07/06/brownfield-application-development-in-net-book-review/</link>
      <pubDate>Mon, 06 Jul 2009 00:43:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/06/brownfield-application-development-in-net-book-review/</guid>
      <description>Brownfield Application Development in .NETby Kyle Baley and Donald Belcham
I asked to be sent this book to review by Manning as I was quite intrigued to see how well it would complement Michael Feather&amp;rsquo;s Working Effectively with Legacy Code, the other book I&amp;rsquo;m aware of which covers approaches to dealing with non green field applications.
I often end up over complicating code in an attempt to create &amp;lsquo;abstractions&amp;rsquo; but by this definition I&amp;rsquo;m not really abstracting since I&amp;rsquo;m not simplifying but complicating!</description>
    </item>
    
    <item>
      <title>Domain Driven Design: Conformist</title>
      <link>https://markhneedham.com/blog/2009/07/04/domain-driven-design-conformist/</link>
      <pubDate>Sat, 04 Jul 2009 10:17:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/04/domain-driven-design-conformist/</guid>
      <description>Something which constantly surprises me about Domain Driven Designis how there is a pattern described in the book for just about every possible situation you find yourself in when coding on projects.
A lot of these patterns appear in the &amp;lsquo;Strategic Design&amp;rsquo; section of the book and one which is very relevant for the project I&amp;rsquo;m currently working on is the &amp;lsquo;Conformist&amp;rsquo; pattern which is described like so:
We are working on the front end of an application which interacts with some services to get and save the data from the website.</description>
    </item>
    
    <item>
      <title>Coding Dojo #19: Groovy Traveling salesman variation </title>
      <link>https://markhneedham.com/blog/2009/07/04/coding-dojo-19-groovy-traveling-salesman-variation/</link>
      <pubDate>Sat, 04 Jul 2009 09:36:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/04/coding-dojo-19-groovy-traveling-salesman-variation/</guid>
      <description>Our latest coding dojo involved working on a variation of the traveling salesman problemin Groovy again.
We had 8 people participating this week so we returned to the Randori format, rotating the pair at the keyboard every 7 minutes.
Give the number of people it might have actually been better to have a couple of machines and use the UberDojo format.
We also backed up a bit after around 3 cycles after realising that the code was becoming a bit horrific and spent 1 cycle working it into shape for the next one.</description>
    </item>
    
    <item>
      <title>F#: Pattern matching with the &#39;:?&#39; operator</title>
      <link>https://markhneedham.com/blog/2009/07/02/f-pattern-matching-with-the-operator/</link>
      <pubDate>Thu, 02 Jul 2009 23:10:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/02/f-pattern-matching-with-the-operator/</guid>
      <description>I&amp;rsquo;ve been doing a bit more reading of the Fakesource code and one interesting thing which I came across which I hadn&amp;rsquo;t seen was an active pattern which was making use of the &amp;lsquo;:?&amp;rsquo; operator to match the input type against .NET types.
let (|File|Directory|) (fileSysInfo : FileSystemInfo) = match fileSysInfo with | :? FileInfo as file -&amp;gt; File (file.Name) | :? DirectoryInfo as dir -&amp;gt; Directory (dir.Name, seq { for x in dir.</description>
    </item>
    
    <item>
      <title>Book Club: Logging - Release It (Michael Nygaard)</title>
      <link>https://markhneedham.com/blog/2009/07/02/book-club-logging-release-it-michael-nygaard/</link>
      <pubDate>Thu, 02 Jul 2009 12:04:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/07/02/book-club-logging-release-it-michael-nygaard/</guid>
      <description>Our latest technical book club session was a discussion of the logging section in Michael Nygard&amp;rsquo;s Release It.
I recently listened to an interview with Michael Nygard on Software Engineering Radioso I was interested in reading more of his stuff and Camsuggested that the logging chapter would be an interesting one to look at as it&amp;rsquo;s often something which we don&amp;rsquo;t spend a lot of time thinking about on software development teams.</description>
    </item>
    
    <item>
      <title>F#: What I&#39;ve learnt so far</title>
      <link>https://markhneedham.com/blog/2009/06/30/f-what-ive-learnt-so-far/</link>
      <pubDate>Tue, 30 Jun 2009 23:09:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/30/f-what-ive-learnt-so-far/</guid>
      <description>I did a presentation of some of the stuff that I&amp;rsquo;ve learnt from playing around with F# over the last six months or so at the most recent Alt.NET Sydney meeting.
I&amp;rsquo;ve included the slides below but there was also some interesting discussion as well.
I&amp;rsquo;ve put the code that I walked through in the presentation on bitbucket.</description>
    </item>
    
    <item>
      <title>F#: Setting properties like named parameters</title>
      <link>https://markhneedham.com/blog/2009/06/29/f-setting-properties-like-named-parameters/</link>
      <pubDate>Mon, 29 Jun 2009 00:28:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/29/f-setting-properties-like-named-parameters/</guid>
      <description>One of the most frustrating things for me lately about interacting with C# libraries from F# has been setting up objects through the use of properties.
While I am against the use of setters to construct objects in the first place, that&amp;rsquo;s the way that a lot of libraries work so it&amp;rsquo;s a bit of a necessary evil!
In C# we would typically make use of the object initializersyntax to do this, but in F# I&amp;rsquo;ve been writing code like this to do the same thing:</description>
    </item>
    
    <item>
      <title>F#: More thoughts on the forward &amp; application operators</title>
      <link>https://markhneedham.com/blog/2009/06/27/f-more-thoughts-on-the-forward-application-operators/</link>
      <pubDate>Sat, 27 Jun 2009 22:55:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/27/f-more-thoughts-on-the-forward-application-operators/</guid>
      <description>I&amp;rsquo;ve been spending a bit of time reading through the Fake source codeto try and understand how it works and one of the things which I quite like about it is the way the authors have made use of different F# operators to make expressions easier to read by reducing the number of brackets that need to be written and reordering the functions/values depending on the particular context.
One which I hadn&amp;rsquo;t seen before is the application operatorwhich is the opposite of the forward operatorwhich I have previously written about.</description>
    </item>
    
    <item>
      <title>Coding Dojo #18: Groovy Bowling Game</title>
      <link>https://markhneedham.com/blog/2009/06/26/coding-dojo-18-groovy-bowling-game/</link>
      <pubDate>Fri, 26 Jun 2009 18:15:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/26/coding-dojo-18-groovy-bowling-game/</guid>
      <description>This week&amp;rsquo;s dojo involved coding a familiar problem - the bowlinggame- in a different language, Groovy.
The code we wrote is available on bitbucket.
Cam, Deanand I took turns pairing with each other with the code projected onto a TV. As there were only a few of us the discussion on where we were taking the code tended to included everyone rather than just the two at the keyboard.
I was starting to write code like this:</description>
    </item>
    
    <item>
      <title>Safe refactoring: Removing object initializer, introducing builder</title>
      <link>https://markhneedham.com/blog/2009/06/26/safe-refactoring-removing-object-initializer-introducing-builder/</link>
      <pubDate>Fri, 26 Jun 2009 00:02:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/26/safe-refactoring-removing-object-initializer-introducing-builder/</guid>
      <description>I previously wrote about an approach we took to safely remove some duplicationand I recently followed a similar mantra to replace an object initializercall which had around 40 properties being setup with a builder to try and make the code a bit easier to understand.
We did have tests checking the values being setup by the object initializer so I was already able to refactor with some degree of safety - it would probably have been possible to just create the builder and build the object from that and then delete the old code and replace it with the new but I&amp;rsquo;ve caused myself too many problems from doing that before that I decided to try a more incremental approach.</description>
    </item>
    
    <item>
      <title>QTB: Agile Adoption - How to stuff it up</title>
      <link>https://markhneedham.com/blog/2009/06/24/qtb-agile-adoption-how-to-stuff-it-up/</link>
      <pubDate>Wed, 24 Jun 2009 23:58:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/24/qtb-agile-adoption-how-to-stuff-it-up/</guid>
      <description>I attended the most recent ThoughtWorks Quarterly Technology briefingon Tuesday which was titled &amp;lsquo;Agile Adoption - How to stuff it up&amp;rsquo; and presented by my colleagues Andy Marks and Martin Fowler.
There seems to be quite a few books out at the moment about how to introduce a more agile approach into your organisation - I&amp;rsquo;ve been reading Lean-Agile Software Developmentand Becoming Agileand there is also a book called Scaling Lean and Agile Development- so I was intrigued to see whether the messages from this talk would be similar to those in these books.</description>
    </item>
    
    <item>
      <title>Using Fiddler with IIS</title>
      <link>https://markhneedham.com/blog/2009/06/24/using-fiddler-with-iis/</link>
      <pubDate>Wed, 24 Jun 2009 17:46:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/24/using-fiddler-with-iis/</guid>
      <description>We&amp;rsquo;ve been using Fiddlerto debug the requests and responses sent via web services to a service layer our application interacts with and it works pretty well when you run the application using Cassinibut by default won&amp;rsquo;t work when you run the website through IIS.
The key to this as one of my colleagues (who gives credit to Erik) showed me today is to ensure that IIS is running under the same user that Fiddler is running under which in our case is the &amp;lsquo;Administrator&amp;rsquo; account.</description>
    </item>
    
    <item>
      <title>Visual Studio/Resharper: Changing the order of arguments</title>
      <link>https://markhneedham.com/blog/2009/06/23/visual-studioresharper-changing-the-order-of-arguments/</link>
      <pubDate>Tue, 23 Jun 2009 19:31:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/23/visual-studioresharper-changing-the-order-of-arguments/</guid>
      <description>We&amp;rsquo;ve recently run into some places in our tests where the expectation and actual values passed into NUnit&#39;s &amp;lsquo;Assert.AreEqual&amp;rsquo; are the wrong way round, therefore meaning that the error messages we get when tests fail are somewhat confusing!
Assert.AreEqual(theActualValue, &amp;#34;the expectation&amp;#34;); We can change the arguments around using Resharper by using the key combination &amp;lsquo;Ctrl-Alt-Shift-ArrowKey&amp;rsquo; but you can only do this one line at a time which was a bit annoying as there were about 20 to change.</description>
    </item>
    
    <item>
      <title>F#: Continuation Passing Style</title>
      <link>https://markhneedham.com/blog/2009/06/22/f-continuation-passing-style/</link>
      <pubDate>Mon, 22 Jun 2009 23:39:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/22/f-continuation-passing-style/</guid>
      <description>I recently came across the idea of continuations while reading Real World Functional Programmingand Wes Dyer has a blog post where he explains continuations in more detail and also talks about the idea of using a continuation passing style in languageswhich don&amp;rsquo;t support Call/CC (Call with Current continuation).
As I understand it we can achieve a continuation passing style of programming by passing in the bit of code that we went executed next (i.</description>
    </item>
    
    <item>
      <title>Seams: Some thoughts</title>
      <link>https://markhneedham.com/blog/2009/06/21/seams-some-thoughts/</link>
      <pubDate>Sun, 21 Jun 2009 17:21:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/21/seams-some-thoughts/</guid>
      <description>I pick up Michael Feathers&amp;rsquo; Working Effectively with Legacy Codebook from time to time and one of my favourite parts of the book is the chapter where he talks about &amp;lsquo;Seams&amp;rsquo;.
To quote the book:
Seams in the book are generally discussed in terms of how we can get tests around legacy code which was written without easy testability in mind but I&amp;rsquo;ve noticed that the ideas behind seams seem to be more widely applicable than this.</description>
    </item>
    
    <item>
      <title>Book Club: The Readability of Tests - Growing Object Oriented Software (Steve Freeman/Nat Pryce)</title>
      <link>https://markhneedham.com/blog/2009/06/20/book-club-the-readability-of-tests-growing-object-oriented-software-steve-freemannat-pryce/</link>
      <pubDate>Sat, 20 Jun 2009 11:26:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/20/book-club-the-readability-of-tests-growing-object-oriented-software-steve-freemannat-pryce/</guid>
      <description>Our technical book club this week focused on &amp;lsquo;The Readability of Tests&amp;rsquo; chapter from Steve Freeman &amp;amp; Nat Pryce&amp;rsquo;s upcoming book &amp;lsquo;Growing Object Oriented Software, guide by tests&amp;rsquo;.
I&amp;rsquo;ve been reading through some of the other chapters online and I thought this would be an interesting chapter to talk about as people seem to have different opinions on how DRY tests should be, how we build test data, how we name tests and so on.</description>
    </item>
    
    <item>
      <title>Functional Collection Parameters: A different way of thinking about collections</title>
      <link>https://markhneedham.com/blog/2009/06/18/functional-collection-parameters-a-different-way-of-thinking-about-collections/</link>
      <pubDate>Thu, 18 Jun 2009 18:31:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/18/functional-collection-parameters-a-different-way-of-thinking-about-collections/</guid>
      <description>One of the changes that I&amp;rsquo;ve noticed in my coding now compared to around 7 or 8 months ago is that whenever there&amp;rsquo;s some operations to be performed on a collection I am far more inclined to think of how to do those operations using a functional approach.
I&amp;rsquo;ve written previously about the ways I&amp;rsquo;ve been making useoffunctionalcollectionparameters in my code but what I hadn&amp;rsquo;t really considered was that the way of thinking about the problem we want to solve is slightly different.</description>
    </item>
    
    <item>
      <title>Book Club: Arguments and Results (James Noble)</title>
      <link>https://markhneedham.com/blog/2009/06/16/book-club-arguments-and-results-james-noble/</link>
      <pubDate>Tue, 16 Jun 2009 23:37:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/16/book-club-arguments-and-results-james-noble/</guid>
      <description>We restarted our book club again last week by reading James Noble&amp;rsquo;s Arguments and Results paper, a paper I came across from a Michael Feathers blog post a few months ago detailing 10 papers that every programmer should read.
We decided to try out the idea of reading papers/individual chapters from books as it allows us to vary the type of stuff we&amp;rsquo;re reading more frequently and is an approach which Obie seems to be having some success with.</description>
    </item>
    
    <item>
      <title>Functional Collection Parameters: Handling the null collection</title>
      <link>https://markhneedham.com/blog/2009/06/16/functional-collection-parameters-handling-the-null-collection/</link>
      <pubDate>Tue, 16 Jun 2009 20:29:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/16/functional-collection-parameters-handling-the-null-collection/</guid>
      <description>One of the interesting cases where I&amp;rsquo;ve noticed we tend to avoid functionalcollection parametersin our code base is when there&amp;rsquo;s the possibility of the collection being null.
The code is on the boundary of our application&amp;rsquo;s interaction with another service so it is actually a valid scenario that we could receive a null collection.
When using extension methods, although we wouldn&amp;rsquo;t get a null pointer exception by calling one on a null collection, we would get a &amp;lsquo;source is null&amp;rsquo; exception when the expression is evaluated so we need to protect ourself against this.</description>
    </item>
    
    <item>
      <title>C#/F#: Using .NET framework classes</title>
      <link>https://markhneedham.com/blog/2009/06/16/cf-using-net-framework-classes/</link>
      <pubDate>Tue, 16 Jun 2009 18:55:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/16/cf-using-net-framework-classes/</guid>
      <description>I was recently discussing F# with a couple of colleagues and one thing that came up is the slightly different ways that we might choose to interact with certain .NET framework classes compared to how we use those same classes in C# code.
One of those where I see potential for different use is the Dictionary class.
In C# code when we&amp;rsquo;re querying a dictionary to check that a value exists before we try to extract it we might typically do this:</description>
    </item>
    
    <item>
      <title>F#: Using C# extension methods</title>
      <link>https://markhneedham.com/blog/2009/06/15/f-using-c-extension-methods/</link>
      <pubDate>Mon, 15 Jun 2009 20:03:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/15/f-using-c-extension-methods/</guid>
      <description>An interesting thing I noticed about referencing C# libraries from F# is that you can&amp;rsquo;t access C# extension methods on generic open types in the same way that you would be able to if you were using the library from C# code.
I came across this problem when playing around with the Rhino Mocks frameworkin some F# code.
I wrote a simple test to see whether I could get an expectation to work correctly, without paying any regard for the fact that you can&amp;rsquo;t use all C# extension methods in the same way as you can from C# code!</description>
    </item>
    
    <item>
      <title>F#: Overlapping fields in record types</title>
      <link>https://markhneedham.com/blog/2009/06/14/f-overlapping-fields-in-record-types/</link>
      <pubDate>Sun, 14 Jun 2009 00:37:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/14/f-overlapping-fields-in-record-types/</guid>
      <description>A problem which has confused me for a while is how to create instances of record types whose fields overlap with another record defined further down in an F# file.
The most recently defined record seems to take precedence even if it has more fields than a record defined earlier and you don&amp;rsquo;t specify all of those fields in your record creation attempt.
For example, if I have the following two record types:</description>
    </item>
    
    <item>
      <title>Coding: Single Level of Abstraction Principle</title>
      <link>https://markhneedham.com/blog/2009/06/12/coding-single-level-of-abstraction-principle/</link>
      <pubDate>Fri, 12 Jun 2009 17:35:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/12/coding-single-level-of-abstraction-principle/</guid>
      <description>One of the other useful principles for writing readable code that I&amp;rsquo;ve come across in the last year or so is the Single Level of Abstraction Principle.
I first came across the idea of writing code at the same level of abstraction in Uncle Bob&amp;rsquo;s Clean Codealthough I only learnt about the actual term in Neal Ford&amp;rsquo;s The Productive Programmer.
As the name suggests the idea is that within a certain method we look to keep all the code at the same level of abstraction to help us read it more easily.</description>
    </item>
    
    <item>
      <title>Coding Dojo #17: Refactoring Cruise Control .NET</title>
      <link>https://markhneedham.com/blog/2009/06/12/coding-dojo-17-refactoring-cruise-control-net/</link>
      <pubDate>Fri, 12 Jun 2009 17:07:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/12/coding-dojo-17-refactoring-cruise-control-net/</guid>
      <description>After a couple of weeks of more experimentalcoding dojosthis week we decided to get back to some pure coding with the session being focused around doing some refactoring of the continuous integration server Cruise Control .NET.
The overall intention of the refactoring we worked on is to try and introduce the concept of a &amp;lsquo;ChangeSet&amp;rsquo; into the code base to represent the revisions that come in from source control systems that CC.</description>
    </item>
    
    <item>
      <title>Coding: Keep method/variable names positive</title>
      <link>https://markhneedham.com/blog/2009/06/11/coding-keep-methodvariable-names-positive/</link>
      <pubDate>Thu, 11 Jun 2009 07:44:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/11/coding-keep-methodvariable-names-positive/</guid>
      <description>Something which I&amp;rsquo;ve come across a few times recently in code is method names which describe the negative aspect of something and for me at least these are very difficult to understand since I need to keep remembering that we are dealing with the negative and not the positive which I think is significantly easier to reason about.
A recent example of this which I came across was in some acceptance test code which among other things was asserting whether or not the policy number that had been created was in a valid format and returning the result of that assertion back to our Fitnesse fixture.</description>
    </item>
    
    <item>
      <title>F#: Useful for scripting</title>
      <link>https://markhneedham.com/blog/2009/06/09/f-useful-for-scripting/</link>
      <pubDate>Tue, 09 Jun 2009 23:29:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/09/f-useful-for-scripting/</guid>
      <description>We had the need to do a bit of scripting recently to change the names of the folders where we store our artifacts to signify which artifacts were created from our build&amp;rsquo;s production branch and which were generated from the main branch.
The problem we had was that we were ending up overwriting old artifacts from the main branch with the production branch&amp;rsquo;s artifacts so we wanted to fix this.</description>
    </item>
    
    <item>
      <title>Pair Programming: So you don&#39;t want to do it...</title>
      <link>https://markhneedham.com/blog/2009/06/08/pair-programming-so-you-dont-want-to-do-it/</link>
      <pubDate>Mon, 08 Jun 2009 17:05:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/08/pair-programming-so-you-dont-want-to-do-it/</guid>
      <description>I&amp;rsquo;ve worked on several software development teams over the last few years - some that pair programmed all the time and some that didn&amp;rsquo;t - and one of the key things that I&amp;rsquo;ve noticed is that the level of collaboration on these teams was significantly higher when pair programming was being done on a regular basis.
The following are some of the observations I have noticed in teams which don&amp;rsquo;t pair program frequently.</description>
    </item>
    
    <item>
      <title>Javascript: Using &#39;replace&#39; to make a link clickable</title>
      <link>https://markhneedham.com/blog/2009/06/08/javascript-using-replace-to-make-a-link-clickable/</link>
      <pubDate>Mon, 08 Jun 2009 11:57:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/08/javascript-using-replace-to-make-a-link-clickable/</guid>
      <description>I&amp;rsquo;ve been doing a bit more work on my twitter applicationover the weekend - this time taking the tweets that I&amp;rsquo;ve stored in CouchDB and displaying them on a web page.
One of the problems I had is that the text of the tweets is just plain text so if there is a link in a tweet then when I display it on a web page it isn&amp;rsquo;t clickable since it isn&amp;rsquo;t enclosed by the &amp;lsquo;&amp;lt;a href&amp;rdquo;&amp;hellip;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;rsquo; tag.</description>
    </item>
    
    <item>
      <title>F#: Explicit interface implementation</title>
      <link>https://markhneedham.com/blog/2009/06/07/f-explicit-interface-implementation/</link>
      <pubDate>Sun, 07 Jun 2009 08:19:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/07/f-explicit-interface-implementation/</guid>
      <description>I&amp;rsquo;ve been writing some code to map between CouchDB documents and F# objects and something which I re-learned while doing this is the way that interfaces work in F#.
In F# when you have a class which implements an interface that class makes use of explicit interface implementation.
This means that in order to access any members of the interface that the class implements you need to specifically refer to the interface by upcasting the value using the &amp;lsquo;:&amp;gt;&amp;rsquo; operator.</description>
    </item>
    
    <item>
      <title>Coding: Why do we extract method?</title>
      <link>https://markhneedham.com/blog/2009/06/04/coding-why-do-we-extract-method/</link>
      <pubDate>Thu, 04 Jun 2009 20:30:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/04/coding-why-do-we-extract-method/</guid>
      <description>Ever since I&amp;rsquo;ve read Uncle Bob&amp;rsquo;s Clean Code bookmy approach to coding has been all about the &amp;lsquo;extract method&amp;rsquo; refactoring - I pretty much look to extract method as much as I can until I get to the point where extracting another method would result in me just describing the language semantics in the method name.
One of the approaches that I&amp;rsquo;ve come across with regards to doing this refactoring is that it&amp;rsquo;s only used when there is duplication of code and we want to reduce that duplication so that it&amp;rsquo;s all in one place and then call that method from two places.</description>
    </item>
    
    <item>
      <title>Coding: Putting code where people can find it</title>
      <link>https://markhneedham.com/blog/2009/06/02/coding-putting-code-where-people-can-find-it/</link>
      <pubDate>Tue, 02 Jun 2009 23:35:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/02/coding-putting-code-where-people-can-find-it/</guid>
      <description>I&amp;rsquo;ve previously written about the builder patternwhich I think is a very useful pattern for helping to setup data.
It allows us to setup custom data when we care about a specific piece of data in a test or just use default values if we&amp;rsquo;re not bothered about a piece of data but need it to be present for our test to execute successfully.
One problem that I noticed was that despite the fact we had builders for quite a number of the classes we were using in our tests, when new tests were being added test data was still being setup by directly using the classes instead of making use of the builders which had already done the hard work for you.</description>
    </item>
    
    <item>
      <title>F#: Tuples don&#39;t seem to express intent well</title>
      <link>https://markhneedham.com/blog/2009/06/02/f-tuples-dont-seem-to-express-intent-well/</link>
      <pubDate>Tue, 02 Jun 2009 22:01:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/02/f-tuples-dont-seem-to-express-intent-well/</guid>
      <description>Tuples are one of the data types that I learnt about at university but never actually got to use for anything until I started playing around with F# which has this type in the language.
A tupledescribes an ordered group of values and in that sense is similar to a C# anonymous type except an anonymous type&amp;rsquo;s values are named whereas a tuple&amp;rsquo;s are not.
In F# we can create one by separating a sequence of values with a comma in a value assignment:</description>
    </item>
    
    <item>
      <title>VMware: Accessing host server</title>
      <link>https://markhneedham.com/blog/2009/06/02/vmware-accessing-host-server/</link>
      <pubDate>Tue, 02 Jun 2009 21:36:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/02/vmware-accessing-host-server/</guid>
      <description>I&amp;rsquo;ve been doing all my spare time .NET development from within VMWare for about the last year or so and now and then it&amp;rsquo;s quite useful to be able to access the host machine either to get some files from there or to access a server that&amp;rsquo;s running on the host.
The former problem is solved by going to &amp;lsquo;Virtual Machines -&amp;gt; Shared Folders&amp;rsquo; and clicking on the + button on the bottom left of the menu to add a folder that you want to share.</description>
    </item>
    
    <item>
      <title>CouchDB/Futon: &#39;_all_dbs&#39; call returns databases with leading &#39;c/&#39;</title>
      <link>https://markhneedham.com/blog/2009/05/31/couchdbfuton-_all_dbs-call-returns-databases-with-leading-c/</link>
      <pubDate>Sun, 31 May 2009 23:28:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/31/couchdbfuton-_all_dbs-call-returns-databases-with-leading-c/</guid>
      <description>As I mentioned in my previous postI&amp;rsquo;ve been playing around with CouchDBand one of the problems that I&amp;rsquo;ve been having is that although I can access my database through the REST API perfectly fine, whenever I went to the Futonpage (&amp;lsquo;http://localhost:5984/_utils/&amp;rsquo; in my case) to view my list of databases I was getting the following javascript error:
Database information could not be retrieved: missing I thought I&amp;rsquo;d have a quick look with FireBug to see if I could work out what was going on and saw several requests being made to the following urls and resulting in 404s:</description>
    </item>
    
    <item>
      <title>SharpCouch: Use anonymous type to create JSON objects</title>
      <link>https://markhneedham.com/blog/2009/05/31/sharpcouch-use-anonymous-type-to-create-json-objects/</link>
      <pubDate>Sun, 31 May 2009 20:59:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/31/sharpcouch-use-anonymous-type-to-create-json-objects/</guid>
      <description>I&amp;rsquo;ve been playing around with CouchDBa bit today and in particular making use of SharpCouch, a library which acts as a wrapper around CouchDB calls. It is included in the CouchBrowselibrary which is recommended as a good starting point for interacting with CouchDB from C# code.
I decided to work out how the API worked with by writing an integration test to save a document to the database.
The API is reasonably easy to understand and I ended up with the following test:</description>
    </item>
    
    <item>
      <title>F#: Testing asynchronous calls to MailBoxProcessor</title>
      <link>https://markhneedham.com/blog/2009/05/30/f-testing-asynchronous-calls-to-mailboxprocessor/</link>
      <pubDate>Sat, 30 May 2009 20:38:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/30/f-testing-asynchronous-calls-to-mailboxprocessor/</guid>
      <description>Continuing with my attempts to test some of the code in my twitterapplicationI&amp;rsquo;ve been trying to work out how to test the Erlang style messagingwhich I set up to process tweets when I had captured them using the TweetSharp API.
The problem I had is that that processing is being done asynchronously so we can&amp;rsquo;t test it in our normal sequential way.
Chatting with Daveabout this he suggested that what I really needed was a latch which could be triggered when the asynchronous behaviour had completed, thus informing the test that it could proceed.</description>
    </item>
    
    <item>
      <title>xUnit.NET: Running tests written in Visual Studio 2010</title>
      <link>https://markhneedham.com/blog/2009/05/30/xunitnet-running-tests-written-in-visual-studio-2010/</link>
      <pubDate>Sat, 30 May 2009 11:51:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/30/xunitnet-running-tests-written-in-visual-studio-2010/</guid>
      <description>I&amp;rsquo;ve been playing around with F# in Visual Studio 2010 after the Beta 1 release last Wednesdayand in particular I&amp;rsquo;ve been writing some xUnit.NET tests around the twitterapplicationI&amp;rsquo;ve been working on.
A problem I ran into when attempting to run my tests against &amp;lsquo;xunit.console.exe&amp;rsquo; is that xUnit.NET is linked to run against version 2.0 of the CLRand right now you can&amp;rsquo;t actually change the &amp;lsquo;targetframework&amp;rsquo; for a project compiled in Visual Studio 2010.</description>
    </item>
    
    <item>
      <title>Coding Dojo #16: Reading SUnit code</title>
      <link>https://markhneedham.com/blog/2009/05/29/coding-dojo-16-reading-sunit-code/</link>
      <pubDate>Fri, 29 May 2009 09:23:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/29/coding-dojo-16-reading-sunit-code/</guid>
      <description>Continuing on from last week&amp;rsquo;s look at Smalltalk, in our latest coding dojo we spent some time investigating the SUnit testing framework, how we would use it to write some tests and looking at how it actually works.
We had 3 people for the dojo this week and the majority was spent looking at the code on a big screen and trying to understand between us what was going on. We only had the dojo for about 90 minutes this week.</description>
    </item>
    
    <item>
      <title>The 5 dysfunctions of teams in code</title>
      <link>https://markhneedham.com/blog/2009/05/28/the-5-dysfunctions-of-teams-in-code/</link>
      <pubDate>Thu, 28 May 2009 05:44:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/28/the-5-dysfunctions-of-teams-in-code/</guid>
      <description>I recently came across an interesting post by my colleague Pat Kuawhere he talks about how some patterns he&amp;rsquo;s noticed in code can be linked to Conway&amp;rsquo;s lawwhich suggests that the structure of systems designed in organisations will mirror the communication structure of that organisation.
I recently read a book called &amp;lsquo;The Five Dysfunctions of Teams&amp;rsquo; which describe some behaviours in teams which aren&amp;rsquo;t working in an effective way.
Playing the devil&amp;rsquo;s advocate I became intrigued as to if there is some sort of link between these dysfunctions and whether they manifest themselves in our code as anti patterns.</description>
    </item>
    
    <item>
      <title>Pair Programming: Refactoring</title>
      <link>https://markhneedham.com/blog/2009/05/26/pair-programming-refactoring/</link>
      <pubDate>Tue, 26 May 2009 23:44:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/26/pair-programming-refactoring/</guid>
      <description>One area of development where I have sometimes wondered about the value that we can get from pair programming is when we&amp;rsquo;re spending time doing some major refactoring of our code base.
The reason I felt that pairing on big refactoring tasks might be difficult compared to when working on a story together is that with a story there tends to be a more defined goal and the business have defined that goal whereas with a refactoring task that goal is often less clear and people have much wider ranging differing opinions about the approach that should be taken.</description>
    </item>
    
    <item>
      <title>Refactoring: Removing duplication more safely</title>
      <link>https://markhneedham.com/blog/2009/05/26/refactoring-removing-duplication-more-safely/</link>
      <pubDate>Tue, 26 May 2009 13:20:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/26/refactoring-removing-duplication-more-safely/</guid>
      <description>One of the most important things that I&amp;rsquo;ve learnt from the coding dojo sessionsthat we&amp;rsquo;ve been running over the last six months is the importance of small step refactorings.
Granted we have been trying to take some of the practices to the extreme but the basic idea of trying to keep the tests greenfor as much time as well as keeping our code in a state where it still compiles (in a static language) is very useful no matter what code we&amp;rsquo;re working on.</description>
    </item>
    
    <item>
      <title>The value of a fresh mind</title>
      <link>https://markhneedham.com/blog/2009/05/26/the-value-of-a-fresh-mind/</link>
      <pubDate>Tue, 26 May 2009 00:51:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/26/the-value-of-a-fresh-mind/</guid>
      <description>I recently read a post by my colleague Sai Venkatakrishnanwhere he talks about some of the disadvantages of over working on a project and it reminded me of something I&amp;rsquo;ve noticed a lot recently - notably that after taking a break from solving a problem, either by looking at it again the next day or after lunch or any kind of break I end up solving it significantly more quickly than if I&amp;rsquo;d kept on trying to solve it without doing so.</description>
    </item>
    
    <item>
      <title>TDD: Making the test green quickly</title>
      <link>https://markhneedham.com/blog/2009/05/24/tdd-making-the-test-green-quickly/</link>
      <pubDate>Sun, 24 May 2009 23:43:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/24/tdd-making-the-test-green-quickly/</guid>
      <description>Although I pointed out some things that I disagreed within Nick&amp;rsquo;s post about pair programmingone thing that I really liked in that post was that he emphasised the importance of getting tests from red to green as quickly as possible.
The idea that we didn&amp;rsquo;t have to implement the real functionality after writing the first test for a method was an idea that I feel really freed me up when doing TDD - previous to this I had often spent a lot of time thinking how exactly I wanted to implement the code to make the test pass and I was never entirely satisfied with this approach.</description>
    </item>
    
    <item>
      <title>Real World Functional Programming: Book Review</title>
      <link>https://markhneedham.com/blog/2009/05/24/real-world-functional-programming-book-review/</link>
      <pubDate>Sun, 24 May 2009 19:25:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/24/real-world-functional-programming-book-review/</guid>
      <description>Real World Functional Programmingby Tomas Petricek with Jon Skeet (corresponding website)
I decided to read this book after being somewhat inspired to learn more about functional programming after talking with Philabout his experiences learning Clojure. I&amp;rsquo;m currently working on a .NET project so it seemed to make sense that F# was the language I picked to learn.
module Tests = let WithIncome (f:Func&amp;lt;_, _&amp;gt;) client = { client with Income = f.</description>
    </item>
    
    <item>
      <title>Pair Programming: It&#39;s not about equal keyboard time</title>
      <link>https://markhneedham.com/blog/2009/05/23/its-not-about-equal-keyboard-time/</link>
      <pubDate>Sat, 23 May 2009 16:35:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/23/its-not-about-equal-keyboard-time/</guid>
      <description>My colleague Nick Carrollrecently blogged some ideas about what to do if your pair is hogging the keyboard, suggesting using a timer which keeps track of how long each person has had at the keyboard as a useful way of ensuring that both people in the pair stay more engaged.
While I can see the thinking behind this I think it is addressing the wrong problem.
From my experience we don&amp;rsquo;t always want to be moving the keyboard between the two people quickly at all times - I have certainly seen times where it makes sense for one person to be spending more time at the keyboard than the other.</description>
    </item>
    
    <item>
      <title>Coding: Setters reduce trust</title>
      <link>https://markhneedham.com/blog/2009/05/23/coding-setters-reduce-trust/</link>
      <pubDate>Sat, 23 May 2009 15:37:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/23/coding-setters-reduce-trust/</guid>
      <description>I&amp;rsquo;ve written previously about my dislike of the way the object initialiser is misused in C# 3.0and although I&amp;rsquo;ve also written about my preference for explicit modelingand the need for objects to act as good citizens I&amp;rsquo;ve never quite been able to articulate what it is I dislike so much about having setter methods on objects.
I&amp;rsquo;ve learnt from experience that it leads to a world of pain in our code by having the ability to setup an object after construction using setters and in a conversation with a colleague about this last week he suggested that the reason it&amp;rsquo;s such a bad practice to follow is that it makes us lose our trust in not only that object but in all the other objects in the application.</description>
    </item>
    
    <item>
      <title>Coding Dojo #15: Smalltalk</title>
      <link>https://markhneedham.com/blog/2009/05/21/coding-dojo-15-smalltalk/</link>
      <pubDate>Thu, 21 May 2009 19:05:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/21/coding-dojo-15-smalltalk/</guid>
      <description>We decided to play around with Smalltalk a bit in our latest coding dojo.
A lot of the ideas that I value the most in terms of writing software effectively seem to have originally come from the Smalltalk community and a colleague of mine has been reading Kent Beck&amp;rsquo;s TDD by Example bookand was really keen to try out the language to see where Kent&amp;rsquo;s original ideas came from.
We only had 2/3 people for the dojo this week so we all spent a bit of time at the keyboard getting familiar with the way things worked.</description>
    </item>
    
    <item>
      <title>Build: Using virtual machines to run it in parallel</title>
      <link>https://markhneedham.com/blog/2009/05/21/build-using-virtual-machines-to-run-it-in-parallel/</link>
      <pubDate>Thu, 21 May 2009 18:02:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/21/build-using-virtual-machines-to-run-it-in-parallel/</guid>
      <description>One of the things that we&amp;rsquo;ve been working on lately to improve the overall time that our full build takes to run is to split the acceptance tests into several small groups of tests so that we can run them in parallel.
We are using Cruiseas our build server so the ability to have multiple agents running against different parts of the build at the same time comes built it.</description>
    </item>
    
    <item>
      <title>F#: Object expressions</title>
      <link>https://markhneedham.com/blog/2009/05/19/f-object-expressions/</link>
      <pubDate>Tue, 19 May 2009 01:38:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/19/f-object-expressions/</guid>
      <description>One of the things I miss a bit from the Java world is the ability to create anonymous inner classes which implement a certain interface.
We can&amp;rsquo;t do this in C# - you always need to define a named class - but in my latest playing around with F# I was quite pleased to learn that we do have this ability using a feature called object expressions.
These come in particularly useful when you are only making use of the implementation of an interface in one place in the code and therefore don&amp;rsquo;t want to expose this type to any other code.</description>
    </item>
    
    <item>
      <title>97 Things Every Software Architect Should Know: Book Review</title>
      <link>https://markhneedham.com/blog/2009/05/18/97-things-every-software-architect-should-know-book-review/</link>
      <pubDate>Mon, 18 May 2009 01:03:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/18/97-things-every-software-architect-should-know-book-review/</guid>
      <description>97 Things Every Software Architect Should Knowby Richard Monson-Haefel
My colleague Erik Doernenburgmentioned that he had written a couple of chapters in this book a while ago and there was a copy of the book in the ThoughtWorks office so I thought I&amp;rsquo;d take a look.
I&amp;rsquo;m far from being an architect but since their decisions affect what I do I was intrigued to see what they should be doing.</description>
    </item>
    
    <item>
      <title>Coding Dojo #14: Rock, Scissors, Paper - TDD as if you meant it </title>
      <link>https://markhneedham.com/blog/2009/05/15/coding-dojo-14-rock-scissors-paper-tdd-as-if-you-meant-it/</link>
      <pubDate>Fri, 15 May 2009 07:39:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/15/coding-dojo-14-rock-scissors-paper-tdd-as-if-you-meant-it/</guid>
      <description>We decided to have a second week of following Keith Braithwaite&amp;rsquo;s &amp;lsquo;TDD as if you meant it&amp;rsquo; exercise which he led at the Software Craftsmanship Conference.
Our attempt a fortnight agowas around implementing a Flash Message interceptor, to hook into the Spring framework but this week was focused more around modeling, the goal being to model a game of Rock, Paper, Scissors.
The code is available on our bitbucket repository.</description>
    </item>
    
    <item>
      <title>Mercurial: Pulling from behind a proxy</title>
      <link>https://markhneedham.com/blog/2009/05/13/mercurial-pulling-from-behind-a-proxy/</link>
      <pubDate>Wed, 13 May 2009 07:49:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/13/mercurial-pulling-from-behind-a-proxy/</guid>
      <description>I&amp;rsquo;ve been playing around with Mercurial and the mercurial hosting website bitbucketa bit this year and recently wanted to pull from a repository from behind a proxy server.
With a bit of help from the mercurial mailing listand the documentationthis is how I was able to pull the repository for the Hambread project I&amp;rsquo;ve been doing a bit of work on:
hg --config http_proxy.host=ipOfYourProxyServer:portOfYourProxyServer --config http_proxy.user=user --config http_proxy.passwd=password pull http://bitbucket.org/markhneedham/hambread~~~ After that command a &amp;#39;hg update&amp;#39; updates your local repository with all the changes that have just been pulled.</description>
    </item>
    
    <item>
      <title>Debugging: Get to a stage where it works</title>
      <link>https://markhneedham.com/blog/2009/05/12/debugging-get-to-a-stage-where-it-works/</link>
      <pubDate>Tue, 12 May 2009 09:21:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/12/debugging-get-to-a-stage-where-it-works/</guid>
      <description>When debugging a problem I&amp;rsquo;ve learnt far too many times that where possible the most effective approach is to try and get the application back into a state where it does work and then analyse the changes that have resulted in it no longer working as expected.
About 7 or 8 years ago when I used to code PHP at school and university that pretty much was my default approach - I didn&amp;rsquo;t really know how to program well enough to work out how to fix something that was broken so I would always just revert back all the steps I&amp;rsquo;d done until it worked.</description>
    </item>
    
    <item>
      <title>Tackling the risk early on at a task level</title>
      <link>https://markhneedham.com/blog/2009/05/11/tackling-the-risk-early-on-at-a-task-level/</link>
      <pubDate>Mon, 11 May 2009 23:54:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/11/tackling-the-risk-early-on-at-a-task-level/</guid>
      <description>I wrote previously about the idea of tackling the risky tasks in a project early on- an idea that I learnt about when reading Alistair Cockburn&amp;rsquo;s Crystal Clear.
Towards the end of the post I wondered whether we could apply this idea at a story level whereby we would identify the potentially risky parts of a story and make sure that we addressed those risks before they became problematic to us.</description>
    </item>
    
    <item>
      <title>F#: Regular expressions/active patterns</title>
      <link>https://markhneedham.com/blog/2009/05/10/f-regular-expressionsactive-patterns/</link>
      <pubDate>Sun, 10 May 2009 08:58:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/10/f-regular-expressionsactive-patterns/</guid>
      <description>Joshhas been teaching me how to do regular expressions in Javascript this weekand intrigued as to how you would do this in F# I came across a couple of blog posts by Chris Smith talking about active patternsand regular expressions via active patterns.
As I understand them active patterns are not that much different to normal functions but we can make use of them as part of a let or match statement which we can&amp;rsquo;t do with a normal function.</description>
    </item>
    
    <item>
      <title>C#: Using virtual leads to confusion?</title>
      <link>https://markhneedham.com/blog/2009/05/06/c-using-virtual-leads-to-confusion/</link>
      <pubDate>Wed, 06 May 2009 19:30:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/06/c-using-virtual-leads-to-confusion/</guid>
      <description>A colleague and I were looking through some code that I worked on a couple of months ago where I had created a one level hierarchy using inheritance to represent the response status that we get back from a service call.
The code was along these lines:
public class ResponseStatus { public static readonly ResponseStatus TransactionSuccessful = new TransactionSuccessful(); public static readonly ResponseStatus UnrecoverableError = new UnrecoverableError(); public virtual bool RedirectToErrorPage { get { return true; } } } public class UnrecoverableError : ResponseStatus { } public class TransactionSuccessful : ResponseStatus { public override bool RedirectToErrorPage { get { return false; } } } Looking at it now it does seem a bit over-engineered, but the main confusion with this code is that when you click through to the definition of &amp;lsquo;RedirectToError&amp;rsquo; it goes to the ResponseStatus version of that property and it&amp;rsquo;s not obvious that it is being overridden in a sub class, this being possible due to my use of the virtualkey word.</description>
    </item>
    
    <item>
      <title>Adding humour to Tester/Developer collaboration</title>
      <link>https://markhneedham.com/blog/2009/05/04/adding-humour-to-testerdeveloper-collaboration/</link>
      <pubDate>Mon, 04 May 2009 23:43:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/04/adding-humour-to-testerdeveloper-collaboration/</guid>
      <description>Pat Kua has a recent post where he talks about the language used between testers and developerswhen talking about defects that testers come across when testing some functionality and while I would agree with him that the language used is important, I&amp;rsquo;ve always found that injecting some humour into the situation takes the edge off.
As Dahlia points out I think this is probably only possible if there is good rapport between the developers and testers on the teamso perhaps this has been the case for the teams I&amp;rsquo;ve worked on.</description>
    </item>
    
    <item>
      <title>Pair Programming: When your pair steps away</title>
      <link>https://markhneedham.com/blog/2009/05/03/pair-programming-when-your-pair-steps-away/</link>
      <pubDate>Sun, 03 May 2009 19:08:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/03/pair-programming-when-your-pair-steps-away/</guid>
      <description>I&amp;rsquo;ve been having a bit of a discussion recently with some of my colleagues about what we should do when pair programming and one of the people in the pair has to step away to go and help someone else or to take part in an estimation session or whatever it happens to be.
If we&amp;rsquo;re pairing in an effective way then it should be possible for the person still at the computer to keep on going on the story/task that the pair were working on alone.</description>
    </item>
    
    <item>
      <title>F#: Stuff I get confused about</title>
      <link>https://markhneedham.com/blog/2009/05/02/f-stuff-i-get-confused-about/</link>
      <pubDate>Sat, 02 May 2009 14:38:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/02/f-stuff-i-get-confused-about/</guid>
      <description>Coming from the world of C# I&amp;rsquo;ve noticed that there are a couple of things that I sometimes get confused about when playing around with stuff in F# land.
In C# I&amp;rsquo;m used to putting the arguments in parentheses but that doesn&amp;rsquo;t quite work in F#.
For example in my twitter applicationI was trying to append two lists together similar to this:
let first_item = Seq.singleton(&amp;#34;mark&amp;#34;) let second_item = Seq.singleton &amp;#34;needham&amp;#34; let joined_items = Seq.</description>
    </item>
    
    <item>
      <title>F#: Entry point of an application</title>
      <link>https://markhneedham.com/blog/2009/05/02/f-entry-point-of-an-application/</link>
      <pubDate>Sat, 02 May 2009 01:56:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/02/f-entry-point-of-an-application/</guid>
      <description>In an attempt to see whether or not the mailboxes I&amp;rsquo;ve been working on for my twitter applicationwere actually processing messages on different threads I ran into the problem of defining the entry point of an F# application.
I thought it would be as simple as defining a function called &amp;lsquo;main&amp;rsquo; but I put this function into my code ran the executable and nothing happened!
Googling the problem a bit led me to believe that it is possible to do but that the function needs to be the last thing that happens in the compilation sequence of the project.</description>
    </item>
    
    <item>
      <title>F#: Erlang style messaging passing</title>
      <link>https://markhneedham.com/blog/2009/05/02/f-erlang-style-messaging-passing/</link>
      <pubDate>Sat, 02 May 2009 01:53:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/05/02/f-erlang-style-messaging-passing/</guid>
      <description>As I mentioned in my previous post about over loading methods in F# I&amp;rsquo;ve been trying to refactor my twitter application into a state where it can concurrently process twitter statuses while continuing to retrieve more of them from the twitter website.
I played around a bit with Erlang last year and one thing that I quite liked is the message passing between processes to allow operations to be performed concurrently.</description>
    </item>
    
    <item>
      <title>Coding Dojo #13: TDD as if you meant it</title>
      <link>https://markhneedham.com/blog/2009/04/30/coding-dojo-13-tdd-as-if-you-meant-it/</link>
      <pubDate>Thu, 30 Apr 2009 06:12:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/30/coding-dojo-13-tdd-as-if-you-meant-it/</guid>
      <description>We decided to follow Keith Braithwaite&amp;rsquo;s &amp;lsquo;TDD as if you meant it&amp;rsquo; exercise which he led at the Software Craftsmanship Conferenceand which I originally read about on Gojko Adzic&amp;rsquo;s blog.
We worked on implementing a Flash Message interceptor, to hook into the Spring framework, that one of my colleague&amp;rsquo;s has been working on - the idea is to show a flash method to the user, that message being stored in the session on a Post and then removed on a Get in the &amp;lsquo;Post-Redirect-Get&amp;rsquo; cycle.</description>
    </item>
    
    <item>
      <title>F#: Overloading functions/pattern matching</title>
      <link>https://markhneedham.com/blog/2009/04/28/f-overloading-functionspattern-matching/</link>
      <pubDate>Tue, 28 Apr 2009 23:43:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/28/f-overloading-functionspattern-matching/</guid>
      <description>While trying to refactor my twitter applicationinto a state where I could use Erlang style message passing to process some requests asynchronously while still hitting twitter to get more messages I came across the problem of wanting to overload a method.
By default it seems that you can&amp;rsquo;t do method overloading in F# unless you make use of the OverloadID attribute which I learnt about from reading Scott Seely&amp;rsquo;s blog post:</description>
    </item>
    
    <item>
      <title>Coding: Weak/Strong APIs</title>
      <link>https://markhneedham.com/blog/2009/04/27/coding-weakstrong-apis/</link>
      <pubDate>Mon, 27 Apr 2009 20:30:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/27/coding-weakstrong-apis/</guid>
      <description>An interesting problem that I&amp;rsquo;ve come across a few times in the last couple of week centres around how strongly typed we should make the arguments to public methods on our objects.
There seem to be benefits and drawbacks with each approach so I&amp;rsquo;m not sure which approach is better - it possibly depends on the context.
When we have a strong API the idea is that we pass an object as the argument to a method on another object.</description>
    </item>
    
    <item>
      <title>F#: Not equal/Not operator</title>
      <link>https://markhneedham.com/blog/2009/04/25/f-not-equalnot-operator/</link>
      <pubDate>Sat, 25 Apr 2009 22:12:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/25/f-not-equalnot-operator/</guid>
      <description>While continuing playing with my F# twitter applicationI was trying to work out how to exclude the tweets that I posted from the list that gets displayed.
I actually originally had the logic the wrong way round so that it was only showing my tweets!
let excludeSelf (statuses:seq&amp;lt;TwitterStatus&amp;gt;) = statuses |&amp;gt; Seq.filter (fun eachStatus -&amp;gt; eachStatus.User.ScreenName.Equals(&amp;#34;markhneedham&amp;#34;)) Coming from the world of Java and C# &amp;lsquo;!&amp;rsquo; would be the operator to find the screen names that don&amp;rsquo;t match my own name.</description>
    </item>
    
    <item>
      <title>Writing unit tests can be fun</title>
      <link>https://markhneedham.com/blog/2009/04/25/writing-unit-tests-can-be-fun/</link>
      <pubDate>Sat, 25 Apr 2009 19:51:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/25/writing-unit-tests-can-be-fun/</guid>
      <description>I recently came across Pavel Brodzinski&amp;rsquo;s blogand while browsing through some of his most recent posts I came across one discussing when unit testing doesn&amp;rsquo;t work.
The majority of what Pavel says I&amp;rsquo;ve seen happen before on projects I&amp;rsquo;ve worked on but I disagree with his suggestion that writing unit tests is boring:
I think it depends on the way that the unit tests are being written.
When I first started working at ThoughtWorks I used to think that writing tests was boring and that it was much more fun writing production code.</description>
    </item>
    
    <item>
      <title>OO with a bit of functional mixed in</title>
      <link>https://markhneedham.com/blog/2009/04/25/oo-with-a-bit-of-functional-mixed-in/</link>
      <pubDate>Sat, 25 Apr 2009 11:14:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/25/oo-with-a-bit-of-functional-mixed-in/</guid>
      <description>From my experiences playing around with F# and doing a bit of functional C# I&amp;rsquo;m beginning to think that the combination of functional and object oriented programming actually results in code which I think is more expressive and easy to work with than code written only with an object oriented approach in mind.
I&amp;rsquo;m also finding it much more fun to write code this way!
In a recent post Dean Wampler questions whether the supremacy of object oriented programming is overbefore going on to suggest that the future is probably going to be a mix of functional programming and object oriented programming.</description>
    </item>
    
    <item>
      <title>Pimp my architecture - Dan North</title>
      <link>https://markhneedham.com/blog/2009/04/25/pimp-my-architecture-dan-north/</link>
      <pubDate>Sat, 25 Apr 2009 01:26:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/25/pimp-my-architecture-dan-north/</guid>
      <description>My colleague Dan Northpresented a version of a talk he first did at QCon Londontitled &amp;lsquo;Pimp my architecture&amp;rsquo; at the ThoughtWorks Sydney community college on Wednesday night. He&amp;rsquo;ll also be presenting it at JAOOin Sydneyand Brisbanein a couple of weeks time.
The slides for the talk are hereand it&amp;rsquo;s also available on InfoQ.
To begin with it was a case of SOA gone bad with clients heavily coupled to services via WSDL definitions, a lot of code duplication, a complex/flaky architecture featuring a non standard JBoss and a team where the developers worked in silos.</description>
    </item>
    
    <item>
      <title>DDD: Making implicit concepts explicit</title>
      <link>https://markhneedham.com/blog/2009/04/23/ddd-making-implicit-concepts-explicit/</link>
      <pubDate>Thu, 23 Apr 2009 12:36:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/23/ddd-making-implicit-concepts-explicit/</guid>
      <description>One of my favourite parts of the Domain Driven Designbook is where Eric Evans talks about making implicit concepts in our domain model explicit.
The book describes this process like so:
Lu and I were working on a small application to parse the WCF message log file on our project into more readable chunks whereby each request in the file would be outputted into another file so that it would be possible to read them individually.</description>
    </item>
    
    <item>
      <title>The Five Dysfunctions of a Team: Book Review</title>
      <link>https://markhneedham.com/blog/2009/04/22/the-five-dysfunctions-of-a-team-book-review/</link>
      <pubDate>Wed, 22 Apr 2009 06:50:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/22/the-five-dysfunctions-of-a-team-book-review/</guid>
      <description>The Five Dysfunctions of a Teamby Patrick Lencioni
I heard about this book a while ago but I was intrigued to actually get a copy by Darren Cotterill, the Iteration Manager on the project I&amp;rsquo;m working on at the moment.
I was particularly interested in learning whether the ideas of agile and/or lean help to solve any of these dysfunctions.
I think lean/agile ideas do solve some of the problems but certainly not all of them and it would definitely be interesting to try out some of the exercises suggested on future teams I work on.</description>
    </item>
    
    <item>
      <title>Learning through teaching</title>
      <link>https://markhneedham.com/blog/2009/04/21/learning-through-teaching/</link>
      <pubDate>Tue, 21 Apr 2009 07:38:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/21/learning-through-teaching/</guid>
      <description>I&amp;rsquo;ve been watching one of the podcasts recorded from the Alt.NET Houston conference titled &amp;lsquo;Why blog and open source&amp;rsquo; and one of the interesting ideas that stood out amongst the opinions express is that people write about their experience in order to understand the topics better themselves.
I&amp;rsquo;ve found this to be a very valuable way of learning - in fact it&amp;rsquo;s probably more beneficial to the teacher than the student, somewhat ironically.</description>
    </item>
    
    <item>
      <title>Coding: Applying levels of abstraction</title>
      <link>https://markhneedham.com/blog/2009/04/19/coding-applying-levels-of-abstraction/</link>
      <pubDate>Sun, 19 Apr 2009 23:03:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/19/coding-applying-levels-of-abstraction/</guid>
      <description>One interesting situation that we often arrive at when writing code is working out when the best time to apply a level of abstraction is.
I think there is always a trade offto be made when it comes to creating abstractions - creating the abstraction adds to the complexity of the code we&amp;rsquo;re writing but it is often the case that creating it makes it easier for us to navigate the code base.</description>
    </item>
    
    <item>
      <title>I don&#39;t have time not to test!</title>
      <link>https://markhneedham.com/blog/2009/04/18/i-dont-have-time-not-to-test/</link>
      <pubDate>Sat, 18 Apr 2009 09:25:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/18/i-dont-have-time-not-to-test/</guid>
      <description>I recently read a blog post by Joshua Lockwood where he spoke of some people who claim they don&amp;rsquo;t have time to test.
Learning the TDD approach to writing code has been one of best things that I&amp;rsquo;ve learnt over the last few years - before I worked at ThoughtWorks I didn&amp;rsquo;t know how to do it and the only way I could verify whether something worked was to load up the application and manually check it.</description>
    </item>
    
    <item>
      <title>F#: Refactoring that little twitter application into objects</title>
      <link>https://markhneedham.com/blog/2009/04/18/f-refactoring-that-little-twitter-application-into-objects/</link>
      <pubDate>Sat, 18 Apr 2009 08:47:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/18/f-refactoring-that-little-twitter-application-into-objects/</guid>
      <description>I previously wrote about a little twitter application I&amp;rsquo;ve been writing to go through my twitter feed and find only the tweets with links itand while it works I realised that I was finding it quite difficult to add any additional functionality to it.
I&amp;rsquo;ve been following the examples in Real World Functional Programmingwhich has encouraged an approach of creating functions to do everything that you want to do and then mixing them together.</description>
    </item>
    
    <item>
      <title>Coding Dojo #12: F#</title>
      <link>https://markhneedham.com/blog/2009/04/16/coding-dojo-12-f/</link>
      <pubDate>Thu, 16 Apr 2009 18:20:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/16/coding-dojo-12-f/</guid>
      <description>In our latest coding dojo we worked on trying to port some of the functionality of some C# 1.0 brain models, and in particular one around simulating chaos behaviour, that Daveworked on at university.
This was more of an experimental dojo since everyone was fairly new to F# so we didn&amp;rsquo;t rotate the pair at the keyboard as frequently as possible.
[&amp;lt;Fact&amp;gt;] let should_do_something = Assert.AreEqual(2,2) The type of &amp;lsquo;should_do_something&amp;rdquo; is &amp;lsquo;unit&amp;rsquo; and as I understand it gets evaluated immediately.</description>
    </item>
    
    <item>
      <title>Lean: Big Picture over Local Optimisations</title>
      <link>https://markhneedham.com/blog/2009/04/14/lean-big-picture-over-local-optimisations/</link>
      <pubDate>Tue, 14 Apr 2009 22:10:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/14/lean-big-picture-over-local-optimisations/</guid>
      <description>I recently finished reading Lean Thinkingand one of the things that was repeatedly emphasised is the need to look at the process as a whole rather than trying to optimise each part individually.
If we phrased this in a similar way to the Agile Manifesto it would probably read &amp;lsquo;Big Picture over Local Optimisations&amp;rsquo;.
The examples in Lean Thinking tend to be more manufacturing focused but I think this idea can certainly be applied in thinking about software projects too.</description>
    </item>
    
    <item>
      <title>F#: A day of writing a little twitter application</title>
      <link>https://markhneedham.com/blog/2009/04/13/f-a-day-of-writing-a-little-twitter-application/</link>
      <pubDate>Mon, 13 Apr 2009 22:09:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/13/f-a-day-of-writing-a-little-twitter-application/</guid>
      <description>I spent most of the bank holiday Monday here in Sydney writing a little application to scan through my twitter feedand find me just the tweets which have links in them since for me that&amp;rsquo;s where a lot of the value of twitter lies.
I&amp;rsquo;m sure someone has done this already but it seemed like a good opportunity to try and put a little of the F# that I&amp;rsquo;ve learned from reading Real World Functional Programmingto use.</description>
    </item>
    
    <item>
      <title>TDD: Balancing DRYness and Readability</title>
      <link>https://markhneedham.com/blog/2009/04/13/tdd-balancing-dryness-and-readability/</link>
      <pubDate>Mon, 13 Apr 2009 00:47:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/13/tdd-balancing-dryness-and-readability/</guid>
      <description>I wrote previously about creating DRY testsand after some conversations with my colleagues recently about the balance between reducing duplication but maintaining readability I think I&amp;rsquo;ve found the compromise between the two that works best for me.
The underlying idea is that in any unit test I want to be aiming for a distinct 3 sections in the test - Given/When/Then, Arrange/Act/Assert or whatever your favourite description for those is.</description>
    </item>
    
    <item>
      <title>The Mythical Man Month: Book Review</title>
      <link>https://markhneedham.com/blog/2009/04/11/the-mythical-man-month-book-review/</link>
      <pubDate>Sat, 11 Apr 2009 12:33:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/11/the-mythical-man-month-book-review/</guid>
      <description>The Mythical Man Monthby Fred Brooks Junior
Pretty much since I started working at ThoughtWorks 2 1/2 years ago I&amp;rsquo;ve been told that this is a book I have to read and I&amp;rsquo;ve finally got around to doing so.
Maybe it&amp;rsquo;s not that surprising but my overriding thought about the book is that just about every mistake that we make in software development today is covered in this book!
In other words&amp;hellip;Domain Driven Design!</description>
    </item>
    
    <item>
      <title>Pair Programming: The Code Fairy</title>
      <link>https://markhneedham.com/blog/2009/04/10/pair-programming-the-code-fairy/</link>
      <pubDate>Fri, 10 Apr 2009 19:28:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/10/pair-programming-the-code-fairy/</guid>
      <description>One of the hardest situations that comes up when pair programming is when you want to solve a problem in a certain way but you can&amp;rsquo;t persuade your pair that it&amp;rsquo;s the approach you should take.
The temptation in these situations is to wait until your pair isn&amp;rsquo;t around, maybe by staying late at the end of the day or coming in early the next day and then making the changes to the code that you wanted to make but didn&amp;rsquo;t when you were pairing with them.</description>
    </item>
    
    <item>
      <title>Coding: Passing booleans into methods</title>
      <link>https://markhneedham.com/blog/2009/04/08/coding-passing-booleans-into-methods/</link>
      <pubDate>Wed, 08 Apr 2009 05:43:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/08/coding-passing-booleans-into-methods/</guid>
      <description>In a post I wrote a couple of days ago about understanding the context of a piece of code before criticising it, one of the examples that I used of a time when it seems fine to break a rule was passing a boolean into a method to determine whether or not to show an editable version of a control on the page.
Chatting with Nickabout this yesterday it became clear to me that I&amp;rsquo;ve missed one important reason why you&amp;rsquo;d not want to pass a boolean into a method.</description>
    </item>
    
    <item>
      <title>DDD: Only for complex projects?</title>
      <link>https://markhneedham.com/blog/2009/04/06/ddd-only-for-complex-projects/</link>
      <pubDate>Mon, 06 Apr 2009 19:21:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/06/ddd-only-for-complex-projects/</guid>
      <description>One of the things I find a bit confusing when it comes to Domain Driven Design is that some of the higher profile speakers/user group contributors on the subject have expressed the opinion that DDD is more suitablewhen we are dealing with complex projects.
I think this means complex in terms of the domain but I&amp;rsquo;ve certainly worked on some projects where we&amp;rsquo;ve been following certainly some of the ideas of DDD and have got some value out of doing so in domains which I wouldn&amp;rsquo;t say were particularly complex.</description>
    </item>
    
    <item>
      <title>Coding: It&#39;s all about the context</title>
      <link>https://markhneedham.com/blog/2009/04/05/coding-criticising-without-context/</link>
      <pubDate>Sun, 05 Apr 2009 19:45:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/05/coding-criticising-without-context/</guid>
      <description>I think one of the easiest things to do as a developer is to look at some code that you didn&amp;rsquo;t write and then start trashing it for all the supposed mistakes that the author has made that you wouldn&amp;rsquo;t have.
It&amp;rsquo;s certainly something I&amp;rsquo;ve been guilty of doing and probably will be again in the future.
Sometimes it&amp;rsquo;s justified but most of the time we lack the context for understanding why the code was written the way it wasand therefore our criticism is not very useful to anyone.</description>
    </item>
    
    <item>
      <title>Functional C#: The hole in the middle pattern</title>
      <link>https://markhneedham.com/blog/2009/04/04/functional-c-the-hole-in-the-middle-pattern/</link>
      <pubDate>Sat, 04 Apr 2009 11:41:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/04/functional-c-the-hole-in-the-middle-pattern/</guid>
      <description>While reading Real World Functional ProgrammingI came across an interesting pattern that I have noticed in some code bases recently which I liked but didn&amp;rsquo;t know had been given a name!
The hole in the middle pattern, coined by Brian Hurt, shows a cool way of using higher order functions in order to reuse code in cases where the code typically looks something like this:
public void SomeServiceCall() { var serviceClient = CreateServiceClient(); try { serviceClient.</description>
    </item>
    
    <item>
      <title>TDD: Testing mapping code</title>
      <link>https://markhneedham.com/blog/2009/04/02/tdd-testing-mapping-code/</link>
      <pubDate>Thu, 02 Apr 2009 23:11:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/04/02/tdd-testing-mapping-code/</guid>
      <description>I&amp;rsquo;ve previously written about someof the aspectsof the mapping efforts that we&amp;rsquo;ve done on recent projects and what we&amp;rsquo;ve found from our testing (or lack of) around this type of code is that somewhere along the line you are going to have to check that you&amp;rsquo;re mapping these values correctly, be it in an automated test or just by manually checking that the correct values are being sent across our integration points and into other systems.</description>
    </item>
    
    <item>
      <title>Pair Programming: Slowly but surely</title>
      <link>https://markhneedham.com/blog/2009/03/31/pair-programming-slowly-but-surely/</link>
      <pubDate>Tue, 31 Mar 2009 23:15:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/31/pair-programming-slowly-but-surely/</guid>
      <description>I recently watched a video recorded by Uncle Bob at the Chicago Alt.NET meetingwhere amongst other things he talked about the importance of going slowly but surely when we&amp;rsquo;re developing codei.e. spending the time to get it right first time instead of rushing through and having to go back and fix our mistakes.
While pairing with a colleague recently it became clear to me that pair programming, when done well, drives you towards a state where you are being much more careful about the work being produced.</description>
    </item>
    
    <item>
      <title>DDD: Recognising relationships between bounded contexts</title>
      <link>https://markhneedham.com/blog/2009/03/30/ddd-recognising-relationships-between-bounded-contexts/</link>
      <pubDate>Mon, 30 Mar 2009 22:52:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/30/ddd-recognising-relationships-between-bounded-contexts/</guid>
      <description>One of the big takeaways for mefrom the Domain Driven Design trackat the recent QCon Londonconference was that the organisational patterns in the second half of the book are probably more important than the actual patterns themselves.
There are various patterns used to describe the relationships between different bounded contexts:
I think it&amp;rsquo;s useful for us to know which situation we are in because then we can make decisions on what we want to do while being aware of the various trade offs we will need to make.</description>
    </item>
    
    <item>
      <title>Pair Programming: From a Lean angle</title>
      <link>https://markhneedham.com/blog/2009/03/29/pair-programming-from-a-lean-angle/</link>
      <pubDate>Sun, 29 Mar 2009 16:54:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/29/pair-programming-from-a-lean-angle/</guid>
      <description>I recently watched a presentation about lean thinkingand I started seeing parallels in a lot of what they were saying with the benefits that I believe we see in projects when the team pair programs.
One of the biggest arguments used against pair programming is that we get half as much work done because we have two people working on one computer.
Even if we ignore the immediate flaws in that argument I think this is a case of looking at individual productivity when in fact what we really care about is the team&amp;rsquo;s productivityi.</description>
    </item>
    
    <item>
      <title>F#: Forcing type to unit for Assert.ShouldThrow in XUnit.NET</title>
      <link>https://markhneedham.com/blog/2009/03/28/f-forcing-type-to-unit-for-assertshouldthrow-in-xunitnet/</link>
      <pubDate>Sat, 28 Mar 2009 02:35:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/28/f-forcing-type-to-unit-for-assertshouldthrow-in-xunitnet/</guid>
      <description>I&amp;rsquo;ve started playing around with F# again and decided to try and create some unit tests around the examples I&amp;rsquo;m following from Real World Functional Programming. After reading Matt Podwysocki&amp;rsquo;s blog post about XUnit.NETI decided that would probably be the best framework for me to use.
The example I&amp;rsquo;m writing tests around is:
let convertDataRow(str:string) = let cells = List.of_seq(str.Split([|&amp;#39;,&amp;#39;|])) match cells with | label::value::_ -&amp;gt; let numericValue = Int32.Parse(value) (label, numericValue) | _ -&amp;gt; failwith &amp;#34;Incorrect data format!</description>
    </item>
    
    <item>
      <title>Coding: Isolate the data not just the endpoint</title>
      <link>https://markhneedham.com/blog/2009/03/25/coding-isolate-the-data-not-just-the-endpoint/</link>
      <pubDate>Wed, 25 Mar 2009 23:28:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/25/coding-isolate-the-data-not-just-the-endpoint/</guid>
      <description>One of the fairly standard ways of shielding our applications when integrating with other systems is to create a wrapper around it so that all interaction with it is in one place.
As I mentioned in a previous post we have been using the repository patternto achieve this in our code.
One service which we needed to integrate lately provided data for populating data on drop downs on our UI so the service provided two pieces of data - a Value (which needed to be sent to another service when a certain option was selected) and a Label (which was the value for us to display on the screen).</description>
    </item>
    
    <item>
      <title>QTB: Lean Times Require Lean Thinking</title>
      <link>https://markhneedham.com/blog/2009/03/25/qtb-lean-times-require-lean-thinking/</link>
      <pubDate>Wed, 25 Mar 2009 00:36:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/25/qtb-lean-times-require-lean-thinking/</guid>
      <description>I went to watch the latest ThoughtWorks Quarterly Technology Briefingon Tuesday, which was presented by my colleague Jason Yipand Paul Heaton, titled &amp;lsquo;Lean Times Require Lean Thinking&amp;rsquo;
I&amp;rsquo;ve been reading quiteabitof lean related materiallately but I thought it would be interesting to hear about it directly from the perspective of two people who have been involved with applying the concepts in organisations.</description>
    </item>
    
    <item>
      <title>ASP.NET MVC: Pre-compiling views when using SafeEncodingCSharpCodeProvider</title>
      <link>https://markhneedham.com/blog/2009/03/24/aspnet-mvc-pre-compiling-views-when-using-safeencodingcsharpcodeprovider/</link>
      <pubDate>Tue, 24 Mar 2009 22:55:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/24/aspnet-mvc-pre-compiling-views-when-using-safeencodingcsharpcodeprovider/</guid>
      <description>We&amp;rsquo;ve been doing some work to get our views in ASP.NET MVC to be pre-compiled which allows us to see any errors in them at compilation rather than at run time.
It&amp;rsquo;s relatively simple to do. You just need to add the following code into your .csproj file anywhere below the element:
&amp;lt;Target Name=&amp;#34;AfterBuild&amp;#34;&amp;gt; &amp;lt;AspNetCompiler VirtualPath=&amp;#34;/&amp;#34; PhysicalPath=&amp;#34;$(ProjectDir)\..\$(ProjectName)&amp;#34;/&amp;gt; &amp;lt;/Target&amp;gt; where VirtualPath refers to the virtual path defined inside your project file and PhysicalPath is the path to the folder which contains the project with the views in.</description>
    </item>
    
    <item>
      <title>Coding: Making the debugger redundant</title>
      <link>https://markhneedham.com/blog/2009/03/22/coding-making-the-debugger-redundant/</link>
      <pubDate>Sun, 22 Mar 2009 19:52:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/22/coding-making-the-debugger-redundant/</guid>
      <description>I recently wrote my dislike of the debuggerand related to this, I spent some time last year watching some videos from JAOO 2007 on MSDN&amp;rsquo;s Channel 9. One of my favourites is an interview featuring Joe Armstrong and Eric Meijerwhere Joe Armstrong points out that when coding Erlang he never has to use a debugger because state is immutable.
In Erlang, once you set the value of a variable &amp;lsquo;x&amp;rsquo; it cannot be changed.</description>
    </item>
    
    <item>
      <title>Lean Thinking: Book Review</title>
      <link>https://markhneedham.com/blog/2009/03/21/lean-thinking-book-review/</link>
      <pubDate>Sat, 21 Mar 2009 10:36:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/21/lean-thinking-book-review/</guid>
      <description>Lean Thinkingby James P. Womack and Daniel T. Jones
This is the latest book in my lean learning after The Toyota Way, Taiichi Ohno&amp;rsquo;s Workplace Managementand Lean Software Developmentand seemed like the most logical one to read next as it came at lean from a slightly different angle.
I found this the most hard going of the books I&amp;rsquo;ve read on the subject so far.</description>
    </item>
    
    <item>
      <title>Coding: Reassessing what the debugger is for</title>
      <link>https://markhneedham.com/blog/2009/03/20/coding-reassessing-what-the-debugger-is-for/</link>
      <pubDate>Fri, 20 Mar 2009 21:39:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/20/coding-reassessing-what-the-debugger-is-for/</guid>
      <description>When I first started programming in a &amp;lsquo;proper&amp;rsquo; IDE one of the things that I thought was really cool was the ability to debug through my code whenever something wasn&amp;rsquo;t working quite the way I expected it to.
Now the debugger is not a completely pointless tool - indeed there is sometimes no other easy way to work out what&amp;rsquo;s going wrong - but I think it now becomes the default problem solver whenever a bit of code is not working as we expect it to.</description>
    </item>
    
    <item>
      <title>Re-reading books</title>
      <link>https://markhneedham.com/blog/2009/03/19/re-reading-books/</link>
      <pubDate>Thu, 19 Mar 2009 10:49:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/19/re-reading-books/</guid>
      <description>An interesting thing that I&amp;rsquo;ve started to notice recently with regards to software development books is that I get a lot more from reading the book the second time compared to what I did reading the book the first time.
I&amp;rsquo;ve noticed this for several books, including The Pragmatic Programmer, Code Completeand Domain Driven Design, so my first thought was that perhaps I had read this books too early when I didn&amp;rsquo;t have the necessary context or experience to gain value from reading them.</description>
    </item>
    
    <item>
      <title>Coding: Make it obvious</title>
      <link>https://markhneedham.com/blog/2009/03/18/coding-make-it-obvious/</link>
      <pubDate>Wed, 18 Mar 2009 10:44:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/18/coding-make-it-obvious/</guid>
      <description>One of the lessons that I&amp;rsquo;ve learned the more projects I work on is that the most important thing to do when coding is to do so in a way that you make life easier for the next person who has to come across that code, be it yourself or one of your team mates.
I think the underlying idea is that we need to make things as obvious as possible.</description>
    </item>
    
    <item>
      <title>QCon London 2009: The Power of Value - Power Use of Value Objects in Domain Driven Design - Dan Bergh Johnsson</title>
      <link>https://markhneedham.com/blog/2009/03/15/qcon-london-2009-the-power-of-value-power-use-of-value-objects-in-domain-driven-design-dan-bergh-johnsson/</link>
      <pubDate>Sun, 15 Mar 2009 09:45:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/15/qcon-london-2009-the-power-of-value-power-use-of-value-objects-in-domain-driven-design-dan-bergh-johnsson/</guid>
      <description>The final Domain Driven Designtalk I attended at QConwas by Dan Bergh Johnssonabout the importance of value objects in our code.
I thought this session fitted in really well as a couple of the previous speakers had spoken of the under utilisation of value objects.
The slides for the presentation are here.</description>
    </item>
    
    <item>
      <title>QCon London 2009: Rebuilding guardian.co.uk with DDD - Phil Wills</title>
      <link>https://markhneedham.com/blog/2009/03/14/qcon-london-2009-rebuilding-guardiancouk-with-ddd-phil-wills/</link>
      <pubDate>Sat, 14 Mar 2009 14:23:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/14/qcon-london-2009-rebuilding-guardiancouk-with-ddd-phil-wills/</guid>
      <description>Talk #3 on the Domain Driven Design trackat QConwas by Phil Willsabout how the Guardian rebuilt their website using Domain Driven Design.
I&amp;rsquo;d heard a little bit about this beforehand from colleagues who had the chance to work on that project but it seemed like a good opportunity to hear a practical example and the lessons learned along the way.
There are no slides available for this one on the QCon website at the moment.</description>
    </item>
    
    <item>
      <title>QCon London 2009: DDD &amp; BDD - Dan North</title>
      <link>https://markhneedham.com/blog/2009/03/14/qcon-london-2009-ddd-bdd-dan-north/</link>
      <pubDate>Sat, 14 Mar 2009 01:28:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/14/qcon-london-2009-ddd-bdd-dan-north/</guid>
      <description>The second presentation in the Domain Driven Design trackat QConwas titled &amp;lsquo;DDD &amp;amp; BDD&amp;rsquo; and was presented by my colleague Dan North- a late stand in for Greg Young who apparently injured himself playing ice hockey.
Eric did an interview with Greg at QCon San Francisco 2007where Greg talks about some of his ideas and apparently there is an InfoQ video kicking around of Greg&amp;rsquo;s &amp;lsquo;Unshackle Your Domain&amp;rsquo; talk from QCon San Francisco 2008 which we were told to pester InfoQ to post on their website!</description>
    </item>
    
    <item>
      <title>QCon London 2009: What I&#39;ve learned about DDD since the book - Eric Evans</title>
      <link>https://markhneedham.com/blog/2009/03/13/qcon-london-2009-what-ive-learned-about-ddd-since-the-book-eric-evans/</link>
      <pubDate>Fri, 13 Mar 2009 20:56:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/13/qcon-london-2009-what-ive-learned-about-ddd-since-the-book-eric-evans/</guid>
      <description>I went to the QCon conference in Londonon Thursday, spending the majority of the day on Eric Evans&amp;rsquo; Domain Driven Design track.
The opening presentation was by Eric Evans, himself, and was titled &amp;lsquo;What I&amp;rsquo;ve learned about DDD since the book&amp;rsquo;.
We&amp;rsquo;re currently reading Domain Driven Designin our technical book club in the ThoughtWorks Sydney office so I was intrigued to hear about Eric&amp;rsquo;s experiences with DDD and how those compared with ours.</description>
    </item>
    
    <item>
      <title>OO: Reducing the cost of...lots of stuff!</title>
      <link>https://markhneedham.com/blog/2009/03/12/oo-reducing-the-cost-oflots-of-stuff/</link>
      <pubDate>Thu, 12 Mar 2009 04:04:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/12/oo-reducing-the-cost-oflots-of-stuff/</guid>
      <description>I&amp;#8217;ve been working in the world of professional software development for a few years now and pretty much take it as a given that the best way to write code which is easy for other people to understand and work with is to write that code in an object oriented way.
 Not everyone agrees with this approach of course and I&amp;#8217;ve been told on occasions that I&amp;#8217;m &#39;over object orienting&#39; (is that even a word?</description>
    </item>
    
    <item>
      <title>OO: Micro Types</title>
      <link>https://markhneedham.com/blog/2009/03/10/oo-micro-types/</link>
      <pubDate>Tue, 10 Mar 2009 22:40:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/10/oo-micro-types/</guid>
      <description>Micro or Tiny types present an approach to coding which seems to divide opinion in my experience, from those who think it&amp;#8217;s a brilliant idea to those who believe it&amp;#8217;s static typing gone mad.
 I fall into the former group.
 So what is it?
 The idea is fairly simple - all primitives and strings in our code are wrapped by a class, meaning that we never pass primitives around.</description>
    </item>
    
    <item>
      <title>DDD: Repository pattern</title>
      <link>https://markhneedham.com/blog/2009/03/10/ddd-repository-not-only-for-databases/</link>
      <pubDate>Tue, 10 Mar 2009 10:31:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/10/ddd-repository-not-only-for-databases/</guid>
      <description>The Repositorypattern from Domain Driven Design is one of the cleanest ways I have come across for separating our domain objects from their persistence mechanism.
Until recently every single implementation I had seen of this pattern involved directly using a database as the persistence mechanism with the repository acting as a wrapper around the Object Relational Mapper (Hibernate/NHibernate).
Now I consider there to be two parts to the repository pattern:</description>
    </item>
    
    <item>
      <title>DDD: Bounded Contexts</title>
      <link>https://markhneedham.com/blog/2009/03/07/ddd-bounded-contexts/</link>
      <pubDate>Sat, 07 Mar 2009 10:03:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/07/ddd-bounded-contexts/</guid>
      <description>I&amp;rsquo;ve been reading Casey Charlton&amp;rsquo;s excellent series of posts on Domain Driven Designrecently and today came across his thoughts about which types of applications Domain Driven Design is suited to.
Towards the end of the post he talks about the fact that there is a lot of excellent ideas in Domain Driven Design even if you don&amp;rsquo;t have the chance to use all of them.
A pattern which I think is applicable in the majority of systems is bounded context- if I remember correctly this isn&amp;rsquo;t mentioned in InfoQ&amp;rsquo;s Domain Driven Quickly bookbut is extensively covered in the big blue book.</description>
    </item>
    
    <item>
      <title>Coding Dojo #11: Javascript Isola</title>
      <link>https://markhneedham.com/blog/2009/03/06/coding-dojo-11-javascript-isola/</link>
      <pubDate>Fri, 06 Mar 2009 06:38:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/06/coding-dojo-11-javascript-isola/</guid>
      <description>In our latest coding dojo we attempted to code Isolain Javascript but instead of coding from the board inwards we decided to try and take the approach of coding from the cells outwards to keep it interesting.
My colleague brought in his copy of the game and it made it much easier to imagine how we should be modeling it by having the game in front of us.
We used the Randoriapproach with four people participating for the whole session.</description>
    </item>
    
    <item>
      <title>Coding: Good Citizens</title>
      <link>https://markhneedham.com/blog/2009/03/04/coding-good-citizens/</link>
      <pubDate>Wed, 04 Mar 2009 23:58:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/04/coding-good-citizens/</guid>
      <description>I was recently reading Brad Cross&amp;rsquo; recent post about creating objects which are Good Citizensin code and he certainly nails one aspect of this with regards to ensuring that our objects are in a usable state post construction.
This is the main reason I find the C# object initializer syntaxsuch a nightmare - it gets blatantly abused and you end up with half constructed objects all around the code base and you&amp;rsquo;re never sure where your next Null Object Exception is going to come from so you pepper the code with null checks to try and avoid them.</description>
    </item>
    
    <item>
      <title>ASP.NET MVC: Reducing duplication for partial models</title>
      <link>https://markhneedham.com/blog/2009/03/03/aspnet-mvc-using-adaptors-for-partial-models/</link>
      <pubDate>Tue, 03 Mar 2009 23:55:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/03/aspnet-mvc-using-adaptors-for-partial-models/</guid>
      <description>One of the problems we can encounter when using partialsthroughout our views is how we should create the model needed for those partials.
The approach that we have been following is to have the partial/child model on the parent model and then just call the appropriate method where we create the partial.
e.g.
public class ParentModel { public string Property1 {get;set;} public ChildModel ChildModel { get;set; } } public class ChildModel { public string Property1 {get;set;} } We have sometimes run into the problem where the data in the ChildModel is being populated from the ParentModel (due to it also being needed there) leading to data duplication.</description>
    </item>
    
    <item>
      <title>Trade Offs: Some Thoughts</title>
      <link>https://markhneedham.com/blog/2009/03/02/trade-offs-some-thoughts/</link>
      <pubDate>Mon, 02 Mar 2009 23:01:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/02/trade-offs-some-thoughts/</guid>
      <description>As we know with software development with pretty much every decision we make or technology we choose there is a trade off that goes with making this choice as compared with choosing an alternative.
I first learnt this when working with Adea couple of years ago and while I know it to be true, I had come to believe that some practices are just non-negotiable and we should look to apply them judiciously wherever possible.</description>
    </item>
    
    <item>
      <title>NUnit: Tests with Context/Spec style assertions</title>
      <link>https://markhneedham.com/blog/2009/03/01/nunit-tests-with-contextspec-style-assertions/</link>
      <pubDate>Sun, 01 Mar 2009 16:43:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/03/01/nunit-tests-with-contextspec-style-assertions/</guid>
      <description>I recently started playing around with Scott Bellware&amp;rsquo;sSpec-Unitand Aaron&amp;rsquo;s Jensen&amp;rsquo;sMSpec, two frameworks which both provide a way of writing Context/Spec style tests/specifications.
What I particularly like about this approach to writing tests is that we can divide assertions into specific blocks and have them all evaluated even if an earlier one fails.
NUnitis our testing tool of choice at the moment and we wanted to try and find a way to test the mapping between the domain and service layers of the application.</description>
    </item>
    
    <item>
      <title>Coding: Implicit vs Explicit modeling </title>
      <link>https://markhneedham.com/blog/2009/02/28/coding-implicit-vs-explicit-modeling/</link>
      <pubDate>Sat, 28 Feb 2009 09:50:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/28/coding-implicit-vs-explicit-modeling/</guid>
      <description>When it comes to object modeling there seem to be two distinct approaches that I have come across.
The first approach is where we do what I like to think of as implicit modeling.
With this approach we would probably use less objects than in the explicit approach and we would have objects being populated as we moved through the work flow of our application.
I call it implicit modeling because we need to imply where we are based on the internal state of our objects- we can typically work this out by seeing what is and is not set to null.</description>
    </item>
    
    <item>
      <title>Coding: Using &#39;ToString&#39;</title>
      <link>https://markhneedham.com/blog/2009/02/26/coding-using-tostring/</link>
      <pubDate>Thu, 26 Feb 2009 23:43:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/26/coding-using-tostring/</guid>
      <description>An interesting conversation I&amp;rsquo;ve had recently with some of my colleagues is around the use of the ToString method available on all objects created in Java or C#. It was also pointed out in the comments on my recent post about wrapping DateTimes in our code.
I think the original intention of this method was to create a string representation of an object, but its use has been overloaded by developers to the point where its expected use is as a mechanism for creating nice output when debugging the code or viewing unit test failures.</description>
    </item>
    
    <item>
      <title>C#: Wrapping DateTime</title>
      <link>https://markhneedham.com/blog/2009/02/25/c-wrapping-datetime/</link>
      <pubDate>Wed, 25 Feb 2009 23:12:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/25/c-wrapping-datetime/</guid>
      <description>I think it was Darren Hobbswho first introduced me to the idea of wrapping dates in our system to describe what that date actually means in our context, and after suffering the pain of passing some unwrapped dates around our code I think I can safely say that wrapping them is the way to go.
The culprit was a date of birth which was sometimes being created from user input and sometimes being retrieved from another system.</description>
    </item>
    
    <item>
      <title>C#: Wrapping collections vs Extension methods</title>
      <link>https://markhneedham.com/blog/2009/02/23/c-wrapping-collections-vs-extension-methods/</link>
      <pubDate>Mon, 23 Feb 2009 20:24:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/23/c-wrapping-collections-vs-extension-methods/</guid>
      <description>Another interesting thing I&amp;rsquo;ve noticed in C# world is that there seems to be a trend towards using extension methods as much as possible. One area where this is particularly prevalent is when working with collections.
From reading Object Calisthenicsand working with NickI have got used to wrapping collections and defining methods on the wrapped class for interacting with the underlying collection.
For example, given that we have a collection of Foos that we need to use in our system we might wrap that in an object Foos.</description>
    </item>
    
    <item>
      <title>C#: Implicit Operator</title>
      <link>https://markhneedham.com/blog/2009/02/22/c-implicit-operator/</link>
      <pubDate>Sun, 22 Feb 2009 22:20:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/22/c-implicit-operator/</guid>
      <description>Since it was pointed out in the comments on an earlier post I wrote about using the builder pattern how useful the implicit operatorcould be in this context we&amp;rsquo;ve been using it wherever it makes sense.
The main benefit that using this approach provides is that our test code becomes more expressive since we don&amp;rsquo;t need to explicitly call a method to complete the building of our object.
public class FooBuilder { private string bar = &amp;#34;defaultBar&amp;#34;; public FooBuilder Bar(string value) { bar = value; return this; } public static implicit operator Foo(FooBuilder builder) { return new Foo { Bar = builder.</description>
    </item>
    
    <item>
      <title>ASP.NET MVC: Driving partials by convention</title>
      <link>https://markhneedham.com/blog/2009/02/21/aspnet-mvc-driving-partials-by-convention/</link>
      <pubDate>Sat, 21 Feb 2009 10:39:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/21/aspnet-mvc-driving-partials-by-convention/</guid>
      <description>I like to have conventions in the code I write - I find it makes the code i write much cleaner which still providing flexibility.
One of the conventions that Jeremy Miller coined for working with ASP.NET MVC applications is that of using one model per controller method aka &amp;quot;The Thunderdome principle&amp;quot;. I think we can take this further by having one model per partialthat we use inside our views.</description>
    </item>
    
    <item>
      <title>Coding Dojo #10: Isola III</title>
      <link>https://markhneedham.com/blog/2009/02/19/coding-dojo-10-isola-iii/</link>
      <pubDate>Thu, 19 Feb 2009 23:09:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/19/coding-dojo-10-isola-iii/</guid>
      <description>In our latest coding dojo we continued working on Isolawith a focus on adding functionality following on from last week&amp;rsquo;s refactoring effort.
We used the Randoriapproach with four people participating for the whole session.</description>
    </item>
    
    <item>
      <title>C#: Extension methods != Open classes</title>
      <link>https://markhneedham.com/blog/2009/02/19/c-extensions-methods-open-classes/</link>
      <pubDate>Thu, 19 Feb 2009 06:22:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/19/c-extensions-methods-open-classes/</guid>
      <description>When I first heard about extension methodsin C# it sounded like a pretty cool idea but I wasn&amp;rsquo;t sure how they differed to the idea of open classes that I had seen when doing a bit of Ruby.
After a bit of a struggle recently to try and override some extension methods on HtmlHelper in ASP.NET MVC it&amp;rsquo;s clear to me that we don&amp;rsquo;t quite have the same power that open classes would provide.</description>
    </item>
    
    <item>
      <title>Collective Code Ownership: Some Thoughts</title>
      <link>https://markhneedham.com/blog/2009/02/17/collective-code-ownership-some-thoughts/</link>
      <pubDate>Tue, 17 Feb 2009 22:32:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/17/collective-code-ownership-some-thoughts/</guid>
      <description>Collective code ownershipis one of the things we practice on projects using extreme programming and Mike Bria&amp;rsquo;s post on the subjectmakes me wonder if code ownership exists on more than one level.
Kent Beck&amp;rsquo;s definition of collective code ownershipis that
Mike also gives an alternative definition which goes beyond that:
Fo me this second definition goes beyond just describing a belief system about code and seems to be heading more towards the benefits we achieve from close collaboration on a code base using techniques such as pair programming.</description>
    </item>
    
    <item>
      <title>C#: Object Initializer and The Horse Shoe</title>
      <link>https://markhneedham.com/blog/2009/02/16/c-object-initializer-and-the-horse-shoe/</link>
      <pubDate>Mon, 16 Feb 2009 22:04:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/16/c-object-initializer-and-the-horse-shoe/</guid>
      <description>The object initializersyntax introduced in C# 3.0 makes it easier for us to initialise our objects in one statement but I think we need to remember that they are not named parametersand that there is still a place (a very good one actually) for creating objects from constructors or factory methods.
Unfortunately what I think the cleaner syntax does is encourage us to create objects with half the fields populated and half of them null by default.</description>
    </item>
    
    <item>
      <title>Encoding user entered data</title>
      <link>https://markhneedham.com/blog/2009/02/15/encoding-user-entered-data/</link>
      <pubDate>Sun, 15 Feb 2009 01:46:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/15/encoding-user-entered-data/</guid>
      <description>I previously wrote about protecting websites from cross site scripting in the ASP.NET MVC frameworkby encoding user input when we are going to display it in the browser.
We can either choose to encode data like this or we can encode it straight away when we get it.
There did not seem to be a consensus on the best approach in a discussion on the ASP.NET forumsbut we believe it is far better to encode the data when it is outgoing rather than incoming.</description>
    </item>
    
    <item>
      <title>Coding: Assertions in constructors</title>
      <link>https://markhneedham.com/blog/2009/02/14/coding-assertions-in-constructors/</link>
      <pubDate>Sat, 14 Feb 2009 01:32:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/14/coding-assertions-in-constructors/</guid>
      <description>While browsing through the ASP.NET MVC sourceI noticed that they use an interesting pattern on the constructors to ensure that an exception will be thrown if an object is not instantiated correctly.
public ControllerContext(HttpContextBase httpContext, RouteData routeData, ControllerBase controller) : base(httpContext, routeData) { if (controller == null) { throw new ArgumentNullException(&amp;#34;controller&amp;#34;); } Controller = controller; } If you pass in a null Controller you shall go no further!
We have discussed the merits of putting assertions in constructors several times in our Domain Driven Designbook club but without ever really coming to a conclusion with respect to whether or not it is a good pattern.</description>
    </item>
    
    <item>
      <title>Ferengi Programmer and the Dreyfus Model</title>
      <link>https://markhneedham.com/blog/2009/02/13/ferengi-programmer-and-the-dreyfus-model/</link>
      <pubDate>Fri, 13 Feb 2009 00:01:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/13/ferengi-programmer-and-the-dreyfus-model/</guid>
      <description>I&amp;rsquo;ve been reading Jeff Atwood&amp;rsquo;s postregarding Joel&amp;rsquo;s comments on the podcastabout Uncle Bob&amp;rsquo;s SOLID principlesand what struck me as I read through his dislike of having too many rules and guidelines is that there is a misunderstanding of how we should use these rules and I think at the heart of this understanding the Dreyfus Model might clear this up.
To briefly recap the different levels of the Dreyfus Model(you can read more about this in Pragmatic Thinking and Learning)</description>
    </item>
    
    <item>
      <title>ASP.NET MVC: Preventing XSS attacks</title>
      <link>https://markhneedham.com/blog/2009/02/12/aspnet-mvc-preventing-xss-attacks/</link>
      <pubDate>Thu, 12 Feb 2009 22:47:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/12/aspnet-mvc-preventing-xss-attacks/</guid>
      <description>XSS(Cross site scripting) attacks on websites seem to be quite popular these days but luckily if you&amp;rsquo;re working with the ASP.NET MVC framework Steve Sanderson has written a great post on how to protect yourself from this.
The solution Steve details works the opposite way to other solutions I have heard for this problem - we assume that everything that goes to the browser needs to be HTML encoded unless otherwise stated.</description>
    </item>
    
    <item>
      <title>Coding Dojo #9: Refactoring Isola</title>
      <link>https://markhneedham.com/blog/2009/02/12/coding-dojo-9-refactoring-isola/</link>
      <pubDate>Thu, 12 Feb 2009 21:46:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/12/coding-dojo-9-refactoring-isola/</guid>
      <description>Our latest coding dojo involved refactoring the code we wrote a couple of weeks ago for the board game Isola.
We started a repository on Bit Bucketto store our code from these sessions.
We used the Randoriapproach again with four people participating for the whole session.
public class IsolaPlayer { public IsolaPlayer playerOne = new IsolaPlayer(&amp;#34;-1&amp;#34;); public IsolaPlayer playerTwo = new IsolaPlayer(&amp;#34;-2&amp;#34;); private final String playerRepresentation;private final String HOME_POSITION = &amp;#34;[]&amp;#34;; private String stomach; public IsolaPlayer(String playerRepresentation) { this.</description>
    </item>
    
    <item>
      <title>C#: Properties vs Methods</title>
      <link>https://markhneedham.com/blog/2009/02/11/c-properties-vs-methods/</link>
      <pubDate>Wed, 11 Feb 2009 11:20:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/11/c-properties-vs-methods/</guid>
      <description>I was browsing through our tests today and noticed a test along these lines (simplified for example purposes):
[Test, ExpectedException(typeof(Exception))] public void ShouldThrowExceptionIfNoBarSet() { var bar = new Foo(null).Bar; } public class Foo { private readonly string bar; public Foo(string bar) { this.bar = bar; } public string Bar { get { if (bar == null) { throw new Exception(&amp;#34;No bar&amp;#34;); } return bar; } } } What I found strange here is that &amp;lsquo;bar&amp;rsquo; is never used and Resharper points out as much.</description>
    </item>
    
    <item>
      <title>Agile: Re-estimating cards</title>
      <link>https://markhneedham.com/blog/2009/02/11/agile-re-estimating-cards/</link>
      <pubDate>Wed, 11 Feb 2009 07:25:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/11/agile-re-estimating-cards/</guid>
      <description>Chris Johnston has another interesting post in which he writes about the practice of re-estimating cards after they have been completed.
I think this somewhat misses the point that the estimate is indeed supposed to be an estimate. It might turn out to be too optimistic or too pessimistic, the theory being that overall we will end up with a reasonable balance that will allow us to make a prediction on how much work we believe we can complete in a certain time period.</description>
    </item>
    
    <item>
      <title>Agile: What is it?</title>
      <link>https://markhneedham.com/blog/2009/02/09/agile-what-is-it/</link>
      <pubDate>Mon, 09 Feb 2009 17:06:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/09/agile-what-is-it/</guid>
      <description>My colleague Chris Johnston wrote recently about his experiences in agile software development, posing some questions that he has.
Specifically:
Now I&amp;rsquo;m assuming that most (if not all) of Chris&amp;rsquo; experiences with agile have been at ThoughtWorks, in which case the mix of agile we use on our projects tends to be a combination of Scrum and Extreme Programming.
The last question seems the most logical to start with:
I&amp;rsquo;m with Chris on this one - as far as I understand agile is all about adapting a set of principles to the environmentthat we find ourself in.</description>
    </item>
    
    <item>
      <title>OOP: What does an object&#39;s responsibility entail?</title>
      <link>https://markhneedham.com/blog/2009/02/09/oop-what-does-an-objects-responsibility-entail/</link>
      <pubDate>Mon, 09 Feb 2009 16:52:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/09/oop-what-does-an-objects-responsibility-entail/</guid>
      <description>One of the interesting discussions I&amp;rsquo;ve been having recently with some colleagues is around where the responsibility lies for describing the representation of an object when it is to be used in another bounded context - e.g. on the user interface or in a call to another system.
I believe that an object should be responsible for deciding how its data is used rather than having another object reach into it, retrieve its data and then decide what to do with it.</description>
    </item>
    
    <item>
      <title>Quality is what I work for</title>
      <link>https://markhneedham.com/blog/2009/02/09/quality-is-what-i-work-for/</link>
      <pubDate>Mon, 09 Feb 2009 16:51:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/09/quality-is-what-i-work-for/</guid>
      <description>I&amp;rsquo;ve been reading the transcript of Joel Spolsky/Jeff Atwood&amp;rsquo;s podcast discussion on TDD/Qualityand related posts on the subject by UncleBoband Ron Jeffriesand while I guess it&amp;rsquo;s fairly inevitable that I&amp;rsquo;m likely to side with the latter two, what I&amp;rsquo;ve realised is that I get the greatest enjoyment from my job when we are writing high quality software.
Certainly delivering value to customers in a timely manner is important but if we&amp;rsquo;re not producing something that we&amp;rsquo;re proud to have written then I think we&amp;rsquo;re doing ourselves and our customer a disservice.</description>
    </item>
    
    <item>
      <title>Refactoring: Comment it out vs small steps removal</title>
      <link>https://markhneedham.com/blog/2009/02/08/refactoring-comment-it-out-vs-small-steps-removal/</link>
      <pubDate>Sun, 08 Feb 2009 09:10:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/08/refactoring-comment-it-out-vs-small-steps-removal/</guid>
      <description>One refactoring I was doing last week was to try and remove the use of some getters/setters on one of our objects so that it was better encapsulated and all the behaviour related to it happened in one place.
The change involved introducing a constructor to initialise the object rather than doing so using the new object initialiser syntax and initalising it using the properties.
My initial approach was to find all the usages of these properties and then remove each usage one by one, running our suite of tests against the code after each change to ensure that nothing had broken as a result of the change.</description>
    </item>
    
    <item>
      <title>Agile: Why do we integrate early?</title>
      <link>https://markhneedham.com/blog/2009/02/06/agile-why-do-we-integrate-early/</link>
      <pubDate>Fri, 06 Feb 2009 16:47:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/06/agile-why-do-we-integrate-early/</guid>
      <description>One of the inevitabilities of most projects is that at some stage there is going to need be some sort of integration.
The likes of Alistair Cockburn in Crystal Clearand Andy Hunt/Dave Thomas in The Pragmatic Programmertalk of the need to do integration early rather than letting it wait until later, but why?
To some degree every time we try to integrate there is going to be some level of pain - for me it therefore makes sense that we take this pain early on when we have the chance to do something about it rather than leaving it until later and being surprised at the problems it causes.</description>
    </item>
    
    <item>
      <title>C#: Public fields vs automatic properties </title>
      <link>https://markhneedham.com/blog/2009/02/04/c-public-fields-vs-automatic-properties/</link>
      <pubDate>Wed, 04 Feb 2009 17:52:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/04/c-public-fields-vs-automatic-properties/</guid>
      <description>An interesting new feature in C# 3.0 is that of automatic propertieson objects - this allows us to define a get/set property and the creation of the underlying field is taken care off for us.
We can therefore create a class like this:
public class Foo { public string Bar { get; set; } } Now ignoring the fact that it&amp;rsquo;s terrible OO to write a class like that, one thing that we&amp;rsquo;ve been wondering is what&amp;rsquo;s the difference between doing the above and just creating a public field on Foo called Bar like so:</description>
    </item>
    
    <item>
      <title>Nant include task - namespace matters</title>
      <link>https://markhneedham.com/blog/2009/02/03/nant-include-task-namespace-matters/</link>
      <pubDate>Tue, 03 Feb 2009 10:43:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/03/nant-include-task-namespace-matters/</guid>
      <description>We&amp;rsquo;ve been trying to include some properties into our build file from a properties file today but no matter what we tried the properties were not being set.
We eventually realised that the build file has an XML Namespace set on the project element.
&amp;lt;project name=&amp;#34;...&amp;#34; xmlns=&amp;#34;http://nant.sf.net/schemas/nant.xsd&amp;#34;&amp;gt; It turns out that if you want to include a properties file in your build file, like so:
&amp;lt;include buildfile=&amp;#34;properties.xml&amp;#34; /&amp;gt; &amp;hellip;you need to put the namespace on the project attribute of that file as well, otherwise its properties don&amp;rsquo;t get picked up.</description>
    </item>
    
    <item>
      <title>C#: Refactoring to functional collection parameters</title>
      <link>https://markhneedham.com/blog/2009/02/03/c-refactoring-to-functional-collection-parameters/</link>
      <pubDate>Tue, 03 Feb 2009 07:18:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/02/03/c-refactoring-to-functional-collection-parameters/</guid>
      <description>I wrote about a month or so ago about the functional collection parametersnow available in C# and certainly one of the most fun refactorings for me is trying to get code written using a for loop into a state where it is using one of these.
With a bit of help from my colleague James Crisp, these are some of the most common refactorings that I have come across so far.</description>
    </item>
    
    <item>
      <title>Coding Dojo #8: Isola</title>
      <link>https://markhneedham.com/blog/2009/01/30/coding-dojo-8-isola/</link>
      <pubDate>Fri, 30 Jan 2009 11:17:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/30/coding-dojo-8-isola/</guid>
      <description>Our latest coding dojo involved writing the board game Isolain Java.
We used the Randoriapproach again with around 8 or 9 people participating for the majority of the session, our biggest turnout yet. I think the majority of people had the opportunity to drive a couple of times over the evening.
We had the pair driving at the front of the room and everyone else further back to stop the tendency of observers to whiteboard stuff.</description>
    </item>
    
    <item>
      <title>TDD: Test DRYness</title>
      <link>https://markhneedham.com/blog/2009/01/30/tdd-test-dryness/</link>
      <pubDate>Fri, 30 Jan 2009 11:16:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/30/tdd-test-dryness/</guid>
      <description>I had a discussion recently with Fabioabout DRYness in our tests and how we don&amp;rsquo;t tend to adhere to this principal as often in test code as in production code.
I think certainly some of the reason for this is that we don&amp;rsquo;t take as much care of our test code as we do production code but for me at least some of it is down to the fact that if we make our tests too DRY then they become very difficult to readand perhaps more importantly, very difficult to debug when there is a failure.</description>
    </item>
    
    <item>
      <title>TDD: Design tests for failure</title>
      <link>https://markhneedham.com/blog/2009/01/28/tdd-design-tests-for-failure/</link>
      <pubDate>Wed, 28 Jan 2009 00:48:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/28/tdd-design-tests-for-failure/</guid>
      <description>As with most code, tests are read many more times than they are written and as the majority of the time the reason for reading them is to identify a test failure I think it makes sense that we should be designing our tests with failure in mind.
Several ideas come to mind when thinking about ways to write/design our tests so that when we do have to read them our task is made easier.</description>
    </item>
    
    <item>
      <title>Learning alone or Learning together</title>
      <link>https://markhneedham.com/blog/2009/01/25/learning-alone-or-learning-together/</link>
      <pubDate>Sun, 25 Jan 2009 23:00:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/25/learning-alone-or-learning-together/</guid>
      <description>One of the things that I have been curious about since we started running coding dojosis whether people learn more effectively alone or when learning as part of a group.
Not that I think they are mutually exclusive, I think a combination of both is probably the way to go depending on what it is we are trying to learn and the way that we&amp;rsquo;re trying to learn it.
I think learning a new programming language is one of the times when learning on your own makes the most sense.</description>
    </item>
    
    <item>
      <title>jQuery: Approaches to testing</title>
      <link>https://markhneedham.com/blog/2009/01/24/jquery-approaches-to-testing/</link>
      <pubDate>Sat, 24 Jan 2009 09:36:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/24/jquery-approaches-to-testing/</guid>
      <description>We&amp;rsquo;ve been doing a bit of work with jQueryand true to our TDD roots we&amp;rsquo;ve been trying to work out the best way to test drive our coding in this area.
There seem to be 3 main ways that you can go about doing this, regardless of the testing framework you choose to you. We are using screw-unitfor our javascript testing.
The idea here is that we mock out all calls made to jQuery functions and then we assert that the expected calls were made in our test.</description>
    </item>
    
    <item>
      <title>Coding Dojo #7: Retlang/Hamcrest .NET attempt</title>
      <link>https://markhneedham.com/blog/2009/01/22/coding-dojo-7-retlanghamcrest-net-attempt/</link>
      <pubDate>Thu, 22 Jan 2009 23:02:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/22/coding-dojo-7-retlanghamcrest-net-attempt/</guid>
      <description>We ran a sort of coding dojo/playing around session which started with us looking at the .NET concurrency library, Retlang, and ended with an attempt to write Hamcreststyle assertions in C#.
The assertion read like this:
var gotMessage = new ManualResetEvent(false); ... Assert.IsTrue(gotMessage.WaitOne(2000, false)); We initially worked this to read like so:
AssertThat(gotMessage, HasTrippedWithin(2.Seconds()); AssertThat and HasTrippedWithin were local methods and Seconds was an extension method. It&amp;rsquo;s pretty nice but the problem is that we can&amp;rsquo;t reuse this code easily in other test classes and keep the readability.</description>
    </item>
    
    <item>
      <title>C#: Builder pattern still useful for test data</title>
      <link>https://markhneedham.com/blog/2009/01/21/c-builder-pattern-still-useful-for-test-data/</link>
      <pubDate>Wed, 21 Jan 2009 23:49:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/21/c-builder-pattern-still-useful-for-test-data/</guid>
      <description>I had thought that with the ability to use the new object initalizersyntax in C# 3.0 meant that the builder pattern was now no longer necessary but some recent refactoring efforts have made me believe otherwise.
My original thought was that the builder pattern was really useful for providing a nicely chained way of creating objects, but after a bit of discussion with some colleagues I have come across three different reasons why we might want to use the builder pattern to create test data:</description>
    </item>
    
    <item>
      <title>Coding: Contextual learning</title>
      <link>https://markhneedham.com/blog/2009/01/21/coding-contextual-learning/</link>
      <pubDate>Wed, 21 Jan 2009 06:42:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/21/coding-contextual-learning/</guid>
      <description>While reading my colleague&amp;rsquo;s notes on a brown bag session on pair programmingshe gave I was reminded of my belief that we learn much more effectively when we are learning in a practical environment.
The bit that interested me was this bit regarding onboarding:
It&amp;rsquo;s fairly normal for the Tech Lead to give new starters on a project this kind of overview and although it is useful as a starting point, nearly everyone I have worked with is keen to see how these ideas are implemented in the code.</description>
    </item>
    
    <item>
      <title>Cruise: Pipelining for fast visual feedback</title>
      <link>https://markhneedham.com/blog/2009/01/19/cruise-pipelining-for-fast-visual-feedback/</link>
      <pubDate>Mon, 19 Jan 2009 21:38:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/19/cruise-pipelining-for-fast-visual-feedback/</guid>
      <description>One of the cool features in build servers like Cruiseand Team Cityis the ability to create build pipelines.
I have done a bit of work using this feature in previous projects but the key driver for doing so there was to create a chain of producers/consumers (producing and consuming artifacts) eventually resulting in a manual step to put the application into a testing environment.
While this is certainly a good reason to create a build pipeline, a colleaguepointed out an equally useful way of using this feature to split the build into separate steps pipelined together.</description>
    </item>
    
    <item>
      <title>F# vs C# vs Java: Functional Collection Parameters</title>
      <link>https://markhneedham.com/blog/2009/01/19/f-vs-c-vs-java-functional-collection-parameters/</link>
      <pubDate>Mon, 19 Jan 2009 19:24:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/19/f-vs-c-vs-java-functional-collection-parameters/</guid>
      <description>I wrote a post about a month ago on using functional collection parametersin C# and over the weekend Fabioand I decided to try and contrast the way you would do this in Java, C# and then F# just for fun.
Map evaluates a high order function on all the elements in a collection and then returns a new collection containing the results of the function evaluation.
Given the numbers 1-5, return the square of each number</description>
    </item>
    
    <item>
      <title>YAGNI: Some thoughts</title>
      <link>https://markhneedham.com/blog/2009/01/17/yagni-some-thoughts/</link>
      <pubDate>Sat, 17 Jan 2009 21:01:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/17/yagni-some-thoughts/</guid>
      <description>If you hang around a team practicing XPfor long enough, one of the phrases you are bound to hear is YAGNI(You Ain&amp;rsquo;t Gonna Need It).
Although it can sometimes be used to ignore things we don&amp;rsquo;t want to focus on as Ian points out, in general the aim is to stop people from working on code that isn&amp;rsquo;t currently required.
So assuming our team isn&amp;rsquo;t being lazy and trying to avoid decisions that they don&amp;rsquo;t want to think about, why do we hear the YAGNI call and more importantly, perhaps, what happens when we don&amp;rsquo;t heed that call.</description>
    </item>
    
    <item>
      <title>The danger of commenting out code</title>
      <link>https://markhneedham.com/blog/2009/01/17/the-danger-of-commenting-out-code/</link>
      <pubDate>Sat, 17 Jan 2009 16:02:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/17/the-danger-of-commenting-out-code/</guid>
      <description>An idea which is considered common sense by most developers but which is not always adhered to is that of not commenting out code.
Code is nearly always under source control anyway so commenting out code which is not being used doesn&amp;rsquo;t really serve any positive purpose and it can have quite a few negative effects.
Ideally we should be able to read through the code without too much confusion - each method&amp;rsquo;s name being descriptive enough that we can work out what is going on.</description>
    </item>
    
    <item>
      <title>Coding Dojo #6: Web Driver</title>
      <link>https://markhneedham.com/blog/2009/01/15/coding-dojo-6-web-driver/</link>
      <pubDate>Thu, 15 Jan 2009 00:37:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/15/coding-dojo-6-web-driver/</guid>
      <description>We ran a sort of coding dojo/more playing around with web driverlearning session this evening, coding some tests in Java driving Planet TWfrom the code.</description>
    </item>
    
    <item>
      <title>F#: Partial Function Application with the Function Composition Operator</title>
      <link>https://markhneedham.com/blog/2009/01/12/f-partial-function-application-with-the-function-composition-operator/</link>
      <pubDate>Mon, 12 Jan 2009 22:22:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/12/f-partial-function-application-with-the-function-composition-operator/</guid>
      <description>In my continued reading of F# one of the ideas I&amp;rsquo;ve come across recently is that of partial function application.
This is a way of allowing us to combine different functions together and allows some quite powerful syntax to be written.
The term &amp;lsquo;currying&amp;rsquo; is perhaps a better known term for describing this although as I understand they are not exactly the same.
Curryingis where we return a function that has been partially applied, in such a way that we can chain together a group of functions with a single argument.</description>
    </item>
    
    <item>
      <title>How does the user language fit in with the ubiquitous language?</title>
      <link>https://markhneedham.com/blog/2009/01/10/how-does-the-user-language-fit-in-with-the-ubiquitous-language/</link>
      <pubDate>Sat, 10 Jan 2009 15:38:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/10/how-does-the-user-language-fit-in-with-the-ubiquitous-language/</guid>
      <description>We&amp;rsquo;ve been doing some work this week around trying to ensure that we have a ubiquitous languageto describe aspects of the domain across the various different systems on my project.
It&amp;rsquo;s not easy as there are several different teams involved but one thing we realised while working on the language is that the language of the business is not the same as the language of the user.
Although this is the first time that I recall working on a project where the language of the user is different to the language of the domain I&amp;rsquo;m sure there must be other domains where this is the case as well.</description>
    </item>
    
    <item>
      <title>Finding the value in fixing technical debt</title>
      <link>https://markhneedham.com/blog/2009/01/10/finding-the-value-in-fixing-technical-debt/</link>
      <pubDate>Sat, 10 Jan 2009 14:04:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/10/finding-the-value-in-fixing-technical-debt/</guid>
      <description>Technical debtis a term coined by Martin Fowler which we tend to use on our projects to describe a number of different situations on projects as Ian Cartwright points outin his post on the subject.
Ian covers it in more detail, but to summarise my understanding of what technical debt actually is:
The latter part of the sentence is interesting because it is somewhat subjective. There are clearly different levels of what &amp;lsquo;affect us&amp;rsquo; means.</description>
    </item>
    
    <item>
      <title>Coding Dojo #5: Uno</title>
      <link>https://markhneedham.com/blog/2009/01/08/coding-dojo-5-uno/</link>
      <pubDate>Thu, 08 Jan 2009 23:41:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/08/coding-dojo-5-uno/</guid>
      <description>We ran our 5th coding dojo on Thursday night, writing the card game Unoin Java. We didn&amp;rsquo;t all know the rules so this videoexplained it - surely a parody but you never know!
We used the Randoriapproach again with 6 people participating for the majority of the session. Everyone paired with everyone else at least once and sometimes a couple of times.
We had the pair driving at the front of the room and everyone else further back to stop the tendency of observers to whiteboard stuff.</description>
    </item>
    
    <item>
      <title>Javascript Dates - Be aware of mutability</title>
      <link>https://markhneedham.com/blog/2009/01/07/javascript-dates-be-aware-of-mutability/</link>
      <pubDate>Wed, 07 Jan 2009 23:17:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/07/javascript-dates-be-aware-of-mutability/</guid>
      <description>It seems that much like in Java, dates in Javascript are mutable, meaning that it is possible to change a date after it has been created.
We had this painfully shown to us when using the datejslibrary to manipulate some dates.
The erroneous code was similar to this:
var jan312009 = new Date(2008, 1-1, 31); var oneMonthFromJan312009 = new Date(jan312009.add(1).month()); See the subtle error? Outputting these two values gives the following:</description>
    </item>
    
    <item>
      <title>Javascript: Add a month to a date</title>
      <link>https://markhneedham.com/blog/2009/01/07/javascript-add-a-month-to-a-date/</link>
      <pubDate>Wed, 07 Jan 2009 23:00:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/07/javascript-add-a-month-to-a-date/</guid>
      <description>We&amp;rsquo;ve been doing a bit of date manipulation in Javascript on my current project and one of the things that we wanted to do is add 1 month to a given date.
We can kind of achieve this using the standard date libraries but it doesn&amp;rsquo;t work for edge cases.
For example, say we want to add one month to January 31st 2009. We would expect one month from this date to be February 28th 2009:</description>
    </item>
    
    <item>
      <title>Outliers: Book Review</title>
      <link>https://markhneedham.com/blog/2009/01/06/outliers-book-review/</link>
      <pubDate>Tue, 06 Jan 2009 23:23:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/06/outliers-book-review/</guid>
      <description>Outliersby Malcolm Gladwell
I came across this book following recommendations by Jason Yipand Steven &amp;lsquo;Doc&amp;rsquo; Liston Twitter.
I&amp;rsquo;ve previously read The Tipping Point and Blink and I like his easy going style so it was a no brainer that I was going to read this one.
I found that this book complimented Talent is Overratedquite nicely. Outliers covers how the story of how people became the best at what they do whereas Talent is Overrated focuses more on what you need to do if you want to become one of these people.</description>
    </item>
    
    <item>
      <title>jQuery datepicker IE6 positioning bug</title>
      <link>https://markhneedham.com/blog/2009/01/06/jquery-datepicker-ie6-positioning-bug/</link>
      <pubDate>Tue, 06 Jan 2009 21:57:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/06/jquery-datepicker-ie6-positioning-bug/</guid>
      <description>We&amp;rsquo;ve been using the jQuery datepickeron my current project and came across some strange behaviour with regards to the positioning of the calendar in IE6.
The calendar was always positioning itself right at the top of the screen instead of just below the textbox it was hooked up to but in Firefox it was working fine.
After a bit of exploration in the jQuery code (ui.datepicker.js) we worked out that the &amp;lsquo;document.</description>
    </item>
    
    <item>
      <title>F#: Forward Operator</title>
      <link>https://markhneedham.com/blog/2009/01/06/f-forward-operator/</link>
      <pubDate>Tue, 06 Jan 2009 00:19:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/06/f-forward-operator/</guid>
      <description>Continuing on my F# journey I came across a post by Ben Hall describing the approach he takes when learning a new programming language.
One of the approaches he describes is that of writing unit tests to help keep your learning on track. I&amp;rsquo;ve only been using the F# interactive console so far so I thought I&amp;rsquo;d give it a try.
After reading about the somewhat convoluted approachrequired to use NUnit or MBUnit to write F# unit tests I came across XUnit.</description>
    </item>
    
    <item>
      <title>Agile: When is a story done?</title>
      <link>https://markhneedham.com/blog/2009/01/04/agile-when-is-a-story-done/</link>
      <pubDate>Sun, 04 Jan 2009 22:17:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/04/agile-when-is-a-story-done/</guid>
      <description>I&amp;rsquo;ve worked on a few different agile projects and one of the things that hasn&amp;rsquo;t been completely consistent is when we consider a story to be &amp;lsquo;done&amp;rsquo;.
There seem to a few different approaches, each of which has its benefits and drawbacks.
With this approach we count a story as done when it has been signed of by a business proxy, typically a client business analyst or maybe a combination of a BA/QA.</description>
    </item>
    
    <item>
      <title>F# Option Types</title>
      <link>https://markhneedham.com/blog/2009/01/02/f-option-types/</link>
      <pubDate>Fri, 02 Jan 2009 22:35:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/02/f-option-types/</guid>
      <description>I&amp;rsquo;ve been spending a bit of time working through the Real World Functional Programmingbook to learn a bit about F# and one of the cool features I came across today (while reading Chris Smith&amp;rsquo;s post on F# lists) is the Option type.
I first came across this idea a few months ago when discussing null handling strategieswith a colleaguewho pointed out that you could get around this problem in Scala by using the Option class.</description>
    </item>
    
    <item>
      <title>2008: My Technical Review</title>
      <link>https://markhneedham.com/blog/2009/01/01/2008-my-technical-review/</link>
      <pubDate>Thu, 01 Jan 2009 09:28:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/01/2008-my-technical-review/</guid>
      <description>Othersin the blogosphereseem to be doing 2008 round ups around about now so I thought I&amp;rsquo;d jump in on the action.
Probably the year in which I&amp;rsquo;ve learn the most so far and I&amp;rsquo;ve blogged a lot of it previously so these are just some of the main points that come to mind.
There are bound to be areas of learning that come up which I hadn&amp;rsquo;t considered and I&amp;rsquo;ll gain knowledge in those areas, but these are some of the areas that I already know I need to improve in.</description>
    </item>
    
    <item>
      <title>Agile: Some misconceptions</title>
      <link>https://markhneedham.com/blog/2008/12/31/agile-some-misconceptions/</link>
      <pubDate>Wed, 31 Dec 2008 09:04:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/31/agile-some-misconceptions/</guid>
      <description>I came across an interesting article written for Visual Studio Magazineabout agile methodologies where the author makes what I consider to be some misconceptions.
The first is around the level of experience of people working on an agile team:
I wouldn&amp;rsquo;t say I have a high level of experience and I&amp;rsquo;ve been working on agile teams for the past two years, just one data point suggesting that this statement is not actually accurate.</description>
    </item>
    
    <item>
      <title>Oxite: Some Thoughts</title>
      <link>https://markhneedham.com/blog/2008/12/31/oxite-some-thoughts/</link>
      <pubDate>Wed, 31 Dec 2008 01:26:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/31/oxite-some-thoughts/</guid>
      <description>The recently released Oxitecode base has taken a bitofahammeringin the blogosphere for a variety of reasons - the general feeling being that it doesn&amp;rsquo;t really serve as a particularly good example of an ASP.NET MVC application.
I was intrigued to read the code though - you can always learn something by doing so and reading code is one of the ares that I want to improve in.
So in a style similar to that of a Technical Retrospectivethese are my thoughts.</description>
    </item>
    
    <item>
      <title>Talent is Overrated: Book Review</title>
      <link>https://markhneedham.com/blog/2008/12/29/talent-is-overrated-book-review/</link>
      <pubDate>Mon, 29 Dec 2008 20:52:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/29/talent-is-overrated-book-review/</guid>
      <description>Talent is Overratedby Geoff Colvin
I came across this book on Jason Yip&amp;rsquo;s Twitter feedwhile the idea of 10,000 hours to become an expert at any given skill was being discussed. I&amp;rsquo;m reading Outliersas well and the two books seem to complement each other quite well.
I&amp;rsquo;m interested in how we can apply deliberate practice in software development, perhaps using the medium of coding dojos, to become better developers in a more effective manner than just normal practice.</description>
    </item>
    
    <item>
      <title>Internal/External Domain Models</title>
      <link>https://markhneedham.com/blog/2008/12/28/internalexternal-domain-models/</link>
      <pubDate>Sun, 28 Dec 2008 00:19:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/28/internalexternal-domain-models/</guid>
      <description>One of the underlying characteristic of most of the projects I have worked on is that we have defined our own domain model.
On my current project due to the fact that most of the logic in the system is being handled through other services we decided to use WCFmessages as the domain model, meaning that our domain model is being defined externally by the team defining the message contracts.</description>
    </item>
    
    <item>
      <title>C# lambdas: How much context should you need?</title>
      <link>https://markhneedham.com/blog/2008/12/27/c-lambdas-how-much-context-should-you-need/</link>
      <pubDate>Sat, 27 Dec 2008 23:15:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/27/c-lambdas-how-much-context-should-you-need/</guid>
      <description>I had an interesting discussion with a colleague last week about the names that we give to variables inside lambda expressions which got me thinking about the context that we should need to hold when reading code like this.
The particular discussion was around an example like this:
public class Foo { private String bar; private String baz; public Foo(String bar, String baz) { this.bar = bar; this.baz = baz; } public override string ToString() { return string.</description>
    </item>
    
    <item>
      <title>TDD: Does it make you slower?</title>
      <link>https://markhneedham.com/blog/2008/12/25/tdd-does-it-make-you-slower/</link>
      <pubDate>Thu, 25 Dec 2008 09:41:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/25/tdd-does-it-make-you-slower/</guid>
      <description>There have been several times where we have been writing code in a test driven way and it has been suggested that we would be able to go much quicker if we stopped writing the tests and just wrote the code.
I feel this is a very short term way of looking at the problem and it does eventually come back to haunt you.
One of the problems seems to be that in many organisations only the first release of a piece of software is considered, and in this case then yes maybe it would be quicker to develop code in a non TDD fashion.</description>
    </item>
    
    <item>
      <title>Testing First vs Testing Last</title>
      <link>https://markhneedham.com/blog/2008/12/22/testing-first-vs-testing-last/</link>
      <pubDate>Mon, 22 Dec 2008 21:39:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/22/testing-first-vs-testing-last/</guid>
      <description>I recently posted about my experiences of testing lastwhere it became clear to me how important writing the test before the code is.
If we view the tests purely as a way of determining whether or not our code works correctly for a given set of examples then it doesn&amp;rsquo;t make much difference whether we test before or after we have written the code.
If on the other hand we want to get more value out of our testssuch as having them the tests act as documentation, drive the design of our APIs and generally prove useful reading to ourself and others in future then a test first approach is the way to go.</description>
    </item>
    
    <item>
      <title>Try it and see what happens</title>
      <link>https://markhneedham.com/blog/2008/12/21/try-it-and-see-what-happens/</link>
      <pubDate>Sun, 21 Dec 2008 17:43:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/21/try-it-and-see-what-happens/</guid>
      <description>Another of the ideas I have picked up from my leanreadingis that of trying things out without understanding exactly what is happening.
Or as The Toyota Way puts it&amp;hellip;
This is an approach which several colleagues I have worked with recently have been encouraging me to follow.
I am generally quite inquisitive and want to understand why something works as well as actually getting it to work, and while I wouldn&amp;rsquo;t want to encourage not reading the manual, taking this approach is sometimes less effective because it slows down our feedback cycle and, particularly when pairing, can be a less effective way of getting to a solution.</description>
    </item>
    
    <item>
      <title>Lean Software Development: Book Review</title>
      <link>https://markhneedham.com/blog/2008/12/20/lean-software-development-book-review/</link>
      <pubDate>Sat, 20 Dec 2008 17:29:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/20/lean-software-development-book-review/</guid>
      <description>Lean Software Developmentby Mary and Tom Poppendieck
I&amp;rsquo;m keen to learn how the ideas from The Toyota Waycan be applied to software development and as far as I know this is the first book which addressed this, hence the reason for me reading it.
I am keen to see how the authors suggest introducing some of these ideas in Implementing Lean Software Development.</description>
    </item>
    
    <item>
      <title>TDD: Mock expectations in Setup</title>
      <link>https://markhneedham.com/blog/2008/12/19/tdd-mock-expectations-in-setup/</link>
      <pubDate>Fri, 19 Dec 2008 20:57:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/19/tdd-mock-expectations-in-setup/</guid>
      <description>One of the ideas that I mentioned in a recent post about what I consider to be a good unit testwas the ideas that we shouldn&amp;rsquo;t necessarily consider the DRY(Don&amp;rsquo;t Repeat Yourself) principle to be our number one driver.
I consider putting mock expectations in the setup methods of our tests to be one of those occasions where we shouldn&amp;rsquo;t obey this principle and I thought this would be fairly unanimously agreed upon but putting the question to the Twittersphereled to mixedopinions.</description>
    </item>
    
    <item>
      <title>Testing: What is a defect?</title>
      <link>https://markhneedham.com/blog/2008/12/18/testing-what-is-a-defect/</link>
      <pubDate>Thu, 18 Dec 2008 22:34:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/18/testing-what-is-a-defect/</guid>
      <description>One of the key ideas that I have learnt from my readings of The Toyota Wayand Taaichi Ohno&amp;rsquo;s Workplace Managementis that we should strive not to pass defects through the system to the next process, which you should consider to be your customer.
As a developer the next process for each story is the testing phase where the testers will (amongst other things) run through the acceptance criteria and then do some exploratory testing for scenarios which weren&amp;rsquo;t explicitly part of the acceptance criteria.</description>
    </item>
    
    <item>
      <title>Functional Collection Parameters in C#</title>
      <link>https://markhneedham.com/blog/2008/12/17/functional-collection-parameters-in-c/</link>
      <pubDate>Wed, 17 Dec 2008 22:13:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/17/functional-collection-parameters-in-c/</guid>
      <description>While talking through my understanding of the Select method which can be applied to collections in C# with a colleague, it became clear that C# doesn&amp;rsquo;t seem to use the same names for these type of operations as are used in the world of functional programming.
Coincidentally on the same day I came across Bill Six&amp;rsquo;s post about using functional collection parameters in Ruby, so I thought I&amp;rsquo;d see what the equivalent operations are in C#.</description>
    </item>
    
    <item>
      <title>Pair Programming: What works for me</title>
      <link>https://markhneedham.com/blog/2008/12/17/pair-programming-what-works-for-me/</link>
      <pubDate>Wed, 17 Dec 2008 22:09:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/17/pair-programming-what-works-for-me/</guid>
      <description>My colleague Chris Johnston recently posted about his experiences with pair programming, eventually ending up asking for other people&amp;rsquo;s experiences in doing so.
Severalofmy colleagueshave replied citing some of their best practices and I have previously posted about what I think makes pair programming more effectiveso for this post I thought I&amp;rsquo;d try and also identify the approaches that make pair programming work for me.
Knowing your IDE and its&amp;rsquo; shortcuts, taking lots of small steps, using TDD, ensuring that both people get keyboard time, keeping a list of tiny tasks, and so on are all ways that we can work more effectively as a pair.</description>
    </item>
    
    <item>
      <title>C#&#39;s Lambda ForEach: Only on Lists?</title>
      <link>https://markhneedham.com/blog/2008/12/15/cs-lamba-foreach-only-on-lists/</link>
      <pubDate>Mon, 15 Dec 2008 23:52:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/15/cs-lamba-foreach-only-on-lists/</guid>
      <description>One of my favourite things introduced into C# recently is the new ForEachmethod which can be applied to (apparently only!) lists.
Last week we had a situation where we wanted to make use of the ForEach method on an IDictionary which we were using to store a collection of Seleniumclients.
IDictionary&amp;lt;string, ISelenium&amp;gt; seleniumClients = new Dictionary&amp;lt;string, ISelenium&amp;gt;(); We wanted to write a piece of code to exit all of the clients when our tests had completed.</description>
    </item>
    
    <item>
      <title>Environment matters a lot</title>
      <link>https://markhneedham.com/blog/2008/12/15/environment-matters-a-lot/</link>
      <pubDate>Mon, 15 Dec 2008 22:02:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/15/environment-matters-a-lot/</guid>
      <description>One of the discussions we had at the Alt.NETconference back in September was around how important the environment that you work in is to your self improvement as a software developer and it came up again in a discussion with some colleagues.
I posted previously about my software development journey so farbut to add to that one of the most important things for me about working at ThoughtWorks is the environment that it has provided me to improve myself as a software developer.</description>
    </item>
    
    <item>
      <title>JUnit Theories: First Thoughts</title>
      <link>https://markhneedham.com/blog/2008/12/12/junit-theories-first-thoughts/</link>
      <pubDate>Fri, 12 Dec 2008 00:34:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/12/junit-theories-first-thoughts/</guid>
      <description>One of my favourite additions to JUnit 4.4was the @Theory annotation which allows us to write parameterised tests rather than having to recreate the same test multiple times with different data values or creating one test and iterating through our own collection of data values.
Previously, as far as I&amp;rsquo;m aware, it was only possible to parameterise tests by using the TestNGlibrary which has some nice ideas around grouping tests but had horrible reporting the last time I used it.</description>
    </item>
    
    <item>
      <title>Code for positive data values not negative</title>
      <link>https://markhneedham.com/blog/2008/12/11/code-for-positive-data-values-not-negative/</link>
      <pubDate>Thu, 11 Dec 2008 06:48:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/11/code-for-positive-data-values-not-negative/</guid>
      <description>While reading Pat Kua&amp;rsquo;s latest post about how coding a certain way can help you avoid certain classes of bugsI was reminded of a technique taught to me by a colleague with regards to writing functions/methods.
The idea is that it is more effective to code for positive data values rather than trying to work out all the possible negative combinations, since there are likely to be cases which we hadn&amp;rsquo;t considered if we do the latter.</description>
    </item>
    
    <item>
      <title>TDD: One test at a time</title>
      <link>https://markhneedham.com/blog/2008/12/09/tdd-one-test-at-a-time/</link>
      <pubDate>Tue, 09 Dec 2008 22:07:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/09/tdd-one-test-at-a-time/</guid>
      <description>My colleague Sarah Taraporewalla has written a series of posts recently about her experienceswith TDDand introducing it at her current client.
While I agreed with the majority of the posts, one thing I found interesting was that in the conversation with a TDDerthere were two tests being worked on at the same time (at least as far as I understand from the example).
This means that there will be two tests failing if we run our test suite, something which I try to avoid wherever possible.</description>
    </item>
    
    <item>
      <title>Javascript: Creating quick feedback loops</title>
      <link>https://markhneedham.com/blog/2008/12/09/javascript-creating-quick-feedback-loops/</link>
      <pubDate>Tue, 09 Dec 2008 21:13:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/09/javascript-creating-quick-feedback-loops/</guid>
      <description>I&amp;rsquo;ve been working quite a lot with Javascript and in particular jQueryrecently and since I haven&amp;rsquo;t done much in this area before all the tips and tricks are new to me.
One thing which is always useful no matter the programming language is to use it in a way that you can get rapid feedback on what you are doing.
Fortunately there are quite a few tools that allow us to do this with Javascript:</description>
    </item>
    
    <item>
      <title>Taiichi Ohno&#39;s Workplace Management: Book Review</title>
      <link>https://markhneedham.com/blog/2008/12/09/taiichi-ohnos-workplace-management-book-review/</link>
      <pubDate>Tue, 09 Dec 2008 00:14:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/09/taiichi-ohnos-workplace-management-book-review/</guid>
      <description>Taiichi Ohno&amp;rsquo;s Workplace Managementby Taiichi Ohno
Having completed The Toyota Way a few weeks ago I was speaking with Jasonabout what books were good to read next - he recommended this one and The Toyota Way Fieldbook.
I struggled to see a connection to software development with a lot of what I read, but there were certainly words of wisdom that we can apply to continuously improve our ability to deliver projects.</description>
    </item>
    
    <item>
      <title>Twitter as a learning tool</title>
      <link>https://markhneedham.com/blog/2008/12/07/twitter-as-a-learning-tool/</link>
      <pubDate>Sun, 07 Dec 2008 22:30:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/07/twitter-as-a-learning-tool/</guid>
      <description>About 8 or 9 months ago I remember having a conversation with a colleague where I asked him where he had got his almost encyclopedic knowledge of all things software development.
His reply at the time was that he read a lot of blogs and that this was where he had picked up a lot of the information.
While subscribing to different blogs remains a useful way of learning about different aspects of software development, I think Twitteris now becoming a very useful complementary tool to use alongside the RSS reader.</description>
    </item>
    
    <item>
      <title>Learning cycles</title>
      <link>https://markhneedham.com/blog/2008/12/07/learning-cycles/</link>
      <pubDate>Sun, 07 Dec 2008 11:40:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/07/learning-cycles/</guid>
      <description>I&amp;rsquo;ve noticed a recurring trend in the way that I learn new concepts which doesn&amp;rsquo;t seem to fit exactly into any of the models of learning that I have come across so far.
It seems to me to be a learning cycle which goes something like this:
The two areas I have noticed this have both been related to concepts about writing clean code.
When I first started writing code I couldn&amp;rsquo;t tell the difference between testable and untestable code.</description>
    </item>
    
    <item>
      <title>Dave Thomas on Managing Lean and Agile In Large Software Development</title>
      <link>https://markhneedham.com/blog/2008/12/05/dave-thomas-on-managing-lean-and-agile-in-large-software-development/</link>
      <pubDate>Fri, 05 Dec 2008 00:00:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/05/dave-thomas-on-managing-lean-and-agile-in-large-software-development/</guid>
      <description>No coding dojo update this week as Dave Thomas was in the ThoughtWorks Sydney office to talk about Managing Lean and Agile in Large Software Development.
It was actually a talk to the Geek Girls Sydneygroup but I sneaked in to hear his other talk after listening to the cloud computing onelast week.
It was a much toned down presentation compared to the cloud computing one although still amusing in places.</description>
    </item>
    
    <item>
      <title>What makes a good unit test?</title>
      <link>https://markhneedham.com/blog/2008/12/04/what-make-a-good-unit-test/</link>
      <pubDate>Thu, 04 Dec 2008 00:31:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/04/what-make-a-good-unit-test/</guid>
      <description>Following on from my post around the definition of a unit test, a recent discussion on the Test Driven Development mailing listled me to question what my own approach is for writing unit tests.
To self quote from my previous post:
Quite simple in theory but as I have learnt (and am still learning) the hard way, much harder to do in practice. Breaking that down further what does it actually mean?</description>
    </item>
    
    <item>
      <title>jQuery Validation &amp; Firefox Refresh Behaviour</title>
      <link>https://markhneedham.com/blog/2008/12/02/jquery-validation-firefox-refresh-behaviour/</link>
      <pubDate>Tue, 02 Dec 2008 22:54:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/02/jquery-validation-firefox-refresh-behaviour/</guid>
      <description>We&amp;rsquo;ve been working quite a bit with jQueryand cross browser compatibility and one of the interesting differences we came across today was the behaviour of Firefox and Internet Explorer when it comes to refreshing a page.
When you press refresh in Internet Explorer the page gets refreshed to the state that it was in when you first loaded the URL, meaning that the state of the data in forms is returned to its original state.</description>
    </item>
    
    <item>
      <title>What are your personal practices?</title>
      <link>https://markhneedham.com/blog/2008/12/02/what-are-your-personal-practices/</link>
      <pubDate>Tue, 02 Dec 2008 21:18:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/12/02/what-are-your-personal-practices/</guid>
      <description>I&amp;rsquo;ve been reviewing Apprenticeship Patternsover the last week or so and one of the cool ideas I came across is that of creating a Personal Practices Map.
The idea is that you draw up a list of your 10 most important practices for coding and design and draw out any relationships between them.
This is mine as of now:
I wouldn&amp;rsquo;t say I follow all of these all the time, but they are the practices that I try to follow whenever possible.</description>
    </item>
    
    <item>
      <title>TDD: If it&#39;s hard to test reflect on your approach</title>
      <link>https://markhneedham.com/blog/2008/11/30/tdd-if-its-hard-to-test-reflect-on-your-approach/</link>
      <pubDate>Sun, 30 Nov 2008 18:42:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/30/tdd-if-its-hard-to-test-reflect-on-your-approach/</guid>
      <description>Chad Myers gets it spot on in his recent post about not testing private methods- private methods are private because they should be inaccessible from outside the class and their functionality should be tested via one of the public methods that calls them.
I&amp;rsquo;ve found that when a piece of code seems really difficult to test without exposing a private method then we&amp;rsquo;re probably trying to test that functionality from the wrong place.</description>
    </item>
    
    <item>
      <title>Coding Dojo #4: Roman Numerals</title>
      <link>https://markhneedham.com/blog/2008/11/30/coding-dojo-4-roman-numerals/</link>
      <pubDate>Sun, 30 Nov 2008 17:58:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/30/coding-dojo-4-roman-numerals/</guid>
      <description>We ran our 4th coding dojo on Thursday night, attempting to solve the Roman Numerals problemfrom the TDD Problems website.
We ran with the Randoriapproach again with between 4-6 participants taking part. We coded for about an hour and a half.
The pair coding were sat at the front of the room this time in an attempt to keep the focus on the code, a problem identified last week.</description>
    </item>
    
    <item>
      <title>Html.RadioButton setting all values to selected value workaround</title>
      <link>https://markhneedham.com/blog/2008/11/28/htmlradiobutton-setting-all-values-to-selected-value-workaround/</link>
      <pubDate>Fri, 28 Nov 2008 21:32:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/28/htmlradiobutton-setting-all-values-to-selected-value-workaround/</guid>
      <description>While working with the Html.RadioButton() UI helper for ASP.NET MVC we came across an interesting problem whereby when you submitted the form, all the values for that particular group of radio buttons was set to the value of the one that was selected.
For example, given a form like this:
&amp;lt;%= Html.RadioButton(&amp;#34;option1&amp;#34;, true) %&amp;gt;Yes &amp;lt;%= Html.RadioButton(&amp;#34;option2&amp;#34;, false)%&amp;gt;No When we first load the page, this is the HTML it generated:
&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;option1&amp;#34; value=&amp;#34;true&amp;#34; /&amp;gt;Yes &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;option1&amp;#34; value=&amp;#34;false&amp;#34; /&amp;gt;No When we post the form having selected the &amp;lsquo;Yes&amp;rsquo; option for example, this is what the HTML looks like now:</description>
    </item>
    
    <item>
      <title>TDD: Suffering from testing last</title>
      <link>https://markhneedham.com/blog/2008/11/28/tdd-suffering-from-testing-last/</link>
      <pubDate>Fri, 28 Nov 2008 00:34:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/28/tdd-suffering-from-testing-last/</guid>
      <description>I&amp;rsquo;ve always been a big proponent of writing tests before writing code, and I roll off the standard reasons to people who question this approach:
And so on. Despite knowing all this I recently took a non test driven approach to writing some bits of code - we were keen to get the system working end to end so it seemed a trade off worth making to prove that it was doable.</description>
    </item>
    
    <item>
      <title>Dave Thomas on Cloud Computing</title>
      <link>https://markhneedham.com/blog/2008/11/26/dave-thomas-on-cloud-computing/</link>
      <pubDate>Wed, 26 Nov 2008 20:46:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/26/dave-thomas-on-cloud-computing/</guid>
      <description>I went to see Object Mentor&amp;rsquo;s Dave Thomas give a talk about cloud computing on Tuesday evening in a combined meeting of the Sydney Alt.NETuser group and several others.
I&amp;rsquo;d not seen him speak before but several colleagues had seen him at JAOO earlier this year so he came highly recommended.
We started off with a plug for the JAOO Australia 2009conference which will again be in Brisbane and Sydney at the beginning of May.</description>
    </item>
    
    <item>
      <title>Agile/Lean: All or Nothing?</title>
      <link>https://markhneedham.com/blog/2008/11/26/agilelean-all-or-nothing/</link>
      <pubDate>Wed, 26 Nov 2008 06:29:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/26/agilelean-all-or-nothing/</guid>
      <description>While reading The Toyota Wayone of the ideas which stood out for me was the constant mentioning of organisations which picked bits of The Toyota Way, implemented them, achieved some short term gains but then eventually these improvements and went back to the way they were before.
I noticed a similar theme coming out in the seriesofpostsin the last week or so about the decline of agile.
I have worked on several projects over the last couple of years with varying levels of agile being applied.</description>
    </item>
    
    <item>
      <title>Lambda in C#: Conciseness v Readability</title>
      <link>https://markhneedham.com/blog/2008/11/24/c-new-language-features-conciseness-v-readability/</link>
      <pubDate>Mon, 24 Nov 2008 23:41:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/24/c-new-language-features-conciseness-v-readability/</guid>
      <description>One of the things I really disliked when I first came across C# 3.0 code was lambda functions.
At the time I remember speaking to my Tech Leadand expressing the opinion that they were making the code harder to understand and were valuing conciseness over readability.
After a week of reading about the new C# features and understanding how they worked the code was now more readable to me and a lot of the boiler plate code that I had come to expect was no longer necessary.</description>
    </item>
    
    <item>
      <title>Testing Test Code</title>
      <link>https://markhneedham.com/blog/2008/11/23/testing-test-code/</link>
      <pubDate>Sun, 23 Nov 2008 23:21:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/23/testing-test-code/</guid>
      <description>One of the interesting discussions that has come up on several projects I&amp;rsquo;ve worked on is whether or not we should test code that was written purely to help us test production code.
One of the main arguments used against testing test utility code is that it is not production code and therefore perhaps doesn&amp;rsquo;t need to be held to the same standards because it lacks the complexity of production code.</description>
    </item>
    
    <item>
      <title>Agile: A reminder of the benefits of colocation </title>
      <link>https://markhneedham.com/blog/2008/11/22/agile-a-reminder-of-the-benefits-of-colocation/</link>
      <pubDate>Sat, 22 Nov 2008 12:46:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/22/agile-a-reminder-of-the-benefits-of-colocation/</guid>
      <description>Sometimes it&amp;rsquo;s the seemingly small details of the agile/XP approach to software development that make it so much more effective than the traditional approach.
I was reminded of this last week with regards to having co-located teamswith the developers, BAs, QAs and the business people all sitting in close proximity.
I was working on the auto completion function for one of our screens and the QA on the team, who was sitting next to me, asked me if I could look through the acceptance criteria that he was working on.</description>
    </item>
    
    <item>
      <title>Coding Dojo #3: Krypton Factor</title>
      <link>https://markhneedham.com/blog/2008/11/22/coding-dojo-3-krypton-factor/</link>
      <pubDate>Sat, 22 Nov 2008 11:00:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/22/coding-dojo-3-krypton-factor/</guid>
      <description>We ran our 3rd coding dojo on Thursday night, attempting to solve the Krypton Factorproblem from the Online Judge website.
We ran with the Randoriapproach again, exactly the same as last weekbut this time we only had 4 participants for the majority of the coding session.</description>
    </item>
    
    <item>
      <title>Saff Squeeze: First Thoughts</title>
      <link>https://markhneedham.com/blog/2008/11/21/saff-squeeze-first-thoughts/</link>
      <pubDate>Fri, 21 Nov 2008 00:58:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/21/saff-squeeze-first-thoughts/</guid>
      <description>While practicing some coding by doing the Roman number conversionlast weekend I came across an article by Kent Beck which talked of a method he uses to remove the need to use the debuggerto narrow down problems.
He calls the method the &amp;lsquo;Saff Squeeze&amp;rsquo; and the basic idea as I understand it is to write the original failing test and then inline the pieces of code that it calls, adding assertions earlier on in the code until the actual point of failure is found.</description>
    </item>
    
    <item>
      <title>Debugging ASP.NET MVC source code</title>
      <link>https://markhneedham.com/blog/2008/11/19/debugging-aspnet-mvc-source-code/</link>
      <pubDate>Wed, 19 Nov 2008 21:30:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/19/debugging-aspnet-mvc-source-code/</guid>
      <description>We&amp;rsquo;ve been doing some work with the ASP.NET MVC framework this week and one of the things we wanted to be able to do is to debug through the source code to see how it works.
Our initial idea was to bin deploy the ASP.NET MVC assemblieswith the corresponding pdbs. Unfortunately this didn&amp;rsquo;t work and we got a conflict with the assemblies deployed in the GAC:
Compiler Error Message: CS0433: The type &amp;#39;System.</description>
    </item>
    
    <item>
      <title>The Toyota Way: Book Review</title>
      <link>https://markhneedham.com/blog/2008/11/19/the-toyota-way-book-review/</link>
      <pubDate>Wed, 19 Nov 2008 06:53:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/19/the-toyota-way-book-review/</guid>
      <description>The Toyota Wayby Jeffrey Liker
I was initially very skeptical about the value of lean in software development but became intrigued as to its potential value after listening to Jasonchampioning it. Since The Toyota Way is the book where many of the ideas originated from I thought it only made sense for this to be my first port of call to learn about lean.
I was worried that the book wouldn&amp;rsquo;t be that applicable to me as a software developer but I was able to see the parallels between how what we do and what is done in manufacturing have similarities.</description>
    </item>
    
    <item>
      <title>Standups: Pair stand together</title>
      <link>https://markhneedham.com/blog/2008/11/17/standups-pair-stand-together/</link>
      <pubDate>Mon, 17 Nov 2008 22:16:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/17/standups-pair-stand-together/</guid>
      <description>One of the common trends I have noticed in the stand upsof teams which practice pair programming is that very often the first person in the pair describes what they have been working on and what they will be doing today and then when it comes to the other person they say &amp;lsquo;ditto&amp;rsquo;.
After I dittoed one too many times on a project earlier this year it was pointed out to me that this was not a valuable way of contributing to the weekend and that I should describe my view of our progress as it may differ to my pair.</description>
    </item>
    
    <item>
      <title>Agile - Should everyone have to learn all the roles?</title>
      <link>https://markhneedham.com/blog/2008/11/17/agile-should-everyone-have-to-learn-all-the-roles/</link>
      <pubDate>Mon, 17 Nov 2008 00:14:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/17/agile-should-everyone-have-to-learn-all-the-roles/</guid>
      <description>In my final year of university a few years ago when I was applying for jobs I was really keen to join the (then) Reuters Graduate Technology program.
The thing that appealed to me the most was that over the 2 years you were on the graduate program you would have the opportunity to be placed in 4 different roles within the business.	The website gives some examples:
What I really liked about this idea was:</description>
    </item>
    
    <item>
      <title>Build: Red/Green for local build</title>
      <link>https://markhneedham.com/blog/2008/11/15/build-redgreen-for-local-build/</link>
      <pubDate>Sat, 15 Nov 2008 08:26:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/15/build-redgreen-for-local-build/</guid>
      <description>One thing I&amp;rsquo;m learning from reading The Toyota Wayis that visual indicators are a very important part of the Toyota Production System, and certainly my experience working in agile software development is that the same is true there.
We have certainly learnt this lesson with regards to continuous integration- the build is either red or green and it&amp;rsquo;s a very obvious visual indicator of the code base at any moment in time.</description>
    </item>
    
    <item>
      <title>Coding Dojo #2: Bowling Game &amp; Object Calisthenics Continued</title>
      <link>https://markhneedham.com/blog/2008/11/13/coding-dojo-2-bowling-game-object-calisthenics-continued/</link>
      <pubDate>Thu, 13 Nov 2008 22:39:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/13/coding-dojo-2-bowling-game-object-calisthenics-continued/</guid>
      <description>We ran another Coding Dojo on Wednesday night as part of ThoughtWorks Geek Night where we continued working on the Bowling Game problem from last week, keeping the Object Calisthenics approach broadly in mind but not sticking to it as strictly.
This time we followed the Randoriapproach, with a projector beaming the code onto the wall, 2 people pairing on the problem and everyone else watching.
We rotated one of the pair every 7 minutes using the MinutesOS X widget to keep track of time.</description>
    </item>
    
    <item>
      <title>Technical/Code Base Retrospective</title>
      <link>https://markhneedham.com/blog/2008/11/12/technicalcode-base-retrospective/</link>
      <pubDate>Wed, 12 Nov 2008 23:50:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/12/technicalcode-base-retrospective/</guid>
      <description>We decided to run a technical retrospective on our code base yesterday afternoon but apart from one blog poston the subject and a brief mention on Pat Kua&amp;rsquo;s blogI couldn&amp;rsquo;t find much information with regards to how to run one.
We therefore decided to take a fairly similar approach to our weekly retrospectivesin terms of having one column for &#39;Like&#39;and one for &#39;Dislike&#39;. In addition we had columns for &#39;Want To Know More About&#39;and &#39;Patterns&#39;.</description>
    </item>
    
    <item>
      <title>Agile: The Client/User dilemma</title>
      <link>https://markhneedham.com/blog/2008/11/12/agile-the-clientuser-dilemma/</link>
      <pubDate>Wed, 12 Nov 2008 07:22:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/12/agile-the-clientuser-dilemma/</guid>
      <description>While reading Marc&amp;rsquo;s post about the Customer or Clientnaming dilemma I was reminded of another situation I have noticed in software development - the Client/User dilemma.
From my experience of agile projects it tends to be much more likely that we can get easy access to our client than to the users of the system we are writing.
Alistair Cockburn mentions in Crystal Clearthat having an expert user sit with the team can be very useful, but it is not something that I have experienced on all the projects that I have worked on.</description>
    </item>
    
    <item>
      <title>Logging with Pico Container</title>
      <link>https://markhneedham.com/blog/2008/11/11/logging-with-pico-container/</link>
      <pubDate>Tue, 11 Nov 2008 00:08:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/11/logging-with-pico-container/</guid>
      <description>One thing that we&amp;rsquo;ve been working on recently is the logging for our current code base.
Nearly all the objects in our system are being created by Pico Containerso we decided that writing an interceptor that hooked into Pico Container would be the easiest way to intercept and log any exceptions throw from our code.
Our initial Googling led us to the AOP Style Interceptionpage on the Pico website which detailed how we could create a static proxy for a class that we put in the container.</description>
    </item>
    
    <item>
      <title>Agile: Putting the risk up front</title>
      <link>https://markhneedham.com/blog/2008/11/10/agile-putting-the-risk-up-front/</link>
      <pubDate>Mon, 10 Nov 2008 22:44:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/10/agile-putting-the-risk-up-front/</guid>
      <description>The last two projects that I&amp;rsquo;ve worked on I&amp;rsquo;ve been on the project from right near the start, and one thing that&amp;rsquo;s been consistent in both projects is that we&amp;rsquo;ve spent time early on in the project trying to reduce technical risk.
In my most recent project this has involved getting infrastructure in place early on, and in the previous one it involved working on technical spikes for several weeks to prove that what the client was asking for was actually technically possible.</description>
    </item>
    
    <item>
      <title>Debugging 3rd party libraries more effectively</title>
      <link>https://markhneedham.com/blog/2008/11/09/debugging-3rd-party-libraries-more-effectively/</link>
      <pubDate>Sun, 09 Nov 2008 21:55:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/09/debugging-3rd-party-libraries-more-effectively/</guid>
      <description>Debugging 3rd party library code quickly and effectively is one of the skills which most obviously separates Senior and Junior developers from my experience.
From observation over the last couple of years there are some patterns in the approaches which the best debuggers take.
Sometimes it&amp;rsquo;s difficult to understand exactly how to solve a problem without getting more information.
Verbose logging mode is available on the majority of libraries and provides the information showing how everything fits together which is normally enough information to work out how to solve the problem.</description>
    </item>
    
    <item>
      <title>Hamcrest Matchers - Make the error message clear</title>
      <link>https://markhneedham.com/blog/2008/11/08/hamcrest-matchers-make-the-error-message-clear/</link>
      <pubDate>Sat, 08 Nov 2008 02:46:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/08/hamcrest-matchers-make-the-error-message-clear/</guid>
      <description>We have been making good use of Hamcrestmatchers on my current project for making assertions, and have moved almost entirely away from the more traditional JUnit assertEquals approach.
There are several reasons why I find the Hamcrest matcher approach to be more productive - it&amp;rsquo;s more flexible, more expressive and when an assertion fails we have a much better idea about why it has failed than if we use a JUnit assertion for example.</description>
    </item>
    
    <item>
      <title>File system equivalent of commenting code</title>
      <link>https://markhneedham.com/blog/2008/11/06/file-system-equivalent-of-commenting-code/</link>
      <pubDate>Thu, 06 Nov 2008 21:51:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/06/file-system-equivalent-of-commenting-code/</guid>
      <description>Last week I came across what I have decided is the file system equivalent of commenting out code - not deleting directories when we are no longer using them.
The specific situation we ran into was while trying to make some Tomcat configuration changes but everything we changed was having no effect on what we were seeing on the web site.
Eventually we realised that we were actually changing the configuration in the wrong place - we actually had two Tomcat folder lying around.</description>
    </item>
    
    <item>
      <title>Object Calisthenics: First thoughts</title>
      <link>https://markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/</link>
      <pubDate>Thu, 06 Nov 2008 21:30:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/06/object-calisthenics-first-thoughts/</guid>
      <description>We ran an Object Calisthenics variation of Coding Dojoon Wednesday night as part of ThoughtWorks Geek Night in Sydney.
Object Calisthenics is an idea suggest by Jeff Bay in The ThoughtWorks Anthology, and lists 9 rules to writing better Object Oriented code. For those who haven&amp;rsquo;t seen the book, the 9 rules are:
We decided to try and solve the Bowling Game Problemwhile applying these rules. We coded in Java as this was a language everyone in the room was comfortable with.</description>
    </item>
    
    <item>
      <title>Pair Programming: The Over Eager Driver</title>
      <link>https://markhneedham.com/blog/2008/11/05/pair-programming-the-over-eager-driver/</link>
      <pubDate>Wed, 05 Nov 2008 23:48:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/05/pair-programming-the-over-eager-driver/</guid>
      <description>One of the interesting situations that can arise when pair programming is that one person dominates the driving and their pair can hardly get a look in.
This is not necessarily because they are hogging the keyboard - it is often just the case that they are the stronger technically in the pair and the other person isn&amp;rsquo;t willing to ask for the keyboard.
A big part of the value in pair programming comes from having both people taking turns at driving and navigating from my experience and there are several ideas that I have come across for trying to encourage a more collaborative approach to pair programming.</description>
    </item>
    
    <item>
      <title>Crystal Clear: Book Review</title>
      <link>https://markhneedham.com/blog/2008/11/05/crystal-clear-book-review/</link>
      <pubDate>Wed, 05 Nov 2008 08:01:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/05/crystal-clear-book-review/</guid>
      <description>Crystal Clearby Alistair CockburnThis was a book which had been recommended to me by a colleague a few months ago as one of the best software development books to read, and after hearing Ian Cooperdescribe how his team was implementing some of the ideas at the Alt.NET conferenceI decided I&amp;rsquo;d give it a read.
I have been working in an Agile/XP environment at ThoughtWorks for the last two years so my context coming into the book was around understanding where the overlap with Crystal Clear was, what differences there are and how I can apply these on my projects</description>
    </item>
    
    <item>
      <title>Pair Programming: Benefits of the pair switch mid story</title>
      <link>https://markhneedham.com/blog/2008/11/04/pair-programming-benefits-of-the-pair-switch-mid-story/</link>
      <pubDate>Tue, 04 Nov 2008 00:00:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/04/pair-programming-benefits-of-the-pair-switch-mid-story/</guid>
      <description>On my current project we&amp;rsquo;ve been having some discussions around the frequency with which we rotate pairs, the feeling being that we probably keep the same pairs for a bit too long.
We discussed using techniques such as promiscuous pairing, which takes the idea of pair rotation to an extreme, but have settled on making our rotations more or less daily.
One interesting thing I noticed from some recent pair switching was the immediate benefit we can realise from the pair rotation.</description>
    </item>
    
    <item>
      <title>Pair Programming: Driving quickly</title>
      <link>https://markhneedham.com/blog/2008/11/02/pair-programming-driving-quickly/</link>
      <pubDate>Sun, 02 Nov 2008 22:13:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/02/pair-programming-driving-quickly/</guid>
      <description>In order to experience the full benefits of pair programming it is important to try and reduce the chance of the navigator getting bored and losing focus.
One of the main ways that we can do this is by ensuring that we have a quick turnaround between the driver and navigator, and this can be done by ensuring that when we are driving we are doing so as quickly as possible.</description>
    </item>
    
    <item>
      <title>CSS in Internet Explorer - Some lessons learned</title>
      <link>https://markhneedham.com/blog/2008/11/01/css-in-internet-explorer-some-lessons-learned/</link>
      <pubDate>Sat, 01 Nov 2008 01:24:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/11/01/css-in-internet-explorer-some-lessons-learned/</guid>
      <description>I&amp;rsquo;ve spent the last few days working with CSS, and in particular trying to make a layout which works perfectly fine in Firefox work properly in Internet Explorer 6.
I&amp;rsquo;m far from an expert when it comes to this but I&amp;rsquo;ve picked up a few lessons from our attempts to get identical layouts in both browsers.
Putting the following code in your style sheet will do this:
* {padding:0;margin:0} _margin: 0 0 2px 0; The other posts go into more detail, but the fix that worked for us involved forcing IE into layout modeby applying a small height to the element that was being hidden:</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Setting up test data</title>
      <link>https://markhneedham.com/blog/2008/10/30/testing-hibernate-mappings-setting-up-test-data/</link>
      <pubDate>Thu, 30 Oct 2008 23:24:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/30/testing-hibernate-mappings-setting-up-test-data/</guid>
      <description>Continuing with my mini Hibernate mappings series, this post talks about the different ways of setting up the test datafor our Hibernate tests.
There are a couple of ways that we can setup data for Hibernate tests.
The benefit of this approach is that our test is pretty clean. It looks like any old unit test where we create an object and then check that what we get back is the same object.</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Testing Equality</title>
      <link>https://markhneedham.com/blog/2008/10/29/testing-hibernate-mappings-testing-equality/</link>
      <pubDate>Wed, 29 Oct 2008 18:03:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/29/testing-hibernate-mappings-testing-equality/</guid>
      <description>I started a mini Hibernate series with my last postwhere I spoke of there being three main areas to think about when it comes to testing:
Once we have worked out where to test the mappings from, if we have decided to test them through either our repository tests or directly from the Hibernate session then we have some choices to make around how to test for equality.
I&amp;rsquo;ve seen this done in several ways:</description>
    </item>
    
    <item>
      <title>Testing Hibernate mappings: Where to test from?</title>
      <link>https://markhneedham.com/blog/2008/10/27/testing-hibernate-mappings-where-to-test-from/</link>
      <pubDate>Mon, 27 Oct 2008 22:55:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/27/testing-hibernate-mappings-where-to-test-from/</guid>
      <description>I&amp;rsquo;ve had the opportunity to work with Hibernateand it&amp;rsquo;s .NET twin NHibernateon several of my projects and one of the more interesting decisions around its use is working out the best way to test the hibernate mappings that hook together our domain model and the database.
There are three decisions to make around how best to do this:
This post will focus on the ways I have seen with regards to choosing where to test the mappings from.</description>
    </item>
    
    <item>
      <title>buildr - using another project&#39;s dependencies</title>
      <link>https://markhneedham.com/blog/2008/10/26/buildr-using-another-projects-dependencies/</link>
      <pubDate>Sun, 26 Oct 2008 20:54:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/26/buildr-using-another-projects-dependencies/</guid>
      <description>Through my continued use of buildron my current project one thing we wanted to do last week was to run our production code tests using some code from the test-utilities project along with its dependencies.
I thought this would be the default behaviour but it wasn&amp;rsquo;t. Looking at the documentationsuggested we could achieve this by calling &amp;lsquo;compile.dependencies&amp;rsquo; on the project, but from what I can tell you still need to explicitly state that you want to use the main test utilities code as well.</description>
    </item>
    
    <item>
      <title>Selenium - Selecting the original window</title>
      <link>https://markhneedham.com/blog/2008/10/25/selenium-selecting-the-original-window/</link>
      <pubDate>Sat, 25 Oct 2008 01:55:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/25/selenium-selecting-the-original-window/</guid>
      <description>I&amp;rsquo;ve not used Seleniummuch in my time - all of my previous projects have been client side applications or service layers - but I&amp;rsquo;ve spent a bit of time getting acquainted with it this week.
While activating some acceptance tests this week I noticed quite a strange error happening if the tests ran in a certain order:
com.thoughtworks.selenium.SeleniumException: ERROR: Current window or frame is closed! at com.thoughtworks.selenium.HttpCommandProcessor.doCommand(HttpCommandProcessor.java:73) at com.thoughtworks.selenium.HttpCommandProcessor.getString(HttpCommandProcessor.java:154) at com.</description>
    </item>
    
    <item>
      <title>Don&#39;t shave the yak, ask &#39;Why are we doing this?&#39;</title>
      <link>https://markhneedham.com/blog/2008/10/25/dont-shave-the-yak-ask-why-are-we-doing-this/</link>
      <pubDate>Sat, 25 Oct 2008 01:34:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/25/dont-shave-the-yak-ask-why-are-we-doing-this/</guid>
      <description>One of the very common pitfalls I make when working on things is to get so engrossed in the technical details of the problem that I completely forget the reason for doing it in the first place.
Over the last week or so I have noticed myself trying to solve some ridiculous problems without considering whether I am solving the right problem in the first place.
To give an example, I was working with Hibernate earlier in the week trying to setup a new mapping between two entities which involved creating a composite key on one of the entities, which led to us having to work out how to do that on the database, then editing our migration script, then trawling Google to work out why our mapping wasn&amp;rsquo;t working, before a colleague overheard our pain and pointed out that we had over complicated matters.</description>
    </item>
    
    <item>
      <title>Keep Java checked exceptions in a bounded context</title>
      <link>https://markhneedham.com/blog/2008/10/23/keep-java-checked-exceptions-in-a-bounded-context/</link>
      <pubDate>Thu, 23 Oct 2008 21:22:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/23/keep-java-checked-exceptions-in-a-bounded-context/</guid>
      <description>One of the features that I dislike in Java compared to C# is checked exceptions.
For me an exception is about a situation which is exceptional, and if we know that there is a possibility of it happening and even have that possibility defined in our code then it doesn&amp;rsquo;t seem all that exceptional to me.
Having said that they do at least provide information which you can&amp;rsquo;t help but notice about what can go wrong when you make a call to a particular method.</description>
    </item>
    
    <item>
      <title>Making experience matter</title>
      <link>https://markhneedham.com/blog/2008/10/23/making-experience-matter/</link>
      <pubDate>Thu, 23 Oct 2008 00:12:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/23/making-experience-matter/</guid>
      <description>I recently came across this postwhich speaks about the desire of recruiters to put candidates into technology specific boxes when it comes to describing their experience.
I guess this desire is backed by humans&amp;rsquo; need to see the patterns and similarities in data and having someone who doesn&amp;rsquo;t quite fit into a generalised box makes it more difficult.
I have worked on projects in Java, C# and a bit of Ruby so I do agree with most of the points with regards to language specialisation and as Jay Fields points out it is actually beneficial to diversify your experienceto improve yourself.</description>
    </item>
    
    <item>
      <title>Tomcat - No caching of RESTlet resources for Firefox</title>
      <link>https://markhneedham.com/blog/2008/10/22/tomcat-no-caching-of-pages-for-firefox/</link>
      <pubDate>Wed, 22 Oct 2008 22:00:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/22/tomcat-no-caching-of-pages-for-firefox/</guid>
      <description>One problem that we&amp;rsquo;ve been trying to solve today is how to make a RESTletresource non cacheable.
The reason for this is that when a user logs out of the system and then hits the back button they shouldn&amp;rsquo;t be able to see that page, but instead should see the login form.
After several hours of trawling Google and trying out various different suggestions we came across the ideaof setting &amp;lsquo;cache-control&amp;rsquo; with the value &amp;lsquo;no-store&amp;rsquo; in the response headers.</description>
    </item>
    
    <item>
      <title>Fearless Change: Book Review</title>
      <link>https://markhneedham.com/blog/2008/10/21/fearless-change-book-review/</link>
      <pubDate>Tue, 21 Oct 2008 23:34:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/21/fearless-change-book-review/</guid>
      <description>Fearless Changeby Mary Lyan Manns and Linda Rising
I came across this book while watching an interview with Linda Rising on InfoQ. She mentioned some ideas from Malcolm Gladwell&amp;rsquo;s The Tipping Pointwhich intrigued me and a strong recommendation from a colleagueensured this book made it onto my reading list.
I am not currently working on a project where I need to instigate a lot of change so I was going slightly against my own principle of only reading books when I need to, but I recalled several times previously when I have tried to introduce what I thought were good ideas and didn&amp;rsquo;t really get anywhere.</description>
    </item>
    
    <item>
      <title>If you use an &#39;if&#39; you deserve to suffer</title>
      <link>https://markhneedham.com/blog/2008/10/21/if-you-use-an-if-you-deserve-to-suffer/</link>
      <pubDate>Tue, 21 Oct 2008 07:19:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/21/if-you-use-an-if-you-deserve-to-suffer/</guid>
      <description>One of the things I dislike the most when coding is writing if statements. and while I don&amp;rsquo;t believe that if should be completely abolished from our toolkit, I think the anti if campaignstarted about a year ago is going along the right lines.
While there is certainly value in using an if statement as a guard blockit usually feels that we have missed an abstraction if we are using it elsewhere.</description>
    </item>
    
    <item>
      <title>Build: Checkout and Go </title>
      <link>https://markhneedham.com/blog/2008/10/19/build-checkout-and-go/</link>
      <pubDate>Sun, 19 Oct 2008 22:49:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/19/build-checkout-and-go/</guid>
      <description>On the previous project I was working on one of the pain points we were having was around setting up developer environments such that you could get the code up and running on a machine as quickly as possible.
I would go to a newly formatted machine ready to set it up for development and run into a cascading list of dependencies I hadn&amp;rsquo;t considered.
SVN wasn&amp;rsquo;t installed, then Ruby, then we had the wrong version of Java and all the while we were wasting time when this process could have been automated.</description>
    </item>
    
    <item>
      <title>Learnings from Code Kata #1</title>
      <link>https://markhneedham.com/blog/2008/10/18/learnings-from-code-kata-1/</link>
      <pubDate>Sat, 18 Oct 2008 19:47:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/18/learnings-from-code-kata-1/</guid>
      <description>I&amp;rsquo;ve been reading My Job Went To Indiaand one of the chapters midway through the second section talks about the value of practicing coding using code katas.
I&amp;rsquo;ve not tried doing these before but I thought it would be an interesting activity to try out.
Code Kata One - Supermarket PricingIt also gave me the chance to play around with git- I put the code I wrote on github- and re-commence my battle with buildr.</description>
    </item>
    
    <item>
      <title>Pair Programming: Pair Flow</title>
      <link>https://markhneedham.com/blog/2008/10/17/pair-programming-pair-flow/</link>
      <pubDate>Fri, 17 Oct 2008 00:18:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/17/pair-programming-pair-flow/</guid>
      <description>In an earlier post about Team ProductivityI stumbled upon the idea that while pair programming there could be such a concept as pair flow.
The term &amp;lsquo;flow&amp;rsquo; is used to describe a situation where you are totally immersed in the work you&amp;rsquo;re doing and where time seems to go by without you even noticing.
This can also happen when pair programming and I think there are some factors which can make it more likely.</description>
    </item>
    
    <item>
      <title>Browsing around the Unix shell more easily</title>
      <link>https://markhneedham.com/blog/2008/10/15/browsing-around-the-unix-shell-more-easily/</link>
      <pubDate>Wed, 15 Oct 2008 22:31:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/15/browsing-around-the-unix-shell-more-easily/</guid>
      <description>Following on from my post about getting the pwd to display on the bash prompt all the timeI have learnt a couple of other tricks to make the shell experience more productive.
Aliasesare the first new concept I came across and several members of my current team and I now have these setup.
We are primarily using them to provide a shortcut command to get to various locations in the file system.</description>
    </item>
    
    <item>
      <title>Java vs .NET: An Overview</title>
      <link>https://markhneedham.com/blog/2008/10/15/java-vs-net-an-overview/</link>
      <pubDate>Wed, 15 Oct 2008 00:09:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/15/java-vs-net-an-overview/</guid>
      <description>A couple of months ago my colleague Mark Thomas posted about working on a C# project after 10 years working in Java, and being someone who has worked on projects in both languages fairly consistently (3 Java projects, 2 .NET projects) over the last two years I thought it would be interesting to do a comparison between the two.
The standard ThoughtWorks joke is that you just need to remember to capitalise the first letter of method names in C# and then you&amp;rsquo;re good to go but I think there&amp;rsquo;s more to it than that.</description>
    </item>
    
    <item>
      <title>Context Driven Learning</title>
      <link>https://markhneedham.com/blog/2008/10/13/context-driven-learning/</link>
      <pubDate>Mon, 13 Oct 2008 20:44:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/13/context-driven-learning/</guid>
      <description>One pattern I&amp;rsquo;ve noticed over the last couple of years with regards to my own learning is that I find it very difficult to learn new things unless I can directly apply what I have learnt to a real life situation.
I feel this was part of the reason I found the way material is taught at universities so difficult to understand - nearly every course I studied was taught on its own without any reference to the others, and rarely did I get to use the ideas I learnt in a practical context.</description>
    </item>
    
    <item>
      <title>Using test guided techniques for spiking</title>
      <link>https://markhneedham.com/blog/2008/10/12/using-test-guided-techniques-for-spiking/</link>
      <pubDate>Sun, 12 Oct 2008 13:49:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/12/using-test-guided-techniques-for-spiking/</guid>
      <description>I think that out of all the Extreme Programming practicesTest Driven Development is the one which I like the best. I feel it provides a structure for development work and helps me to remain focused on what I am trying to achieve rather than writing code which may not necessarily be needed.
However, there are times when it&amp;rsquo;s difficult to use a TDD approach, and Pat Kua suggested earlier this year that if you&amp;rsquo;re using a TDD approach all the time you&amp;rsquo;re doing something wrong.</description>
    </item>
    
    <item>
      <title>What is a unit test?</title>
      <link>https://markhneedham.com/blog/2008/10/10/what-is-a-unit-test/</link>
      <pubDate>Fri, 10 Oct 2008 23:21:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/10/what-is-a-unit-test/</guid>
      <description>One of the questions which came up during the Sydney Alt.NET User Groupmeeting at the start of October was around what a unit test actually is.
I suppose the somewhat naive or simplistic definition is that it is just any test written using an xUnit framework such as NUnitor JUnit. However, integration or acceptance tests are often written using these frameworks so this definition doesn&amp;rsquo;t hold.
While discussing this last week a colleague came up with what I considered to be a very clear yet precise definition.</description>
    </item>
    
    <item>
      <title>Pair Programming: Why would I pair on this?</title>
      <link>https://markhneedham.com/blog/2008/10/09/pair-programming-why-would-i-pair-on-this/</link>
      <pubDate>Thu, 09 Oct 2008 00:38:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/09/pair-programming-why-would-i-pair-on-this/</guid>
      <description>In the comments of my previous post on pairingVivek made the following comment about when we should pair:
On previous projects I have worked on there have been several tasks where it has been suggested that there is little value in pairing. I decided to try and apply Vivek&amp;rsquo;s principle of knowing why we might pair on these tasks to see if there is actually any value in doing so.</description>
    </item>
    
    <item>
      <title>Test Driven Development By Example: Book Review</title>
      <link>https://markhneedham.com/blog/2008/10/07/test-driven-development-by-example-book-review/</link>
      <pubDate>Tue, 07 Oct 2008 23:17:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/07/test-driven-development-by-example-book-review/</guid>
      <description>Test Driven Development by Exampleby Kent BeckI know this book is quite old but I haven&amp;rsquo;t read it before - it&amp;rsquo;s been recommended to me several times but I never got round to reading it, possibly because of my somewhat misguided opinion that seeing as I do TDD nearly every day I shouldn&amp;rsquo;t need to read it.
More by chance than anything else, I was browsing through a friend&amp;rsquo;scopy of the book and came across several gems of information which persuaded me that I should take the time to read the rest of it.</description>
    </item>
    
    <item>
      <title>rspec - Invalid character &#39;\240&#39; in expression</title>
      <link>https://markhneedham.com/blog/2008/10/06/rspec-invalid-character-240-in-expression/</link>
      <pubDate>Mon, 06 Oct 2008 20:48:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/06/rspec-invalid-character-240-in-expression/</guid>
      <description>We have been using rspecon my project for the unit testing of our Ruby code and while running one of the specs last week I ended up getting this somewhat en-cryptic error message:
Invalid character &amp;#39;\240&amp;#39; in expression ... After convincing myself that this error wasn&amp;rsquo;t actually possible it turned out that I had somehow entered an &amp;lsquo;invisible to TextMate&amp;rsquo; character after one of the method definitions - on the editor it just looked like a space.</description>
    </item>
    
    <item>
      <title>Calling shell script from ruby script</title>
      <link>https://markhneedham.com/blog/2008/10/06/calling-shell-script-from-ruby-script/</link>
      <pubDate>Mon, 06 Oct 2008 20:12:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/06/calling-shell-script-from-ruby-script/</guid>
      <description>Damana and I previouslypostedabout our experiences with different Ruby LDAP solutions.
Having settled on Ruby-LDAP(although having read Ola and Steven&amp;rsquo;s comments we will now look at ruby-net-ldap) we then needed to put together the setup, installation and teardown into a ruby script file.
A quick bit of Googling revealed that we could use the Kernel.execmethod to do this.
For example, you could put the following in a ruby script file and it would execute and show you the current directory listing:</description>
    </item>
    
    <item>
      <title>Pragmatic Learning and Thinking: Book Review</title>
      <link>https://markhneedham.com/blog/2008/10/06/pragmatic-learning-and-thinking-book-review/</link>
      <pubDate>Mon, 06 Oct 2008 02:20:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/06/pragmatic-learning-and-thinking-book-review/</guid>
      <description>Pragmatic Learning and Thinkingby Andy HuntI came across this book when reading a post linking lean to the Dreyfus Modelon Dan North&amp;rsquo;s blog.
I have a keen interest in theories of learning and have completed an NLP Practitioner&amp;rsquo;s courseso the ideas described in the book summary immediately appealed to me.
After coming across the concept of Reading Deliberately in Chapter 6 of the book I decided I should give the SQ3Qapproach to reading books its first run out.</description>
    </item>
    
    <item>
      <title>Ruby LDAP Options</title>
      <link>https://markhneedham.com/blog/2008/10/05/ruby-ldap-options/</link>
      <pubDate>Sun, 05 Oct 2008 16:29:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/05/ruby-ldap-options/</guid>
      <description>As I mentioned in an earlier posta colleague and I spent a few days looking at how to connect to an OpenDSLDAP server using Ruby.
We ended up analysing four different solutions for solving the problem.
We had real problems trying to even connect to our OpenDS server using this library. We eventually found out that OpenDS is not actually listed as one of the supported interfaces.
The real benefit of this approach was that the library is written in Ruby meaning that getting permission to install it would be easier.</description>
    </item>
    
    <item>
      <title>Ruby: Ignore header line when parsing CSV file</title>
      <link>https://markhneedham.com/blog/2008/10/04/ruby-ignore-header-line-when-parsing-csv-file/</link>
      <pubDate>Sat, 04 Oct 2008 01:32:08 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/04/ruby-ignore-header-line-when-parsing-csv-file/</guid>
      <description>As my Ruby journey continues one of the things I wanted to do today was parse a CSV file.
This articleproved to be very useful for teaching the basics but it didn&amp;rsquo;t say how to ignore the header line that the CSV file contained.
The CSV file I was parsing was similar to this:
name, surname, location Mark, Needham, Sydney David, Smith, London I wanted to get the names of people originally to use them in my code.</description>
    </item>
    
    <item>
      <title>It&#39;s not all about the acceptance tests</title>
      <link>https://markhneedham.com/blog/2008/10/03/its-not-all-about-the-acceptance-tests/</link>
      <pubDate>Fri, 03 Oct 2008 01:26:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/03/its-not-all-about-the-acceptance-tests/</guid>
      <description>A fewofmy colleaguesrecently posted their opinions about acceptance tests which tied in nicely with a discussion about acceptance testingthat was had at the Alt.NET conference in London.
For the sake of argument I will assume that when we refer to acceptance tests we are talking about tests at the GUI level which are being automatically driven by a tool, usually Seleniumbut maybe something like Whiteif it is a client side application.</description>
    </item>
    
    <item>
      <title>Ignore file in Svn</title>
      <link>https://markhneedham.com/blog/2008/10/02/ignore-file-in-svn/</link>
      <pubDate>Thu, 02 Oct 2008 21:10:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/02/ignore-file-in-svn/</guid>
      <description>I spent a bit of time this afternoon marveling at the non intuitiveness of working out how to ignore files in Svn.
Normally I&amp;rsquo;d just use Tortoise SVNas it makes it so easy for you but I really wanted to know how to do it from the shell!
After a bit of Googling and conversation with a colleagueI think I have it figured out to some extent.
If you only have one pattern or file that you want to ignore then the following command should do the trick.</description>
    </item>
    
    <item>
      <title>Ruby: Unzipping a file using rubyzip</title>
      <link>https://markhneedham.com/blog/2008/10/02/ruby-unzipping-a-file-using-rubyzip/</link>
      <pubDate>Thu, 02 Oct 2008 00:04:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/02/ruby-unzipping-a-file-using-rubyzip/</guid>
      <description>In the world of Ruby I&amp;rsquo;ve been working on a script which needs to unzip a file and then run an installer which is only available after unpacking it.
We&amp;rsquo;ve been using the rubyzipgem to do so but so far it hasn&amp;rsquo;t felt intuitive to me coming from the Java/C# world.
ZipFileis the class we need to use and at first glance I had thought that it would be possible to just pass the zip file name to the &amp;lsquo;extract&amp;rsquo; method and have it do all the work for me!</description>
    </item>
    
    <item>
      <title>Alt.NET Sydney User Group Meeting #1</title>
      <link>https://markhneedham.com/blog/2008/10/01/altnet-sydney-user-group-meeting-1/</link>
      <pubDate>Wed, 01 Oct 2008 22:09:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/01/altnet-sydney-user-group-meeting-1/</guid>
      <description>James Crispand Richard Banksarranged the first Alt.NET Sydney User Groupmeeting held on Tuesday night at the ThoughtWorks office.
The first thing to say is thanks to James and Richard for getting this setup so quickly - it was less than a month ago that Richard suggested the idea of creating a group on the Alt.NET mailing list.
Richard and James have already written summariesofwhat went onbut I thought I&amp;rsquo;d give some of my thoughts as well.</description>
    </item>
    
    <item>
      <title>TDD without the design</title>
      <link>https://markhneedham.com/blog/2008/10/01/tdd-without-the-design/</link>
      <pubDate>Wed, 01 Oct 2008 00:32:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/10/01/tdd-without-the-design/</guid>
      <description>Roy Osheroveand severalothershave posted recently about introducing TDD to the &amp;lsquo;masses&amp;rsquo;
As I understand it Roy&amp;rsquo;s idea is to separate the learning of TDD from the learning of good design principles- good design principles in this case being the OOP principles described in Uncle Bob&amp;rsquo;s Agile Software Development Principles, Practices and Practicesor on the Object Mentor website.
I am usually in favour of an approach that breaks a skill down into chunks so that it is easier to learn but in this case I feel that some of the big gains in coding in a TDD way is the decoupled design it encourages, which in my experience is more likely to follow good design principles.</description>
    </item>
    
    <item>
      <title>Connecting to LDAP server using OpenDS in Java</title>
      <link>https://markhneedham.com/blog/2008/09/29/connecting-to-ldap-server-using-opends-in-java/</link>
      <pubDate>Mon, 29 Sep 2008 23:27:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/29/connecting-to-ldap-server-using-opends-in-java/</guid>
      <description>A colleague and I have spent the past couple of days spiking solutions for connecting to LDAP servers from Ruby.
We decided that the easiest way to do this is by using OpenDS, an open source directory service based on LDAP.
One option we came up with for doing this was to make use of the Java libraries for connecting to the LDAP server and then calling through to these from our Ruby code using the Ruby Java Bridge.</description>
    </item>
    
    <item>
      <title>Show pwd all the time</title>
      <link>https://markhneedham.com/blog/2008/09/28/show-pwd-all-the-time/</link>
      <pubDate>Sun, 28 Sep 2008 22:50:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/28/show-pwd-all-the-time/</guid>
      <description>Finally back in the world of the shell last week I was constantly typing &amp;lsquo;pwd&amp;rsquo; to work out where exactly I was in the file system until my colleague pointed out that you can adjust your settings to get this to show up automatically for you on the left hand side of the prompt.
To do this you need to create or edit your .bash_profile file by entering the following command:</description>
    </item>
    
    <item>
      <title>Pair Programming: What do we gain from it?</title>
      <link>https://markhneedham.com/blog/2008/09/28/pair-programming-what-do-we-gain-from-it/</link>
      <pubDate>Sun, 28 Sep 2008 22:19:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/28/pair-programming-what-do-we-gain-from-it/</guid>
      <description>My former colleague Vivek Vaid has an interesting post about parallel-paired programmingwhere he talks about introducing lean concepts into deciding when we should pair to get maximum productivity.
Midway through the post he mentions that the original reason that we starting pairing was for &amp;lsquo;collaborative design&amp;rsquo; which got me thinking whether there are reasons beyond this why we would want to pair.
I have often worked on clients where the value of pair programming has been questioned and it has been suggested that we should only adhere to this practice for tasks where it adds most value.</description>
    </item>
    
    <item>
      <title>Easily misused language features</title>
      <link>https://markhneedham.com/blog/2008/09/25/easily-misused-language-features/</link>
      <pubDate>Thu, 25 Sep 2008 23:18:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/25/easily-misused-language-features/</guid>
      <description>In the comments of my previous post about my bad experiences with Java&amp;rsquo;s import staticmy colleague Carlosand several others pointed out that it is actually a useful feature when used properly.
The code base where I initially came across the feature misused it quite severely but it got me thinking about other language features I have come across which can add great value when used effectively but lead to horrific problems when misused.</description>
    </item>
    
    <item>
      <title>My dislike of Java&#39;s static import</title>
      <link>https://markhneedham.com/blog/2008/09/24/my-dislike-of-javas-static-import/</link>
      <pubDate>Wed, 24 Sep 2008 23:59:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/my-dislike-of-javas-static-import/</guid>
      <description>While playing around with JBehaveI was reminded of my dislike of the import staticfeature which was introduced in Java 1.5.
Using import static allows us to access static members defined in another class without referencing the class name. For example suppose we want to use the following method in our code:
Math.max(1,2); Normally we would need to include the class name (Math) that the static function (max) belongs to. By using the import static we can reference max like so:</description>
    </item>
    
    <item>
      <title>Onshore or Offshore - The concepts are the same?</title>
      <link>https://markhneedham.com/blog/2008/09/24/onshore-or-offshore-the-concepts-are-the-same/</link>
      <pubDate>Wed, 24 Sep 2008 07:08:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/onshore-or-offshore-the-concepts-are-the-same/</guid>
      <description>I&amp;rsquo;ve never worked on a distributed or offshore project before, but intrigued having read about Jay Fields&amp;rsquo; experiencesI attended the &#39;OffShoring: The Current State of Play&#39;Quarterly Technology Briefing held this morning in Sydney to hear the other side of the argument.
The underlying message for me was that a lot of the concepts we apply for onshore projects are equally important for offshore projects.
Forrester&amp;rsquo;s Tim Sheedystarted off by providing some research data on the state of IT offshoring, some reasons he had identified around which type of work should be offshored before closing on some reasons that it might fail if not done correctly.</description>
    </item>
    
    <item>
      <title>Testing with Joda Time</title>
      <link>https://markhneedham.com/blog/2008/09/24/testing-with-joda-time/</link>
      <pubDate>Wed, 24 Sep 2008 05:11:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/24/testing-with-joda-time/</guid>
      <description>The alternative to dealing with java.util.Date which I wrote about in a previous postis to make use of the Joda Timelibrary. I&amp;rsquo;m led to believe that a lot of the ideas from Joda Time will in fact be in Java 7.
Nevertheless when testing with Joda Time there are times when it would be useful for us to have control over the time our code is using.
Given that, there are two approaches which I have seen to allow us to do this:</description>
    </item>
    
    <item>
      <title>Where are we now? Where do we want to be?</title>
      <link>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</link>
      <pubDate>Sat, 20 Sep 2008 17:32:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/20/where-are-we-now-where-do-we-want-to-be/</guid>
      <description>Listening to Dan Northspeaking last week I was reminded of one of my favourite NLP[*]techniques for making improvements on projects.
The technique is the TOTE(Test, Operate, Test, Exit) and it is a technique designed to help us get from where we are now to where we want to be via short feedback loops.
On my previous project we had a situation where we needed to build and deploy our application in order to show it to the client in a show case.</description>
    </item>
    
    <item>
      <title>Similarities between Domain Driven Design &amp; Object Oriented Programming</title>
      <link>https://markhneedham.com/blog/2008/09/20/similarities-between-domain-driven-design-object-oriented-programming/</link>
      <pubDate>Sat, 20 Sep 2008 13:12:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/20/similarities-between-domain-driven-design-object-oriented-programming/</guid>
      <description>At the Alt.NET UK Conferencewhich I attendedover the weekend it occurred to me while listening to some of the discussions on Domain Driven Designthat a lot of the ideas in DDD are actually very similar to those being practiced in Object Oriented Programmingand related best practices.
There was quite a bit of discussion in the session about anaemic domain models.
An anaemic domain model is one where a lot of the objects are merely data holders and do not actually have any behaviour inside them.</description>
    </item>
    
    <item>
      <title>Should we always use Domain Model?</title>
      <link>https://markhneedham.com/blog/2008/09/19/should-we-always-use-domain-mode/</link>
      <pubDate>Fri, 19 Sep 2008 08:34:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/19/should-we-always-use-domain-mode/</guid>
      <description>During the discussionabout Domain Driven Design at the Alt.NETconference I felt like the idea of the Rich Domain Model was being represented as the only way to design software but I don&amp;rsquo;t feel that this is the case.
As always in software we never have a silver bulletand there are times when Domain Model is not necessarily the best choice, just as there are times when OOP is not necessarily the best choice.</description>
    </item>
    
    <item>
      <title>Using java.util.Date safely</title>
      <link>https://markhneedham.com/blog/2008/09/18/using-javautildate-safely/</link>
      <pubDate>Thu, 18 Sep 2008 11:01:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/18/using-javautildate-safely/</guid>
      <description>Assuming that you are unable to use Joda Timeon your project, there are some simple ways that I have come across that allow you to not suffer at the hands of java.util.Date.
This means that you can do an operation like the following, for example:
import java.util.Date; import java.util.Calendar; public class DateTest { public static void main(String[] args) { Date aDate = createDate(1, 0, 2008); System.out.println(aDate); aDate.setTime(createDate(1, 0, 2009).getTime()); System.out.println(aDate); } private static Date createDate(int date, int month, int year) { Calendar calendar = Calendar.</description>
    </item>
    
    <item>
      <title>Testing file system operations</title>
      <link>https://markhneedham.com/blog/2008/09/17/testing-file-system-operations/</link>
      <pubDate>Wed, 17 Sep 2008 15:48:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/17/testing-file-system-operations/</guid>
      <description>On my previous project one of the areas that we needed to work out how to test was around interaction with the file system.
The decision that we needed to make was whether we should unit test this type of functionality or whether it could just be covered by a functional test.
One of the patterns to use when unit testing things like this is the Gateway pattern. To quote Martin Fowler&amp;rsquo;s Patterns of Enterprise Application Architecture</description>
    </item>
    
    <item>
      <title>Team Productivity vs Individual Productivity</title>
      <link>https://markhneedham.com/blog/2008/09/16/team-productivity-vs-individual-productivity/</link>
      <pubDate>Tue, 16 Sep 2008 16:41:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/16/team-productivity-vs-individual-productivity/</guid>
      <description>I&amp;rsquo;ve been reading Neal Ford&amp;rsquo;s The Productive Programmer(my review) which is a book all about improving your productivity as an individual developer.
It got me thinking that there are also ways that we can make teams more productive so that they are actually teams and not just a group of individuals who happen to work with each other.
I&amp;rsquo;ve had the opportunity of working under some great TechLeadswho have helped create an environment where teams can perform to their maximum.</description>
    </item>
    
    <item>
      <title>What makes a good developer?</title>
      <link>https://markhneedham.com/blog/2008/09/16/what-make-a-good-developer/</link>
      <pubDate>Tue, 16 Sep 2008 10:07:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/16/what-make-a-good-developer/</guid>
      <description>Early last year I became very curious about what it was that made the best developers in the industry so good at what they do.
Jay Fields points out some things that he believes indicate that a developer is good at the end of this postbut a former colleague and I tried to come up with a list of areas that any Developer needed to be skilled in to justifiably consider themselves good.</description>
    </item>
    
    <item>
      <title>Clean Code: Book Review</title>
      <link>https://markhneedham.com/blog/2008/09/15/clean-code-book-review/</link>
      <pubDate>Mon, 15 Sep 2008 10:52:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/15/clean-code-book-review/</guid>
      <description>I first heard of Uncle Bob a couple of years ago in a conversation with Obie Fernandezand having previously read his Agile Principles, Patterns and Practices in C#book, when my colleague Alexandre Martinscame back from JAOO Sydneyraving about a talk on &amp;lsquo;Clean Code&amp;rsquo; he&amp;rsquo;d seen I knew I had to buy this book when it came out.
In a good trend which I&amp;rsquo;ve noticed in a lot of Martin Fowler books, Uncle Bob lays out in the opening chapter how he thinks the book can best be read.</description>
    </item>
    
    <item>
      <title>Alt.NET UK Conference 2.0</title>
      <link>https://markhneedham.com/blog/2008/09/14/altnet-uk-conference-20/</link>
      <pubDate>Sun, 14 Sep 2008 16:28:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/14/altnet-uk-conference-20/</guid>
      <description>I spent most of yesterday at the 2nd Alt.NET UKconference at Conway Hall in London.
First of all kudos to Ian Cooper, Alan Deanand Ben Hallfor arranging it. There seemed to be a lot more people around than for the one in February which no doubt took a lot of arranging.
It was again run using the open spacesformat and we started with an interesting discussion on what Alt.NET actually is.</description>
    </item>
    
    <item>
      <title>Configurable Builds: One configuration file per machine</title>
      <link>https://markhneedham.com/blog/2008/09/13/configurable-builds-one-configuration-file-per-machine/</link>
      <pubDate>Sat, 13 Sep 2008 03:54:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/13/configurable-builds-one-configuration-file-per-machine/</guid>
      <description>I&amp;rsquo;ve covered some of the ways that I&amp;rsquo;ve seen for making builds configurable in previous posts:
One which I haven&amp;rsquo;t covered which my colleagues Gil Peetersand Jim Barritthave pointed out is having a build with one configuration file for each machine.
Again the setup is fairly similar to one configuration per user or environment. Using Nant we would have the following near the top of the build file:
&amp;lt;property name=&amp;#34;machine.name&amp;#34; value=&amp;#34;${environment::get-machine-name()}&amp;#34; /&amp;gt; &amp;lt;include buildfile=&amp;#34;${trunk.</description>
    </item>
    
    <item>
      <title>The Productive Programmer: Book Review</title>
      <link>https://markhneedham.com/blog/2008/09/05/the-productive-programmer-book-review/</link>
      <pubDate>Fri, 05 Sep 2008 00:05:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/05/the-productive-programmer-book-review/</guid>
      <description>I first came across this book when I was browsing Andy Hunt&amp;rsquo;s Pragmatic Thinking and Learning: Refactor Your Wetwareon Amazon. It showed up as one of the related books.
I had expected it to be a more theoretical book than it actually is. It is full of really useful command line tips and ways to use system tools and IDEs more effectively. It only took until page 3 for me to learn something from this book - a short cut for navigating Firefox tabs which I now use all the time.</description>
    </item>
    
    <item>
      <title>BDD style unit test names</title>
      <link>https://markhneedham.com/blog/2008/09/04/bdd-style-unit-test-names/</link>
      <pubDate>Thu, 04 Sep 2008 00:05:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/04/bdd-style-unit-test-names/</guid>
      <description>A coupleofmy colleagues have been posting about how to name your unit tests based on this original postby Jay Fields.
I think that test names are useful, especially when written in a BDDstyle expressing what a test is supposed to be doing.
For example, in a C# NUnit test we might see the following as a test name:
[Test] public void ShouldDoSomething() { // Code testing that we&amp;#39;re doing something } I write all my tests like this and I&amp;rsquo;m often asked what the point of the &amp;lsquo;Should&amp;rsquo; is, why not just name it &amp;lsquo;DoSomething&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>The Wisdom of Crowds and groupthink in Agile Software Development</title>
      <link>https://markhneedham.com/blog/2008/09/03/the-wisdom-of-crowds-and-groupthink-in-agile-software-development/</link>
      <pubDate>Wed, 03 Sep 2008 15:17:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/03/the-wisdom-of-crowds-and-groupthink-in-agile-software-development/</guid>
      <description>Gojko Adzicposted a summaryof a talk James Surowiecki gave at Agile 2008and it got me thinking how we use the Wisdom of Crowdsin Agile projects.
One of the most interesting things I learnt from the book is that when you bring together a diverse group of people, their output will probably be better than any one expert. Gojko points out this example that was used at Agile 2008:
There are a couple of areas of agile where I have seen how The Wisdom of Crowds can become groupthinkif we&amp;rsquo;re not careful:</description>
    </item>
    
    <item>
      <title>Configurable Builds: Overriding properties</title>
      <link>https://markhneedham.com/blog/2008/09/02/configurable-builds-overriding-properties/</link>
      <pubDate>Tue, 02 Sep 2008 14:49:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/02/configurable-builds-overriding-properties/</guid>
      <description>Sometimes when configuring our build for flexibility we don&amp;rsquo;t need to spend the time required to create one build configuration per useror one build configuration per environment.
In these cases we can just override properties when we call Nant from the command line.
One recent example where I made use of this was where we had one configuration file with properties in but wanted to override a couple of them when we ran the continuous integration build.</description>
    </item>
    
    <item>
      <title>Configurable Builds: One configuration file per user</title>
      <link>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-user/</link>
      <pubDate>Tue, 02 Sep 2008 13:53:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-user/</guid>
      <description>Following on from my first postabout making builds configurable, the second way of doing this that I have seen is to have one configuration build file per user.
This approach is more useful where there are different configurations needed on each developer machine. For example, if the databases being used for development are on a remote server then each developer machine would be assigned a database with a different name.</description>
    </item>
    
    <item>
      <title>Configurable Builds: One configuration file per environment</title>
      <link>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-environment/</link>
      <pubDate>Tue, 02 Sep 2008 01:50:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/02/configurable-builds-one-configuration-file-per-environment/</guid>
      <description>One of the most important things when coding build files is to try and make them as configurable as possible.
At the very least on an agile project there will be a need for two different configurations - one for developer machines and one for continuous integration.
On my last two .NET projects we have setup our Nantbuild to take in a parameter which indicates which build configuration should be used.</description>
    </item>
    
    <item>
      <title>My Software Development journey so far</title>
      <link>https://markhneedham.com/blog/2008/09/01/my-software-development-journey-so-far/</link>
      <pubDate>Mon, 01 Sep 2008 01:01:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/09/01/my-software-development-journey-so-far/</guid>
      <description>While reading some of the rough drafts of Apprenticeship Patternsonline I started thinking about the stages I have gone through on my Software Development journey so far.
I have worked in the industry for just over 3 years; 1 year at Reed Businessand 2 years at ThoughtWorks. Over that time my thoughts, opinions and ways of doing things have changed, and no doubt these will continue to evolve as I learn more and more.</description>
    </item>
    
    <item>
      <title>Perils of estimation</title>
      <link>https://markhneedham.com/blog/2008/08/31/perils-of-estimation/</link>
      <pubDate>Sun, 31 Aug 2008 00:24:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/31/perils-of-estimation/</guid>
      <description>I had my first opportunity to participate in release plan estimation over the last couple of weeks. I&amp;rsquo;ve done estimation before but never at such a high level.
When doing this it appeared clear that there were two situations that we were trying to avoid:
Under estimating is where we predict that the amount of time taken to complete a piece of work will be less than it actually is.</description>
    </item>
    
    <item>
      <title>scp Nant Task - &#39;scp&#39; failed to start. The system cannot find the file specified</title>
      <link>https://markhneedham.com/blog/2008/08/30/scp-nant-task-scp-failed-to-start-the-system-cannot-find-the-file-specified/</link>
      <pubDate>Sat, 30 Aug 2008 16:30:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/30/scp-nant-task-scp-failed-to-start-the-system-cannot-find-the-file-specified/</guid>
      <description>I was trying to make use of the Nant Contribscp taskearlier and was getting an error message which at the time seemed a bit strange (now of course having solve the problem it is obvious!)
This was the task I was running:
&amp;lt;scp file=&amp;#34;someFile.txt&amp;#34; server=&amp;#34;some.secure-server.com&amp;#34; /&amp;gt; This was the error:
&amp;#39;scp&amp;#39; failed to start. The system cannot find the file specified I ran it in debug mode to try and see what was going on and got this stack trace:</description>
    </item>
    
    <item>
      <title>Getting a strongly typed collection using LINQ to Xml</title>
      <link>https://markhneedham.com/blog/2008/08/30/getting-a-strongly-typed-collection-using-linq-to-xml/</link>
      <pubDate>Sat, 30 Aug 2008 03:03:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/30/getting-a-strongly-typed-collection-using-linq-to-xml/</guid>
      <description>I mentioned earlierthat I have been playing around with LINQ to Xml for parsing a Visual Studio csproj file.
While having namespace issues I decided to try and parse a simpler Xml file to try and work out what I was doing wrong.
Given this fragment of Xml:
&amp;lt;Node&amp;gt; &amp;lt;InnerNode&amp;gt;mark&amp;lt;/InnerNode&amp;gt; &amp;lt;InnerNode&amp;gt;needham&amp;lt;/InnerNode&amp;gt; &amp;lt;/Node&amp;gt; I wanted to get a collection(IEnumerable) of InnerNode values.
Unfortunately my over enthusiasm to use anonymous typesmeant that I caused myself more problems than I needed to.</description>
    </item>
    
    <item>
      <title>C# Thrift Examples</title>
      <link>https://markhneedham.com/blog/2008/08/29/c-thrift-examples/</link>
      <pubDate>Fri, 29 Aug 2008 01:39:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/29/c-thrift-examples/</guid>
      <description>As I mentioned in my earlier postI have been working with Facebook&amp;rsquo;s Thriftmessaging project.
Unfortunately there are not currently any C# examples of how to use the Data Transfer Objects the Thrift compiler generates for us on the official wiki.
We managed to figure out how to do it by following the Java instructionsand converting them into C# code. Before writing any code we need to import Thrift.dll into our Visual Studio project.</description>
    </item>
    
    <item>
      <title>Thrift as a message definition layer</title>
      <link>https://markhneedham.com/blog/2008/08/29/thrift-as-a-message-definition-layer/</link>
      <pubDate>Fri, 29 Aug 2008 00:42:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/29/thrift-as-a-message-definition-layer/</guid>
      <description>Thriftis a Facebook released open source project for cross language serialisation and RPC communication.
We made use of it for our message definition layer - when it comes to messaging I&amp;rsquo;m a fan of the event based approach so we left the RPC stuffwell alone.
The reason we used Thrift in the first place was because we had a requirement to get interoperability between a Java and .NET application across a message bus and it provided an easy way to do this.</description>
    </item>
    
    <item>
      <title>Querying Xml with LINQ - Don&#39;t forget the namespace</title>
      <link>https://markhneedham.com/blog/2008/08/28/querying-xml-with-linq-dont-forget-the-namespace/</link>
      <pubDate>Thu, 28 Aug 2008 10:15:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/28/querying-xml-with-linq-dont-forget-the-namespace/</guid>
      <description>I&amp;rsquo;ve been working with a colleague on parsing a Visual Studio project file using LINQto effectively create a DOM of the file.
The first thing we tried to do was get a list of all the references from the file. It seemed like a fairly easy problem to solve but for some reason nothing was getting returned:
XDocument projectFile = XDocument.Load(projectFilePath.Path); var references = from itemGroupElement in projectFile.Descendants(&amp;#34;ItemGroup&amp;#34;).First().Elements() select itemGroupElement.Attribute(&amp;#34;Include&amp;#34;).Value; We are selecting all the occurrences of &amp;lsquo;ItemGroup&amp;rsquo;, taking the first occurrence, getting all the elements inside it (i.</description>
    </item>
    
    <item>
      <title>Handling balances in systems</title>
      <link>https://markhneedham.com/blog/2008/08/27/handling-balances-in-systems/</link>
      <pubDate>Wed, 27 Aug 2008 21:47:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/27/handling-balances-in-systems/</guid>
      <description>On one of my previous projects one of the problems that we had to solve was how to handle balances - we were working on a cash service for a financial services company.
The main discussion often centres around how often the balance should be updated. From my experience there are two main ways that we can go about this:
This is perhaps the most obvious approach and the implementation is fairly simple.</description>
    </item>
    
    <item>
      <title>Resharper templates</title>
      <link>https://markhneedham.com/blog/2008/08/27/resharper-templates/</link>
      <pubDate>Wed, 27 Aug 2008 11:58:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/27/resharper-templates/</guid>
      <description>One of the first things that I do when I go onto a project is setup a ReSharpertemplatefor writing tests.
I generally set this up so that when I type &amp;lsquo;should&amp;rsquo; I can press tab and it will automatically create an outline of a test method for me.
Creating a template is as simple as going to &amp;lsquo;ReSharper &amp;gt; Live Templates&amp;rsquo; from Visual Studio.
I have attached several templates that I seem to end up writing over and over again.</description>
    </item>
    
    <item>
      <title>Agile - Should we track more than just development?</title>
      <link>https://markhneedham.com/blog/2008/08/26/agile-should-we-track-more-than-just-development/</link>
      <pubDate>Tue, 26 Aug 2008 23:57:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/26/agile-should-we-track-more-than-just-development/</guid>
      <description>I touched earlieron the transparency of agile and I&amp;rsquo;ve been thinking about some of the ways that we track/report information in agile projects.
In all the projects I&amp;rsquo;ve been involved in the data being tracked almost exclusively referred to development time. One of the advantages of having continuous analysis/development/testing is that we are able to reduce the time spent on the System Integration and User Acceptance Testing phases of the project.</description>
    </item>
    
    <item>
      <title>The transparency of Agile</title>
      <link>https://markhneedham.com/blog/2008/08/26/the-transparency-of-agile/</link>
      <pubDate>Tue, 26 Aug 2008 11:46:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/26/the-transparency-of-agile/</guid>
      <description>One of the key ideas behind agile software development is providing information as early as possible to allow the business to best make decisions.
There are a variety of ways that this is done including the use of burn up charts, estimates of scope and velocity for example. This data is compiled to try and give an accurate idea of how long a project is likely to take so that the business can work out early on whether the value it adds is worth the expected cost.</description>
    </item>
    
    <item>
      <title>NCover Nant Team City Integration</title>
      <link>https://markhneedham.com/blog/2008/08/25/ncover-nant-team-city-integration/</link>
      <pubDate>Mon, 25 Aug 2008 21:29:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/25/ncover-nant-team-city-integration/</guid>
      <description>I&amp;rsquo;ve been spending quite a bit of time setting up NCoverand then integrating it into Team City.
I&amp;rsquo;ve read some posts which cover parts of this process but nothing which covers the end to end process so hopefully my experience can help to fill that void.
&amp;lt;loadtasks assembly=&amp;#34;..\lib\NCoverExplorer.Extras\NCoverExplorer.NAntTasks.dll&amp;#34;/&amp;gt; &amp;lt;exec program=&amp;#34;regsvr32&amp;#34; workingdir=&amp;#34;..\lib\NCover-1.5.8&amp;#34; commandline=&amp;#34;/s coverlib.dll&amp;#34;/&amp;gt; I put this right at the top of the build but I expect it doesn&amp;rsquo;t matter where it goes as long as it&amp;rsquo;s called at some stage before NCover and NCover Explorer are called.</description>
    </item>
    
    <item>
      <title>Encapsulation in build scripts using nant</title>
      <link>https://markhneedham.com/blog/2008/08/21/encapsulation-in-build-scripts-using-nant/</link>
      <pubDate>Thu, 21 Aug 2008 00:40:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/21/encapsulation-in-build-scripts-using-nant/</guid>
      <description>When writing build scripts it&amp;rsquo;s very easy for it to descend into complete Xml hell when you&amp;rsquo;re using a tool like nant.
I wondered previouslywhether it was possible to TDD build files and while this is difficult given the dependency model most build tools follow. That doesn&amp;rsquo;t mean we can&amp;rsquo;t apply other good design principles from the coding world however.
Encapsulationis one of the key principles of OOP and it can be applied in build files too.</description>
    </item>
    
    <item>
      <title>Building in release mode with no pdbs with msbuild</title>
      <link>https://markhneedham.com/blog/2008/08/20/building-in-release-mode-with-no-pdbs-with-msbuild/</link>
      <pubDate>Wed, 20 Aug 2008 18:50:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/20/building-in-release-mode-with-no-pdbs-with-msbuild/</guid>
      <description>I&amp;rsquo;ve been having trouble trying to work out how to build our projects in msbuild in release mode without creating the customary pdbfiles that seem to be created by default.
I tried calling msbuild.exe with the &amp;lsquo;Release&amp;rsquo; configuration:
&amp;#39;C:\WINDOWS\Microsoft.NET\Framework\v3.5\MSBuild.Exe ( Proj.csproj /p:OutputPath=\output\path\ /p:Configuration=Release)&amp;#39; To no avail. It still created the pdb file. Next I tried setting the &amp;lsquo;DebugSymbols&amp;rsquo; property to false:
&amp;#39;C:\WINDOWS\Microsoft.NET\Framework\v3.5\MSBuild.Exe ( Proj.csproj /p:OutputPath=\output\path\ /p:Configuration=Release /p:DebugSymbols=false)&amp;#39; Still it created the file.</description>
    </item>
    
    <item>
      <title>The Information Wall</title>
      <link>https://markhneedham.com/blog/2008/08/20/the-information-wall/</link>
      <pubDate>Wed, 20 Aug 2008 00:22:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/20/the-information-wall/</guid>
      <description>Sometimes the simplest things can provide the greatest value to project teams. We often look for a technical solution to problems where something simpler would achieve the same aim.
The Information Wall is as its name may suggest a place where you can put information that people in the team need to know but which they have not (yet) committed to memory.
Examples of things that you could put on an information wall could be:</description>
    </item>
    
    <item>
      <title>NCover - Requested value &#39;/r&#39; was not found</title>
      <link>https://markhneedham.com/blog/2008/08/19/ncover-requested-value-r-was-not-found/</link>
      <pubDate>Tue, 19 Aug 2008 21:18:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/19/ncover-requested-value-r-was-not-found/</guid>
      <description>I&amp;rsquo;ve been trying to integrate NCoverinto our build and probably making life harder for myself than it needs to be.
The title refers to the error message that I was getting when trying to run the ncover nant taskon version 1.0.1 of NCover earlier today.
[ncover] Starting &amp;#39;C:\Program Files\NCover\ncover-console.exe (//r &amp;#34;\long\path\to\tmp392.tmp.ncoversettings&amp;#34; )&amp;#39; in &amp;#39;C:\my-project\trunk\src&amp;#39; [ncover] Unhandled Exception: System.ArgumentException: Requested value &amp;#39;/r&amp;#39; was not found. [ncover] at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase) [ncover] at NCover.</description>
    </item>
    
    <item>
      <title>From Prototype to Delivery</title>
      <link>https://markhneedham.com/blog/2008/08/18/from-prototype-to-delivery/</link>
      <pubDate>Mon, 18 Aug 2008 22:39:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/18/from-prototype-to-delivery/</guid>
      <description>Projects often reach the interesting point where the prototyping and development phases intersect and there are some interesting decisions to make.
From a development point of view the biggest decision is what to do with the code that has been developed.
When developing prototypesthe focus tends to be on getting something to work quick and dirty. Not a lot of time is put into considering edge cases or error conditions or any of the other niceties that are needed for software to be usable in an enterprise environment.</description>
    </item>
    
    <item>
      <title>Returning from methods</title>
      <link>https://markhneedham.com/blog/2008/08/17/returning-from-methods/</link>
      <pubDate>Sun, 17 Aug 2008 23:05:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/17/returning-from-methods/</guid>
      <description>When pair programmingthere are obviously times when you have different opinions about how things should be done.
One of these is the way that we should return from methods. There seem to be two approaches when it comes to this:
The Guard Blockis the best example of this. It is generally used at the start of methods to stop further execution of the method if the parameters are invalid for example:</description>
    </item>
    
    <item>
      <title>Naming the patterns we use in code</title>
      <link>https://markhneedham.com/blog/2008/08/16/naming-the-patterns-we-use-in-code/</link>
      <pubDate>Sat, 16 Aug 2008 23:58:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/16/naming-the-patterns-we-use-in-code/</guid>
      <description>I&amp;rsquo;ve been playing around with C#&amp;lsquo;s Xml libraries today and in particular the XmlWriterclass.
I wanted to use it to create an Xml document so I called the XmlWriter.Create() method. One of the overloads for this methods takes in a StringBuilder which I initially thought the XmlWriter used to create the Xml document.
In fact it actually writes the Xml Document into this StringBuilder. This is actually possible to deduct from the documentation provided on the Create method but I only glanced at the type needed initially and misunderstood how it worked.</description>
    </item>
    
    <item>
      <title>Null Handling Strategies</title>
      <link>https://markhneedham.com/blog/2008/08/16/null-handling-strategies/</link>
      <pubDate>Sat, 16 Aug 2008 01:03:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/16/null-handling-strategies/</guid>
      <description>I mentioned in an earlier postmy dislike of the passing of null around code, and since then there have been a coupleof postson the subject on the ThoughtWorks blogs.
I had always thought that was a silver bullet for the way that we can handle null objects in our code but it seems from reading other people&amp;rsquo;s opinions and from my own experience that this is not the case (surprise, surprise!</description>
    </item>
    
    <item>
      <title>Getting latest tagged revision in SVN from DOS/Batch script</title>
      <link>https://markhneedham.com/blog/2008/08/16/getting-latest-tagged-revision-in-svn-from-dosbatch-script/</link>
      <pubDate>Sat, 16 Aug 2008 00:10:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/16/getting-latest-tagged-revision-in-svn-from-dosbatch-script/</guid>
      <description>The way we have setup the build on our continuous integration server, Team Cityis configured to create a new tag every time the functional tests past successful on that machine.
We then have a QA and Showcase build that we can run to deploy all the artifacts necessary to launch the application on that machine.
Originally I had just written the batch script to take in the tag of the build which the user could find by looking through repo-browserfor the last tag created.</description>
    </item>
    
    <item>
      <title>First thoughts on using var in C# 3.0 with Resharper</title>
      <link>https://markhneedham.com/blog/2008/08/15/first-thoughts-on-using-var-in-c-30-with-resharper/</link>
      <pubDate>Fri, 15 Aug 2008 08:03:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/15/first-thoughts-on-using-var-in-c-30-with-resharper/</guid>
      <description>One of the first things I noticed when coming into the world of C# 3.0 was the use of the key word &amp;lsquo;var&amp;rsquo; all over our code base.
I had read about it previously and was under the impression that its main use would be when writing code around LINQ or when creating anonymous types.
On getting Resharperto tidy up my code I noticed that just about every variable type declaration had been removed and replaced with var.</description>
    </item>
    
    <item>
      <title>Macros in nant</title>
      <link>https://markhneedham.com/blog/2008/08/14/macros-in-nant/</link>
      <pubDate>Thu, 14 Aug 2008 21:49:04 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/14/macros-in-nant/</guid>
      <description>One of my favourite features of antis the ability to create macros where you can define common behaviour and then call it from the rest of your build script.
Unfortunately that task doesn&amp;rsquo;t come with nantand it&amp;rsquo;s not available on nant-contribeither.
We were using a very roundabout way to build the various projects in our solution.
Horrendous! Luckily I happened to be emailing back and forth with Bernardoabout Stormwindat the time and he mentioned that there was in facta task.</description>
    </item>
    
    <item>
      <title>msbuild - Use OutputPath instead of OutDir</title>
      <link>https://markhneedham.com/blog/2008/08/14/msbuild-use-outputpath-instead-of-outdir/</link>
      <pubDate>Thu, 14 Aug 2008 19:54:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/14/msbuild-use-outputpath-instead-of-outdir/</guid>
      <description>We&amp;rsquo;ve been using msbuild to build our project files on my current project and a colleagueand I noticed some strange behaviour when trying to set the directory that the output should be built to.
The problem was whenever we tried to set the output directory (using OutDir) to somewhere where there was a space in the directory name it would just fail catastrophically. We spent ages searching for the command line documentation before finding it here.</description>
    </item>
    
    <item>
      <title>Auto complete with tab in DOS</title>
      <link>https://markhneedham.com/blog/2008/08/13/auto-completion-with-tab-in-dos/</link>
      <pubDate>Wed, 13 Aug 2008 23:55:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/13/auto-completion-with-tab-in-dos/</guid>
      <description>It&amp;rsquo;s becoming quite a couple of weeks of learning for me around DOS and I have another tip that I just learnt today.
I always found it really frustrating when using the windows command prompt that I couldn&amp;rsquo;t get Unix style tab auto completion. To navigate my way to a directory I would do the following:
Little did I know that in fact I needed to be using the backslash. The above can now be done in one line using Unix style tabbing auto completion:</description>
    </item>
    
    <item>
      <title>Pair Programming: Junior/Junior pair</title>
      <link>https://markhneedham.com/blog/2008/08/13/pair-programming-juniorjunior-pair/</link>
      <pubDate>Wed, 13 Aug 2008 23:18:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/13/pair-programming-juniorjunior-pair/</guid>
      <description>When it comes to Pair Programming the Junior/Junior pairing is considered the most likely to lead to disaster. The old joke being that if you pair two Junior Developers together then you&amp;rsquo;d better hope you have a revert function on your repository. But is this fair?
Certainly pairing two Junior Developers together means that you automatically lose the value of the experience and mentoring skills that you would get if there was a Senior Developer as part of the pair.</description>
    </item>
    
    <item>
      <title>If Else statements in batch files</title>
      <link>https://markhneedham.com/blog/2008/08/13/if-else-statements-in-batch-files/</link>
      <pubDate>Wed, 13 Aug 2008 22:27:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/13/if-else-statements-in-batch-files/</guid>
      <description>I mentioned in a couple of earlierpoststhat I&amp;rsquo;ve been doing quite a bit of work with batch files and the windows command line, and today I wanted to do an If Else statement in one of my scripts.
I thought it would be relatively simple, but after various searches and having read articles that suggested that there wasn&amp;rsquo;t an ELSE construct in batch land I finally found a forum postwhich explained how to do it.</description>
    </item>
    
    <item>
      <title>Dependency Tasks</title>
      <link>https://markhneedham.com/blog/2008/08/12/dependency-tasks/</link>
      <pubDate>Tue, 12 Aug 2008 23:48:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/12/dependency-tasks/</guid>
      <description>I am a big fan of Pat Kua&amp;rsquo;s tiny tasksand to see my desk would be to believe that there had been an invasion of yellow stickies on the planet.
Pat explains the idea on his website but to summarise; the idea is that given a story, you break it down into the individual tasks that need to be done in order for it to be complete, write each tasks on a sticky and then when that task is finished throw the sticky away.</description>
    </item>
    
    <item>
      <title>Getting the current working directory from DOS or Batch file</title>
      <link>https://markhneedham.com/blog/2008/08/12/getting-the-current-working-directory-from-dos-or-batch-file/</link>
      <pubDate>Tue, 12 Aug 2008 22:37:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/12/getting-the-current-working-directory-from-dos-or-batch-file/</guid>
      <description>In the world of batch files I&amp;rsquo;ve been trying for ages to work out how to get the current/present working directory to make the batch script I&amp;rsquo;m working on a bit more flexible.
In Unix it&amp;rsquo;s easy, just call &amp;lsquo;pwd&amp;rsquo; and you have it. I wasn&amp;rsquo;t expecting something that simple in Windows but it is! A call to &amp;lsquo;cd&amp;rsquo; is all that&amp;rsquo;s needed. If you need to set it in a batch script the following line does the trick:</description>
    </item>
    
    <item>
      <title>Pair Programming: Pairing with a QA</title>
      <link>https://markhneedham.com/blog/2008/08/11/pair-programming-pairing-with-a-qa/</link>
      <pubDate>Mon, 11 Aug 2008 22:10:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/11/pair-programming-pairing-with-a-qa/</guid>
      <description>I&amp;rsquo;ve talked about pair programming in some of my previouspostsas I find the dynamic it creates quite intriguing.
One idea which was suggested around the time I wrote those posts by my project manager at the time was developers pairing with the QA or BA on certain tasks. I didn&amp;rsquo;t get to experience it on that particular project but over the last week I&amp;rsquo;ve been doing quick a bit of build work and for some of that I was pairing with our QA.</description>
    </item>
    
    <item>
      <title>Does generalising specialist mean you can&#39;t be the best?</title>
      <link>https://markhneedham.com/blog/2008/08/11/does-generalising-specialist-mean-you-cant-be-the-best/</link>
      <pubDate>Mon, 11 Aug 2008 05:31:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/11/does-generalising-specialist-mean-you-cant-be-the-best/</guid>
      <description>It&amp;rsquo;s often said that people who are really good at what they do are so good at it because they have narrowed their focus in their area of specialty until they are only doing the thing that they are good at.
To use a football analogy, Manchester United&amp;rsquo;s Cristiano Ronaldo - widely acknowledged as the best footballer in the world at the moment - is absolutely brilliant when he has the ball at his feet, taking on defenders, getting in shots around the opposition penalty area.</description>
    </item>
    
    <item>
      <title>Controlling window position with the win32 API</title>
      <link>https://markhneedham.com/blog/2008/08/10/controlling-window-position-with-the-win32-api/</link>
      <pubDate>Sun, 10 Aug 2008 03:02:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/10/controlling-window-position-with-the-win32-api/</guid>
      <description>We&amp;rsquo;ve been doing a bit of work around controlling the state of the windows of applications launched programmatically.
The problem we were trying to solve is to launch an arbitrary application, move it around the screen and then save its window position on the screen so that next time it&amp;rsquo;s launched it loads in the same position.
There are some win32 APIs designed to do just this, although it took a fair bit of searching and trial and error to work out exactly how to use them.</description>
    </item>
    
    <item>
      <title>Hiring Developers - not just about the code</title>
      <link>https://markhneedham.com/blog/2008/08/10/hiring-developers-not-just-about-the-code/</link>
      <pubDate>Sun, 10 Aug 2008 01:23:38 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/10/hiring-developers-not-just-about-the-code/</guid>
      <description>It seems programmers are taking a bit of a hammering this week!
Kris Kemper talks about the Net Negative Producing Programmerreferring to a paperlinked to by Jay Fields, concluding that the code submission is very important in helping to distinguish between good and bad candidates.
Now I probably haven&amp;rsquo;t done as many interviews at ThoughtWorks as Kris has but from what I&amp;rsquo;ve seen of the recruitment process it seems to be more focused on ensuring that potential hires culturally fit into the organisation rather than that they write the best code that anyone has ever seen.</description>
    </item>
    
    <item>
      <title>IntelliJ style item tracking in Visual Studio</title>
      <link>https://markhneedham.com/blog/2008/08/09/intellij-style-item-tracking-in-visual-studio/</link>
      <pubDate>Sat, 09 Aug 2008 14:51:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/09/intellij-style-item-tracking-in-visual-studio/</guid>
      <description>One of my favourite features of IntelliJis that it tracks the item that you currently have open on your Solution Explorer.
I thought this wasn&amp;rsquo;t possible in Visual Studio and had resigned myself to trying to remember which project each file was in. Luckily for me a colleague pointed out that it is in fact possible but is just turned off by default.
Tools &amp;gt; Options &amp;gt; Projects and Solutions &amp;gt; Check &amp;lsquo;Track Active Item in Solution Explorer&amp;rsquo;</description>
    </item>
    
    <item>
      <title>Ruby: Parameterising with ActiveResource</title>
      <link>https://markhneedham.com/blog/2008/08/08/ruby-parameterising-with-activeresource/</link>
      <pubDate>Fri, 08 Aug 2008 22:16:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/ruby-parameterising-with-activeresource/</guid>
      <description>We&amp;rsquo;ve been using Ruby/Rails on my current project to create a RESTfulweb service. One of the problems we wanted to solve was making the data queried by this web service configurable from our build.
We started off with the following bit of code (which makes use of the recently added ActiveResourceclass):
Out of interest it has taken me ages to try and find a way to put the Ruby code on here in a readable format.</description>
    </item>
    
    <item>
      <title>Spaces in batch scripts</title>
      <link>https://markhneedham.com/blog/2008/08/08/spaces-in-batch-scripts/</link>
      <pubDate>Fri, 08 Aug 2008 20:10:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/spaces-in-batch-scripts/</guid>
      <description>Since reading The Pragmatic ProgrammerI&amp;rsquo;ve become a bit of an automation junkie and writing batch scripts falls right under that category.
Unfortunately, nearly every single time I write one I forget that Windows really hates it when you have spaces in variable assignments, and I forget how to print out a usage message if the right number of parameters are not passed in.
So as much for me as for everyone else, this is how you do it:</description>
    </item>
    
    <item>
      <title>TeamCity&#39;s strange default build location</title>
      <link>https://markhneedham.com/blog/2008/08/08/teamcitys-strange-default-build-location/</link>
      <pubDate>Fri, 08 Aug 2008 19:52:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/teamcitys-strange-default-build-location/</guid>
      <description>We&amp;rsquo;ve been using TeamCityon my current project and it&amp;rsquo;s proven to be fairly impressive in general.
We&amp;rsquo;re running quite a few different builds which have dependencies on each other and it&amp;rsquo;s been pretty much one click on the web admin tool to get that set up.
One thing that had me really confused is the default location it chooses to build from. The problem is that it seems to change arbitrarily, with the folder name it builds in being calculated from a VSC hash (not sure quite how that&amp;rsquo;s worked out but there we go).</description>
    </item>
    
    <item>
      <title>Keyboard shortcut for running tests with Resharper</title>
      <link>https://markhneedham.com/blog/2008/08/08/keyboard-shortcut-for-running-tests-with-resharper/</link>
      <pubDate>Fri, 08 Aug 2008 19:23:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/keyboard-shortcut-for-running-tests-with-resharper/</guid>
      <description>Having moved back into the world of C#/.NET development after a few months in the Java world I have had the joy of getting to use Resharperagain.
One annoyance that myself and my team have been having over the past few weeks is running unit tests. We always end up going to the Solution Explorer, right click the project and then click &amp;lsquo;Run Unit Tests&amp;rsquo;. There is another way&amp;hellip;
From Visual Studio:</description>
    </item>
    
    <item>
      <title>If they were that rubbish...</title>
      <link>https://markhneedham.com/blog/2008/08/08/if-they-were-that-rubbish/</link>
      <pubDate>Fri, 08 Aug 2008 19:15:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/08/if-they-were-that-rubbish/</guid>
      <description>Jay Fields certainly seemed to make some wavesin the blogosphere with his recent postabout 50% of the people in business software development needing to find a new profession.
As a consultant I often go onto projects where a significant amount of difficult to understand and often untested code is in place. At times it feels like the people who have written it really don&amp;rsquo;t care about the quality of their work which can be very disheartening.</description>
    </item>
    
    <item>
      <title>Do IDEs encourage bad code?</title>
      <link>https://markhneedham.com/blog/2008/07/27/do-ides-encourage-bad-code/</link>
      <pubDate>Sun, 27 Jul 2008 11:43:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/07/27/do-ides-encourage-bad-code/</guid>
      <description>Although modern day IDEs (Eclipse, IntelliJ, Resharper etc) undoubtedly provide a lot of benefits when writing code, I am starting to wonder if the ease at which they make things possible actually encourages bad habits.
Useful features such as creating and initialising member variables from the definition of a constructor are quickly nullified by the ease at which one is able to create getters/setters/properties for these same member variables. All hopes of encapsulation gone with a few clicks of the mouse.</description>
    </item>
    
    <item>
      <title>Null checks everywhere and airport security</title>
      <link>https://markhneedham.com/blog/2008/07/18/null-checks-everywhere-and-airport-security/</link>
      <pubDate>Fri, 18 Jul 2008 08:32:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/07/18/null-checks-everywhere-and-airport-security/</guid>
      <description>Having just flown half way across the world from Sydney to London I&amp;rsquo;ve been thinking about how airport security is done and noticed a somewhat interesting link to the use of null checks in code.
In Sydney and Dubai airports my baggage and I were scanned only once before I was able to get onto the plane. I wasn&amp;rsquo;t scanned again when I went to the departure gate nor when I got onto the aircraft.</description>
    </item>
    
    <item>
      <title>Pair Programming: The Non Driving Pair</title>
      <link>https://markhneedham.com/blog/2008/02/14/pair-programming-the-non-driving-pair/</link>
      <pubDate>Thu, 14 Feb 2008 01:27:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/14/pair-programming-the-non-driving-pair/</guid>
      <description>One of the intriguing aspects of pair programming for me is that of the non driving person in the pair – what are they supposed to do?!
Obviously there are fairly well known strategies for more interactive pairing, such as Ping Pongand Ball and Board (which is where one person controls the mouse and the other the keyboard), but neither of these strategies suggest what to do when you are not driving</description>
    </item>
    
    <item>
      <title>Feedback: Positive Reinforcement/Change yourself first</title>
      <link>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</link>
      <pubDate>Tue, 12 Feb 2008 00:01:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/12/feedback-positive-reinforcementchange-yourself-first/</guid>
      <description>One of the more interesting concepts used on the NLP coursethat I did last year was the idea of only giving positive feedback to people.
The thinking behind the theory (which I think comes from Robert Dilts, one of the early thinkers behind NLP) is that people know what they are doing wrong and already beat themselves up about it; therefore there is no point you mentioning it as well.</description>
    </item>
    
    <item>
      <title>Pair Programming: Introduction</title>
      <link>https://markhneedham.com/blog/2008/02/10/pair-programming-introduction/</link>
      <pubDate>Sun, 10 Feb 2008 01:47:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/10/pair-programming-introduction/</guid>
      <description>I’ve had the opportunity to have worked with many different people pair programmingwise over the last year or so, and having seen it done in several different ways thought it would be interesting to work through some of my thoughts about this Extreme Programming (XP) originated practice.
First of all it seems to me that pair programming is a technique that is used with a lot more frequency at ThoughtWorks than at any other IT organisation.</description>
    </item>
    
    <item>
      <title>Learning theory first</title>
      <link>https://markhneedham.com/blog/2008/02/09/learning-theory-first/</link>
      <pubDate>Sat, 09 Feb 2008 13:15:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/02/09/learning-theory-first/</guid>
      <description>I’ve always been the type of person who only gets the motivation to do something if there is some useful practical reason for doing so. It therefore probably doesn’t come as much of a surprise that I hated the majority of my mostly theoretical computer science degree.
I was talking to one of my colleagues last week and came out of the conversation convinced that the desire to know the theory behind concepts is amplified when you actually get to see it in action in a real life system.</description>
    </item>
    
    <item>
      <title>Active listening</title>
      <link>https://markhneedham.com/blog/2006/09/03/active-listening/</link>
      <pubDate>Sun, 03 Sep 2006 15:39:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/09/03/active-listening/</guid>
      <description>One of the first unusual (to me) things that I noticed from the trainers at ThoughtWorks University was that when they were listening to participants they would often ask questions and re-frame the participants&amp;rsquo; comments. Intrigued and impressed by this I spoke to one of the trainers and was told that they were engaging in &#39;active listening&#39;. Wikipedia defines the term as follows:
It reminded me of the 5th Habitthat Steven Covey speaks of in his book titled &#39;The Seven Habits of Highly Effective People&#39;: Seek First to Understand, Then to be Understood.</description>
    </item>
    
    <item>
      <title>Giving effective feedback</title>
      <link>https://markhneedham.com/blog/2006/09/02/giving-effective-feedback/</link>
      <pubDate>Sat, 02 Sep 2006 03:07:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/09/02/giving-effective-feedback/</guid>
      <description>One of the most interesting things I have discovered since starting at ThoughtWorks earlier this month is the emphasis that is placed on giving feedback.
The first lesson we were taught about giving feedback was that it could be one of two types. Either it should Strengthen Confidenceor Increase Effectiveness.
In Layman&amp;rsquo;s term that means that if you want to make a positive comment about somebody&amp;rsquo;s contribution then you should make reference to something specific that you believe they have done well so that they can continue doing it.</description>
    </item>
    
    <item>
      <title>Inheritance and Delegation</title>
      <link>https://markhneedham.com/blog/2006/09/02/inheritance-and-delegation/</link>
      <pubDate>Sat, 02 Sep 2006 01:31:40 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/09/02/inheritance-and-delegation/</guid>
      <description>One of the major learning points this week at TWU has been understanding when it is appropriate to use inheritanceand when delegationis the better choice.
I had heard stories about how inheritance could be misused but I didn&amp;rsquo;t think I would be stupid enough to fall straight into that trap! We were taught the concept using &amp;lsquo;Measurement&amp;rsquo; as the problem domain. So to translate the previous sentence into English: The aim was to design classes which could handle old school measurement types such as Inches, Feet, Yards, and so on.</description>
    </item>
    
    <item>
      <title>Watching a master at work</title>
      <link>https://markhneedham.com/blog/2006/09/02/watching-a-master-at-work/</link>
      <pubDate>Sat, 02 Sep 2006 01:01:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/09/02/watching-a-master-at-work/</guid>
      <description>I&amp;rsquo;ve always found it fascinating watching people who really excel in their field going about business, be it footballers, tennis players, actors, whoever.
This week at TWU I&amp;rsquo;ve been playing around with some Ruby on Rails as I mentioned in the previous post, and yesterday I had the opportunity to watch one of the leading figures in the Ruby on Rails field at work. Take a bow Obie Fernandez, who gave several of the TWU attendees a demonstration of how to develop applications using Ruby on Rails.</description>
    </item>
    
    <item>
      <title>First thoughts on Ruby...</title>
      <link>https://markhneedham.com/blog/2006/08/29/first-thoughts-on-ruby/</link>
      <pubDate>Tue, 29 Aug 2006 20:01:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2006/08/29/first-thoughts-on-ruby/</guid>
      <description>I&amp;rsquo;ve heard a lot about Ruby on Railsover the last couple of years but I&amp;rsquo;d never really been intrigued to get it set up on my machine and &amp;lsquo;have a play&amp;rsquo; with it so to speak.
It turned out to be a relatively painless process and after following the instructions on the official siteI had it all setup within about half an hour which was a record for me for getting a development environment setup.</description>
    </item>
    
  </channel>
</rss>