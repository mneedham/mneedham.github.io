+++
draft = false
date="2010-07-11 17:08:39"
title="A new found respect for acceptance tests"
tag=['software-development', 'testing']
category=['Testing']
+++

On the project that I've been working on over the past few months one of the key benefits of the application was its ability to perform various calculations based on user input.

In order to check that these calculators are producing the correct outputs we created a series of acceptance tests that ran directly against one of the objects in the system.

We did this by defining the inputs and expected outputs for each scenario in an excel spreadsheet which we converted into a CSV file before reading that into an NUnit test.

It looked roughly like this:

<div align="center">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2010/07/acceptance-tests3.jpg" alt="acceptance-tests.jpg" border="0" width="523" height="240" />
</div>

We found that testing the calculations like this gave us a quicker feedback cycle than testing them from UI tests both in terms of the time taken to run the tests and the fact that we were able to narrow in on problematic areas of the code more quickly.

As I <a href="http://www.markhneedham.com/blog/2010/07/04/mikado-ish-method-for-debugging/">mentioned on a previous post</a> we've been trying to move the creation of the calculators away from the 'CalculatorProvider' and 'CalculatorFactory' so that they're all created in one place based on a DSL which describes the data required to initialise a calculator.

In order to introduce this DSL into the code base these acceptance tests acted as our safety net as we pulled out the existing code and replaced it with the new DSL.

<div align="center">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2010/07/acceptance-tests-part21.jpg" alt="acceptance-tests-part2.jpg" border="0" width="538" height="250" />
</div>

We had to completely rewrite the 'CalculationService' unit tests so those unit tests didn't provide us much protection while we made the changes I described above.

The acceptance tests, on the other hand, were invaluable and saved us from incorrectly changing the code even when we were certain we'd taken such small steps along the way that we couldn't possibly have made a mistake.

This is certainly an approach I'd use again in a similar situation although it could probably be improved my removing the step where we convert the data from the spreadsheet to CSV file.
