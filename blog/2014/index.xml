<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2014s on Mark Needham</title>
    <link>https://markhneedham.com/blog/2014/</link>
    <description>Recent content in 2014s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Dec 2014 21:55:23 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/2014/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R: Featuring engineering for a linear model</title>
      <link>https://markhneedham.com/blog/2014/12/28/r-featuring-engineering-for-a-linear-model/</link>
      <pubDate>Sun, 28 Dec 2014 21:55:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/28/r-featuring-engineering-for-a-linear-model/</guid>
      <description>&amp;gt; df = read.csv(&amp;#34;/tmp/membersWithGroupCounts.csv&amp;#34;) &amp;gt; df$eventTime = as.POSIXct(df$eventTime) &amp;gt; df %&amp;gt;% sample_n(10) %&amp;gt;% select(event.name, g.name, eventTime, groupMembers, rsvps) event.name g.name eventTime groupMembers rsvps 23 Scoring Models, Apache Drill for querying structured &amp;amp; unstructured data Data Science London 2014-09-18 18:30:00 3466 159 421 London Office Hours London MongoDB User Group 2012-08-22 17:00:00 468 6 304 MongoDB University Study Group London Meet up London MongoDB User Group 2014-07-16 17:00:00 1256 23 43 December Meetup London ElasticSearch User Group 2014-12-10 18:30:00 721 126 222 Intro to Graphs Neo4j - London User Group 2014-09-03 18:30:00 1453 39 207 Intro to Machine Learning with Scikit-Learn Women in Data 2014-11-11 18:15:00 574 41 168 NoSQL panel and LevelDB + Node.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.6 - Cypher: FOREACH slowness</title>
      <link>https://markhneedham.com/blog/2014/12/28/neo4j-2-1-6-cypher-foreach-slowness/</link>
      <pubDate>Sun, 28 Dec 2014 04:28:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/28/neo4j-2-1-6-cypher-foreach-slowness/</guid>
      <description>$ schema Indexes ON :Person(id) ONLINE No constraints WITH range (2,1002) AS friends MERGE (p:Person {id: 1}) FOREACH(f IN friends | MERGE (friend:Person {id: f}) MERGE (friend)-[:FRIENDS]-&amp;gt;p); +-------------------+ | No data returned. | +-------------------+ Nodes created: 1002 Relationships created: 1001 Properties set: 1002 Labels added: 1002 19173 ms EmptyResult | +UpdateGraph(0) | +Eager | +UpdateGraph(1) | +Extract | +Null +----------------+------+---------+-------------+--------------------------------------+ | Operator | Rows | DbHits | Identifiers | Other | +----------------+------+---------+-------------+--------------------------------------+ | EmptyResult | 0 | 0 | | | | UpdateGraph(0) | 1 | 3015012 | | Foreach | | Eager | 1 | 0 | | | | UpdateGraph(1) | 1 | 5 | p, p | MergeNode; { AUTOINT2}; :Person(id) | | Extract | 1 | 0 | | friends | | Null | ?</description>
    </item>
    
    <item>
      <title>R: Vectorising all the things</title>
      <link>https://markhneedham.com/blog/2014/12/22/r-vectorising-all-the-things/</link>
      <pubDate>Mon, 22 Dec 2014 11:46:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/22/r-vectorising-all-the-things/</guid>
      <description>library(dplyr) library(lubridate) library(geosphere) options(&amp;#34;scipen&amp;#34;=100, &amp;#34;digits&amp;#34;=4) times = ymd_hms(&amp;#34;2002-01-01 17:00:00&amp;#34;) + c(0:99) * hours(1) data = data.frame(time = times) &amp;gt; data %&amp;gt;% head() time 1 2002-01-01 17:00:00 2 2002-01-01 18:00:00 3 2002-01-01 19:00:00 4 2002-01-01 20:00:00 5 2002-01-01 21:00:00 6 2002-01-01 22:00:00 distanceFromWeekend = function(dateToLookup) { before = floor_date(dateToLookup, &amp;#34;week&amp;#34;) + hours(23) + minutes(59) + seconds(59) after = ceiling_date(dateToLookup, &amp;#34;week&amp;#34;) - days(1) timeToBefore = dateToLookup - before timeToAfter = after - dateToLookup if(timeToBefore &amp;lt; 0 || timeToAfter &amp;lt; 0) { 0 } else { if(timeToBefore &amp;lt; timeToAfter) { timeToBefore / dhours(1) } else { timeToAfter / dhours(1) } } } &amp;gt; system.</description>
    </item>
    
    <item>
      <title>R: Time to/from the weekend</title>
      <link>https://markhneedham.com/blog/2014/12/13/r-time-tofrom-the-weekend/</link>
      <pubDate>Sat, 13 Dec 2014 20:38:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/13/r-time-tofrom-the-weekend/</guid>
      <description>&amp;gt; library(lubridate) &amp;gt; floor_date(ymd(&amp;#34;2014-12-18&amp;#34;), &amp;#34;week&amp;#34;) [1] &amp;#34;2014-12-14 UTC&amp;#34; &amp;gt; ceiling_date(ymd(&amp;#34;2014-12-18&amp;#34;), &amp;#34;week&amp;#34;) [1] &amp;#34;2014-12-21 UTC&amp;#34; &amp;gt; ceiling_date(ymd(&amp;#34;2014-12-18&amp;#34;), &amp;#34;week&amp;#34;) - days(1) [1] &amp;#34;2014-12-20 UTC&amp;#34; findClosestWeekendDay = function(dateToLookup) { before = floor_date(dateToLookup, &amp;#34;week&amp;#34;) + hours(23) + minutes(59) + seconds(59) after = ceiling_date(dateToLookup, &amp;#34;week&amp;#34;) - days(1) if((dateToLookup - before) &amp;lt; (after - dateToLookup)) { before } else { after } } &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-13 13:33:29&amp;#34;)) [1] &amp;#34;2014-12-13 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-14 18:33:29&amp;#34;)) [1] &amp;#34;2014-12-14 23:59:59 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-15 18:33:29&amp;#34;)) [1] &amp;#34;2014-12-14 23:59:59 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-17 11:33:29&amp;#34;)) [1] &amp;#34;2014-12-14 23:59:59 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-17 13:33:29&amp;#34;)) [1] &amp;#34;2014-12-20 UTC&amp;#34; &amp;gt; findClosestWeekendDay(ymd_hms(&amp;#34;2014-12-19 13:33:29&amp;#34;)) [1] &amp;#34;2014-12-20 UTC&amp;#34; distanceFromWeekend = function(dateToLookup) { before = floor_date(dateToLookup, &amp;#34;week&amp;#34;) + hours(23) + minutes(59) + seconds(59) after = ceiling_date(dateToLookup, &amp;#34;week&amp;#34;) - days(1) timeToBefore = dateToLookup - before timeToAfter = after - dateToLookup if(timeToBefore &amp;lt; 0 || timeToAfter &amp;lt; 0) { 0 } else { if(timeToBefore &amp;lt; timeToAfter) { timeToBefore / dhours(1) } else { timeToAfter / dhours(1) } } } &amp;gt; distanceFromWeekend(ymd_hms(&amp;#34;2014-12-13 13:33:29&amp;#34;)) [1] 0 &amp;gt; distanceFromWeekend(ymd_hms(&amp;#34;2014-12-14 18:33:29&amp;#34;)) [1] 0 &amp;gt; distanceFromWeekend(ymd_hms(&amp;#34;2014-12-15 18:33:29&amp;#34;)) [1] 18.</description>
    </item>
    
    <item>
      <title>R: Numeric representation of date time</title>
      <link>https://markhneedham.com/blog/2014/12/13/r-numeric-representation-of-date-time/</link>
      <pubDate>Sat, 13 Dec 2014 19:58:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/13/r-numeric-representation-of-date-time/</guid>
      <description>&amp;gt; december13 = as.POSIXlt(&amp;#34;2014-12-13 17:30:00&amp;#34;) &amp;gt; as.numeric(december13 - trunc(december13, &amp;#34;day&amp;#34;), units=&amp;#34;hours&amp;#34;) [1] 17.5 &amp;gt; (december13 - floor_date(december13, &amp;#34;day&amp;#34;)) Time difference of 17.5 hours &amp;gt; class((december13 - floor_date(december13, &amp;#34;day&amp;#34;))) [1] &amp;#34;difftime&amp;#34; &amp;gt; diff = (december13 - floor_date(december13, &amp;#34;day&amp;#34;)) &amp;gt; diff / dhours(1) [1] 17.5 &amp;gt; diff / ddays(1) [1] 0.7291667 &amp;gt; diff / dminutes(1) [1] 1050 &amp;gt; ymd_hms(&amp;#34;2014-12-13 17:00:00&amp;#34;) [1] &amp;#34;2014-12-13 17:00:00 UTC&amp;#34; &amp;gt; ymd_hm(&amp;#34;2014-12-13 17:00&amp;#34;) [1] &amp;#34;2014-12-13 17:00:00 UTC&amp;#34; &amp;gt; ymd_h(&amp;#34;2014-12-13 17&amp;#34;) [1] &amp;#34;2014-12-13 17:00:00 UTC&amp;#34; &amp;gt; ymd(&amp;#34;2014-12-13&amp;#34;) [1] &amp;#34;2014-12-13 UTC&amp;#34; &amp;gt; with_tz(ymd(&amp;#34;2014-12-13&amp;#34;), &amp;#34;GMT&amp;#34;) [1] &amp;#34;2014-12-13 GMT&amp;#34; </description>
    </item>
    
    <item>
      <title>R: data.table/dplyr/lubridate - Error in wday(date, label = TRUE, abbr = FALSE) :  unused arguments (label = TRUE, abbr = FALSE)</title>
      <link>https://markhneedham.com/blog/2014/12/11/r-data-tabledplyrlubridate-error-in-wdaydate-label-true-abbr-false-unused-arguments-label-true-abbr-false/</link>
      <pubDate>Thu, 11 Dec 2014 19:03:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/11/r-data-tabledplyrlubridate-error-in-wdaydate-label-true-abbr-false-unused-arguments-label-true-abbr-false/</guid>
      <description>&amp;gt; library(lubridate) &amp;gt; library(dplyr) &amp;gt; dates = data.frame(date = seq( dmy(&amp;#34;01-01-2010&amp;#34;), to=dmy(&amp;#34;01-01-2015&amp;#34;), by=&amp;#34;day&amp;#34; )) &amp;gt; dates = dates %&amp;gt;% filter(wday(date, label = TRUE, abbr = FALSE) %in% c(&amp;#34;Saturday&amp;#34;, &amp;#34;Sunday&amp;#34;)) &amp;gt; dates %&amp;gt;% head() date 1: 2010-01-02 2: 2010-01-03 3: 2010-01-09 4: 2010-01-10 5: 2010-01-16 6: 2010-01-17 &amp;gt; library(data.table) &amp;gt; dates = data.table(date = seq( dmy(&amp;#34;01-01-2010&amp;#34;), to=dmy(&amp;#34;01-01-2015&amp;#34;), by=&amp;#34;day&amp;#34; )) &amp;gt; dates = dates %&amp;gt;% filter(wday(date, label = TRUE, abbr = FALSE) %in% c(&amp;#34;Saturday&amp;#34;, &amp;#34;Sunday&amp;#34;)) Error in wday(date, label = TRUE, abbr = FALSE) : unused arguments (label = TRUE, abbr = FALSE) &amp;gt; dates = data.</description>
    </item>
    
    <item>
      <title>R: Cleaning up and plotting Google Trends data</title>
      <link>https://markhneedham.com/blog/2014/12/09/r-cleaning-up-plotting-google-trends-data/</link>
      <pubDate>Tue, 09 Dec 2014 18:14:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/09/r-cleaning-up-plotting-google-trends-data/</guid>
      <description>While I&amp;rsquo;m writing the scripts, I&amp;rsquo;m often jumping around, selectively executing individual lines or code blocks, running commands to inspect the data in the REPL (read-evaluate-print-loop, where each command is executed as soon as you type enter, in the picture above it&amp;rsquo;s the pane to the right), etc.
But I try to make sure that when I finish up, the script is runnable by itself.
&amp;gt; library(dplyr) &amp;gt; googleTrends = read.</description>
    </item>
    
    <item>
      <title>R: dplyr - mutate with strptime (incompatible size/wrong result size)</title>
      <link>https://markhneedham.com/blog/2014/12/08/r-dplyr-mutate-with-strptime-incompatible-sizewrong-result-size/</link>
      <pubDate>Mon, 08 Dec 2014 19:02:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/08/r-dplyr-mutate-with-strptime-incompatible-sizewrong-result-size/</guid>
      <description>data = data.frame(x = c(&amp;#34;2014-01-01&amp;#34;, &amp;#34;2014-02-01&amp;#34;, &amp;#34;foo&amp;#34;)) &amp;gt; data x 1 2014-01-01 2 2014-02-01 3 foo &amp;gt; data %&amp;gt;% mutate(y = strptime(x, &amp;#34;%Y-%m-%d&amp;#34;)) Error: wrong result size (11), expected 3 or 1 &amp;gt; data %&amp;gt;% mutate(y = strptime(x, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% as.character()) x y 1 2014-01-01 2014-01-01 2 2014-02-01 2014-02-01 3 foo &amp;lt;NA&amp;gt; &amp;gt; data %&amp;gt;% mutate(y = strptime(x, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% as.character()) %&amp;gt;% filter(!is.na(y)) x y 1 2014-01-01 2014-01-01 2 2014-02-01 2014-02-01 &amp;gt; data %&amp;gt;% mutate(y = x %&amp;gt;% strptime(&amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% as.</description>
    </item>
    
    <item>
      <title>R: String to Date or NA</title>
      <link>https://markhneedham.com/blog/2014/12/07/r-string-to-date-or-na/</link>
      <pubDate>Sun, 07 Dec 2014 19:29:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/07/r-string-to-date-or-na/</guid>
      <description>&amp;gt; as.Date(&amp;#34;2014-01-01&amp;#34;) [1] &amp;#34;2014-01-01&amp;#34; &amp;gt; as.Date(&amp;#34;foo&amp;#34;) Error in charToDate(x) : character string is not in a standard unambiguous format &amp;gt; strptime(&amp;#34;2014-01-01&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) [1] &amp;#34;2014-01-01 GMT&amp;#34; &amp;gt; strptime(&amp;#34;foo&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) [1] NA &amp;gt; strptime(&amp;#34;2014-01-01&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% is.na() [1] FALSE &amp;gt; strptime(&amp;#34;foo&amp;#34;, &amp;#34;%Y-%m-%d&amp;#34;) %&amp;gt;% is.na() [1] TRUE </description>
    </item>
    
    <item>
      <title>R: Applying a function to every row of a data frame</title>
      <link>https://markhneedham.com/blog/2014/12/04/r-applying-a-function-to-every-row-of-a-data-frame/</link>
      <pubDate>Thu, 04 Dec 2014 06:31:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/04/r-applying-a-function-to-every-row-of-a-data-frame/</guid>
      <description>library(dplyr) # https://gist.github.com/mneedham/7e926a213bf76febf5ed venues = read.csv(&amp;#34;/tmp/venues.csv&amp;#34;) venues %&amp;gt;% head() ## venue lat lon ## 1 Skills Matter 51.52482 -0.099109 ## 2 Skinkers 51.50492 -0.083870 ## 3 Theodore Bullfrog 51.50878 -0.123749 ## 4 The Skills Matter eXchange 51.52452 -0.099231 ## 5 The Guardian 51.53373 -0.122340 ## 6 White Bear Yard 51.52227 -0.109804 options(&amp;#34;scipen&amp;#34;=100, &amp;#34;digits&amp;#34;=4) library(geosphere) centre = c(-0.129581, 51.516578) aVenue = venues %&amp;gt;% slice(1) aVenue ## venue lat lon ## 1 Skills Matter 51.</description>
    </item>
    
    <item>
      <title>Spark: Write to CSV file with header using saveAsFile</title>
      <link>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file-with-header-using-saveasfile/</link>
      <pubDate>Sun, 30 Nov 2014 08:21:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file-with-header-using-saveasfile/</guid>
      <description>import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.fs.*; import org.apache.hadoop.io.IOUtils; import java.io.IOException; public class MyFileUtil { public static boolean copyMergeWithHeader(FileSystem srcFS, Path srcDir, FileSystem dstFS, Path dstFile, boolean deleteSource, Configuration conf, String header) throws IOException { dstFile = checkDest(srcDir.getName(), dstFS, dstFile, false); if(!srcFS.getFileStatus(srcDir).isDir()) { return false; } else { FSDataOutputStream out = dstFS.create(dstFile); if(header != null) { out.write((header + &amp;#34;\n&amp;#34;).getBytes(&amp;#34;UTF-8&amp;#34;)); } try { FileStatus[] contents = srcFS.listStatus(srcDir); for(int i = 0; i &amp;lt; contents.length; ++i) { if(!</description>
    </item>
    
    <item>
      <title>Spark: Write to CSV file</title>
      <link>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file/</link>
      <pubDate>Sun, 30 Nov 2014 07:40:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file/</guid>
      <description>import au.com.bytecode.opencsv.CSVParser import org.apache.spark.rdd.RDD import org.apache.spark.SparkContext._ def dropHeader(data: RDD[String]): RDD[String] = { data.mapPartitionsWithIndex((idx, lines) =&amp;gt; { if (idx == 0) { lines.drop(1) } lines }) } // https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-present/ijzp-q8t2 val crimeFile = &amp;#34;/Users/markneedham/Downloads/Crimes_-_2001_to_present.csv&amp;#34; val crimeData = sc.textFile(crimeFile).cache() val withoutHeader: RDD[String] = dropHeader(crimeData) val file = &amp;#34;/tmp/primaryTypes.csv&amp;#34; FileUtil.fullyDelete(new File(file)) val partitions: RDD[(String, Int)] = withoutHeader.mapPartitions(lines =&amp;gt; { val parser = new CSVParser(&amp;#39;,&amp;#39;) lines.map(line =&amp;gt; { val columns = parser.parseLine(line) (columns(5), 1) }) }) val counts = partitions.</description>
    </item>
    
    <item>
      <title>Docker/Neo4j: Port forwarding on Mac OS X not working</title>
      <link>https://markhneedham.com/blog/2014/11/27/dockerneo4j-port-forwarding-on-mac-os-x-not-working/</link>
      <pubDate>Thu, 27 Nov 2014 12:28:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/27/dockerneo4j-port-forwarding-on-mac-os-x-not-working/</guid>
      <description>$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c62f8601e557 tpires/neo4j:latest &amp;#34;/bin/bash -c /launc About an hour ago Up About an hour 0.0.0.0:49153-&amp;gt;1337/tcp, 0.0.0.0:49154-&amp;gt;7474/tcp neo4j $ curl -v http://localhost:49154 * Adding handle: conn: 0x7ff369803a00 * Adding handle: send: 0 * Adding handle: recv: 0 * Curl_addHandleToPipeline: length: 1 * - Conn 0 (0x7ff369803a00) send_pipe: 1, recv_pipe: 0 * About to connect() to localhost port 49154 (#0) * Trying ::1.</description>
    </item>
    
    <item>
      <title>R: dplyr - Select &#39;random&#39; rows from a data frame</title>
      <link>https://markhneedham.com/blog/2014/11/26/r-dplyr-select-random-rows-from-a-data-frame/</link>
      <pubDate>Wed, 26 Nov 2014 00:01:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/26/r-dplyr-select-random-rows-from-a-data-frame/</guid>
      <description>data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; randomRows = sample(1:length(data[,1]), 10, replace=T) &amp;gt; randomRows [1] 8723 18772 4964 36134 27467 31890 16313 12841 49214 15621 &amp;gt; data %&amp;gt;% slice(randomRows) letter number 1 Z 4 2 F 1 3 Y 6 4 R 6 5 Y 4 6 V 10 7 R 6 8 D 6 9 J 7 10 E 2 pickRandomRows = function(df, numberOfRows = 10) { df %&amp;gt;% slice(runif(numberOfRows,0, length(df[,1]))) } &amp;gt; data %&amp;gt;% pickRandomRows() letter number 1 W 5 2 Y 3 3 E 6 4 Q 8 5 M 9 6 H 9 7 E 10 8 T 2 9 I 5 10 V 4 &amp;gt; data %&amp;gt;% pickRandomRows(7) letter number 1 V 7 2 N 4 3 W 1 4 N 8 5 G 7 6 V 1 7 N 7 &amp;gt; data %&amp;gt;% sample_n(10) letter number 29771 U 1 48666 T 10 30635 A 1 34865 X 7 20140 A 3 41715 T 10 43786 E 10 18284 A 7 21406 S 8 35542 J 8 </description>
    </item>
    
    <item>
      <title>R: dplyr - &#34;Variables not shown&#34;</title>
      <link>https://markhneedham.com/blog/2014/11/23/r-dplyr-variables-not-shown/</link>
      <pubDate>Sun, 23 Nov 2014 01:02:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/23/r-dplyr-variables-not-shown/</guid>
      <description>words = function(numberOfWords, lengthOfWord) { w = c(1:numberOfWords) for(i in 1:numberOfWords) { w[i] = paste(sample(letters, lengthOfWord, replace=TRUE), collapse = &amp;#34;&amp;#34;) } w } numberOfRows = 100 df = data.frame(a = sample (1:numberOfRows, 10, replace = TRUE), b = sample (1:numberOfRows, 10, replace = TRUE), name = words(numberOfRows, 10)) &amp;gt; df %&amp;gt;% group_by(a,b) %&amp;gt;% summarise(n = n(), words = paste(name, collapse = &amp;#34;,&amp;#34;)) %&amp;gt;% arrange(desc(n)) %&amp;gt;% head(5) Source: local data frame [5 x 4] Groups: a a b n 1 19 90 10 2 24 36 10 3 29 20 10 4 29 80 10 5 62 54 10 Variables not shown: words (chr) &amp;gt; df %&amp;gt;% group_by(a,b) %&amp;gt;% summarise(n = n(), words = paste(name, collapse = &amp;#34;,&amp;#34;)) %&amp;gt;% arrange(desc(n)) %&amp;gt;% head(5) %&amp;gt;% print(width = Inf) &amp;gt; options(dplyr.</description>
    </item>
    
    <item>
      <title>R: ggmap - Overlay shapefile with filled polygon of regions</title>
      <link>https://markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/</link>
      <pubDate>Mon, 17 Nov 2014 00:53:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/</guid>
      <description>&amp;gt; library(ggmap) &amp;gt; sfMap = map = get_map(location = &amp;#39;San Francisco&amp;#39;, zoom = 12) &amp;gt; library(rgdal) &amp;gt; library(ggplot2) &amp;gt; sfn = readOGR(&amp;#34;.&amp;#34;,&amp;#34;sfzipcodes&amp;#34;) %&amp;gt;% spTransform(CRS(&amp;#34;+proj=longlat +datum=WGS84&amp;#34;)) &amp;gt; ggplot(data = sfn, aes(x = long, y = lat, group = group)) + geom_path() &amp;gt; class(sfn) [1] &amp;#34;SpatialPolygonsDataFrame&amp;#34; attr(,&amp;#34;package&amp;#34;) [1] &amp;#34;sp&amp;#34; &amp;gt; names(sfn) [1] &amp;#34;OBJECTID&amp;#34; &amp;#34;ZIP_CODE&amp;#34; &amp;#34;ID&amp;#34; &amp;gt; sfn.f = sfn %&amp;gt;% fortify(region = &amp;#39;ZIP_CODE&amp;#39;) SFNeighbourhoods = merge(sfn.f, sfn@data, by.x = &amp;#39;id&amp;#39;, by.y = &amp;#39;ZIP_CODE&amp;#39;) &amp;gt; library(dplyr) &amp;gt; postcodes = SFNeighbourhoods %&amp;gt;% select(id) %&amp;gt;% distinct() &amp;gt; values = data.</description>
    </item>
    
    <item>
      <title>Spark: Parse CSV file and group by column value</title>
      <link>https://markhneedham.com/blog/2014/11/16/spark-parse-csv-file-and-group-by-column-value/</link>
      <pubDate>Sun, 16 Nov 2014 22:53:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/16/spark-parse-csv-file-and-group-by-column-value/</guid>
      <description>$ ls -alh ~/Downloads/Crimes_-_2001_to_present.csv -rw-r--r--@ 1 markneedham staff 1.0G 16 Nov 12:14 /Users/markneedham/Downloads/Crimes_-_2001_to_present.csv $ wc -l ~/Downloads/Crimes_-_2001_to_present.csv 4193441 /Users/markneedham/Downloads/Crimes_-_2001_to_present.csv $ head -n 2 ~/Downloads/Crimes_-_2001_to_present.csv ID,Case Number,Date,Block,IUCR,Primary Type,Description,Location Description,Arrest,Domestic,Beat,District,Ward,Community Area,FBI Code,X Coordinate,Y Coordinate,Year,Updated On,Latitude,Longitude,Location 9464711,HX114160,01/14/2014 05:00:00 AM,028XX E 80TH ST,0560,ASSAULT,SIMPLE,APARTMENT,false,true,0422,004,7,46,08A,1196652,1852516,2014,01/20/2014 12:40:05 AM,41.75017626412204,-87.55494559131228,&amp;#34;(41.75017626412204, -87.55494559131228)&amp;#34; $ time tail +2 ~/Downloads/Crimes_-_2001_to_present.csv | cut -d, -f6 | sort | uniq -c | sort -rn 859197 THEFT 757530 BATTERY 489528 NARCOTICS 488209 CRIMINAL DAMAGE 257310 BURGLARY 253964 OTHER OFFENSE 247386 ASSAULT 197404 MOTOR VEHICLE THEFT 157706 ROBBERY 137538 DECEPTIVE PRACTICE 124974 CRIMINAL TRESPASS 47245 PROSTITUTION 40361 WEAPONS VIOLATION 31585 PUBLIC PEACE VIOLATION 26524 OFFENSE INVOLVING CHILDREN 14788 CRIM SEXUAL ASSAULT 14283 SEX OFFENSE 10632 GAMBLING 8847 LIQUOR LAW VIOLATION 6443 ARSON 5178 INTERFERE WITH PUBLIC OFFICER 4846 HOMICIDE 3585 KIDNAPPING 3147 INTERFERENCE WITH PUBLIC OFFICER 2471 INTIMIDATION 1985 STALKING 355 OFFENSES INVOLVING CHILDREN 219 OBSCENITY 86 PUBLIC INDECENCY 80 OTHER NARCOTIC VIOLATION 12 RITUALISM 12 NON-CRIMINAL 6 OTHER OFFENSE 2 NON-CRIMINAL (SUBJECT SPECIFIED) 2 NON - CRIMINAL real	2m37.</description>
    </item>
    
    <item>
      <title>R: dplyr - Sum for group_by multiple columns</title>
      <link>https://markhneedham.com/blog/2014/11/11/r-dplyr-sum-for-group_by-multiple-columns/</link>
      <pubDate>Tue, 11 Nov 2014 00:17:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/11/r-dplyr-sum-for-group_by-multiple-columns/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number) %&amp;gt;% head(20) Source: local data frame [20 x 3] Groups: letter letter number n 1 A 1 184 2 A 2 192 3 A 3 183 4 A 4 193 5 A 5 214 6 A 6 172 7 A 7 196 8 A 8 198 9 A 9 174 10 A 10 196 11 B 1 212 12 B 2 198 13 B 3 194 14 B 4 181 15 B 5 203 16 B 6 234 17 B 7 221 18 B 8 179 19 B 9 182 20 B 10 170 &amp;gt; data %&amp;gt;% count(letter) Source: local data frame [26 x 2] letter n 1 A 1902 2 B 1974 3 C 1911 4 D 1948 5 E 1888 6 F 1975 7 G 1914 8 H 1886 9 I 1910 10 J 1924 11 K 1974 12 L 1891 13 M 1894 14 N 1946 15 O 1956 16 P 1934 17 Q 1865 18 R 1992 19 S 1946 20 T 1854 21 U 1919 22 V 1913 23 W 1928 24 X 1934 25 Y 1908 26 Z 1914 &amp;gt; data %&amp;gt;% count(letter, number) %&amp;gt;% ungroup %&amp;gt;% group_by(letter) %&amp;gt;% mutate(sum.</description>
    </item>
    
    <item>
      <title>R: dplyr - Maximum value row in each group</title>
      <link>https://markhneedham.com/blog/2014/11/10/r-maximum-value-row-in-each-group/</link>
      <pubDate>Mon, 10 Nov 2014 22:06:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/10/r-maximum-value-row-in-each-group/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number) Source: local data frame [260 x 3] Groups: letter letter number n 1 A 1 184 2 A 2 192 3 A 3 183 4 A 4 193 5 A 5 214 6 A 6 172 7 A 7 196 8 A 8 198 9 A 9 174 10 A 10 196 .</description>
    </item>
    
    <item>
      <title>R: dplyr - Ordering by count after multiple column group_by</title>
      <link>https://markhneedham.com/blog/2014/11/09/r-dplyr-ordering-by-count-after-multiple-column-group_by/</link>
      <pubDate>Sun, 09 Nov 2014 09:30:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/09/r-dplyr-ordering-by-count-after-multiple-column-group_by/</guid>
      <description>library(dplyr) data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number, sort = TRUE) Source: local data frame [260 x 3] Groups: letter letter number n 1 A 4 205 2 A 9 201 3 A 3 197 4 A 1 195 5 A 10 191 6 A 2 189 7 A 8 184 8 A 7 183 9 A 5 181 10 A 6 173 .</description>
    </item>
    
    <item>
      <title>R: Refactoring to dplyr</title>
      <link>https://markhneedham.com/blog/2014/11/09/r-refactoring-to-dplyr/</link>
      <pubDate>Sun, 09 Nov 2014 00:11:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/09/r-refactoring-to-dplyr/</guid>
      <description>library(dplyr) data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data[1:5,] letter number 1 R 7 2 Q 3 3 B 8 4 R 3 5 U 2 &amp;gt; data %&amp;gt;% head(5) letter number 1 R 7 2 Q 3 3 B 8 4 R 3 5 U 2 &amp;gt; data[order(-(data$number)),][1:5,] letter number 14 H 10 17 G 10 63 L 10 66 W 10 73 R 10 &amp;gt; data %&amp;gt;% arrange(desc(number)) %&amp;gt;% head(5) letter number 1 H 10 2 G 10 3 L 10 4 W 10 5 R 10 &amp;gt; length(data[,1]) [1] 50000 &amp;gt; data %&amp;gt;% count() Source: local data frame [1 x 1] n 1 50000 &amp;gt; length(subset(data, number == 1)[, 1]) [1] 4928 &amp;gt; data %&amp;gt;% filter(number == 1) %&amp;gt;% count() Source: local data frame [1 x 1] n 1 4928 &amp;gt; aggregate(data, by= list(data$number), function(x) length(x)) Group.</description>
    </item>
    
    <item>
      <title>R: dplyr - Group by field dynamically (&#39;regroup&#39; is deprecated / no applicable method for &#39;as.lazy&#39; applied to an object of class &#34;list&#34; )</title>
      <link>https://markhneedham.com/blog/2014/11/08/r-dplyr-group-by-field-dynamically-regroup-is-deprecated-no-applicable-method-for-as-lazy-applied-to-an-object-of-class-list/</link>
      <pubDate>Sat, 08 Nov 2014 22:29:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/08/r-dplyr-group-by-field-dynamically-regroup-is-deprecated-no-applicable-method-for-as-lazy-applied-to-an-object-of-class-list/</guid>
      <description>library(dplyr) groupBy = function(df, field) { df %.% regroup(list(field)) %.% summarise(n = n()) } &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; groupBy(data, &amp;#39;letter&amp;#39;) %&amp;gt;% head(5) Source: local data frame [5 x 2] letter n 1 A 1951 2 B 1903 3 C 1954 4 D 1923 5 E 1886 Warning messages: 1: %.% is deprecated. Please use %&amp;gt;% 2: %.</description>
    </item>
    
    <item>
      <title>R: Joining multiple data frames</title>
      <link>https://markhneedham.com/blog/2014/11/07/r-joining-multiple-data-frames/</link>
      <pubDate>Fri, 07 Nov 2014 01:29:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/07/r-joining-multiple-data-frames/</guid>
      <description>df &amp;lt;- read.csv(&amp;#39;http://www.football-data.co.uk/mmz4281/1314/E0.csv&amp;#39;) # munge data into format compatible with glm function df &amp;lt;- apply(df, 1, function(row){ data.frame(team=c(row[&amp;#39;HomeTeam&amp;#39;], row[&amp;#39;AwayTeam&amp;#39;]), opponent=c(row[&amp;#39;AwayTeam&amp;#39;], row[&amp;#39;HomeTeam&amp;#39;]), goals=c(row[&amp;#39;FTHG&amp;#39;], row[&amp;#39;FTAG&amp;#39;]), home=c(1, 0)) }) df &amp;lt;- do.call(rbind, df) &amp;gt; library(dplyr) &amp;gt; df %&amp;gt;% select(HomeTeam, AwayTeam, FTHG, FTAG) %&amp;gt;% head(1) HomeTeam AwayTeam FTHG FTAG 1 Arsenal Aston Villa 1 3~~~ &amp;lt;p&amp;gt;And we want to get it to look like this:&amp;lt;/p&amp;gt; ~~~r &amp;gt; head(df, 2) team opponent goals home HomeTeam Arsenal Aston Villa 1 1 AwayTeam Aston Villa Arsenal 3 0 df %&amp;gt;% select(team = HomeTeam, opponent = AwayTeam, goals = FTHG) %&amp;gt;% mutate(home = 1) df %&amp;gt;% select(team = AwayTeam, opponent = HomeTeam, goals = FTAG) %&amp;gt;% mutate(home = 0) # load data into data.</description>
    </item>
    
    <item>
      <title>R: Converting a named vector to a data frame</title>
      <link>https://markhneedham.com/blog/2014/10/31/r-converting-a-named-vector-to-a-data-frame/</link>
      <pubDate>Fri, 31 Oct 2014 23:47:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/31/r-converting-a-named-vector-to-a-data-frame/</guid>
      <description>&amp;gt; library(dplyr) &amp;gt; data %&amp;gt;% arrange(desc(times)) %&amp;gt;% head(10) p.name other.name times 1 Amit Nandi Anish Mohammed 51 2 Amit Nandi Enzo Martoglio 49 3 louis zheng 46 4 louis Raja Kolli 45 5 Raja Kolli Enzo Martoglio 43 6 Amit Nandi Raja Kolli 42 7 zheng Anish Mohammed 42 8 Raja Kolli Rohit 41 9 Amit Nandi zheng 40 10 louis Rohit 40 &amp;gt; length(data[,1]) [1] 985664 g = graph.data.frame(data, directed = F) pr = page.</description>
    </item>
    
    <item>
      <title>hdiutil: could not access / create failed - Operation canceled</title>
      <link>https://markhneedham.com/blog/2014/10/31/hdiutil-could-not-access-create-failed-operation-canceled/</link>
      <pubDate>Fri, 31 Oct 2014 09:45:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/31/hdiutil-could-not-access-create-failed-operation-canceled/</guid>
      <description>$ hdiutil create -volname &amp;#34;DemoBench&amp;#34; -size 100m -srcfolder dmg/ -ov -format UDZO pack.temp.dmg ...could not access /Volumes/DemoBench/DemoBench.app/Contents/Resources/app/database-agent.jar - Operation canceled hdiutil: create failed - Operation canceled $ hdiutil create -volname &amp;#34;DemoBench&amp;#34; -size 150m -srcfolder dmg/ -ov -format UDZO pack.temp.dmg .................................................................................................... .......................................................................... created: /Users/markneedham/projects/neo-technology/quality-tasks/park-bench/database-agent-desktop/target/pack.temp.dmg </description>
    </item>
    
    <item>
      <title>Data Modelling: The Thin Model</title>
      <link>https://markhneedham.com/blog/2014/10/27/data-modelling-the-thin-model/</link>
      <pubDate>Mon, 27 Oct 2014 06:55:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/27/data-modelling-the-thin-model/</guid>
      <description>While this is syntactically okay, when we revisited those entities asking, What else is memorable here?the users had lots to say.
When there was flesh on the bones, the uncertainty abated and the session took a positive course.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Avoiding the Eager</title>
      <link>https://markhneedham.com/blog/2014/10/23/neo4j-cypher-avoiding-the-eager/</link>
      <pubDate>Thu, 23 Oct 2014 05:56:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/23/neo4j-cypher-avoiding-the-eager/</guid>
      <description>That was not related to commit sizes, so it happened even with PERIODIC COMMIT of small batches.
That is where the “pull in all data” happens.
$ head -n 2 data/customerDb.csv OrderID,CustomerID,EmployeeID,OrderDate,RequiredDate,ShippedDate,ShipVia,Freight,ShipName,ShipAddress,ShipCity,ShipRegion,ShipPostalCode,ShipCountry,CustomerID,CustomerCompanyName,ContactName,ContactTitle,Address,City,Region,PostalCode,Country,Phone,Fax,EmployeeID,LastName,FirstName,Title,TitleOfCourtesy,BirthDate,HireDate,Address,City,Region,PostalCode,Country,HomePhone,Extension,Photo,Notes,ReportsTo,PhotoPath,OrderID,ProductID,UnitPrice,Quantity,Discount,ProductID,ProductName,SupplierID,CategoryID,QuantityPerUnit,UnitPrice,UnitsInStock,UnitsOnOrder,ReorderLevel,Discontinued,SupplierID,SupplierCompanyName,ContactName,ContactTitle,Address,City,Region,PostalCode,Country,Phone,Fax,HomePage,CategoryID,CategoryName,Description,Picture 10248,VINET,5,1996-07-04,1996-08-01,1996-07-16,3,32.38,Vins et alcools Chevalier,59 rue de l&amp;#39;Abbaye,Reims,,51100,France,VINET,Vins et alcools Chevalier,Paul Henriot,Accounting Manager,59 rue de l&amp;#39;Abbaye,Reims,,51100,France,26.47.15.10,26.47.15.11,5,Buchanan,Steven,Sales Manager,Mr.,1955-03-04,1993-10-17,14 Garrett Hill,London,,SW1 8JR,UK,(71) 555-4848,3453,\x,&amp;#34;Steven Buchanan graduated from St. Andrews University, Scotland, with a BSC degree in 1976. Upon joining the company as a sales representative in 1992, he spent 6 months in an orientation program at the Seattle office and then returned to his permanent post in London.</description>
    </item>
    
    <item>
      <title>Neo4j: Modelling sub types</title>
      <link>https://markhneedham.com/blog/2014/10/20/neo4j-modelling-sub-types/</link>
      <pubDate>Mon, 20 Oct 2014 23:08:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/20/neo4j-modelling-sub-types/</guid>
      <description>LOAD CSV WITH HEADERS FROM &amp;quot;file:/Users/markneedham/projects/neo4j-subtypes/data/dogs.csv&amp;quot; AS line MERGE (animalType:AnimalType {name: &amp;quot;Dog&amp;quot;}) MERGE (breedGroup:BreedGroup {name: line.BreedGroup}) MERGE (breed:Breed {name: line.PrimaryBreed}) MERGE (animal:Animal {id: line.TagIdentity, primaryColour: line.PrimaryColour, size: line.Size}) MERGE (animalType)&amp;lt;-[:PARENT]-(breedGroup) MERGE (breedGroup)&amp;lt;-[:PARENT]-(breed) MERGE (breed)&amp;lt;-[:PARENT]-(animal) MATCH (animalType:AnimalType)&amp;lt;-[:PARENT*]-(animal) RETURN animalType, COUNT(*) AS animals ORDER BY animals DESC ==&amp;gt; +--------------------------------+ ==&amp;gt; | animalType | animals | ==&amp;gt; +--------------------------------+ ==&amp;gt; | Node[89]{name:&amp;#34;Dog&amp;#34;} | 131 | ==&amp;gt; +--------------------------------+ ==&amp;gt; 1 row MATCH path = (animalType:AnimalType)&amp;lt;-[:PARENT]-(breedGroup)&amp;lt;-[:PARENT*]-(animal) RETURN [node IN nodes(path) | node.</description>
    </item>
    
    <item>
      <title>Python: Converting a date string to timestamp</title>
      <link>https://markhneedham.com/blog/2014/10/20/python-converting-a-date-string-to-timestamp/</link>
      <pubDate>Mon, 20 Oct 2014 15:53:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/20/python-converting-a-date-string-to-timestamp/</guid>
      <description>date_text = &amp;#34;13SEP2014&amp;#34; import datetime date_text = &amp;#34;13SEP2014&amp;#34; date = datetime.datetime.strptime(date_text, &amp;#34;%d%b%Y&amp;#34;) print(date) $ python dates.py 2014-09-13 00:00:00 import datetime import calendar date_text = &amp;#34;13SEP2014&amp;#34; date = datetime.datetime.strptime(date_text, &amp;#34;%d%b%Y&amp;#34;) print(date) print(calendar.timegm(date.utctimetuple())) $ python dates.py 2014-09-13 00:00:00 1410566400 </description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - The sneaky null character</title>
      <link>https://markhneedham.com/blog/2014/10/18/neo4j-load-csv-the-sneaky-null-character/</link>
      <pubDate>Sat, 18 Oct 2014 10:49:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/18/neo4j-load-csv-the-sneaky-null-character/</guid>
      <description>$ cat foo.csv foo,bar,baz 1,2,3 load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/foo.csv&amp;quot; AS line RETURN line.foo, line.bar, line.bar = &amp;quot;2&amp;quot; ==&amp;gt; +--------------------------------------+ ==&amp;gt; | line.foo | line.bar | line.bar = &amp;#34;2&amp;#34; | ==&amp;gt; +--------------------------------------+ ==&amp;gt; | &amp;lt;null&amp;gt; | &amp;#34;2&amp;#34; | false | ==&amp;gt; +--------------------------------------+ ==&amp;gt; 1 row load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/foo.csv&amp;quot; AS line RETURN line.foo, line.bar, line.bar = &amp;quot;2&amp;quot;, length(line.bar) ==&amp;gt; +---------------------------------------------------------+ ==&amp;gt; | line.foo | line.bar | line.bar = &amp;#34;2&amp;#34; | length(line.</description>
    </item>
    
    <item>
      <title>R: Linear models with the lm function, NA values and Collinearity</title>
      <link>https://markhneedham.com/blog/2014/10/18/r-linear-models-with-the-lm-function-na-values-and-collinearity/</link>
      <pubDate>Sat, 18 Oct 2014 06:35:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/18/r-linear-models-with-the-lm-function-na-values-and-collinearity/</guid>
      <description>library(datasets); data(swiss); require(stats); require(graphics) z &amp;lt;- swiss$Agriculture + swiss$Education fit = lm(Fertility ~ . + z, data = swiss) &amp;gt; alias(fit) Model : Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality + z Complete : (Intercept) Agriculture Examination Education Catholic Infant.Mortality z 0 1 0 1 0 0 &amp;gt; require(dplyr) &amp;gt; summary(lm(Fertility ~ . + z, data = swiss))$coefficients Estimate Std. Error t value Pr(&amp;gt;|t|) (Intercept) 66.9151817 10.</description>
    </item>
    
    <item>
      <title>The Hard Thing About Hard Things - Ben Horowitz: Book Review</title>
      <link>https://markhneedham.com/blog/2014/10/13/the-hard-thing-about-hard-things-ben-horowitz-book-review/</link>
      <pubDate>Mon, 13 Oct 2014 23:59:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/13/the-hard-thing-about-hard-things-ben-horowitz-book-review/</guid>
      <description>Horowitz suggests that he used to be too positive and would shield bad news from his employees as he thought he&amp;rsquo;d make the problem worse by transferring the burden onto them.
He came to the realisation that this was counter productive since he often wasn&amp;rsquo;t the best placed person to fix a problem e.g. if it was a problem with the product then the engineering team needed to know so they could write the code to fix it.</description>
    </item>
    
    <item>
      <title>Lessons from running Neo4j based &#39;hackathons&#39;</title>
      <link>https://markhneedham.com/blog/2014/10/11/lessons-from-running-neo4j-based-hackathons/</link>
      <pubDate>Sat, 11 Oct 2014 10:52:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/11/lessons-from-running-neo4j-based-hackathons/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Conceptual Model vs Graph Model</title>
      <link>https://markhneedham.com/blog/2014/10/06/conceptual-model-vs-graph-model/</link>
      <pubDate>Mon, 06 Oct 2014 07:11:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/06/conceptual-model-vs-graph-model/</guid>
      <description>CREATE (ian:Person {name: &amp;quot;Ian&amp;quot;}) CREATE (alan:Person {name: &amp;quot;Alan&amp;quot;}) CREATE (gg:Person:Author {name: &amp;quot;Graham Greene&amp;quot;}) CREATE (jlc:Person:Author {name: &amp;quot;John Le Carre&amp;quot;}) CREATE (omih:Book {name: &amp;quot;Our Man in Havana&amp;quot;}) CREATE (ttsp:Book {name: &amp;quot;Tinker Tailor, Soldier, Spy&amp;quot;}) CREATE (gg)-[:WROTE]-&amp;gt;(omih) CREATE (jlc)-[:WROTE]-&amp;gt;(ttsp) CREATE (ian)-[:PURCHASED {date: &amp;quot;05-02-2011&amp;quot;}]-&amp;gt;(ttsp) CREATE (ian)-[:PURCHASED {date: &amp;quot;08-09-2011&amp;quot;}]-&amp;gt;(omih) CREATE (alan)-[:PURCHASED {date: &amp;quot;05-07-2014&amp;quot;}]-&amp;gt;(ttsp) </description>
    </item>
    
    <item>
      <title>R: A first attempt at linear regression</title>
      <link>https://markhneedham.com/blog/2014/09/30/r-a-first-attempt-at-linear-regression/</link>
      <pubDate>Tue, 30 Sep 2014 22:20:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/30/r-a-first-attempt-at-linear-regression/</guid>
      <description>library(RNeo4j) officeEventsQuery = &amp;#34;MATCH (g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;})-[:HOSTED_EVENT]-&amp;gt;(event)&amp;lt;-[:TO]-({response: &amp;#39;yes&amp;#39;})&amp;lt;-[:RSVPD]-(), (event)-[:HELD_AT]-&amp;gt;(venue) WHERE (event.time + event.utc_offset) &amp;lt; timestamp() AND venue.name IN [\&amp;#34;Neo Technology\&amp;#34;, \&amp;#34;OpenCredo\&amp;#34;] RETURN event.time + event.utc_offset AS eventTime,event.announced_at AS announcedAt, event.name, COUNT(*) AS rsvps&amp;#34; events = subset(cypher(graph, officeEventsQuery), !is.na(announcedAt)) events$eventTime &amp;lt;- timestampToDate(events$eventTime) events$day &amp;lt;- format(events$eventTime, &amp;#34;%A&amp;#34;) events$monthYear &amp;lt;- format(events$eventTime, &amp;#34;%m-%Y&amp;#34;) events$month &amp;lt;- format(events$eventTime, &amp;#34;%m&amp;#34;) events$year &amp;lt;- format(events$eventTime, &amp;#34;%Y&amp;#34;) events$announcedAt&amp;lt;- timestampToDate(events$announcedAt) events$timeDiff = as.numeric(events$eventTime - events$announcedAt, units = &amp;#34;days&amp;#34;) &amp;gt; head(events) eventTime announcedAt event.</description>
    </item>
    
    <item>
      <title>Neo4j: Generic/Vague relationship names</title>
      <link>https://markhneedham.com/blog/2014/09/30/neo4j-genericvague-relationship-names/</link>
      <pubDate>Tue, 30 Sep 2014 16:47:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/30/neo4j-genericvague-relationship-names/</guid>
      <description>Using a generic relationship type and then filtering by end node label 50%ile: 6.0 75%ile: 6.0 99%ile: 402.60999999999825 Using a generic relationship type and then filtering by relationship property 50%ile: 21.0 75%ile: 22.0 99%ile: 504.85999999999785 Using a generic relationship type and then filtering by end node label 50%ile: 4.0 75%ile: 4.0 99%ile: 145.65999999999931 Using a specific relationship type 50%ile: 0.0 75%ile: 1.0 99%ile: 25.749999999999872 Using a specific relationship typeneo4j-sh (?)$ profile match (n) where id(n) = 0 match (n)-[:HAS_ADDRESS]-&amp;gt;() return count(n); +----------+ | count(n) | +----------+ | 10000 | +----------+ 1 row ColumnFilter | +EagerAggregation | +SimplePatternMatcher | +NodeByIdOrEmpty +----------------------+-------+--------+-----------------------------+-----------------------+ | Operator | Rows | DbHits | Identifiers | Other | +----------------------+-------+--------+-----------------------------+-----------------------+ | ColumnFilter | 1 | 0 | | keep columns count(n) | | EagerAggregation | 1 | 0 | | | | SimplePatternMatcher | 10000 | 10000 | n, UNNAMED53, UNNAMED35 | | | NodeByIdOrEmpty | 1 | 1 | n, n | { AUTOINT0} | +----------------------+-------+--------+-----------------------------+-----------------------+ Total database accesses: 10001 Using a generic relationship type and then filtering by end node labelneo4j-sh (?</description>
    </item>
    
    <item>
      <title>PostgreSQL: ERROR:  column does not exist</title>
      <link>https://markhneedham.com/blog/2014/09/29/postgresql-error-column-does-not-exist/</link>
      <pubDate>Mon, 29 Sep 2014 22:40:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/postgresql-error-column-does-not-exist/</guid>
      <description>postgres=# select * from employees limit 1; EmployeeID | LastName | FirstName | Title | TitleOfCourtesy | BirthDate | HireDate | Address | City | Region | PostalCode | Country | HomePhone | Extension | Photo | Notes | ReportsTo | PhotoPath ------------+----------+-----------+----------------------+-----------------+------------+------------+-----------------------------+---------+--------+------------+---------+----------------+-----------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+--------------------------------------  1 | Davolio | Nancy | Sales Representative | Ms. | 1948-12-08 | 1992-05-01 | 507 - 20th Ave. E.\nApt. 2A | Seattle | WA | 98122 | USA | (206) 555-9857 | 5467 | \x | Education includes a BA in psychology from Colorado State University in 1970.</description>
    </item>
    
    <item>
      <title>R: Deriving a new data frame column based on containing string</title>
      <link>https://markhneedham.com/blog/2014/09/29/r-deriving-a-new-data-frame-column-based-on-containing-string/</link>
      <pubDate>Mon, 29 Sep 2014 21:37:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/r-deriving-a-new-data-frame-column-based-on-containing-string/</guid>
      <description>&amp;gt; x = data.frame(name = c(&amp;#34;Java Hackathon&amp;#34;, &amp;#34;Intro to Graphs&amp;#34;, &amp;#34;Hands on Cypher&amp;#34;)) &amp;gt; x name 1 Java Hackathon 2 Intro to Graphs 3 Hands on Cypher &amp;gt; grepl(&amp;#34;Hackathon|Hands on|Hands On&amp;#34;, x$name) [1] TRUE FALSE TRUE x$practical = grepl(&amp;#34;Hackathon|Hands on|Hands On&amp;#34;, x$name) &amp;gt; x name practical 1 Java Hackathon TRUE 2 Intro to Graphs FALSE 3 Hands on Cypher TRUE </description>
    </item>
    
    <item>
      <title>R: Filtering data frames by column type (&#39;x&#39; must be numeric)</title>
      <link>https://markhneedham.com/blog/2014/09/29/r-filtering-data-frames-by-column-type-x-must-be-numeric/</link>
      <pubDate>Mon, 29 Sep 2014 05:46:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/r-filtering-data-frames-by-column-type-x-must-be-numeric/</guid>
      <description>&amp;gt; install.packages(&amp;#34;ISLR&amp;#34;) &amp;gt; library(ISLR) &amp;gt; head(Carseats) Sales CompPrice Income Advertising Population Price ShelveLoc Age Education Urban US 1 9.50 138 73 11 276 120 Bad 42 17 Yes Yes 2 11.22 111 48 16 260 83 Good 65 10 Yes Yes 3 10.06 113 35 10 269 80 Medium 59 12 Yes Yes 4 7.40 117 100 4 466 97 Medium 55 14 Yes Yes 5 4.15 141 64 3 340 128 Bad 38 13 Yes No 6 10.</description>
    </item>
    
    <item>
      <title>Neo4j: COLLECTing multiple values (Too many parameters for function &#39;collect&#39;)</title>
      <link>https://markhneedham.com/blog/2014/09/26/neo4j-collecting-multiple-values-too-many-parameters-for-function-collect/</link>
      <pubDate>Fri, 26 Sep 2014 20:46:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/26/neo4j-collecting-multiple-values-too-many-parameters-for-function-collect/</guid>
      <description>create (p:Person {name: &amp;quot;Mark&amp;quot;}) create (e1:Event {name: &amp;quot;Event1&amp;quot;, timestamp: 1234}) create (e2:Event {name: &amp;quot;Event2&amp;quot;, timestamp: 4567}) create (p)-[:EVENT]-&amp;gt;(e1) create (p)-[:EVENT]-&amp;gt;(e2) $ MATCH (p:Person)-[:EVENT]-&amp;gt;(e) &amp;gt; RETURN p, COLLECT(e.name); +--------------------------------------------+ | p | COLLECT(e.name) | +--------------------------------------------+ | Node[0]{name:&amp;quot;Mark&amp;quot;} | [&amp;quot;Event1&amp;quot;,&amp;quot;Event2&amp;quot;] | +--------------------------------------------+ 1 row MATCH (p:Person)-[:EVENT]-&amp;gt;(e) RETURN p, COLLECT(e.name, e.timestamp) SyntaxException: Too many parameters for function &amp;#39;collect&amp;#39; (line 2, column 11) &amp;#34;RETURN p, COLLECT(e.name, e.timestamp)&amp;#34; ^ $ MATCH (p:Person)-[:EVENT]-&amp;gt;(e) &amp;gt; RETURN p, COLLECT([e.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Column is null</title>
      <link>https://markhneedham.com/blog/2014/09/24/neo4j-load-csv-column-is-null/</link>
      <pubDate>Wed, 24 Sep 2014 20:21:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/24/neo4j-load-csv-column-is-null/</guid>
      <description>$ cat ~/Downloads/dodgy.csv userId,movieId 1,2 $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.csv&amp;quot; as line return line; +----------------------------------+ | line | +----------------------------------+ | {userId -&amp;gt; &amp;quot;1&amp;quot;, movieId -&amp;gt; &amp;quot;2&amp;quot;} | +----------------------------------+ 1 row $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.csv&amp;quot; as line return line.userId; +-------------+ | line.userId | +-------------+ | &amp;lt;null&amp;gt; | +-------------+ 1 row $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.csv&amp;quot; as line return line.movieId; +--------------+ | line.movieId | +--------------+ | &amp;quot;2&amp;quot; | +--------------+ 1 row $ load csv with headers from &amp;quot;file:/Users/markneedham/Downloads/dodgy.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting multiple variables on a line chart</title>
      <link>https://markhneedham.com/blog/2014/09/16/r-ggplot-plotting-multiple-variables-on-a-line-chart/</link>
      <pubDate>Tue, 16 Sep 2014 16:59:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/16/r-ggplot-plotting-multiple-variables-on-a-line-chart/</guid>
      <description>&amp;gt; head(byWeek) Source: local data frame [6 x 2] week n 1 2011-06-02 8 2 2011-06-09 4 3 2011-06-30 2 4 2011-07-14 1 5 2011-07-21 1 6 2011-08-18 1 library(zoo) joinsByWeek = data.frame(actual = byWeek$n, week = byWeek$week, rolling = rollmean(byWeek$n, 4, fill = NA, align=c(&amp;#34;right&amp;#34;))) &amp;gt; head(joinsByWeek, 10) actual week rolling 1 8 2011-06-02 NA 2 4 2011-06-09 NA 3 2 2011-06-30 NA 4 1 2011-07-14 3.75 5 1 2011-07-21 2.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting a single variable line chart (geom_line requires the following missing aesthetics: y)</title>
      <link>https://markhneedham.com/blog/2014/09/13/r-ggplot-plotting-a-single-variable-line-chart-geom_line-requires-the-following-missing-aesthetics-y/</link>
      <pubDate>Sat, 13 Sep 2014 11:41:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/13/r-ggplot-plotting-a-single-variable-line-chart-geom_line-requires-the-following-missing-aesthetics-y/</guid>
      <description>&amp;gt; rollmean(byWeek$n, 4) [1] 3.75 2.00 1.25 1.00 1.25 1.25 1.75 1.75 1.75 2.50 2.25 2.75 3.50 2.75 2.75 [16] 2.25 1.50 1.50 2.00 2.00 2.00 2.00 1.25 1.50 2.25 2.50 3.00 3.25 2.75 4.00 [31] 4.25 5.25 7.50 6.50 5.75 5.00 3.50 4.00 5.75 6.25 6.25 6.00 5.25 6.25 7.25 [46] 7.75 7.00 4.75 2.75 1.75 2.00 4.00 5.25 5.50 11.50 11.50 12.75 14.50 12.50 11.75 [61] 11.00 9.25 5.</description>
    </item>
    
    <item>
      <title>R: Calculating rolling or moving averages</title>
      <link>https://markhneedham.com/blog/2014/09/13/r-calculating-rolling-or-moving-averages/</link>
      <pubDate>Sat, 13 Sep 2014 08:15:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/13/r-calculating-rolling-or-moving-averages/</guid>
      <description>mav &amp;lt;- function(x,n=5){filter(x,rep(1/n,n), sides=2)} &amp;gt; mav(c(4,5,4,6), 3) Time Series: Start = 1 End = 4 Frequency = 1 [1] NA 4.333333 5.000000 NA sides	for convolution filters only. If sides = 1 the filter coefficients are for past values only; if sides = 2 they are centred around lag 0. In this case the length of the filter should be odd, but if it is even, more of the filter is forward in time than backward.</description>
    </item>
    
    <item>
      <title>R: ggplot - Cumulative frequency graphs</title>
      <link>https://markhneedham.com/blog/2014/08/31/r-ggplot-cumulative-frequency-graphs/</link>
      <pubDate>Sun, 31 Aug 2014 22:10:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/31/r-ggplot-cumulative-frequency-graphs/</guid>
      <description>&amp;gt; head(meetupMembers) joinTimestamp joinDate monthYear quarterYear week dayMonthYear 1 1.376572e+12 2013-08-15 13:13:40 2013-08-01 2013-07-01 2013-08-15 2013-08-15 2 1.379491e+12 2013-09-18 07:55:11 2013-09-01 2013-07-01 2013-09-12 2013-09-18 3 1.349454e+12 2012-10-05 16:28:04 2012-10-01 2012-10-01 2012-10-04 2012-10-05 4 1.383127e+12 2013-10-30 09:59:03 2013-10-01 2013-10-01 2013-10-24 2013-10-30 5 1.372239e+12 2013-06-26 09:27:40 2013-06-01 2013-04-01 2013-06-20 2013-06-26 6 1.330295e+12 2012-02-26 22:27:00 2012-02-01 2012-01-01 2012-02-23 2012-02-26 library(dplyr) &amp;gt; head(meetupMembers %.% group_by(dayMonthYear) %.% summarise(n = n())) Source: local data frame [6 x 2] dayMonthYear n 1 2011-06-05 7 2 2011-06-07 1 3 2011-06-10 1 4 2011-06-12 1 5 2011-06-13 1 6 2011-06-15 1 ggplot(data = meetupMembers %.</description>
    </item>
    
    <item>
      <title>R: dplyr - group_by dynamic or programmatic field / variable (Error: index out of bounds)</title>
      <link>https://markhneedham.com/blog/2014/08/29/r-dplyr-group_by-dynamic-or-programmatic-field-variable-error-index-out-of-bounds/</link>
      <pubDate>Fri, 29 Aug 2014 09:13:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/29/r-dplyr-group_by-dynamic-or-programmatic-field-variable-error-index-out-of-bounds/</guid>
      <description>library(RNeo4j) library(zoo) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;, tz = &amp;#34;GMT&amp;#34;) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinTimestamp&amp;#34; meetupMembers = cypher(graph, query) meetupMembers$joinDate &amp;lt;- timestampToDate(meetupMembers$joinTimestamp) meetupMembers$monthYear &amp;lt;- as.Date(as.yearmon(meetupMembers$joinDate)) meetupMembers$quarterYear &amp;lt;- as.Date(as.yearqtr(meetupMembers$joinDate)) meetupMembers %.% group_by(week) %.% summarise(n = n()) meetupMembers %.% group_by(monthYear) %.% summarise(n = n()) meetupMembers %.% group_by(quarterYear) %.% summarise(n = n()) groupMembersBy = function(field) { meetupMembers %.% group_by(field) %.% summarise(n = n()) } &amp;gt; groupMembersBy(&amp;#34;week&amp;#34;) Show Traceback Rerun with Debug Error: index out of bounds groupMembersBy = function(field) { meetupMembers %.</description>
    </item>
    
    <item>
      <title>R: Grouping by week, month, quarter</title>
      <link>https://markhneedham.com/blog/2014/08/29/r-grouping-by-week-month-quarter/</link>
      <pubDate>Fri, 29 Aug 2014 00:25:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/29/r-grouping-by-week-month-quarter/</guid>
      <description>library(RNeo4j) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinTimestamp&amp;#34; meetupMembers = cypher(graph, query) &amp;gt; head(meetupMembers) joinTimestamp 1 1.376572e+12 2 1.379491e+12 3 1.349454e+12 4 1.383127e+12 5 1.372239e+12 6 1.330295e+12 timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;, tz = &amp;#34;GMT&amp;#34;) meetupMembers$joinDate &amp;lt;- timestampToDate(meetupMembers$joinTimestamp) &amp;gt; head(meetupMembers) joinTimestamp joinDate 1 1.376572e+12 2013-08-15 13:13:40 2 1.379491e+12 2013-09-18 07:55:11 3 1.349454e+12 2012-10-05 16:28:04 4 1.383127e+12 2013-10-30 09:59:03 5 1.372239e+12 2013-06-26 09:27:40 6 1.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Handling empty columns</title>
      <link>https://markhneedham.com/blog/2014/08/22/neo4j-load-csv-handling-empty-columns/</link>
      <pubDate>Fri, 22 Aug 2014 12:51:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/22/neo4j-load-csv-handling-empty-columns/</guid>
      <description>$ cat /tmp/foo.csv a,b,c mark,, load csv with headers from &amp;quot;file:/tmp/foo.csv&amp;quot; as row MERGE (p:Person {a: row.a}) SET p.b = row.b, p.c = row.c RETURN p ==&amp;gt; +-----------------------------+ ==&amp;gt; | p | ==&amp;gt; +-----------------------------+ ==&amp;gt; | Node[5]{a:&amp;quot;mark&amp;quot;,b:&amp;quot;&amp;quot;,c:&amp;quot;&amp;quot;} | ==&amp;gt; +-----------------------------+ ==&amp;gt; 1 row ==&amp;gt; Nodes created: 1 ==&amp;gt; Properties set: 3 ==&amp;gt; Labels added: 1 ==&amp;gt; 26 ms load csv with headers from &amp;quot;file:/tmp/foo.csv&amp;quot; as row MERGE (p:Person {a: row.a}) FOREACH(ignoreMe IN CASE WHEN trim(row.</description>
    </item>
    
    <item>
      <title>R: Rook - Hello world example - &#39;Cannot find a suitable app in file&#39;</title>
      <link>https://markhneedham.com/blog/2014/08/22/r-rook-hello-world-example-cannot-find-a-suitable-app-in-file/</link>
      <pubDate>Fri, 22 Aug 2014 11:05:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/22/r-rook-hello-world-example-cannot-find-a-suitable-app-in-file/</guid>
      <description>library(Rook) s &amp;lt;- Rhttpd$new() s$add(name=&amp;#39;MyApp&amp;#39;,app=&amp;#39;helloworld.R&amp;#39;) s$start() s$browse(&amp;#34;MyApp&amp;#34;) function(env){ list( status=200, headers = list( &amp;#39;Content-Type&amp;#39; = &amp;#39;text/html&amp;#39; ), body = paste(&amp;#39;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&amp;#39;) ) } &amp;gt; s$add(name=&amp;#39;MyApp&amp;#39;,app=&amp;#39;helloworld.R&amp;#39;) Error in .Object$initialize(...) : Cannot find a suitable app in file helloworld.R app &amp;lt;- function(env){ list( status=200, headers = list( &amp;#39;Content-Type&amp;#39; = &amp;#39;text/html&amp;#39; ), body = paste(&amp;#39;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&amp;#39;) ) } &amp;gt; s Server started on 127.0.0.1:27120 [1] MyApp http://127.0.0.1:27120/custom/MyApp Call browse() with an index number or name to run an application.</description>
    </item>
    
    <item>
      <title>Ruby: Create and share Google Drive Spreadsheet</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-create-and-share-google-drive-spreadsheet/</link>
      <pubDate>Sun, 17 Aug 2014 21:42:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-create-and-share-google-drive-spreadsheet/</guid>
      <description>require &amp;#39;sinatra&amp;#39; require &amp;#39;json&amp;#39; require &amp;#34;google_drive&amp;#34; require &amp;#39;google/api_client&amp;#39; CLIENT_ID = &amp;#39;my client id&amp;#39; CLIENT_SECRET = &amp;#39;my client secret&amp;#39; OAUTH_SCOPE = &amp;#39;https://www.googleapis.com/auth/drive https://docs.google.com/feeds/ https://docs.googleusercontent.com/ https://spreadsheets.google.com/feeds/&amp;#39; REDIRECT_URI = &amp;#39;http://localhost:9393/oauth2callback&amp;#39; helpers do def partial (template, locals = {}) haml(template, :layout =&amp;gt; false, :locals =&amp;gt; locals) end end enable :sessions get &amp;#39;/&amp;#39; do haml :index end configure do google_client = Google::APIClient.new google_client.authorization.client_id = CLIENT_ID google_client.authorization.client_secret = CLIENT_SECRET google_client.authorization.scope = OAUTH_SCOPE google_client.authorization.redirect_uri = REDIRECT_URI set :google_client, google_client set :google_client_driver, google_client.</description>
    </item>
    
    <item>
      <title>Ruby: Receive JSON in request body</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-receive-json-in-request-body/</link>
      <pubDate>Sun, 17 Aug 2014 12:21:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-receive-json-in-request-body/</guid>
      <description>require &amp;#39;sinatra&amp;#39; require &amp;#39;json&amp;#39; post &amp;#39;/somewhere/&amp;#39; do request.body.rewind request_payload = JSON.parse request.body.read p request_payload &amp;#34;win&amp;#34; end dummy.json{&amp;#34;i&amp;#34;: &amp;#34;am json&amp;#34;} $ curl -H &amp;#34;Content-Type: application/json&amp;#34; -XPOST http://localhost:9393/somewhere/ -d @dummy.json {&amp;#34;i&amp;#34;=&amp;gt;&amp;#34;am json&amp;#34;} </description>
    </item>
    
    <item>
      <title>Ruby: Google Drive - Error=BadAuthentication (GoogleDrive::AuthenticationError) Info=InvalidSecondFactor</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/</link>
      <pubDate>Sun, 17 Aug 2014 01:49:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/</guid>
      <description>require &amp;#34;rubygems&amp;#34; require &amp;#34;google_drive&amp;#34; session = GoogleDrive.login(&amp;#34;me@mydomain.com&amp;#34;, &amp;#34;mypassword&amp;#34;) /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive/session.rb:93:in `rescue in login&amp;#39;: Authentication failed for me@mydomain.com: Response code 403 for post https://www.google.com/accounts/ClientLogin: Error=BadAuthentication (GoogleDrive::AuthenticationError) Info=InvalidSecondFactor from /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive/session.rb:86:in `login&amp;#39; from /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive/session.rb:38:in `login&amp;#39; from /Users/markneedham/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/google_drive-0.3.10/lib/google_drive.rb:18:in `login&amp;#39; from src/gdoc.rb:15:in `&amp;lt;main&amp;gt;&amp;#39; require &amp;#34;rubygems&amp;#34; require &amp;#34;google_drive&amp;#34; session = GoogleDrive.login(&amp;#34;me@mydomain.com&amp;#34;, &amp;#34;tuceuttkvxbvrblf&amp;#34;) </description>
    </item>
    
    <item>
      <title>Where does r studio install packages/libraries?</title>
      <link>https://markhneedham.com/blog/2014/08/14/where-does-r-studio-install-packageslibraries/</link>
      <pubDate>Thu, 14 Aug 2014 10:24:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/14/where-does-r-studio-install-packageslibraries/</guid>
      <description>&amp;gt; .libPaths() [1] &amp;#34;/Library/Frameworks/R.framework/Versions/3.1/Resources/library&amp;#34; &amp;gt; list.files(&amp;#34;/Library/Frameworks/R.framework/Versions/3.1/Resources/library&amp;#34;) [1] &amp;#34;alr3&amp;#34; &amp;#34;assertthat&amp;#34; &amp;#34;base&amp;#34; &amp;#34;bitops&amp;#34; &amp;#34;boot&amp;#34; &amp;#34;brew&amp;#34; [7] &amp;#34;car&amp;#34; &amp;#34;class&amp;#34; &amp;#34;cluster&amp;#34; &amp;#34;codetools&amp;#34; &amp;#34;colorspace&amp;#34; &amp;#34;compiler&amp;#34; [13] &amp;#34;data.table&amp;#34; &amp;#34;datasets&amp;#34; &amp;#34;devtools&amp;#34; &amp;#34;dichromat&amp;#34; &amp;#34;digest&amp;#34; &amp;#34;dplyr&amp;#34; [19] &amp;#34;evaluate&amp;#34; &amp;#34;foreign&amp;#34; &amp;#34;formatR&amp;#34; &amp;#34;Formula&amp;#34; &amp;#34;gclus&amp;#34; &amp;#34;ggplot2&amp;#34; [25] &amp;#34;graphics&amp;#34; &amp;#34;grDevices&amp;#34; &amp;#34;grid&amp;#34; &amp;#34;gridExtra&amp;#34; &amp;#34;gtable&amp;#34; &amp;#34;hflights&amp;#34; [31] &amp;#34;highr&amp;#34; &amp;#34;Hmisc&amp;#34; &amp;#34;httr&amp;#34; &amp;#34;KernSmooth&amp;#34; &amp;#34;knitr&amp;#34; &amp;#34;labeling&amp;#34; [37] &amp;#34;Lahman&amp;#34; &amp;#34;lattice&amp;#34; &amp;#34;latticeExtra&amp;#34; &amp;#34;magrittr&amp;#34; &amp;#34;manipulate&amp;#34; &amp;#34;markdown&amp;#34; [43] &amp;#34;MASS&amp;#34; &amp;#34;Matrix&amp;#34; &amp;#34;memoise&amp;#34; &amp;#34;methods&amp;#34; &amp;#34;mgcv&amp;#34; &amp;#34;mime&amp;#34; [49] &amp;#34;munsell&amp;#34; &amp;#34;nlme&amp;#34; &amp;#34;nnet&amp;#34; &amp;#34;openintro&amp;#34; &amp;#34;parallel&amp;#34; &amp;#34;plotrix&amp;#34; [55] &amp;#34;plyr&amp;#34; &amp;#34;proto&amp;#34; &amp;#34;RColorBrewer&amp;#34; &amp;#34;Rcpp&amp;#34; &amp;#34;RCurl&amp;#34; &amp;#34;reshape2&amp;#34; [61] &amp;#34;RJSONIO&amp;#34; &amp;#34;RNeo4j&amp;#34; &amp;#34;Rook&amp;#34; &amp;#34;rpart&amp;#34; &amp;#34;rstudio&amp;#34; &amp;#34;scales&amp;#34; [67] &amp;#34;seriation&amp;#34; &amp;#34;spatial&amp;#34; &amp;#34;splines&amp;#34; &amp;#34;stats&amp;#34; &amp;#34;stats4&amp;#34; &amp;#34;stringr&amp;#34; [73] &amp;#34;survival&amp;#34; &amp;#34;swirl&amp;#34; &amp;#34;tcltk&amp;#34; &amp;#34;testthat&amp;#34; &amp;#34;tools&amp;#34; &amp;#34;translations&amp;#34; [79] &amp;#34;TSP&amp;#34; &amp;#34;utils&amp;#34; &amp;#34;whisker&amp;#34; &amp;#34;xts&amp;#34; &amp;#34;yaml&amp;#34; &amp;#34;zoo&amp;#34; $ cat /Library/Frameworks/R.</description>
    </item>
    
    <item>
      <title>R: Grouping by two variables</title>
      <link>https://markhneedham.com/blog/2014/08/11/r-grouping-by-two-variables/</link>
      <pubDate>Mon, 11 Aug 2014 16:47:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/11/r-grouping-by-two-variables/</guid>
      <description>&amp;gt; head(eventsOf2014, 20) eventTime event.name rsvps datetime day monthYear 16 1.393351e+12 Intro to Graphs 38 2014-02-25 18:00:00 Tuesday 02-2014 17 1.403635e+12 Intro to Graphs 44 2014-06-24 18:30:00 Tuesday 06-2014 19 1.404844e+12 Intro to Graphs 38 2014-07-08 18:30:00 Tuesday 07-2014 28 1.398796e+12 Intro to Graphs 45 2014-04-29 18:30:00 Tuesday 04-2014 31 1.395772e+12 Intro to Graphs 56 2014-03-25 18:30:00 Tuesday 03-2014 41 1.406054e+12 Intro to Graphs 12 2014-07-22 18:30:00 Tuesday 07-2014 49 1.</description>
    </item>
    
    <item>
      <title>4 types of user</title>
      <link>https://markhneedham.com/blog/2014/07/29/4-types-of-user/</link>
      <pubDate>Tue, 29 Jul 2014 19:07:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/29/4-types-of-user/</guid>
      <description></description>
    </item>
    
    <item>
      <title>R: ggplot  - Plotting back to back charts using facet_wrap</title>
      <link>https://markhneedham.com/blog/2014/07/25/r-ggplot-plotting-back-to-back-charts-using-facet_wrap/</link>
      <pubDate>Fri, 25 Jul 2014 21:57:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/25/r-ggplot-plotting-back-to-back-charts-using-facet_wrap/</guid>
      <description>timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;quot;1970-01-01&amp;quot;, tz = &amp;quot;GMT&amp;quot;) query = &amp;quot;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &#39;yes&#39;}) WITH e, COLLECT(response) AS yeses MATCH (e)&amp;lt;-[:TO]-(response {response: &#39;no&#39;})&amp;lt;-[:NEXT]-() WITH e, COLLECT(response) + yeses AS responses UNWIND responses AS response RETURN response.time AS time, e.time + e.utc_offset AS eventTime, response.response AS response&amp;quot; allRSVPs = cypher(graph, query) allRSVPs$time = timestampToDate(allRSVPs$time) allRSVPs$eventTime = timestampToDate(allRSVPs$eventTime) allRSVPs$difference = as.numeric(allRSVPs$eventTime - allRSVPs$time, units=&amp;quot;days&amp;quot;) &amp;gt; allRSVPs[1:10,] time eventTime response difference 1 2014-06-13 21:49:20 2014-07-22 18:30:00 no 38.</description>
    </item>
    
    <item>
      <title>Java: Determining the status of data import using kill signals</title>
      <link>https://markhneedham.com/blog/2014/07/23/java-determining-the-status-of-data-import-using-kill-signals/</link>
      <pubDate>Wed, 23 Jul 2014 22:20:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/23/java-determining-the-status-of-data-import-using-kill-signals/</guid>
      <description>class Kill3Handler implements SignalHandler { private AtomicInteger linesProcessed; private AtomicReference&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; lastRowProcessed; public Kill3Handler( AtomicInteger linesProcessed, AtomicReference&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; lastRowProcessed ) { this.linesProcessed = linesProcessed; this.lastRowProcessed = lastRowProcessed; } @Override public void handle( Signal signal ) { System.out.println(&amp;#34;Last Line Processed: &amp;#34; + linesProcessed.get() + &amp;#34; &amp;#34; + lastRowProcessed.get()); } } AtomicInteger linesProcessed = new AtomicInteger( 0 ); AtomicReference&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; lastRowProcessed = new AtomicReference&amp;lt;&amp;gt;( ); Kill3Handler kill3Handler = new Kill3Handler( linesProcessed, lastRowProcessed ); Signal.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting back to back bar charts</title>
      <link>https://markhneedham.com/blog/2014/07/20/r-ggplot-plotting-back-to-back-bar-charts/</link>
      <pubDate>Sun, 20 Jul 2014 16:50:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/r-ggplot-plotting-back-to-back-bar-charts/</guid>
      <description>query = &amp;#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &amp;#39;yes&amp;#39;}) RETURN response.time AS time, e.time + e.utc_offset AS eventTime&amp;#34; allYesRSVPs = cypher(graph, query) allYesRSVPs$time = timestampToDate(allYesRSVPs$time) allYesRSVPs$eventTime = timestampToDate(allYesRSVPs$eventTime) allYesRSVPs$difference = as.numeric(allYesRSVPs$eventTime - allYesRSVPs$time, units=&amp;#34;days&amp;#34;) ggplot(allYesRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;green&amp;#34;) query = &amp;#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &amp;#39;no&amp;#39;})&amp;lt;-[:NEXT]-() RETURN response.time AS time, e.time + e.utc_offset AS eventTime&amp;#34; allNoRSVPs = cypher(graph, query) allNoRSVPs$time = timestampToDate(allNoRSVPs$time) allNoRSVPs$eventTime = timestampToDate(allNoRSVPs$eventTime) allNoRSVPs$difference = as.numeric(allNoRSVPs$eventTime - allNoRSVPs$time, units=&amp;#34;days&amp;#34;) ggplot(allNoRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;red&amp;#34;) yes = ggplot(allYesRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;green&amp;#34;) no = ggplot(allNoRSVPs, aes(x=difference)) + geom_histogram(binwidth=1, fill=&amp;#34;red&amp;#34;) + scale_y_reverse() library(gridExtra) grid.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.2: Finding where I am in a linked list</title>
      <link>https://markhneedham.com/blog/2014/07/20/neo4j-2-1-2-finding-where-i-am-in-a-linked-list/</link>
      <pubDate>Sun, 20 Jul 2014 15:13:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/neo4j-2-1-2-finding-where-i-am-in-a-linked-list/</guid>
      <description>public class Chains { public static void main(String[] args) { String simpleChains = &amp;#34;/tmp/longchains&amp;#34;; populate( simpleChains, 10000 ); } private static void populate( String path, int chainSize ) { GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); try(Transaction tx = db.beginTx()) { Node currentNode = null; for ( int i = 0; i &amp;lt; chainSize; i++ ) { Node node = db.createNode(); if(currentNode != null) { currentNode.createRelationshipTo( node, NEXT ); } currentNode = node; } tx.</description>
    </item>
    
    <item>
      <title>R: ggplot - Don&#39;t know how to automatically pick scale for object of type difftime - Discrete value supplied to continuous scale</title>
      <link>https://markhneedham.com/blog/2014/07/20/r-ggplot-dont-know-how-to-automatically-pick-scale-for-object-of-type-difftime-discrete-value-supplied-to-continuous-scale/</link>
      <pubDate>Sun, 20 Jul 2014 00:21:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/r-ggplot-dont-know-how-to-automatically-pick-scale-for-object-of-type-difftime-discrete-value-supplied-to-continuous-scale/</guid>
      <description>library(Rneo4j) query = &amp;#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &amp;#39;yes&amp;#39;}) RETURN response.time AS time, e.time + e.utc_offset AS eventTime&amp;#34; allYesRSVPs = cypher(graph, query) allYesRSVPs$time = timestampToDate(allYesRSVPs$time) allYesRSVPs$eventTime = timestampToDate(allYesRSVPs$eventTime) &amp;gt; allYesRSVPs[1:10,] time eventTime 1 2011-06-05 12:12:27 2011-06-29 18:30:00 2 2011-06-05 14:49:04 2011-06-29 18:30:00 3 2011-06-10 11:22:47 2011-06-29 18:30:00 4 2011-06-07 15:27:07 2011-06-29 18:30:00 5 2011-06-06 20:21:45 2011-06-29 18:30:00 6 2011-07-04 19:49:04 2011-07-27 19:00:00 7 2011-07-05 16:40:10 2011-07-27 19:00:00 8 2011-08-19 07:41:10 2011-08-31 18:30:00 9 2011-08-24 12:47:40 2011-08-31 18:30:00 10 2011-08-18 09:56:53 2011-08-31 18:30:00 allYesRSVPs$difference = allYesRSVPs$eventTime - allYesRSVPs$time &amp;gt; allYesRSVPs[1:10,] time eventTime difference 1 2011-06-05 12:12:27 2011-06-29 18:30:00 34937.</description>
    </item>
    
    <item>
      <title>R: Apply a custom function across multiple lists</title>
      <link>https://markhneedham.com/blog/2014/07/16/r-apply-a-custom-function-across-multiple-lists/</link>
      <pubDate>Wed, 16 Jul 2014 05:04:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/16/r-apply-a-custom-function-across-multiple-lists/</guid>
      <description>&amp;gt; c(10,9,8,7,6,5,4,3,2,1) - c(5,4,3,4,3,2,2,1,2,1) [1] 5 5 5 3 3 3 2 2 0 0 &amp;gt; mapply(function(x, y) { if((x-y) &amp;gt;= 5) { &amp;#34;5 or more&amp;#34; } else if((x-y) &amp;gt;= 3) { &amp;#34;3 to 5&amp;#34; } else { &amp;#34;less than 5&amp;#34; } }, c(10,9,8,7,6,5,4,3,2,1),c(5,4,3,4,3,2,2,1,2,1)) [1] &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;less than 5&amp;#34; [8] &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; summarisedDifference &amp;lt;- function(one, two) { mapply(function(x, y) { if((x-y) &amp;gt;= 5) { &amp;#34;5 or more&amp;#34; } else if((x-y) &amp;gt;= 3) { &amp;#34;3 to 5&amp;#34; } else { &amp;#34;less than 5&amp;#34; } }, one, two) } &amp;gt; summarisedDifference(c(10,9,8,7,6,5,4,3,2,1),c(5,4,3,4,3,2,2,1,2,1)) [1] &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;less than 5&amp;#34; [8] &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;gt; summarisedDifference(c(10,9,8,7,6,5,4,3,2,1), 1) [1] &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;5 or more&amp;#34; &amp;#34;3 to 5&amp;#34; &amp;#34;3 to 5&amp;#34; [8] &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;#34;less than 5&amp;#34; &amp;gt; library(plyr) &amp;gt; df = data.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Processing hidden arrays in your CSV documents</title>
      <link>https://markhneedham.com/blog/2014/07/10/neo4j-load-csv-processing-hidden-arrays-in-your-csv-documents/</link>
      <pubDate>Thu, 10 Jul 2014 14:54:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/10/neo4j-load-csv-processing-hidden-arrays-in-your-csv-documents/</guid>
      <description>name,friends &amp;#34;Mark&amp;#34;,&amp;#34;Michael,Peter&amp;#34; &amp;#34;Michael&amp;#34;,&amp;#34;Peter,Kenny&amp;#34; &amp;#34;Kenny&amp;#34;,&amp;#34;Anders,Michael&amp;#34; $ load csv with headers from &amp;quot;file:/Users/markneedham/Desktop/friends.csv&amp;quot; AS row RETURN row; +------------------------------------------------+ | row | +------------------------------------------------+ | {name -&amp;gt; &amp;quot;Mark&amp;quot;, friends -&amp;gt; &amp;quot;Michael,Peter&amp;quot;} | | {name -&amp;gt; &amp;quot;Michael&amp;quot;, friends -&amp;gt; &amp;quot;Peter,Kenny&amp;quot;} | | {name -&amp;gt; &amp;quot;Kenny&amp;quot;, friends -&amp;gt; &amp;quot;Anders,Michael&amp;quot;} | +------------------------------------------------+ 3 rows $ load csv with headers from &amp;quot;file:/Users/markneedham/Desktop/friends.csv&amp;quot; AS row RETURN row, split(row.friends, &amp;quot;,&amp;quot;) AS friends; +-----------------------------------------------------------------------+ | row | friends | +-----------------------------------------------------------------------+ | {name -&amp;gt; &amp;quot;Mark&amp;quot;, friends -&amp;gt; &amp;quot;Michael,Peter&amp;quot;} | [&amp;quot;Michael&amp;quot;,&amp;quot;Peter&amp;quot;] | | {name -&amp;gt; &amp;quot;Michael&amp;quot;, friends -&amp;gt; &amp;quot;Peter,Kenny&amp;quot;} | [&amp;quot;Peter&amp;quot;,&amp;quot;Kenny&amp;quot;] | | {name -&amp;gt; &amp;quot;Kenny&amp;quot;, friends -&amp;gt; &amp;quot;Anders,Michael&amp;quot;} | [&amp;quot;Anders&amp;quot;,&amp;quot;Michael&amp;quot;] | +-----------------------------------------------------------------------+ 3 rows $ load csv with headers from &amp;quot;file:/Users/markneedham/Desktop/friends.</description>
    </item>
    
    <item>
      <title>R/plyr: ddply - Error in vector(type, length) : vector: cannot make a vector of mode &#39;closure&#39;.</title>
      <link>https://markhneedham.com/blog/2014/07/07/rplyr-ddply-error-in-vectortype-length-vector-cannot-make-a-vector-of-mode-closure/</link>
      <pubDate>Mon, 07 Jul 2014 06:07:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/07/rplyr-ddply-error-in-vectortype-length-vector-cannot-make-a-vector-of-mode-closure/</guid>
      <description>n = c(2, 3, 5) s = c(&amp;#34;aa&amp;#34;, &amp;#34;bb&amp;#34;, &amp;#34;cc&amp;#34;) b = c(TRUE, FALSE, TRUE) df = data.frame(n, s, b) ddply(df, &amp;#34;b&amp;#34;, function(x) { countr &amp;lt;- length(x$n) data.frame(count = count) }) Error in vector(type, length) : vector: cannot make a vector of mode &amp;#39;closure&amp;#39;. &amp;gt; count = 10 &amp;gt; ddply(df, &amp;#34;b&amp;#34;, function(x) { + countr &amp;lt;- length(x$n) + data.frame(count = count) + }) b count 1 FALSE 4 2 TRUE 4 &amp;gt; ddply(df, &amp;#34;b&amp;#34;, function(x) { + count &amp;lt;- length(x$n) + data.</description>
    </item>
    
    <item>
      <title>R/plyr: ddply - Renaming the grouping/generated column when grouping by date</title>
      <link>https://markhneedham.com/blog/2014/07/02/rplyr-ddply-renaming-the-groupinggenerate-column-when-grouping-by-date/</link>
      <pubDate>Wed, 02 Jul 2014 06:30:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/02/rplyr-ddply-renaming-the-groupinggenerate-column-when-grouping-by-date/</guid>
      <description>library(Rneo4j) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinDate&amp;#34; meetupMembers = cypher(graph, query) meetupMembers$joined &amp;lt;- timestampToDate(meetupMembers$joinDate) dd = aggregate(meetupMembers$joined, by=list(format(meetupMembers$joined, &amp;#34;%A&amp;#34;)), function(x) length(x)) colnames(dd) = c(&amp;#34;dayOfWeek&amp;#34;, &amp;#34;count&amp;#34;) &amp;gt; dd dayOfWeek count 1 Friday 135 2 Monday 287 3 Saturday 80 4 Sunday 102 5 Thursday 187 6 Tuesday 286 7 Wednesday 211 &amp;gt; meetupMembers[1:10,] joinDate joined 1 1.</description>
    </item>
    
    <item>
      <title>R: Aggregate by different functions and join results into one data frame</title>
      <link>https://markhneedham.com/blog/2014/06/30/r-aggregate-by-different-functions-and-join-results-into-one-data-frame/</link>
      <pubDate>Mon, 30 Jun 2014 22:47:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/r-aggregate-by-different-functions-and-join-results-into-one-data-frame/</guid>
      <description>library(Rneo4j) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) query = &amp;#34;MATCH (g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;})-[:HOSTED_EVENT]-&amp;gt;(event)&amp;lt;-[:TO]-({response: &amp;#39;yes&amp;#39;})&amp;lt;-[:RSVPD]-() WHERE (event.time + event.utc_offset) &amp;lt; timestamp() RETURN event.time + event.utc_offset AS eventTime, COUNT(*) AS rsvps&amp;#34; events = cypher(graph, query) events$datetime &amp;lt;- timestampToDate(events$eventTime) eventTime rsvps datetime 1 1.314815e+12 3 2011-08-31 19:30:00 2 1.337798e+12 13 2012-05-23 19:30:00 3 1.383070e+12 29 2013-10-29 18:00:00 4 1.362474e+12 5 2013-03-05 09:00:00 5 1.369852e+12 66 2013-05-29 19:30:00 6 1.</description>
    </item>
    
    <item>
      <title>R: Order by data frame column and take top 10 rows</title>
      <link>https://markhneedham.com/blog/2014/06/30/r-order-by-data-frame-column-and-take-top-10-rows/</link>
      <pubDate>Mon, 30 Jun 2014 21:44:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/r-order-by-data-frame-column-and-take-top-10-rows/</guid>
      <description>library(Rneo4j) query = &amp;#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinDate&amp;#34; timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) meetupMembers = cypher(graph, query) meetupMembers$joined &amp;lt;- timestampToDate(meetupMembers$joinDate) groupBy = function(dates, format) { dd = aggregate(dates, by= list(format(dates, format)), function(x) length(x)) colnames(dd) = c(&amp;#34;key&amp;#34;, &amp;#34;count&amp;#34;) dd } byDayTime = groupBy(meetupMembers$joined, &amp;#34;%A %H:00&amp;#34;) &amp;gt; byDayTime[12:25,] key count 12 Friday 14:00 12 13 Friday 15:00 8 14 Friday 16:00 11 15 Friday 17:00 10 16 Friday 18:00 3 17 Friday 19:00 1 18 Friday 20:00 3 19 Friday 21:00 4 20 Friday 22:00 7 21 Friday 23:00 2 22 Monday 00:00 3 23 Monday 01:00 1 24 Monday 03:00 1 25 Monday 05:00 3 &amp;gt; byDayTime[order(byDayTime$count),][1:10,] key count 2 Friday 03:00 1 3 Friday 04:00 1 4 Friday 05:00 1 5 Friday 07:00 1 17 Friday 19:00 1 23 Monday 01:00 1 24 Monday 03:00 1 46 Saturday 03:00 1 66 Sunday 06:00 1 67 Sunday 07:00 1 &amp;gt; order(byDayTime$count) [1] 2 3 4 5 17 23 24 46 66 67 109 128 129 1 21 44 47 48 81 86 87 88 108 130 16 18 22 25 45 53 64 71 75 107 19 26 49 51 55 56 58 59 61 [44] 65 68 77 79 85 106 110 143 50 52 54 82 84 101 127 146 27 57 60 62 63 69 70 73 99 103 126 145 6 20 76 83 89 105 122 131 144 7 13 40 43 72 80 [87] 102 39 78 100 132 147 15 94 121 123 142 14 42 74 104 137 140 12 38 92 93 111 124 8 9 11 90 96 125 139 10 32 34 36 95 97 98 28 135 136 33 35 112 [130] 113 116 134 91 141 41 115 120 133 37 119 138 31 117 118 30 114 29 key count 2 Friday 03:00 1 3 Friday 04:00 1 4 Friday 05:00 1 5 Friday 07:00 1 &amp;gt; byDayTime[order(-byDayTime$count),][1:10,] key count 29 Monday 09:00 34 30 Monday 10:00 28 114 Tuesday 11:00 28 31 Monday 11:00 27 117 Tuesday 14:00 27 118 Tuesday 15:00 27 138 Wednesday 14:00 23 119 Tuesday 16:00 22 37 Monday 17:00 21 115 Tuesday 12:00 20 </description>
    </item>
    
    <item>
      <title>Neo4j/R: Grouping meetup members by join timestamp</title>
      <link>https://markhneedham.com/blog/2014/06/30/neo4jr-grouping-meetup-members-by-join-timestamp/</link>
      <pubDate>Mon, 30 Jun 2014 00:06:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/neo4jr-grouping-meetup-members-by-join-timestamp/</guid>
      <description>&amp;gt; library(Rneo4j) &amp;gt; query = &amp;#34;match (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&amp;#34;Neo4j - London User Group\&amp;#34;}) RETURN membership.joined AS joinDate&amp;#34; &amp;gt; meetupMembers = cypher(graph, query) &amp;gt; meetupMembers[1:5,] [1] 1.389107e+12 1.376572e+12 1.379491e+12 1.349454e+12 1.383127e+12 &amp;gt; timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&amp;#34;1970-01-01&amp;#34;) &amp;gt; meetupMembers$joined &amp;lt;- timestampToDate(meetupMembers$joinDate) &amp;gt; meetupMembers[1:5,] joinDate joined 1 1.389107e+12 2014-01-07 15:08:40 2 1.376572e+12 2013-08-15 14:13:40 3 1.379491e+12 2013-09-18 08:55:11 4 1.349454e+12 2012-10-05 17:28:04 5 1.383127e+12 2013-10-30 09:59:03 &amp;gt; dd = aggregate(meetupMembers$joined, by=list(format(meetupMembers$joined, &amp;#34;%m-%Y&amp;#34;)), function(x) length(x)) &amp;gt; colnames(dd) = c(&amp;#34;month&amp;#34;, &amp;#34;count&amp;#34;) &amp;gt; dd month count 1 01-2012 4 2 01-2013 52 3 01-2014 88 4 02-2012 7 5 02-2013 52 6 02-2014 91 7 03-2012 12 8 03-2013 23 9 03-2014 93 10 04-2012 3 11 04-2013 34 12 04-2014 119 13 05-2012 9 14 05-2013 69 15 05-2014 102 16 06-2011 14 17 06-2012 5 18 06-2013 39 19 06-2014 114 20 07-2011 4 21 07-2012 16 22 07-2013 20 23 08-2011 2 24 08-2012 34 25 08-2013 50 26 09-2012 14 27 09-2013 52 28 10-2011 2 29 10-2012 29 30 10-2013 42 31 11-2011 2 32 11-2012 31 33 11-2013 34 34 12-2012 7 35 12-2013 19 groupBy = function(dates, format) { dd = aggregate(dates, by= list(format(dates, format)), function(x) length(x)) colnames(dd) = c(&amp;#34;key&amp;#34;, &amp;#34;count&amp;#34;) dd } &amp;gt; groupBy(meetupMembers$joined, &amp;#34;%Y&amp;#34;) key count 1 2011 24 2 2012 171 3 2013 486 4 2014 607 &amp;gt; groupBy(meetupMembers$joined, &amp;#34;%A&amp;#34;) key count 1 Friday 135 2 Monday 287 3 Saturday 80 4 Sunday 102 5 Thursday 187 6 Tuesday 286 7 Wednesday 211 &amp;gt; groupBy(meetupMembers$joined, &amp;#34;%m&amp;#34;) key count 1 01 144 2 02 150 3 03 128 4 04 156 5 05 180 6 06 172 7 07 40 8 08 86 9 09 66 10 10 73 11 11 67 12 12 26 &amp;gt; groupBy(meetupMembers$joined[format(meetupMembers$joined, &amp;#34;%Y&amp;#34;) !</description>
    </item>
    
    <item>
      <title>Neo4j: Set Based Operations with the experimental Cypher optimiser</title>
      <link>https://markhneedham.com/blog/2014/06/29/neo4j-set-based-operations-with-the-experimental-cypher-optimiser/</link>
      <pubDate>Sun, 29 Jun 2014 08:45:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/29/neo4j-set-based-operations-with-the-experimental-cypher-optimiser/</guid>
      <description>MATCH (p:Person {name: &amp;quot;me&amp;quot;})-[:MEMBER_OF]-&amp;gt;(office {name: &amp;quot;London Office&amp;quot;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague) MATCH (p:Person {name: &amp;quot;me&amp;quot;})-[:COLLEAGUES]-&amp;gt;(colleague) WITH p, COLLECT(colleague) as marksColleagues MATCH (colleague)-[:MEMBER_OF]-&amp;gt;(office {name: &amp;quot;London Office&amp;quot;})&amp;lt;-[:MEMBER_OF]-(p) WHERE NOT (colleague IN marksColleagues) RETURN COUNT(colleague) cypher 2.1.experimental MATCH (p:Person {name: &amp;quot;me&amp;quot;})-[:MEMBER_OF]-&amp;gt;(office {name: &amp;quot;London Office&amp;quot;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague) $ python set-based.py cypher 2.1.experimental MATCH (p:Person {name: &amp;#34;me&amp;#34;})-[:MEMBER_OF]-&amp;gt;(office {name: &amp;#34;London Office&amp;#34;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague) Min 0.719580888748 50% 0.723278999329 95% 0.741609430313 Max 0.</description>
    </item>
    
    <item>
      <title>Neo4j&#39;s Cypher vs Clojure - Group by and Sorting</title>
      <link>https://markhneedham.com/blog/2014/06/29/neo4j-cypher-vs-clojure-for-group-by-and-sorting/</link>
      <pubDate>Sun, 29 Jun 2014 02:56:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/29/neo4j-cypher-vs-clojure-for-group-by-and-sorting/</guid>
      <description>CREATE (event1:Event {name: &amp;quot;Future Event 1&amp;quot;, timestamp: 1414002772427 }) CREATE (event2:Event {name: &amp;quot;Future Event 2&amp;quot;, timestamp: 1424002772427 }) CREATE (event3:Event {name: &amp;quot;Future Event 3&amp;quot;, timestamp: 1416002772427 }) CREATE (event4:Event {name: &amp;quot;Past Event 1&amp;quot;, timestamp: 1403002772427 }) CREATE (event5:Event {name: &amp;quot;Past Event 2&amp;quot;, timestamp: 1402002772427 }) $ MATCH (e:Event) RETURN e; ==&amp;gt; +------------------------------------------------------------+ ==&amp;gt; | e | ==&amp;gt; +------------------------------------------------------------+ ==&amp;gt; | Node[15414]{name:&amp;quot;Future Event 1&amp;quot;,timestamp:1414002772427} | ==&amp;gt; | Node[15415]{name:&amp;quot;Future Event 2&amp;quot;,timestamp:1424002772427} | ==&amp;gt; | Node[15416]{name:&amp;quot;Future Event 3&amp;quot;,timestamp:1416002772427} | ==&amp;gt; | Node[15417]{name:&amp;quot;Past Event 1&amp;quot;,timestamp:1403002772427} | ==&amp;gt; | Node[15418]{name:&amp;quot;Past Event 2&amp;quot;,timestamp:1402002772427} | ==&amp;gt; +------------------------------------------------------------+ ==&amp;gt; 5 rows ==&amp;gt; 13 ms (def sorted-query &amp;#34;MATCH (e:Event) WITH COLLECT(e) AS events WITH [e IN events WHERE e.</description>
    </item>
    
    <item>
      <title>Data Science: Mo&#39; Data Mo&#39; Problems</title>
      <link>https://markhneedham.com/blog/2014/06/28/data-science-mo-data-mo-problems/</link>
      <pubDate>Sat, 28 Jun 2014 23:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/28/data-science-mo-data-mo-problems/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Finding movies by decade</title>
      <link>https://markhneedham.com/blog/2014/06/28/neo4j-cypher-finding-movies-by-decade/</link>
      <pubDate>Sat, 28 Jun 2014 11:12:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/28/neo4j-cypher-finding-movies-by-decade/</guid>
      <description>:play movies MATCH (movie:Movie) WHERE movie.released &amp;gt;= 1990 and movie.released &amp;lt;= 1999 RETURN 1990 + &amp;quot;-&amp;quot; + 1999 as years, count(movie) AS movies ORDER BY years ==&amp;gt; +----------------------+ ==&amp;gt; | years | movies | ==&amp;gt; +----------------------+ ==&amp;gt; | &amp;#34;1990-1999&amp;#34; | 21 | ==&amp;gt; +----------------------+ ==&amp;gt; 1 row WITH 1990 AS startDecade, 1999 AS endDecade MATCH (movie:Movie) WHERE movie.released &amp;gt;= startDecade and movie.released &amp;lt;= endDecade RETURN startDecade + &amp;quot;-&amp;quot; + endDecade as years, count(movie) ORDER BY years UNWIND [{start: 1970, end: 1979}, {start: 1980, end: 1989}, {start: 1980, end: 1989}, {start: 1990, end: 1999}, {start: 2000, end: 2009}, {start: 2010, end: 2019}] AS row WITH row.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Separation of concerns</title>
      <link>https://markhneedham.com/blog/2014/06/27/neo4j-cypher-separation-of-concerns/</link>
      <pubDate>Fri, 27 Jun 2014 10:51:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/27/neo4j-cypher-separation-of-concerns/</guid>
      <description>MATCH (event:Event {id: {eventId}})-[:HELD_AT]-&amp;gt;(venue) OPTIONAL MATCH (event)&amp;lt;-[:TO]-(rsvp)&amp;lt;-[:RSVPD]-(person) OPTIONAL MATCH (person)-[:INTERESTED_IN]-&amp;gt;(topic) WHERE ()-[:HAS_TOPIC]-&amp;gt;(topic) WITH event, venue, rsvp, person, COLLECT(topic) as topics ORDER BY rsvp.time OPTIONAL MATCH (rsvp)&amp;lt;-[:NEXT]-(initial) WITH event, venue, COLLECT({rsvp: rsvp, initial: initial, person: person, topics: topics}) AS responses WITH event, venue, [response in responses WHERE response.initial is null AND response.rsvp.response = &amp;quot;yes&amp;quot;] as attendees, [response in responses WHERE NOT response.initial is null] as dropouts, responses UNWIND([response in attendees | response.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Handling conditionals</title>
      <link>https://markhneedham.com/blog/2014/06/17/neo4j-load-csv-handling-conditionals/</link>
      <pubDate>Tue, 17 Jun 2014 23:41:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/17/neo4j-load-csv-handling-conditionals/</guid>
      <description>match_id,player,player_id,time,type &amp;#34;1012&amp;#34;,&amp;#34;Antonin Panenka&amp;#34;,&amp;#34;174835&amp;#34;,21,&amp;#34;penalty&amp;#34; &amp;#34;1012&amp;#34;,&amp;#34;Faisal Al Dakhil&amp;#34;,&amp;#34;2204&amp;#34;,57,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Roger Milla&amp;#34;,&amp;#34;79318&amp;#34;,106,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Roger Milla&amp;#34;,&amp;#34;79318&amp;#34;,108,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Bernardo Redin&amp;#34;,&amp;#34;44555&amp;#34;,115,&amp;#34;goal&amp;#34; &amp;#34;102&amp;#34;,&amp;#34;Andre Kana-biyik&amp;#34;,&amp;#34;174649&amp;#34;,44,&amp;#34;yellow&amp;#34; LOAD CSV WITH HEADERS FROM &amp;quot;https://raw.githubusercontent.com/mneedham/neo4j-worldcup/master/data/import/events.csv&amp;quot; AS csvLine // removed for conciseness // goals FOREACH(n IN (CASE WHEN csvLine.type IN [&amp;quot;penalty&amp;quot;, &amp;quot;goal&amp;quot;, &amp;quot;owngoal&amp;quot;] THEN [1] else [] END) | FOREACH(t IN CASE WHEN team = home THEN [home] ELSE [away] END | MERGE (stats)-[:SCORED_GOAL]-&amp;gt;(penalty:Goal {time: csvLine.time, type: csvLine.type}) )	) // cards FOREACH(n IN (CASE WHEN csvLine.</description>
    </item>
    
    <item>
      <title>Ruby: Regex - Matching the Trademark ™ character</title>
      <link>https://markhneedham.com/blog/2014/06/08/ruby-regex-matching-the-trademark-character/</link>
      <pubDate>Sun, 08 Jun 2014 01:34:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/08/ruby-regex-matching-the-trademark-character/</guid>
      <description>1930 FIFA World Cup Uruguay ™ p text.match(/\d{4} FIFA World Cup (.*?) ™/)[1] tm.rb:4: syntax error, unexpected $end, expecting &amp;#39;)&amp;#39; p text.match(/\d{4} FIFA World Cup (.*?) ™/)[1] ^ p text.match(/\d{4} FIFA World Cup (.*?) \u2122/)[1] # encoding: utf-8 # ... p text.match(/\d{4} FIFA World Cup (.*?) ™/)[1] # returns &amp;#34;Uruguay&amp;#34; </description>
    </item>
    
    <item>
      <title>Neo4j Meetup Coding Dojo Style</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-meetup-coding-dojo-style/</link>
      <pubDate>Sat, 31 May 2014 22:55:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-meetup-coding-dojo-style/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neo4j/R: Analysing London NoSQL meetup membership</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/</link>
      <pubDate>Sat, 31 May 2014 21:32:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/</guid>
      <description>MATCH (group1:Group), (group2:Group) OPTIONAL MATCH (group1)&amp;lt;-[:MEMBER_OF]-()-[:MEMBER_OF]-&amp;gt;(group2) WITH group1, group2, COUNT(*) as commonMembers MATCH (group1)&amp;lt;-[:MEMBER_OF]-(group1Member) WITH group1, group2, commonMembers, COLLECT(id(group1Member)) AS group1Members MATCH (group2)&amp;lt;-[:MEMBER_OF]-(group2Member) WITH group1, group2, commonMembers, group1Members, COLLECT(id(group2Member)) AS group2Members WITH group1, group2, commonMembers, group1Members, group2Members UNWIND(group1Members + group2Members) AS combinedMember WITH DISTINCT group1, group2, commonMembers, combinedMember WITH group1, group2, commonMembers, COUNT(combinedMember) AS combinedMembers RETURN group1.name, group2.name, toInt(round(100.0 * commonMembers / combinedMembers)) AS percentage	ORDER BY group1.name, group1.name install.packages(&amp;#34;devtools&amp;#34;) devtools::install_github(&amp;#34;nicolewhite/Rneo4j&amp;#34;) install.</description>
    </item>
    
    <item>
      <title>Thoughts on meetups</title>
      <link>https://markhneedham.com/blog/2014/05/31/thoughts-on-meetups/</link>
      <pubDate>Sat, 31 May 2014 19:50:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/thoughts-on-meetups/</guid>
      <description>At a university, students who have questions about the lecture content or coursework can visit the professor and have a one-on-one conversation.
&amp;hellip;
At the beginning of every meetup, we give everyone a name tag, and provide a whiteboard with two columns, “teachers” and “students”.
Attendees are encouraged to put their name and interests in both columns. From there, everyone can [&amp;hellip;] go in search of someone from the opposite column who shares their interests.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - UNWIND vs FOREACH</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-unwind-vs-foreach/</link>
      <pubDate>Sat, 31 May 2014 14:19:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-unwind-vs-foreach/</guid>
      <description>WITH [{name: &amp;quot;Event 1&amp;quot;, timetree: {day: 1, month: 1, year: 2014}}, {name: &amp;quot;Event 2&amp;quot;, timetree: {day: 2, month: 1, year: 2014}}] AS events FOREACH (event IN events | CREATE (e:Event {name: event.name}) MATCH (year:Year {year: event.timetree.year }), (year)-[:HAS_MONTH]-&amp;gt;(month {month: event.timetree.month }), (month)-[:HAS_DAY]-&amp;gt;(day {day: event.timetree.day }) CREATE (e)-[:HAPPENED_ON]-&amp;gt;(day)) Invalid use of MATCH inside FOREACH (line 5, column 3) &amp;quot; MATCH (year:Year {year: event.timetree.year }), &amp;quot; ^ Neo.ClientError.Statement.InvalidSyntax WITH [{name: &amp;quot;Event 1&amp;quot;, timetree: {day: 1, month: 1, year: 2014}}, {name: &amp;quot;Event 2&amp;quot;, timetree: {day: 2, month: 1, year: 2014}}] AS events FOREACH (event IN events | CREATE (e:Event {name: event.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Neo.ClientError.Statement.ParameterMissing and neo4j-shell</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-neo-clienterror-statement-parametermissing-and-neo4j-shell/</link>
      <pubDate>Sat, 31 May 2014 12:44:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-neo-clienterror-statement-parametermissing-and-neo4j-shell/</guid>
      <description>CREATE (u:User {name: &amp;quot;Mark&amp;quot;}) MATCH (u:User {name: {name}}) RETURN u Expected a parameter named name Neo.ClientError.Statement.ParameterMissing $ MATCH (u:User {name: {name}}) RETURN u; ParameterNotFoundException: Expected a parameter named name $ export name=&amp;quot;Mark&amp;quot; $ MATCH (u:User {name: {name}}) RETURN u; +-------------------------+ | u | +-------------------------+ | Node[1923]{name:&amp;quot;Mark&amp;quot;} | +-------------------------+ 1 row $ export name = &amp;#34;Mark&amp;#34; name is no valid variable name. May only contain alphanumeric characters and underscores. $ export params={ name: &amp;#34;Mark&amp;#34; } $ MATCH (u:User {name: {params}.</description>
    </item>
    
    <item>
      <title>Clojure: Destructuring group-by&#39;s output</title>
      <link>https://markhneedham.com/blog/2014/05/31/clojure-destructuring-group-bys-output/</link>
      <pubDate>Sat, 31 May 2014 00:03:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/clojure-destructuring-group-bys-output/</guid>
      <description>user&amp;gt; (def events [{:name &amp;#34;e1&amp;#34; :timestamp 123} {:name &amp;#34;e2&amp;#34; :timestamp 456} {:name &amp;#34;e3&amp;#34; :timestamp 789}]) user&amp;gt; (group-by #(&amp;gt; (-&amp;gt;&amp;gt; % :timestamp) 123) events) {false [{:name &amp;#34;e1&amp;#34;, :timestamp 123}], true [{:name &amp;#34;e2&amp;#34;, :timestamp 456} {:name &amp;#34;e3&amp;#34;, :timestamp 789}]} user&amp;gt; (let [{upcoming true past false} (group-by #(&amp;gt; (-&amp;gt;&amp;gt; % :timestamp) 123) events)] (println upcoming) (println past)) [{:name e2, :timestamp 456} {:name e3, :timestamp 789}] [{:name e1, :timestamp 123}] nil </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Rounding a float value to decimal places</title>
      <link>https://markhneedham.com/blog/2014/05/25/neo4j-cypher-rounding-a-float-value-to-decimal-places/</link>
      <pubDate>Sun, 25 May 2014 22:17:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/25/neo4j-cypher-rounding-a-float-value-to-decimal-places/</guid>
      <description>RETURN toFloat(&amp;quot;12.336666&amp;quot;) AS value WITH toFloat(&amp;quot;12.336666&amp;quot;) AS value RETURN round(100 * value) / 100 AS value 12.34 WITH 2 as precision WITH toFloat(&amp;quot;12.336666&amp;quot;) AS value, 10^precision AS factor RETURN round(factor * value)/factor AS value WITH 4 as precision WITH toFloat(&amp;quot;12.336666&amp;quot;) AS value, 10^precision AS factor RETURN round(factor * value)/factor AS value 12.3367 </description>
    </item>
    
    <item>
      <title>Neo4j 2.1:  Passing around node ids vs UNWIND</title>
      <link>https://markhneedham.com/blog/2014/05/25/neo4j-2-1-passing-around-node-ids-vs-unwind/</link>
      <pubDate>Sun, 25 May 2014 10:48:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/25/neo4j-2-1-passing-around-node-ids-vs-unwind/</guid>
      <description>MATCH (g:Group) WITH g ORDER BY g.name LIMIT 5 WITH COLLECT(id(g)) AS groups MATCH (g1) WHERE id(g1) IN groups MATCH (g2) WHERE id(g2) IN groups OPTIONAL MATCH path = (g1)&amp;lt;-[:MEMBER_OF]-()-[:MEMBER_OF]-&amp;gt;(g2) RETURN g1.name, g2.name, CASE WHEN path is null THEN 0 ELSE COUNT(path) END AS overlap MATCH (g:Group) WITH g ORDER BY g.name LIMIT 5 WITH COLLECT(g) AS groups MATCH (g1) WHERE g1 IN groups MATCH (g2) WHERE g2 IN groups OPTIONAL MATCH path = (g1)&amp;lt;-[:MEMBER_OF]-()-[:MEMBER_OF]-&amp;gt;(g2) RETURN g1.</description>
    </item>
    
    <item>
      <title>Clojure: Create a directory</title>
      <link>https://markhneedham.com/blog/2014/05/24/clojure-create-a-directory/</link>
      <pubDate>Sat, 24 May 2014 00:12:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/24/clojure-create-a-directory/</guid>
      <description>(.mkdir (java.io.File. &amp;#34;/path/to/dir/to/create&amp;#34;)) (ns neo4j-meetup.core (:require [clj-time.format :as f])) (def format-as-year-month-day (f/formatter &amp;#34;yyyy-MM-dd&amp;#34;)) (defn create-directory-for-today [] (let [date (f/unparse format-as-year-month-day (t/now))] (.mkdir (java.io.File. (str &amp;#34;data/members-&amp;#34; date))))) </description>
    </item>
    
    <item>
      <title>Neo4j 2.1: Creating adjacency matrices</title>
      <link>https://markhneedham.com/blog/2014/05/20/neo4j-2-0-creating-adjacency-matrices/</link>
      <pubDate>Tue, 20 May 2014 23:14:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/20/neo4j-2-0-creating-adjacency-matrices/</guid>
      <description>MATCH (g1:Group), (g2:Group) RETURN g1.name, g2.name LIMIT 10 +-------------------------------------------------------------------------------------+ | g1.name | g2.name | +-------------------------------------------------------------------------------------+ | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;London ElasticSearch User Group&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;Big Data / Data Science / Data Analytics Jobs&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;eXist User Group London&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;Couchbase London&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;Big Data Developers in London&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;HBase London Meetup&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;Marklogic Financial Services Community&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;GridGain London&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;MEAN Stack&amp;#34; | | &amp;#34;London ElasticSearch User Group&amp;#34; | &amp;#34;Hazelcast User Group London (HUGL)&amp;#34; | .</description>
    </item>
    
    <item>
      <title>Jersey/Jax RS: Streaming JSON</title>
      <link>https://markhneedham.com/blog/2014/04/30/jerseyjax-rs-streaming-json/</link>
      <pubDate>Wed, 30 Apr 2014 01:24:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/30/jerseyjax-rs-streaming-json/</guid>
      <description>@Path(&amp;#34;/resource&amp;#34;) public class MadeUpResource { private final ObjectMapper objectMapper; public MadeUpResource() { objectMapper = new ObjectMapper(); } @GET @Produces(MediaType.APPLICATION_JSON) public Response loadHierarchy(@PathParam( &amp;#34;pkPerson&amp;#34; ) String pkPerson) { final Map&amp;lt;Integer, String&amp;gt; people = new HashMap&amp;lt;&amp;gt;(); people.put(1, &amp;#34;Michael&amp;#34;); people.put(2, &amp;#34;Mark&amp;#34;); StreamingOutput stream = new StreamingOutput() { @Override public void write(OutputStream os) throws IOException, WebApplicationException { JsonGenerator jg = objectMapper.getJsonFactory().createJsonGenerator( os, JsonEncoding.UTF8 ); jg.writeStartArray(); for ( Map.Entry&amp;lt;Integer, String&amp;gt; person : people.entrySet() ) { jg.</description>
    </item>
    
    <item>
      <title>Clojure: Paging meetup data using lazy sequences</title>
      <link>https://markhneedham.com/blog/2014/04/30/clojure-paging-meetup-data-using-lazy-sequences/</link>
      <pubDate>Wed, 30 Apr 2014 00:20:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/30/clojure-paging-meetup-data-using-lazy-sequences/</guid>
      <description>(defn unchunk [s] (when (seq s) (lazy-seq (cons (first s) (unchunk (next s)))))) (defn offsets [] (unchunk (range))) (defn get-all [api-fn] (flatten (take-while seq (map #(api-fn {:perpage 200 :offset % :orderby &amp;#34;name&amp;#34;}) (offsets))))) (:require [clj-http.client :as client]) (defn members [{perpage :perpage offset :offset orderby :orderby}] (-&amp;gt;&amp;gt; (client/get (str &amp;#34;https://api.meetup.com/2/members?page=&amp;#34; perpage &amp;#34;&amp;amp;offset=&amp;#34; offset &amp;#34;&amp;amp;orderby=&amp;#34; orderby &amp;#34;&amp;amp;group_urlname=&amp;#34; MEETUP_NAME &amp;#34;&amp;amp;key=&amp;#34; MEETUP_KEY) {:as :json}) :body :results)) (defn all-members [] (get-all members)) </description>
    </item>
    
    <item>
      <title>Clojure: clj-time - Formatting a date / timestamp with day suffixes e.g. 1st, 2nd, 3rd</title>
      <link>https://markhneedham.com/blog/2014/04/26/clojure-clj-time-formatting-a-date-timestamp-with-day-suffixes-e-g-1st-2nd-3rd/</link>
      <pubDate>Sat, 26 Apr 2014 07:50:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/26/clojure-clj-time-formatting-a-date-timestamp-with-day-suffixes-e-g-1st-2nd-3rd/</guid>
      <description>1309368600000 user&amp;gt; (require &amp;#39;[clj-time.coerce :as c]) user&amp;gt; (c/from-long 1309368600000) #&amp;lt;DateTime 2011-06-29T17:30:00.000Z&amp;gt; 29th June 2011 user&amp;gt; (require &amp;#39;[clj-time.format :as f]) nil user&amp;gt; (f/unparse (f/formatter &amp;#34;d MMMM yyyy&amp;#34;) (c/from-long 1309368600000)) &amp;#34;29 June 2011&amp;#34; (defn day-suffix [day] (let [stripped-day (if (&amp;lt; day 20) day (mod day 10))] (cond (= stripped-day 1) &amp;#34;st&amp;#34; (= stripped-day 2) &amp;#34;nd&amp;#34; (= stripped-day 3) &amp;#34;rd&amp;#34; :else &amp;#34;th&amp;#34;))) user&amp;gt; (def my-time (c/from-long 1309368600000)) #&amp;#39;user/my-time user&amp;gt; (def day (read-string (f/unparse (f/formatter &amp;#34;d&amp;#34;) my-time))) #&amp;#39;user/day user&amp;gt; (str day (day-suffix day) &amp;#34; &amp;#34; (f/unparse (f/formatter &amp;#34;MMMM yyyy&amp;#34;) my-time)) &amp;#34;29th June 2011&amp;#34; </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Flatten a collection</title>
      <link>https://markhneedham.com/blog/2014/04/23/neo4j-cypher-flatten-a-collection/</link>
      <pubDate>Wed, 23 Apr 2014 22:02:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/23/neo4j-cypher-flatten-a-collection/</guid>
      <description>$ RETURN [[1,2,3], [4,5,6], [7,8,9]] AS result; ==&amp;gt; +---------------------------+ ==&amp;gt; | result | ==&amp;gt; +---------------------------+ ==&amp;gt; | [[1,2,3],[4,5,6],[7,8,9]] | ==&amp;gt; +---------------------------+ ==&amp;gt; 1 row $ WITH [[1,2,3], [4,5,6], [7,8,9]] AS result RETURN REDUCE(output = [], r IN result | output + r) AS flat; ==&amp;gt; +---------------------+ ==&amp;gt; | flat | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8,9] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row ==&amp;gt; SyntaxException: Type mismatch: expected Any, Collection&amp;lt;Any&amp;gt; or Collection&amp;lt;Collection&amp;lt;Any&amp;gt;&amp;gt; but was Integer (line 1, column 148) WITH [[1,2,3], [4,5,6], [7,8,9]] AS result RETURN REDUCE(output = range(0,-1), r IN result | output + r); $ RETURN [[1,2,3], [4], [5, [6, 7]], [8,9]] AS result; ==&amp;gt; +-------------------------------+ ==&amp;gt; | result | ==&amp;gt; +-------------------------------+ ==&amp;gt; | [[1,2,3],[4],[5,[6,7]],[8,9]] | ==&amp;gt; +-------------------------------+ ==&amp;gt; 1 row $ WITH [[1,2,3], [4], [5, [6, 7]], [8,9]] AS result RETURN REDUCE(output = [], r IN result | output + REDUCE(innerOutput = [], innerR in r | innerOutput + innerR)) AS flat; ==&amp;gt; +---------------------+ ==&amp;gt; | flat | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7,8,9] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating a time tree down to the day</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-a-time-tree-down-to-the-day/</link>
      <pubDate>Sat, 19 Apr 2014 21:15:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-a-time-tree-down-to-the-day/</guid>
      <description>WITH range(2011, 2014) AS years, range(1,12) as months FOREACH(year IN years | MERGE (y:Year {year: year}) FOREACH(month IN months | CREATE (m:Month {month: month}) MERGE (y)-[:HAS_MONTH]-&amp;gt;(m) FOREACH(day IN (CASE WHEN month IN [1,3,5,7,8,10,12] THEN range(1,31) WHEN month = 2 THEN CASE WHEN year % 4 &amp;lt;&amp;gt; 0 THEN range(1,28) WHEN year % 100 &amp;lt;&amp;gt; 0 THEN range(1,29) WHEN year % 400 = 0 THEN range(1,29) ELSE range(1,28) END ELSE range(1,30) END) | CREATE (d:Day {day: day}) MERGE (m)-[:HAS_DAY]-&amp;gt;(d)))) (jan31)-[:NEXT]-&amp;gt;(feb1)-[:NEXT]-&amp;gt;(feb2) MATCH (year:Year)-[:HAS_MONTH]-&amp;gt;(month)-[:HAS_DAY]-&amp;gt;(day) WITH year,month,day ORDER BY year.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.1: Cypher - Concatenating an empty collection / Type mismatch: expected Integer, Collection&amp;lt;Integer&amp;gt; or Collection&amp;lt;Collection&amp;lt;Integer&amp;gt;&amp;gt; but was Collection&amp;lt;Any&amp;gt;</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-2-0-1-cypher-concatenating-an-empty-collection-type-mismatch-expected-integer-collection-or-collection-but-was-collection/</link>
      <pubDate>Sat, 19 Apr 2014 19:51:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-2-0-1-cypher-concatenating-an-empty-collection-type-mismatch-expected-integer-collection-or-collection-but-was-collection/</guid>
      <description>$ RETURN [1,2,3,4] + [5,6,7]; ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4] + [5,6,7] | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row $ RETURN [1,2,3,4] + []; ==&amp;gt; SyntaxException: Type mismatch: expected Integer, Collection&amp;lt;Integer&amp;gt; or Collection&amp;lt;Collection&amp;lt;Integer&amp;gt;&amp;gt; but was Collection&amp;lt;Any&amp;gt; (line 1, column 20) ==&amp;gt; &amp;quot;RETURN [1,2,3,4] + []&amp;quot; ==&amp;gt; ^ $ RETURN [1,2,3,4] + RANGE(0,-1); ==&amp;gt; +-------------------------+ ==&amp;gt; | [1,2,3,4] + RANGE(0,-1) | ==&amp;gt; +-------------------------+ ==&amp;gt; | [1,2,3,4] | ==&amp;gt; +-------------------------+ ==&amp;gt; 1 row $ RETURN [1,2,3,4] + []; ==&amp;gt; +----------------+ ==&amp;gt; | [1,2,3,4] + [] | ==&amp;gt; +----------------+ ==&amp;gt; | [1,2,3,4] | ==&amp;gt; +----------------+ ==&amp;gt; 1 row </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating relationships between a collection of nodes / Invalid input &#39;[&#39;:</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-relationships-between-a-collection-of-nodes-invalid-input/</link>
      <pubDate>Sat, 19 Apr 2014 06:33:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-relationships-between-a-collection-of-nodes-invalid-input/</guid>
      <description>MERGE (day1:Day {day:1 }) MERGE (day2:Day {day:2 }) MERGE (day3:Day {day:3 }) RETURN day1, day2, day3 (day1)-[:NEXT]-&amp;gt;(day2)-[:NEXT]-&amp;gt;(day3) MATCH (day:Day) WITH day ORDER BY day.day WITH COLLECT(day) AS days FOREACH(i in RANGE(0, length(days)-2) | CREATE UNIQUE (days[i])-[:NEXT]-&amp;gt;(days[i+1])) Invalid input &amp;#39;[&amp;#39;: expected an identifier character, node labels, a property map, whitespace, &amp;#39;)&amp;#39; or a relationship pattern (line 6, column 32) &amp;#34; CREATE UNIQUE (days[i])-[:NEXT]-&amp;gt;(days[i+1]))&amp;#34; ^ MATCH (day:Day) WITH day ORDER BY day.day WITH COLLECT(day) AS days FOREACH(i in RANGE(0, length(days)-2) | FOREACH(day1 in [days[i]] | FOREACH(day2 in [days[i+1]] | CREATE UNIQUE (day1)-[:NEXT]-&amp;gt;(day2)))) </description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Query not prepared correctly / Type mismatch: expected Map</title>
      <link>https://markhneedham.com/blog/2014/04/13/neo4j-2-0-0-query-not-prepared-correctly-type-mismatch-expected-map/</link>
      <pubDate>Sun, 13 Apr 2014 17:40:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/13/neo4j-2-0-0-query-not-prepared-correctly-type-mismatch-expected-map/</guid>
      <description>WITH {person: {id: 1}} AS params MERGE (p:Person {id: params.person.id}) RETURN p ==&amp;gt; SyntaxException: Type mismatch: expected Map but was Boolean, Number, String or Collection&amp;lt;Any&amp;gt; (line 1, column 62) ==&amp;gt; &amp;#34;WITH {person: {id: 1}} AS params MERGE (p:Person {id: params.person.id}) RETURN p&amp;#34; ==&amp;gt; +---------------+ ==&amp;gt; | p | ==&amp;gt; +---------------+ ==&amp;gt; | Node[1]{id:} | ==&amp;gt; +---------------+ ==&amp;gt; 1 row ==&amp;gt; Nodes created: 1 ==&amp;gt; Properties set: 1 ==&amp;gt; Labels added: 1 ==&amp;gt; 47 ms WITH {topics: [{name: &amp;quot;Java&amp;quot;}, {name: &amp;quot;Neo4j&amp;quot;}]} AS params MERGE (p:Person {id: 2}) FOREACH(t IN params.</description>
    </item>
    
    <item>
      <title>install4j and AppleScript: Creating a Mac OS X Application Bundle for a Java application</title>
      <link>https://markhneedham.com/blog/2014/04/07/install4j-and-applescript-creating-a-mac-os-x-application-bundle-for-a-java-application/</link>
      <pubDate>Mon, 07 Apr 2014 00:04:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/07/install4j-and-applescript-creating-a-mac-os-x-application-bundle-for-a-java-application/</guid>
      <description>#!/bin/bash rm target/DBench_macos_1_0_0.tgz /Applications/install4j\ 5/bin/install4jc TestBench.install4j title=&amp;#34;DemoBench&amp;#34; backgroundPictureName=&amp;#34;graphs.png&amp;#34; applicationName=&amp;#34;DemoBench&amp;#34; finalDMGName=&amp;#34;DemoBench.dmg&amp;#34; rm -rf target/dmg &amp;amp;&amp;amp; mkdir -p target/dmg tar -C target/dmg -xvf target/DBench_macos_1_0_0.tgz cp -r src/packaging/.background target/dmg ln -s /Applications target/dmg cd target rm &amp;#34;${finalDMGName}&amp;#34; umount -f /Volumes/&amp;#34;${title}&amp;#34; hdiutil create -volname ${title} -size 100m -srcfolder dmg/ -ov -format UDRW pack.temp.dmg device=$(hdiutil attach -readwrite -noverify -noautoopen &amp;#34;pack.temp.dmg&amp;#34; | egrep &amp;#39;^/dev/&amp;#39; | sed 1q | awk &amp;#39;{print $1}&amp;#39;) sleep 5 echo &amp;#39; tell application &amp;#34;Finder&amp;#34; tell disk &amp;#34;&amp;#39;${title}&amp;#39;&amp;#34; open set current view of container window to icon view set toolbar visible of container window to false set statusbar visible of container window to false set the bounds of container window to {400, 100, 885, 430} set theViewOptions to the icon view options of container window set arrangement of theViewOptions to not arranged set icon size of theViewOptions to 72 set background picture of theViewOptions to file &amp;#34;.</description>
    </item>
    
    <item>
      <title>Clojure: Not so lazy sequences a.k.a chunking behaviour</title>
      <link>https://markhneedham.com/blog/2014/04/06/clojure-not-so-lazy-sequences-a-k-a-chunking-behaviour/</link>
      <pubDate>Sun, 06 Apr 2014 22:07:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/06/clojure-not-so-lazy-sequences-a-k-a-chunking-behaviour/</guid>
      <description>&amp;gt; (take 1 (map (fn [x] (println (str &amp;#34;printing...&amp;#34; x))) (range))) (printing...0 printing...1 printing...2 printing...3 printing...4 printing...5 printing...6 printing...7 printing...8 printing...9 printing...10 printing...11 printing...12 printing...13 printing...14 printing...15 printing...16 printing...17 printing...18 printing...19 printing...20 printing...21 printing...22 printing...23 printing...24 printing...25 printing...26 printing...27 printing...28 printing...29 printing...30 printing...31 nil) (defn unchunk [s] (when (seq s) (lazy-seq (cons (first s) (unchunk (next s)))))) &amp;gt; (take 1 (map (fn [x] (println (str &amp;#34;printing...&amp;#34; x))) (unchunk (range)))) (printing...0 nil) </description>
    </item>
    
    <item>
      <title>Soulver: For all your random calculations</title>
      <link>https://markhneedham.com/blog/2014/03/30/soulver-for-all-your-random-calculations/</link>
      <pubDate>Sun, 30 Mar 2014 14:48:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/30/soulver-for-all-your-random-calculations/</guid>
      <description>Calculating how much memory Neo4j memory mapping will take up800 mb + 2660mb + 6600mb + 9500mb + 40mb in GB = 19.6 GB How long would it take to cover 20,000 km at 100 km / day?20,000 km / 100 km/day in months = 6.57097681677241832481 months How long did an import of some data using the Neo4j shell take?4550855 ms in minutes = 75.84758333333333333333 minutes Bit shift 1 by 32 places1 &amp;lt;&amp;lt; 32 = 4,294,967,296 Translating into easier to digest units32381KB / second in MB per minute = 1,942.</description>
    </item>
    
    <item>
      <title>Remote profiling Neo4j using yourkit</title>
      <link>https://markhneedham.com/blog/2014/03/24/remote-profiling-neo4j-using-yourkit/</link>
      <pubDate>Mon, 24 Mar 2014 23:44:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/24/remote-profiling-neo4j-using-yourkit/</guid>
      <description>wrapper.java.additional=-agentpath:/Users/markhneedham/Downloads/YourKit_Java_Profiler_2013_build_13074.app/bin/mac/libyjpagent.jnilib=port=8888 java 4388 markhneedham 20u IPv6 0x901df453b4e9a125 0t0 TCP *:8888 (LISTEN) ... </description>
    </item>
    
    <item>
      <title>Functional Programming in Java - Venkat Subramaniam: Book Review</title>
      <link>https://markhneedham.com/blog/2014/03/23/functional-programming-in-java-venkat-subramaniam-book-review/</link>
      <pubDate>Sun, 23 Mar 2014 21:18:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/23/functional-programming-in-java-venkat-subramaniam-book-review/</guid>
      <description>List&amp;lt;Person&amp;gt; people = Arrays.asList(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.stream().sorted(comparing(p -&amp;gt; p.getAge())).forEach(System.out::println) Sequence&amp;lt;Person&amp;gt; people = sequence(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.sortBy(new Callable1&amp;lt;Person, Integer&amp;gt;() { @Override public Integer call(Person person) throws Exception { return person.getAge(); } }); Sequence&amp;lt;Person&amp;gt; people = sequence(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); System.out.println(people.sortBy(Person::getAge)); Sequence&amp;lt;Person&amp;gt; people = sequence(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.sortBy(Person::getAge).forEach((Consumer&amp;lt;? super Person&amp;gt;) System.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.0-M01: LOAD CSV with Rik Van Bruggen&#39;s Tube Graph</title>
      <link>https://markhneedham.com/blog/2014/03/03/neo4j-2-1-0-m01-load-csv-with-rik-van-bruggens-tube-graph/</link>
      <pubDate>Mon, 03 Mar 2014 16:34:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/03/neo4j-2-1-0-m01-load-csv-with-rik-van-bruggens-tube-graph/</guid>
      <description>CREATE INDEX on :Station(stationName) LOAD CSV FROM &amp;quot;file:/Users/markhneedham/code/tube/runtimes.csv&amp;quot; AS csvLine WITH csvLine[0] AS lineName, csvLine[1] AS direction, csvLine[2] AS startStationName, csvLine[3] AS destinationStationName, toFloat(csvLine[4]) AS distance, toFloat(csvLine[5]) AS runningTime MERGE (start:Station { stationName: startStationName}) MERGE (destination:Station { stationName: destinationStationName}) MERGE (line:Line { lineName: lineName}) MERGE (line) - [:DIRECTION] -&amp;gt; (dir:Direction { direction: direction}) CREATE (inPlatform:InPlatform {name: &amp;quot;In: &amp;quot; + destinationStationName + &amp;quot; &amp;quot; + lineName + &amp;quot; &amp;quot; + direction}) CREATE (outPlatform:OutPlatform {name: &amp;quot;Out: &amp;quot; + startStationName + &amp;quot; &amp;quot; + lineName + &amp;quot; &amp;quot; + direction}) CREATE (inPlatform) - [:AT] -&amp;gt; (destination) CREATE (outPlatform) - [:AT] -&amp;gt; (start) CREATE (inPlatform) - [:ON] -&amp;gt; (dir) CREATE (outPlatform) - [:ON] -&amp;gt; (dir) CREATE (outPlatform) - [r:TRAIN {distance: distance, runningTime: runningTime}] -&amp;gt; (inPlatform) MATCH (station:Station) &amp;lt;-[:AT]- (platformIn:InPlatform), (station:Station) &amp;lt;-[:AT]- (platformOut:OutPlatform), (direction:Direction) &amp;lt;-[:ON]- (platformIn:InPlatform), (direction:Direction) &amp;lt;-[:ON]- (platformOut:OutPlatform) CREATE (platformIn) -[:WAIT {runningTime: 0.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Finding directors who acted in their own movie</title>
      <link>https://markhneedham.com/blog/2014/02/28/neo4j-cypher-finding-directors-who-acted-in-their-own-movie/</link>
      <pubDate>Fri, 28 Feb 2014 22:57:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/28/neo4j-cypher-finding-directors-who-acted-in-their-own-movie/</guid>
      <description>MATCH (a)-[:ACTED_IN]-&amp;gt;(m)&amp;lt;-[:DIRECTED]-(d) WHERE a.name = d.name RETURN a MATCH (a)-[:ACTED_IN]-&amp;gt;(m)&amp;lt;-[:DIRECTED]-(d) WHERE a = d RETURN a MATCH (a)-[:ACTED_IN]-&amp;gt;(m)&amp;lt;-[:DIRECTED]-(a) RETURN a </description>
    </item>
    
    <item>
      <title>Java 8: Lambda Expressions vs Auto Closeable</title>
      <link>https://markhneedham.com/blog/2014/02/26/java-8-lambda-expressions-vs-auto-closeable/</link>
      <pubDate>Wed, 26 Feb 2014 07:32:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/26/java-8-lambda-expressions-vs-auto-closeable/</guid>
      <description>public class StylesOfTx { public static void main( String[] args ) throws IOException { String path = &amp;#34;/tmp/tx-style-test&amp;#34;; FileUtils.deleteRecursively(new File(path)); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); Transaction tx = db.beginTx(); try { db.createNode(); tx.success(); } finally { tx.close(); } } } public class StylesOfTx { public static void main( String[] args ) throws IOException { String path = &amp;#34;/tmp/tx-style-test&amp;#34;; FileUtils.deleteRecursively(new File(path)); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); try ( Transaction tx = db.</description>
    </item>
    
    <item>
      <title>Jersey: Ignoring SSL certificate - javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException</title>
      <link>https://markhneedham.com/blog/2014/02/26/jersey-ignoring-ssl-certificate-javax-net-ssl-sslhandshakeexception-java-security-cert-certificateexception/</link>
      <pubDate>Wed, 26 Feb 2014 00:12:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/26/jersey-ignoring-ssl-certificate-javax-net-ssl-sslhandshakeexception-java-security-cert-certificateexception/</guid>
      <description>Client client = Client.create(); client.resource(&amp;#34;https://some-aws-host.compute-1.amazonaws.com&amp;#34;).post(); // and so on com.sun.jersey.api.client.ClientHandlerException: javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching some-aws-host.compute-1.amazonaws.com found. at com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:149) at com.sun.jersey.api.client.Client.handle(Client.java:648) at com.sun.jersey.api.client.WebResource.handle(WebResource.java:670) at com.sun.jersey.api.client.WebResource.post(WebResource.java:241) at com.neotechnology.testlab.manager.bootstrap.ManagerAdmin.takeBackup(ManagerAdmin.java:33) at com.neotechnology.testlab.manager.bootstrap.ManagerAdminTest.foo(ManagerAdminTest.java:11) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222) at org.junit.runners.ParentRunner.run(ParentRunner.java:300) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74) at com.</description>
    </item>
    
    <item>
      <title>Java 8: Group by with collections</title>
      <link>https://markhneedham.com/blog/2014/02/23/java-8-group-by-with-collections/</link>
      <pubDate>Sun, 23 Feb 2014 19:16:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/23/java-8-group-by-with-collections/</guid>
      <description>static class Person { private String name; private int age; Person(String name, int age) { this.name = name; this.age = age; } @Override public String toString() { return String.format(&amp;#34;Person{name=&amp;#39;%s&amp;#39;, age=%d}&amp;#34;, name, age); } } Stream&amp;lt;Person&amp;gt; people = Stream.of(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); Map&amp;lt;Integer, List&amp;lt;String&amp;gt;&amp;gt; peopleByAge = people .collect(groupingBy(p -&amp;gt; p.age, mapping((Person p) -&amp;gt; p.name, toList()))); System.out.println(peopleByAge); {24=[Paul], 28=[Will], 30=[Mark]} &amp;gt; people = [ {:name =&amp;gt; &amp;#34;Paul&amp;#34;, :age =&amp;gt; 24}, {:name =&amp;gt; &amp;#34;Mark&amp;#34;, :age =&amp;gt; 30}, {:name =&amp;gt; &amp;#34;Will&amp;#34;, :age =&amp;gt; 28}] &amp;gt; people.</description>
    </item>
    
    <item>
      <title>Java 8: Sorting values in collections</title>
      <link>https://markhneedham.com/blog/2014/02/23/java-8-sorting-values-in-collections/</link>
      <pubDate>Sun, 23 Feb 2014 14:43:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/23/java-8-sorting-values-in-collections/</guid>
      <description>static class Person { private String name; private int age; Person(String name, int age) { this.name = name; this.age = age; } @Override public String toString() { return String.format(&amp;#34;Person{name=&amp;#39;%s&amp;#39;, age=%d}&amp;#34;, name, age); } } List&amp;lt;Person&amp;gt; people = Arrays.asList(new Person(&amp;#34;Paul&amp;#34;, 24), new Person(&amp;#34;Mark&amp;#34;, 30), new Person(&amp;#34;Will&amp;#34;, 28)); people.stream().sorted((p1, p2) -&amp;gt; p1.age - p2.age).forEach(System.out::println); Person{name=&amp;#39;Paul&amp;#39;, age=24} Person{name=&amp;#39;Will&amp;#39;, age=28} Person{name=&amp;#39;Mark&amp;#39;, age=30} Collections.sort(people, new Comparator&amp;lt;Person&amp;gt;() { @Override public int compare(Person o1, Person o2) { return o1.</description>
    </item>
    
    <item>
      <title>Automating Skype&#39;s &#39;This message has been removed&#39;</title>
      <link>https://markhneedham.com/blog/2014/02/20/automating-skypes-this-message-has-been-removed/</link>
      <pubDate>Thu, 20 Feb 2014 23:16:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/20/automating-skypes-this-message-has-been-removed/</guid>
      <description>on run {input, parameters} tell application &amp;#34;Skype&amp;#34; activate end tell tell application &amp;#34;System Events&amp;#34; set message to &amp;#34;now you see me, now you don&amp;#39;t&amp;#34; keystroke message keystroke return keystroke (ASCII character 30) --up arrow repeat length of message times keystroke (ASCII character 8) --backspace end repeat keystroke return end tell return input end run </description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Set Based Operations</title>
      <link>https://markhneedham.com/blog/2014/02/20/neo4j-cypher-set-based-operations/</link>
      <pubDate>Thu, 20 Feb 2014 18:22:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/20/neo4j-cypher-set-based-operations/</guid>
      <description>public class SetBasedOperations { private static final Label PERSON = DynamicLabel.label( &amp;#34;Person&amp;#34; ); private static final Label OFFICE = DynamicLabel.label( &amp;#34;Office&amp;#34; ); private static final DynamicRelationshipType COLLEAGUES = DynamicRelationshipType.withName( &amp;#34;COLLEAGUES&amp;#34; ); private static final DynamicRelationshipType MEMBER_OF = DynamicRelationshipType.withName( &amp;#34;MEMBER_OF&amp;#34; ); public static void main( String[] args ) throws IOException { Random random = new Random(); String path = &amp;#34;/tmp/set-based-operations&amp;#34;; FileUtils.deleteRecursively( new File( path ) ); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); Transaction tx = db.</description>
    </item>
    
    <item>
      <title>Neo4j: Creating nodes and relationships from a list of maps</title>
      <link>https://markhneedham.com/blog/2014/02/17/neo4j-creating-nodes-and-relationships-from-a-list-of-maps/</link>
      <pubDate>Mon, 17 Feb 2014 14:11:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/17/neo4j-creating-nodes-and-relationships-from-a-list-of-maps/</guid>
      <description>MERGE (me:User {userId: 1} ) SET me.name = &amp;quot;Mark&amp;quot; FOREACH (f IN [{userId: 2, name: &amp;quot;Michael&amp;quot;}, {userId: 3, name: &amp;quot;Peter&amp;quot;}] | MERGE (u:User {userId: f.userId}) SET u = f MERGE (me)-[:FRIENDS_WITH]-&amp;gt;(u)) MERGE (me:User { userId: {userId} }) SET me.name = {name} FOREACH(f IN {friends} | MERGE (u:User {userId: f.userId }) SET u = f MERGE (me)-[:FRIENDS_WITH]-&amp;gt;(u)) public class ListsOfMapsCypher { public static void main( String[] args ) { ObjectNode request = JsonNodeFactory.</description>
    </item>
    
    <item>
      <title>Neo4j: Value in relationships, but value in nodes too!</title>
      <link>https://markhneedham.com/blog/2014/02/13/neo4j-value-in-relationships-but-value-in-nodes-too/</link>
      <pubDate>Thu, 13 Feb 2014 00:10:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/13/neo4j-value-in-relationships-but-value-in-nodes-too/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jython/Neo4j: java.lang.ExceptionInInitializerError: java.lang.ExceptionInInitializerError</title>
      <link>https://markhneedham.com/blog/2014/02/05/jythonneo4j-java-lang-exceptionininitializererror-java-lang-exceptionininitializererror/</link>
      <pubDate>Wed, 05 Feb 2014 12:21:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/05/jythonneo4j-java-lang-exceptionininitializererror-java-lang-exceptionininitializererror/</guid>
      <description>$ jython -Dpython.path /path/to/neo4j.jar Jython 2.5.3 (2.5:c56500f08d34+, Aug 13 2012, 14:48:36) [Java HotSpot(TM) 64-Bit Server VM (Oracle Corporation)] on java1.7.0_45 Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information. &amp;gt;&amp;gt;&amp;gt; import org.neo4j.graphdb.factory &amp;gt;&amp;gt;&amp;gt; org.neo4j.graphdb.factory.GraphDatabaseFactory().newEmbeddedDatabase(&amp;#34;/tmp/foo&amp;#34;) Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:83) at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:198) at org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) java.lang.ExceptionInInitializerError: java.lang.ExceptionInInitializerError &amp;gt;&amp;gt;&amp;gt; import org.neo4j.graphdb.factory.GraphDatabaseSettings Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; java.</description>
    </item>
    
    <item>
      <title>Java: Handling a RuntimeException in a Runnable</title>
      <link>https://markhneedham.com/blog/2014/01/31/java-handling-a-runtimeexception-in-a-runnable/</link>
      <pubDate>Fri, 31 Jan 2014 23:59:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/java-handling-a-runtimeexception-in-a-runnable/</guid>
      <description>import java.util.ArrayList; import java.util.List; import java.util.concurrent.*; public class RunnableBlog { public static void main(String[] args) throws ExecutionException, InterruptedException { ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor(); executor.scheduleAtFixedRate(new Runnable() { @Override public void run() { System.out.println(Thread.currentThread().getName() + &amp;#34; -&amp;gt; &amp;#34; + System.currentTimeMillis()); throw new RuntimeException(&amp;#34;game over&amp;#34;); } }, 0, 1000, TimeUnit.MILLISECONDS).get(); System.out.println(&amp;#34;exit&amp;#34;); executor.shutdown(); } } Exception in thread &amp;#34;main&amp;#34; pool-1-thread-1 -&amp;gt; 1391212558074 java.util.concurrent.ExecutionException: java.lang.RuntimeException: game over at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:252) at java.util.concurrent.FutureTask.get(FutureTask.java:111) at RunnableBlog.main(RunnableBlog.java:11) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Optimising a football query</title>
      <link>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-optimising-a-football-query/</link>
      <pubDate>Fri, 31 Jan 2014 22:41:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-optimising-a-football-query/</guid>
      <description>MATCH (game)&amp;lt;-[:contains_match]-(season:Season), (team)&amp;lt;-[:away_team]-(game), (stats)-[:in]-&amp;gt;(game), (team)&amp;lt;-[:for]-(stats)&amp;lt;-[:played]-(player) WHERE season.name = &amp;quot;2012-2013&amp;quot; RETURN player.name, COLLECT(DISTINCT team.name), SUM(stats.goals) as goals ORDER BY goals DESC LIMIT 10 MATCH (game)&amp;lt;-[:contains_match]-(season:Season) MATCH (team)&amp;lt;-[:away_team]-(game) MATCH (stats)-[:in]-&amp;gt;(game) MATCH (team)&amp;lt;-[:for]-(stats)&amp;lt;-[:played]-(player) WHERE season.name = &amp;quot;2012-2013&amp;quot; RETURN player.name, COLLECT(DISTINCT team.name), SUM(stats.goals) as goals ORDER BY goals DESC LIMIT 10 MATCH (game)&amp;lt;-[:contains_match]-(season:Season) WHERE season.name = &amp;quot;2012-2013&amp;quot; MATCH (team)&amp;lt;-[:away_team]-(game) MATCH (stats)-[:in]-&amp;gt;(game) MATCH (team)&amp;lt;-[:for]-(stats)&amp;lt;-[:played]-(player) RETURN player.name, COLLECT(DISTINCT team.name), SUM(stats.goals) as goals ORDER BY goals DESC LIMIT 10 MATCH (team)&amp;lt;-[:away_team]-(game) MATCH (game)&amp;lt;-[:contains_match]-(season:Season) WHERE season.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Cypher - Index Hints and Neo.ClientError.Schema.NoSuchIndex</title>
      <link>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-cypher-index-hints-and-neo-clienterror-schema-nosuchindex/</link>
      <pubDate>Fri, 31 Jan 2014 07:14:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-cypher-index-hints-and-neo-clienterror-schema-nosuchindex/</guid>
      <description>CREATE INDEX ON :Player(name) MATCH p USING INDEX p:Player(name) WHERE p.name = &amp;quot;Wayne Rooney&amp;quot; RETURN p Cannot use index hint in this context. The label and property comparison must be specified on a non-optional node Label: `Player` Property name: `name` Neo.ClientError.Schema.NoSuchIndex MATCH (p:Player) USING INDEX p:Player(name) WHERE p.name = &amp;quot;Wayne Rooney&amp;quot; RETURN p MATCH (p:Player) USING INDEX p:Player(name) WHERE p.name = &amp;quot;Wayne Rooney&amp;quot; OR p.name = &amp;quot;Robin Van Persie&amp;quot; RETURN p Cannot use index hint in this context.</description>
    </item>
    
    <item>
      <title>Java: Work out the serialVersionUID of a class</title>
      <link>https://markhneedham.com/blog/2014/01/31/java-work-out-the-serialversionuid-of-a-class/</link>
      <pubDate>Fri, 31 Jan 2014 06:51:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/java-work-out-the-serialversionuid-of-a-class/</guid>
      <description>import java.io.Serializable; public class SerialiseMe implements Serializable { } $ serialver -classpath target/serialiser-0.0.1-SNAPSHOT.jar SerialiseMe SerialiseMe: static final long serialVersionUID = -6060222249255158490L; public class Serialiser { public static void main( String[] args ) throws IOException, ClassNotFoundException { ByteArrayOutputStream bout = new ByteArrayOutputStream( ); ObjectOutputStream oout = new ObjectOutputStream( bout ); Object value = new SerialiseMe(); oout.writeObject( value ); oout.close(); byte[] bytes = bout.toByteArray(); FileOutputStream fileOuputStream = new FileOutputStream(&amp;#34;/tmp/foo.txt&amp;#34;); fileOuputStream.write(bytes); fileOuputStream.close(); } } public class Deserialiser { public static void main( String[] args ) throws IOException, ClassNotFoundException { FileInputStream fileInputStream = new FileInputStream( new File( &amp;#34;/tmp/foo.</description>
    </item>
    
    <item>
      <title>Neo4j: org.eclipse.jetty.io.EofException - Caused by: java.io.IOException: Broken pipe</title>
      <link>https://markhneedham.com/blog/2014/01/27/neo4j-org-eclipse-jetty-io-eofexception-caused-by-java-io-ioexception-broken-pipe/</link>
      <pubDate>Mon, 27 Jan 2014 11:32:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/27/neo4j-org-eclipse-jetty-io-eofexception-caused-by-java-io-ioexception-broken-pipe/</guid>
      <description>SEVERE: The response of the WebApplicationException cannot be utilized as the response is already committed. Re-throwing to the HTTP container javax.ws.rs.WebApplicationException: javax.ws.rs.WebApplicationException: org.eclipse.jetty.io.EofException at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:174) at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506) at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136) at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) at org.</description>
    </item>
    
    <item>
      <title>Neo4j HA: org.neo4j.graphdb.TransactionFailureException: Timeout waiting for database to allow new transactions. Blocking components (1): []</title>
      <link>https://markhneedham.com/blog/2014/01/27/neo4j-ha-org-neo4j-graphdb-transactionfailureexception-timeout-waiting-for-database-to-allow-new-transactions-blocking-components-1/</link>
      <pubDate>Mon, 27 Jan 2014 09:42:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/27/neo4j-ha-org-neo4j-graphdb-transactionfailureexception-timeout-waiting-for-database-to-allow-new-transactions-blocking-components-1/</guid>
      <description>org.neo4j.graphdb.TransactionFailureException: Timeout waiting for database to allow new transactions. Blocking components (1): [] at org.neo4j.kernel.ha.HighlyAvailableGraphDatabase.beginTx(HighlyAvailableGraphDatabase.java:199) at org.neo4j.kernel.TransactionBuilderImpl.begin(TransactionBuilderImpl.java:43) at org.neo4j.kernel.InternalAbstractGraphDatabase.beginTx(InternalAbstractGraphDatabase.java:949) at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:52) at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:288) at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108) at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147) at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1469) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1400) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506) at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477) at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503) at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211) at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096) at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432) at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175) at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030) at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136) at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) at org.</description>
    </item>
    
    <item>
      <title>Neo4j HA: Election could not pick a winner</title>
      <link>https://markhneedham.com/blog/2014/01/24/neo4j-ha-election-could-not-pick-a-winner/</link>
      <pubDate>Fri, 24 Jan 2014 10:30:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/24/neo4j-ha-election-could-not-pick-a-winner/</guid>
      <description>2014-01-23 11:17:24.510+0000 INFO [o.n.c.p.a.m.MultiPaxosContext$ElectionContextImpl]: Doing elections for role coordinator 2014-01-23 11:17:24.510+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[performRoleElections]-&amp;gt;election from:cluster://10.239.8.251:5001 conversation-id:3/13# 2014-01-23 11:17:24.513+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[vote:coordinator]-&amp;gt;election from:cluster://10.151.24.237:5001 conversation-id:3/13# 2014-01-23 11:17:24.515+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[voted]-&amp;gt;election from:cluster://10.138.29.197:5001 conversation-id:3/13# 2014-01-23 11:17:24.516+0000 DEBUG [o.n.c.p.e.ElectionState$2]: ElectionState: election-[voted]-&amp;gt;election from:cluster://10.151.24.237:5001 conversation-id:3/13# 2014-01-23 11:17:24.519+0000 DEBUG [o.n.c.p.a.m.MultiPaxosContext$ElectionContextImpl$2]: Elections ended up with list [] 2014-01-23 11:17:24.519+0000 WARN [o.n.c.p.e.ElectionState]: Election could not pick a winner </description>
    </item>
    
    <item>
      <title>Neo4j Backup: Store copy and consistency check</title>
      <link>https://markhneedham.com/blog/2014/01/22/neo4j-backup-store-copy-and-consistency-check/</link>
      <pubDate>Wed, 22 Jan 2014 17:36:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/22/neo4j-backup-store-copy-and-consistency-check/</guid>
      <description>$ pwd /Users/markneedham/Downloads/neo4j-enterprise-2.0.0 $ ./bin/neo4j-backup -from single://127.0.0.1 -to /tmp/foo -verify false Performing full backup from &amp;#39;single://127.0.0.1&amp;#39; Files copied ................ done Done $ ./bin/neo4j-backup -from single://127.0.0.1 -to /tmp/foo Performing full backup from &amp;#39;single://127.0.0.1&amp;#39; Files copied ................ done Full consistency check .................... 10% .................... 20% .................... 30% .................... 40% .................... 50% .................... 60% .................... 70% .................... 80% .................... 90% .................... 100% Done $ java -cp &amp;#39;lib/*:system/lib/*&amp;#39; org.neo4j.consistency.ConsistencyCheckTool /tmp/foo Full consistency check .................... 10% .</description>
    </item>
    
    <item>
      <title>Neo4j Backup: java.lang.ClassCastException: org.jboss.netty.buffer.BigEndianHeapChannelBuffer cannot be cast to org.neo4j.cluster.com.message.Message</title>
      <link>https://markhneedham.com/blog/2014/01/19/neo4j-backup-java-lang-classcastexception-org-jboss-netty-buffer-bigendianheapchannelbuffer-cannot-be-cast-to-org-neo4j-cluster-com-message-message/</link>
      <pubDate>Sun, 19 Jan 2014 19:29:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/19/neo4j-backup-java-lang-classcastexception-org-jboss-netty-buffer-bigendianheapchannelbuffer-cannot-be-cast-to-org-neo4j-cluster-com-message-message/</guid>
      <description>./neo4j-backup -from single://192.168.1.34 -to /mnt/backup/neo4j-backup online_backup_server=192.168.1.34:6363 ./neo4j-backup -from single://192.168.1.34:6363 -to /mnt/backup/neo4j-backup ./neo4j-backup -from ha://192.168.1.34 -to /mnt/backup/neo4j-backup ha.cluster_server=192.168.1.34:5002 ./neo4j-backup -from ha://192.168.1.34:5002 -to /mnt/backup/neo4j-backup ./neo4j-backup -from ha://192.168.1.34:6362 -to /mnt/backup/neo4j-backup 2014-01-19 19:24:30.842+0000 ERROR [o.n.c.c.NetworkSender]: Receive exception: java.lang.ClassCastException: org.jboss.netty.buffer.BigEndianHeapChannelBuffer cannot be cast to org.neo4j.cluster.com.message.Message at org.neo4j.cluster.com.NetworkSender$NetworkMessageSender.messageReceived(NetworkSender.java:409) ~[neo4j-cluster-2.0.0.jar:2.0.0] at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:107) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:88) ~[netty-3.6.3.Final.jar:na] at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) ~[netty-3.6.3.Final.jar:na] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_45] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_45] at java.</description>
    </item>
    
    <item>
      <title>Learning about bitmaps</title>
      <link>https://markhneedham.com/blog/2014/01/12/learning-about-bitmaps/</link>
      <pubDate>Sun, 12 Jan 2014 17:44:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/12/learning-about-bitmaps/</guid>
      <description>java&amp;gt; int bitmap = 1 &amp;lt;&amp;lt; 31; int bitmap = -2147483648 java&amp;gt; 0X80000000; Integer res16 = -2147483648 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 31); Integer res10 = -2147483648 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 0); Integer res11 = 0 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 1); Integer res12 = 0 java&amp;gt; bitmap &amp;amp; (1 &amp;lt;&amp;lt; 30); Integer res13 = 0 java&amp;gt; bitmap |= (1 &amp;lt;&amp;lt; 30); Integer res14 = -1073741824 java&amp;gt; 0XC0000000; Integer res15 = -1073741824 java&amp;gt; bitmap ^= (1 &amp;lt;&amp;lt; 30); Integer res2 = -2147483648 </description>
    </item>
    
  </channel>
</rss>