<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2014s on Mark Needham</title>
    <link>https://markhneedham.com/blog/2014/</link>
    <description>Recent content in 2014s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Dec 2014 21:55:23 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/2014/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R: Featuring engineering for a linear model</title>
      <link>https://markhneedham.com/blog/2014/12/28/r-featuring-engineering-for-a-linear-model/</link>
      <pubDate>Sun, 28 Dec 2014 21:55:23 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/28/r-featuring-engineering-for-a-linear-model/</guid>
      <description>I previously wrote about a linear model I created to predict how many people would RSVP &#39;yes&#39; to a meetup event and having not found much correlation between any of my independent variables and RSVPs was a bit stuck.
 As luck would have it I bumped into Antonios at a meetup a month ago and he offered to take a look at what I&amp;#8217;d tried so far and give me some tips on how to progress.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.6 - Cypher: FOREACH slowness</title>
      <link>https://markhneedham.com/blog/2014/12/28/neo4j-2-1-6-cypher-foreach-slowness/</link>
      <pubDate>Sun, 28 Dec 2014 04:28:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/28/neo4j-2-1-6-cypher-foreach-slowness/</guid>
      <description>A common problem that people have when using Neo4j for social network applications is updating a person with their newly imported friends.
 We&amp;#8217;ll have an array of friends that we want to connect to a single Person node. Assuming the following schema&amp;#8230;&amp;#8203;
 $ schema Indexes ON :Person(id) ONLINE No constraints   &amp;#8230;&amp;#8203;a simplified version would look like this:
 WITH range (2,1002) AS friends MERGE (p:Person {id: 1}) FOREACH(f IN friends | MERGE (friend:Person {id: f}) MERGE (friend)-[:FRIENDS]-&amp;gt;p);   If we execute that on an empty database we&amp;#8217;ll see something like this:</description>
    </item>
    
    <item>
      <title>R: Vectorising all the things</title>
      <link>https://markhneedham.com/blog/2014/12/22/r-vectorising-all-the-things/</link>
      <pubDate>Mon, 22 Dec 2014 11:46:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/22/r-vectorising-all-the-things/</guid>
      <description>After my last post about finding the distance a date/time is from the weekend Hadley Wickham suggested I could improve the function by vectorising it...
  @markhneedham vectorise with pmin(pmax(dateToLookup - before, 0), pmax(after - dateToLookup, 0)) / dhours(1)
&amp;mdash; Hadley Wickham (@hadleywickham) December 14, 2014   &amp;#8230;&amp;#8203;so I thought I&amp;#8217;d try and vectorise some of the other functions I&amp;#8217;ve written recently and show the two versions.
 I found the following articles useful for explaining vectorisation and why you might want to do it:</description>
    </item>
    
    <item>
      <title>R: Time to/from the weekend</title>
      <link>https://markhneedham.com/blog/2014/12/13/r-time-tofrom-the-weekend/</link>
      <pubDate>Sat, 13 Dec 2014 20:38:22 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/13/r-time-tofrom-the-weekend/</guid>
      <description>In my last post I showed some examples using R&amp;#8217;s lubridate package and another problem it made really easy to solve was working out how close a particular date time was to the weekend.
 I wanted to write a function which would return the previous Sunday or upcoming Saturday depending on which was closer.
 lubridate&amp;#8217;s floor_date and ceiling_date functions make this quite simple.
 e.g. if we want to round the 18th December down to the beginning of the week and up to the beginning of the next week we could do the following:</description>
    </item>
    
    <item>
      <title>R: Numeric representation of date time</title>
      <link>https://markhneedham.com/blog/2014/12/13/r-numeric-representation-of-date-time/</link>
      <pubDate>Sat, 13 Dec 2014 19:58:13 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/13/r-numeric-representation-of-date-time/</guid>
      <description>I&amp;#8217;ve been playing around with date times in R recently and I wanted to derive a numeric representation for a given value to make it easier to see the correlation between time and another variable.
 e.g. December 13th 2014 17:30 should return 17.5 since it&amp;#8217;s 17.5 hours since midnight.
 Using the standard R libraries we would write the following code:
 &amp;gt; december13 = as.POSIXlt(&#34;2014-12-13 17:30:00&#34;) &amp;gt; as.numeric(december13 - trunc(december13, &#34;</description>
    </item>
    
    <item>
      <title>R: data.table/dplyr/lubridate - Error in wday(date, label = TRUE, abbr = FALSE) :  unused arguments (label = TRUE, abbr = FALSE)</title>
      <link>https://markhneedham.com/blog/2014/12/11/r-data-tabledplyrlubridate-error-in-wdaydate-label-true-abbr-false-unused-arguments-label-true-abbr-false/</link>
      <pubDate>Thu, 11 Dec 2014 19:03:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/11/r-data-tabledplyrlubridate-error-in-wdaydate-label-true-abbr-false-unused-arguments-label-true-abbr-false/</guid>
      <description>I spent a couple of hours playing around with data.table this evening and tried changing some code written using a data frame to use a data table instead.
 I started off by building a data frame which contains all the weekends between 2010 and 2015...
 &amp;gt; library(lubridate) &amp;gt; library(dplyr) &amp;gt; dates = data.frame(date = seq( dmy(&#34;01-01-2010&#34;), to=dmy(&#34;01-01-2015&#34;), by=&#34;day&#34; )) &amp;gt; dates = dates %&amp;gt;% filter(wday(date, label = TRUE, abbr = FALSE) %in% c(&#34;</description>
    </item>
    
    <item>
      <title>R: Cleaning up and plotting Google Trends data</title>
      <link>https://markhneedham.com/blog/2014/12/09/r-cleaning-up-plotting-google-trends-data/</link>
      <pubDate>Tue, 09 Dec 2014 18:14:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/09/r-cleaning-up-plotting-google-trends-data/</guid>
      <description>I recently came across an excellent article written by Stian Haklev in which he describes things he wishes he&amp;#8217;d been told before starting out with R, one being to do all data clean up in code which I thought I&amp;#8217;d give a try.
  My goal is to leave the raw data completely unchanged, and do all the transformation in code, which can be rerun at any time. While I&amp;#8217;m writing the scripts, I&amp;#8217;m often jumping around, selectively executing individual lines or code blocks, running commands to inspect the data in the REPL (read-evaluate-print-loop, where each command is executed as soon as you type enter, in the picture above it&amp;#8217;s the pane to the right), etc.</description>
    </item>
    
    <item>
      <title>R: dplyr - mutate with strptime (incompatible size/wrong result size)</title>
      <link>https://markhneedham.com/blog/2014/12/08/r-dplyr-mutate-with-strptime-incompatible-sizewrong-result-size/</link>
      <pubDate>Mon, 08 Dec 2014 19:02:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/08/r-dplyr-mutate-with-strptime-incompatible-sizewrong-result-size/</guid>
      <description>Having worked out how to translate a string into a date or NA if it wasn&amp;#8217;t the appropriate format the next thing I wanted to do was store the result of the transformation in my data frame.
 I started off with this:
 data = data.frame(x = c(&#34;2014-01-01&#34;, &#34;2014-02-01&#34;, &#34;foo&#34;)) &amp;gt; data x 1 2014-01-01 2 2014-02-01 3 foo   And when I tried to do the date translation ran into the following error:</description>
    </item>
    
    <item>
      <title>R: String to Date or NA</title>
      <link>https://markhneedham.com/blog/2014/12/07/r-string-to-date-or-na/</link>
      <pubDate>Sun, 07 Dec 2014 19:29:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/07/r-string-to-date-or-na/</guid>
      <description>I&amp;#8217;ve been trying to clean up a CSV file which contains some rows with dates and some not - I only want to keep the cells which do have dates so I&amp;#8217;ve been trying to work out how to do that.
 My first thought was that I&amp;#8217;d try and find a function which would convert the contents of the cell into a date if it was in date format and NA if not.</description>
    </item>
    
    <item>
      <title>R: Applying a function to every row of a data frame</title>
      <link>https://markhneedham.com/blog/2014/12/04/r-applying-a-function-to-every-row-of-a-data-frame/</link>
      <pubDate>Thu, 04 Dec 2014 06:31:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/12/04/r-applying-a-function-to-every-row-of-a-data-frame/</guid>
      <description>In my continued exploration of London&amp;#8217;s meetups I wanted to calculate the distance from meetup venues to a centre point in London.
 I&amp;#8217;ve created a gist containing the coordinates of some of the venues that host NoSQL meetups in London town if you want to follow along:
 library(dplyr) # https://gist.github.com/mneedham/7e926a213bf76febf5ed venues = read.csv(&#34;/tmp/venues.csv&#34;) venues %&amp;gt;% head() ## venue lat lon ## 1 Skills Matter 51.52482 -0.099109 ## 2 Skinkers 51.</description>
    </item>
    
    <item>
      <title>Spark: Write to CSV file with header using saveAsFile</title>
      <link>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file-with-header-using-saveasfile/</link>
      <pubDate>Sun, 30 Nov 2014 08:21:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file-with-header-using-saveasfile/</guid>
      <description>In my last blog post I showed how to write to a single CSV file using Spark and Hadoop and the next thing I wanted to do was add a header row to the resulting row.
 Hadoop&amp;#8217;s https://hadoop.apache.org/docs/current/api/org/apache/hadoop/fs/FileUtil.html#copyMerge(org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, boolean, org.apache.hadoop.conf.Configuration, java.lang.String) function does take a String parameter but it adds this text to the end of each partition file which isn&amp;#8217;t quite what we want.
 However, if we copy that function into our own FileUtil class we can restructure it to do what we want:</description>
    </item>
    
    <item>
      <title>Spark: Write to CSV file</title>
      <link>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file/</link>
      <pubDate>Sun, 30 Nov 2014 07:40:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/30/spark-write-to-csv-file/</guid>
      <description>A couple of weeks ago I wrote how I&amp;#8217;d been using Spark to explore a City of Chicago Crime data set and having worked out how many of each crime had been committed I wanted to write that to a CSV file.
 Spark provides a saveAsTextFile function which allows us to save RDD&amp;#8217;s so I refactored my code into the following format to allow me to use that:
 import au.</description>
    </item>
    
    <item>
      <title>Docker/Neo4j: Port forwarding on Mac OS X not working</title>
      <link>https://markhneedham.com/blog/2014/11/27/dockerneo4j-port-forwarding-on-mac-os-x-not-working/</link>
      <pubDate>Thu, 27 Nov 2014 12:28:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/27/dockerneo4j-port-forwarding-on-mac-os-x-not-working/</guid>
      <description>Prompted by Ognjen Bubalo&amp;#8217;s excellent blog post I thought it was about time I tried running Neo4j on a docker container on my Mac Book Pro to make it easier to play around with different data sets.
 I got the container up and running by following Ognien&amp;#8217;s instructions and had the following ports forwarded to my host machine:
 $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c62f8601e557 tpires/neo4j:latest &#34;</description>
    </item>
    
    <item>
      <title>R: dplyr - Select &#39;random&#39; rows from a data frame</title>
      <link>https://markhneedham.com/blog/2014/11/26/r-dplyr-select-random-rows-from-a-data-frame/</link>
      <pubDate>Wed, 26 Nov 2014 00:01:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/26/r-dplyr-select-random-rows-from-a-data-frame/</guid>
      <description>Frequently I find myself wanting to take a sample of the rows in a data frame where just taking the head isn&amp;#8217;t enough.
 Let&amp;#8217;s say we start with the following data frame:
 data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) )   And we&amp;#8217;d like to sample 10 rows to see what it contains. We&amp;#8217;ll start by generating 10 random numbers to represent row numbers using the runif function:</description>
    </item>
    
    <item>
      <title>R: dplyr - &#34;Variables not shown&#34;</title>
      <link>https://markhneedham.com/blog/2014/11/23/r-dplyr-variables-not-shown/</link>
      <pubDate>Sun, 23 Nov 2014 01:02:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/23/r-dplyr-variables-not-shown/</guid>
      <description>I recently ran into a problem where the result of applying some operations to a data frame wasn&amp;#8217;t being output the way I wanted.
 I started with this data frame:
 words = function(numberOfWords, lengthOfWord) { w = c(1:numberOfWords) for(i in 1:numberOfWords) { w[i] = paste(sample(letters, lengthOfWord, replace=TRUE), collapse = &#34;&#34;) } w } numberOfRows = 100 df = data.frame(a = sample (1:numberOfRows, 10, replace = TRUE), b = sample (1:numberOfRows, 10, replace = TRUE), name = words(numberOfRows, 10))   I wanted to group the data frame by a and b and output a comma separated list of the associated names.</description>
    </item>
    
    <item>
      <title>R: ggmap - Overlay shapefile with filled polygon of regions</title>
      <link>https://markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/</link>
      <pubDate>Mon, 17 Nov 2014 00:53:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/17/r-ggmap-overlay-shapefile-with-filled-polygon-of-regions/</guid>
      <description>I&amp;#8217;ve been playing around with plotting maps in R over the last week and got to the point where I wanted to have a google map in the background with a filled polygon on a shapefile in the foreground.
 The first bit is reasonably simple - we can just import the ggmap library and make a call to get_map:
 &amp;gt; library(ggmap) &amp;gt; sfMap = map = get_map(location = &#39;San Francisco&#39;, zoom = 12)     Next I wanted to show the outlines of the different San Francisco zip codes and came across a blog post by Paul Bidanset on Baltimore neighbourhoods which I was able to adapt.</description>
    </item>
    
    <item>
      <title>Spark: Parse CSV file and group by column value</title>
      <link>https://markhneedham.com/blog/2014/11/16/spark-parse-csv-file-and-group-by-column-value/</link>
      <pubDate>Sun, 16 Nov 2014 22:53:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/16/spark-parse-csv-file-and-group-by-column-value/</guid>
      <description>I&amp;#8217;ve found myself working with large CSV files quite frequently and realising that my existing toolset didn&amp;#8217;t let me explore them quickly I thought I&amp;#8217;d spend a bit of time looking at Spark to see if it could help.
 I&amp;#8217;m working with a crime data set released by the City of Chicago: it&amp;#8217;s 1GB in size and contains details of 4 million crimes:
 $ ls -alh ~/Downloads/Crimes_-_2001_to_present.csv -rw-r--r--@ 1 markneedham staff 1.</description>
    </item>
    
    <item>
      <title>R: dplyr - Sum for group_by multiple columns</title>
      <link>https://markhneedham.com/blog/2014/11/11/r-dplyr-sum-for-group_by-multiple-columns/</link>
      <pubDate>Tue, 11 Nov 2014 00:17:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/11/r-dplyr-sum-for-group_by-multiple-columns/</guid>
      <description>Over the weekend I was playing around with dplyr and had the following data frame grouped by both columns:
 &amp;gt; library(dplyr) &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) ) &amp;gt; data %&amp;gt;% count(letter, number) %&amp;gt;% head(20) Source: local data frame [20 x 3] Groups: letter letter number n 1 A 1 184 2 A 2 192 3 A 3 183 4 A 4 193 5 A 5 214 6 A 6 172 7 A 7 196 8 A 8 198 9 A 9 174 10 A 10 196 11 B 1 212 12 B 2 198 13 B 3 194 14 B 4 181 15 B 5 203 16 B 6 234 17 B 7 221 18 B 8 179 19 B 9 182 20 B 10 170   I wanted to add an extra column which would show what percentage of the values for that letter each number had.</description>
    </item>
    
    <item>
      <title>R: dplyr - Maximum value row in each group</title>
      <link>https://markhneedham.com/blog/2014/11/10/r-maximum-value-row-in-each-group/</link>
      <pubDate>Mon, 10 Nov 2014 22:06:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/10/r-maximum-value-row-in-each-group/</guid>
      <description>In my continued work with R&amp;#8217;s dplyr I wanted to be able to group a data frame by some columns and then find the maximum value for each group.
 We&amp;#8217;ll continue with my favourite dummy data set:
 &amp;gt; library(dplyr) &amp;gt; data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) )   I started with the following code to count how many occurrences of each (letter, number) pair there were:</description>
    </item>
    
    <item>
      <title>R: dplyr - Ordering by count after multiple column group_by</title>
      <link>https://markhneedham.com/blog/2014/11/09/r-dplyr-ordering-by-count-after-multiple-column-group_by/</link>
      <pubDate>Sun, 09 Nov 2014 09:30:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/09/r-dplyr-ordering-by-count-after-multiple-column-group_by/</guid>
      <description>I was recently trying to group a data frame by two columns and then sort by the count using dplyr but it wasn&amp;#8217;t sorting in the way I expecting which was initially very confusing.
 I started with this data frame:
 library(dplyr) data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) )   And I wanted to find out how many occurrences of each (letter, number) pair exist in the data set.</description>
    </item>
    
    <item>
      <title>R: Refactoring to dplyr</title>
      <link>https://markhneedham.com/blog/2014/11/09/r-refactoring-to-dplyr/</link>
      <pubDate>Sun, 09 Nov 2014 00:11:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/09/r-refactoring-to-dplyr/</guid>
      <description>I&amp;#8217;ve been looking back over some of the early code I wrote using R before I knew about the dplyr library and thought it&amp;#8217;d be an interesting exercise to refactor some of the snippets.
 We&amp;#8217;ll use the following data frame for each of the examples:
 library(dplyr) data = data.frame( letter = sample(LETTERS, 50000, replace = TRUE), number = sample (1:10, 50000, replace = TRUE) )   Take {n} rows &amp;gt; data[1:5,] letter number 1 R 7 2 Q 3 3 B 8 4 R 3 5 U 2   becomes:</description>
    </item>
    
    <item>
      <title>R: dplyr - Group by field dynamically (&#39;regroup&#39; is deprecated / no applicable method for &#39;as.lazy&#39; applied to an object of class &#34;list&#34; )</title>
      <link>https://markhneedham.com/blog/2014/11/08/r-dplyr-group-by-field-dynamically-regroup-is-deprecated-no-applicable-method-for-as-lazy-applied-to-an-object-of-class-list/</link>
      <pubDate>Sat, 08 Nov 2014 22:29:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/08/r-dplyr-group-by-field-dynamically-regroup-is-deprecated-no-applicable-method-for-as-lazy-applied-to-an-object-of-class-list/</guid>
      <description>A few months ago I wrote a blog explaining how to dynamically/programatically group a data frame by a field using dplyr but that approach has been deprecated in the latest version.
 To recap, the original function looked like this:
 library(dplyr) groupBy = function(df, field) { df %.% regroup(list(field)) %.% summarise(n = n()) }   And if we execute that with a sample data frame we&amp;#8217;ll see the following:</description>
    </item>
    
    <item>
      <title>R: Joining multiple data frames</title>
      <link>https://markhneedham.com/blog/2014/11/07/r-joining-multiple-data-frames/</link>
      <pubDate>Fri, 07 Nov 2014 01:29:09 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/11/07/r-joining-multiple-data-frames/</guid>
      <description>I&amp;#8217;ve been looking through the code from Martin Eastwood&amp;#8217;s excellent talk &#39;http://pena.lt/y/2014/11/02/predicting-football-using-r/[Predicting Football Using R]&#39; and was intrigued by the code which reshaped the data into that expected by glm.
 The original looks like this:
 df &amp;lt;- read.csv(&#39;http://www.football-data.co.uk/mmz4281/1314/E0.csv&#39;) # munge data into format compatible with glm function df &amp;lt;- apply(df, 1, function(row){ data.frame(team=c(row[&#39;HomeTeam&#39;], row[&#39;AwayTeam&#39;]), opponent=c(row[&#39;AwayTeam&#39;], row[&#39;HomeTeam&#39;]), goals=c(row[&#39;FTHG&#39;], row[&#39;FTAG&#39;]), home=c(1, 0)) }) df &amp;lt;- do.call(rbind, df)   The initial data frame looks like this:</description>
    </item>
    
    <item>
      <title>R: Converting a named vector to a data frame</title>
      <link>https://markhneedham.com/blog/2014/10/31/r-converting-a-named-vector-to-a-data-frame/</link>
      <pubDate>Fri, 31 Oct 2014 23:47:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/31/r-converting-a-named-vector-to-a-data-frame/</guid>
      <description>I&amp;#8217;ve been playing around with igraph&amp;#8217;s page rank function to see who the most central nodes in the London NoSQL scene are and I wanted to put the result in a data frame to make the data easier to work with.
 I started off with a data frame containing pairs of people and the number of events that they&amp;#8217;d both RSVP&amp;#8217;d &#39;yes&#39; to:
 &amp;gt; library(dplyr) &amp;gt; data %&amp;gt;% arrange(desc(times)) %&amp;gt;% head(10) p.</description>
    </item>
    
    <item>
      <title>hdiutil: could not access / create failed - Operation canceled</title>
      <link>https://markhneedham.com/blog/2014/10/31/hdiutil-could-not-access-create-failed-operation-canceled/</link>
      <pubDate>Fri, 31 Oct 2014 09:45:32 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/31/hdiutil-could-not-access-create-failed-operation-canceled/</guid>
      <description>Earlier in the year I wrote a blog post showing how to build a Mac OS X DMG file for a Java application and I recently revisited this script to update it to a new version and ran into a frustrating error message.
 I tried to run the following command to create a new DMG file from a source folder...
 $ hdiutil create -volname &#34;DemoBench&#34; -size 100m -srcfolder dmg/ -ov -format UDZO pack.</description>
    </item>
    
    <item>
      <title>Data Modelling: The Thin Model</title>
      <link>https://markhneedham.com/blog/2014/10/27/data-modelling-the-thin-model/</link>
      <pubDate>Mon, 27 Oct 2014 06:55:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/27/data-modelling-the-thin-model/</guid>
      <description>About a third of the way through Mastering Data Modeling the authors describe common data modelling mistakes and one in particular resonated with me - &#39;Thin LDS, Lost Users&#39;.
 LDS stands for &#39;Logical Data Structure&#39; which is a diagram depicting what kinds of data some person or group wants to remember. In other words, a tool to help derive the conceptual model for our domain.
 They describe the problem that a thin model can cause as follows:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Avoiding the Eager</title>
      <link>https://markhneedham.com/blog/2014/10/23/neo4j-cypher-avoiding-the-eager/</link>
      <pubDate>Thu, 23 Oct 2014 05:56:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/23/neo4j-cypher-avoiding-the-eager/</guid>
      <description>Although I love how easy Cypher&amp;#8217;s LOAD CSV command makes it to get data into Neo4j, it currently breaks the rule of least surprise in the way it eagerly loads in all rows for some queries even those using periodic commit.
 
 This is something that my colleague Michael noted in the second of his blog posts explaining how to use LOAD CSV successfully:
  The biggest issue that people ran into, even when following the advice I gave earlier, was that for large imports of more than one million rows, Cypher ran into an out-of-memory situation.</description>
    </item>
    
    <item>
      <title>Neo4j: Modelling sub types</title>
      <link>https://markhneedham.com/blog/2014/10/20/neo4j-modelling-sub-types/</link>
      <pubDate>Mon, 20 Oct 2014 23:08:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/20/neo4j-modelling-sub-types/</guid>
      <description>A question which sometimes comes up when discussing graph data modelling is how you go about modelling sub/super types.
 In my experience there are two reasons why we might want to do this:
   To ensure that certain properties exist on bits of data
  To write drill down queries based on those types
   At the moment the former isn&amp;#8217;t built into Neo4j and you&amp;#8217;d only be able to achieve it by wiring up some code in a pre commit hook of a transaction event handler so we&amp;#8217;ll focus on the latter.</description>
    </item>
    
    <item>
      <title>Python: Converting a date string to timestamp</title>
      <link>https://markhneedham.com/blog/2014/10/20/python-converting-a-date-string-to-timestamp/</link>
      <pubDate>Mon, 20 Oct 2014 15:53:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/20/python-converting-a-date-string-to-timestamp/</guid>
      <description>I&amp;#8217;ve been playing around with Python over the last few days while cleaning up a data set and one thing I wanted to do was translate date strings into a timestamp.
 I started with a date in this format:
 date_text = &#34;13SEP2014&#34;   So the first step is to translate that into a Python date - the strftime section of the documentation is useful for figuring out which format code is needed:</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - The sneaky null character</title>
      <link>https://markhneedham.com/blog/2014/10/18/neo4j-load-csv-the-sneaky-null-character/</link>
      <pubDate>Sat, 18 Oct 2014 10:49:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/18/neo4j-load-csv-the-sneaky-null-character/</guid>
      <description>I spent some time earlier in the week trying to import a CSV file extracted from Hadoop into Neo4j using Cypher&amp;#8217;s LOAD CSV command and initially struggled due to some rogue characters.
 The CSV file looked like this:
 $ cat foo.csv foo,bar,baz 1,2,3   I wrote the following LOAD CSV query to extract some of the fields and compare others:
 load csv with headers from &#34;file:/Users/markneedham/Downloads/foo.csv&#34; AS line RETURN line.</description>
    </item>
    
    <item>
      <title>R: Linear models with the lm function, NA values and Collinearity</title>
      <link>https://markhneedham.com/blog/2014/10/18/r-linear-models-with-the-lm-function-na-values-and-collinearity/</link>
      <pubDate>Sat, 18 Oct 2014 06:35:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/18/r-linear-models-with-the-lm-function-na-values-and-collinearity/</guid>
      <description>In my continued playing around with R I&amp;#8217;ve sometimes noticed &#39;NA&#39; values in the linear regression models I created but hadn&amp;#8217;t really thought about what that meant.
 On the advice of Peter Huber I recently started working my way through Coursera&amp;#8217;s Regression Models which has a whole slide explaining its meaning:
   So in this case &#39;z&#39; doesn&amp;#8217;t help us in predicting Fertility since it doesn&amp;#8217;t give us any more information that we can&amp;#8217;t already get from &#39;Agriculture&#39; and &#39;Education&#39;.</description>
    </item>
    
    <item>
      <title>The Hard Thing About Hard Things - Ben Horowitz: Book Review</title>
      <link>https://markhneedham.com/blog/2014/10/13/the-hard-thing-about-hard-things-ben-horowitz-book-review/</link>
      <pubDate>Mon, 13 Oct 2014 23:59:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/13/the-hard-thing-about-hard-things-ben-horowitz-book-review/</guid>
      <description>I came across &#39;http://www.amazon.co.uk/The-Hard-Thing-About-Things/dp/0062273205/ref=sr_1_1?ie=UTF8&amp;amp;qid=1413108493&amp;amp;sr=8-1&amp;amp;keywords=hard+thing+about+hard+things[The Hard Thing About Hard Things]&#39; while reading an article about Ben Horowitz&amp;#8217;s venture capital firm and it was intriguing enough that I bought it and then read through it over a couple of days.
 Although the blurb suggests that it&amp;#8217;s a book about about building and running a startup I think a lot of the lessons are applicable for any business.
 These were some of the main points that stood out for me:</description>
    </item>
    
    <item>
      <title>Lessons from running Neo4j based &#39;hackathons&#39;</title>
      <link>https://markhneedham.com/blog/2014/10/11/lessons-from-running-neo4j-based-hackathons/</link>
      <pubDate>Sat, 11 Oct 2014 10:52:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/11/lessons-from-running-neo4j-based-hackathons/</guid>
      <description>Over the last 6 months my colleagues and I have been running hands on Neo4j based sessions every few weeks and I was recently asked if I could write up the lessons we&amp;#8217;ve learned.
 So in no particular order here are some of the things that we&amp;#8217;ve learnt:
 Have a plan but don&amp;#8217;t stick to it rigidly Something we learnt early on is that it&amp;#8217;s helpful to have a rough plan of how you&amp;#8217;re going to spend the session otherwise it can feel quite chaotic for attendees.</description>
    </item>
    
    <item>
      <title>Conceptual Model vs Graph Model</title>
      <link>https://markhneedham.com/blog/2014/10/06/conceptual-model-vs-graph-model/</link>
      <pubDate>Mon, 06 Oct 2014 07:11:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/10/06/conceptual-model-vs-graph-model/</guid>
      <description>We&amp;#8217;ve started running some sessions on graph modelling in London and during the first session it was pointed out that the process I&amp;#8217;d described was very similar to that when modelling for a relational database.
 I thought I better do some reading on the way relational models are derived and I came across an excellent video by Joe Maguire titled &#39;https://www.youtube.com/watch?v=x4Q9JeLIyNo[Data Modelers Still Have Jobs: Adjusting For the NoSQL Environment]&#39;</description>
    </item>
    
    <item>
      <title>R: A first attempt at linear regression</title>
      <link>https://markhneedham.com/blog/2014/09/30/r-a-first-attempt-at-linear-regression/</link>
      <pubDate>Tue, 30 Sep 2014 22:20:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/30/r-a-first-attempt-at-linear-regression/</guid>
      <description>I&amp;#8217;ve been working through the videos that accompany the Introduction to Statistical Learning with Applications in R book and thought it&amp;#8217;d be interesting to try out the linear regression algorithm against my meetup data set.
 I wanted to see how well a linear regression algorithm could predict how many people were likely to RSVP to a particular event. I started with the following code to build a data frame containing some potential predictors:</description>
    </item>
    
    <item>
      <title>Neo4j: Generic/Vague relationship names</title>
      <link>https://markhneedham.com/blog/2014/09/30/neo4j-genericvague-relationship-names/</link>
      <pubDate>Tue, 30 Sep 2014 16:47:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/30/neo4j-genericvague-relationship-names/</guid>
      <description>An approach to modelling that I often see while working with Neo4j users is creating very generic relationships (e.g. HAS, CONTAINS, IS) and filtering on a relationship property or on a property/label at the end node.
 Intuitively this doesn&amp;#8217;t seem to make best use of the graph model as it means that you have to evaluate many relationships and nodes that you&amp;#8217;re not interested in.
 However, I&amp;#8217;ve never actually tested the performance differences between the approaches so I thought I&amp;#8217;d try it out.</description>
    </item>
    
    <item>
      <title>PostgreSQL: ERROR:  column does not exist</title>
      <link>https://markhneedham.com/blog/2014/09/29/postgresql-error-column-does-not-exist/</link>
      <pubDate>Mon, 29 Sep 2014 22:40:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/postgresql-error-column-does-not-exist/</guid>
      <description>I&amp;#8217;ve been playing around with PostgreSQL recently and in particular the Northwind dataset typically used as an introductory data set for relational databases.
 Having imported the data I wanted to take a quick look at the employees table:
 postgres=# select * from employees limit 1; EmployeeID | LastName | FirstName | Title | TitleOfCourtesy | BirthDate | HireDate | Address | City | Region | PostalCode | Country | HomePhone | Extension | Photo | Notes | ReportsTo | PhotoPath ------------+----------+-----------+----------------------+-----------------+------------+------------+-----------------------------+---------+--------+------------+---------+----------------+-----------+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------------------------------- 1 | Davolio | Nancy | Sales Representative | Ms.</description>
    </item>
    
    <item>
      <title>R: Deriving a new data frame column based on containing string</title>
      <link>https://markhneedham.com/blog/2014/09/29/r-deriving-a-new-data-frame-column-based-on-containing-string/</link>
      <pubDate>Mon, 29 Sep 2014 21:37:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/r-deriving-a-new-data-frame-column-based-on-containing-string/</guid>
      <description>I&amp;#8217;ve been playing around with R data frames a bit more and one thing I wanted to do was derive a new column based on the text contained in the existing column.
 I started with something like this:
 &amp;gt; x = data.frame(name = c(&#34;Java Hackathon&#34;, &#34;Intro to Graphs&#34;, &#34;Hands on Cypher&#34;)) &amp;gt; x name 1 Java Hackathon 2 Intro to Graphs 3 Hands on Cypher   And I wanted to derive a new column based on whether or not the session was a practical one.</description>
    </item>
    
    <item>
      <title>R: Filtering data frames by column type (&#39;x&#39; must be numeric)</title>
      <link>https://markhneedham.com/blog/2014/09/29/r-filtering-data-frames-by-column-type-x-must-be-numeric/</link>
      <pubDate>Mon, 29 Sep 2014 05:46:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/29/r-filtering-data-frames-by-column-type-x-must-be-numeric/</guid>
      <description>I&amp;#8217;ve been working through the exercises from An Introduction to Statistical Learning and one of them required you to create a pair wise correlation matrix of variables in a data frame.
 The exercise uses the &#39;Carseats&#39; data set which can be imported like so:
 &amp;gt; install.packages(&#34;ISLR&#34;) &amp;gt; library(ISLR) &amp;gt; head(Carseats) Sales CompPrice Income Advertising Population Price ShelveLoc Age Education Urban US 1 9.50 138 73 11 276 120 Bad 42 17 Yes Yes 2 11.</description>
    </item>
    
    <item>
      <title>Neo4j: COLLECTing multiple values (Too many parameters for function &#39;collect&#39;)</title>
      <link>https://markhneedham.com/blog/2014/09/26/neo4j-collecting-multiple-values-too-many-parameters-for-function-collect/</link>
      <pubDate>Fri, 26 Sep 2014 20:46:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/26/neo4j-collecting-multiple-values-too-many-parameters-for-function-collect/</guid>
      <description>One of my favourite functions in Neo4j&amp;#8217;s cypher query language is COLLECT which allows us to group items into an array for later consumption.
 However, I&amp;#8217;ve noticed that people sometimes have trouble working out how to collect multiple items with COLLECT and struggle to find a way to do so.
 Consider the following data set:
 create (p:Person {name: &#34;Mark&#34;}) create (e1:Event {name: &#34;Event1&#34;, timestamp: 1234}) create (e2:Event {name: &#34;</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Column is null</title>
      <link>https://markhneedham.com/blog/2014/09/24/neo4j-load-csv-column-is-null/</link>
      <pubDate>Wed, 24 Sep 2014 20:21:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/24/neo4j-load-csv-column-is-null/</guid>
      <description>One problem I&amp;#8217;ve seen a few people have recently when using Neo4j&amp;#8217;s LOAD CSV function is dealing with CSV files that have dodgy hidden characters at the beginning of the header line.
 For example, consider an import of this CSV file:
 $ cat ~/Downloads/dodgy.csv userId,movieId 1,2   We might start by checking which columns it has:
 $ load csv with headers from &#34;file:/Users/markneedham/Downloads/dodgy.csv&#34; as line return line; +----------------------------------+ | line | +----------------------------------+ | {userId -&amp;gt; &#34;</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting multiple variables on a line chart</title>
      <link>https://markhneedham.com/blog/2014/09/16/r-ggplot-plotting-multiple-variables-on-a-line-chart/</link>
      <pubDate>Tue, 16 Sep 2014 16:59:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/16/r-ggplot-plotting-multiple-variables-on-a-line-chart/</guid>
      <description>In my continued playing around with meetup data I wanted to plot the number of members who join the Neo4j group over time.
 I started off with the variable &#39;byWeek&#39; which shows how many members joined the group each week:
 &amp;gt; head(byWeek) Source: local data frame [6 x 2] week n 1 2011-06-02 8 2 2011-06-09 4 3 2011-06-30 2 4 2011-07-14 1 5 2011-07-21 1 6 2011-08-18 1   I wanted to plot the actual count alongside a rolling average for which I created the following data frame:</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting a single variable line chart (geom_line requires the following missing aesthetics: y)</title>
      <link>https://markhneedham.com/blog/2014/09/13/r-ggplot-plotting-a-single-variable-line-chart-geom_line-requires-the-following-missing-aesthetics-y/</link>
      <pubDate>Sat, 13 Sep 2014 11:41:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/13/r-ggplot-plotting-a-single-variable-line-chart-geom_line-requires-the-following-missing-aesthetics-y/</guid>
      <description>I&amp;#8217;ve been learning how to do moving averages in R and having done that calculation I wanted to plot these variables on a line chart using ggplot.
 The vector of rolling averages looked like this:
 &amp;gt; rollmean(byWeek$n, 4) [1] 3.75 2.00 1.25 1.00 1.25 1.25 1.75 1.75 1.75 2.50 2.25 2.75 3.50 2.75 2.75 [16] 2.25 1.50 1.50 2.00 2.00 2.00 2.00 1.25 1.50 2.25 2.50 3.00 3.25 2.</description>
    </item>
    
    <item>
      <title>R: Calculating rolling or moving averages</title>
      <link>https://markhneedham.com/blog/2014/09/13/r-calculating-rolling-or-moving-averages/</link>
      <pubDate>Sat, 13 Sep 2014 08:15:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/09/13/r-calculating-rolling-or-moving-averages/</guid>
      <description>I&amp;#8217;ve been playing around with some time series data in R and since there&amp;#8217;s a bit of variation between consecutive points I wanted to smooth the data out by calculating the moving average.
 I struggled to find an in built function to do this but came across Didier Ruedin&amp;#8217;s blog post which described the following function to do the job:
 mav &amp;lt;- function(x,n=5){filter(x,rep(1/n,n), sides=2)}   I tried plugging in some numbers to understand how it works:</description>
    </item>
    
    <item>
      <title>R: ggplot - Cumulative frequency graphs</title>
      <link>https://markhneedham.com/blog/2014/08/31/r-ggplot-cumulative-frequency-graphs/</link>
      <pubDate>Sun, 31 Aug 2014 22:10:42 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/31/r-ggplot-cumulative-frequency-graphs/</guid>
      <description>In my continued playing around with ggplot I wanted to create a chart showing the cumulative growth of the number of members of the Neo4j London meetup group.
 My initial data frame looked like this:
 &amp;gt; head(meetupMembers) joinTimestamp joinDate monthYear quarterYear week dayMonthYear 1 1.376572e+12 2013-08-15 13:13:40 2013-08-01 2013-07-01 2013-08-15 2013-08-15 2 1.379491e+12 2013-09-18 07:55:11 2013-09-01 2013-07-01 2013-09-12 2013-09-18 3 1.349454e+12 2012-10-05 16:28:04 2012-10-01 2012-10-01 2012-10-04 2012-10-05 4 1.</description>
    </item>
    
    <item>
      <title>R: dplyr - group_by dynamic or programmatic field / variable (Error: index out of bounds)</title>
      <link>https://markhneedham.com/blog/2014/08/29/r-dplyr-group_by-dynamic-or-programmatic-field-variable-error-index-out-of-bounds/</link>
      <pubDate>Fri, 29 Aug 2014 09:13:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/29/r-dplyr-group_by-dynamic-or-programmatic-field-variable-error-index-out-of-bounds/</guid>
      <description>In my last blog post I showed how to group timestamp based data by week, month and quarter and by the end we had the following code samples using dplyr and zoo:
 library(RNeo4j) library(zoo) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&#34;1970-01-01&#34;, tz = &#34;GMT&#34;) query = &#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&#34;Neo4j - London User Group\&#34;}) RETURN membership.joined AS joinTimestamp&#34; meetupMembers = cypher(graph, query) meetupMembers$joinDate &amp;lt;- timestampToDate(meetupMembers$joinTimestamp) meetupMembers$monthYear &amp;lt;- as.Date(as.yearmon(meetupMembers$joinDate)) meetupMembers$quarterYear &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>R: Grouping by week, month, quarter</title>
      <link>https://markhneedham.com/blog/2014/08/29/r-grouping-by-week-month-quarter/</link>
      <pubDate>Fri, 29 Aug 2014 00:25:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/29/r-grouping-by-week-month-quarter/</guid>
      <description>In my continued playing around with R and meetup data I wanted to have a look at when people joined the London Neo4j group based on week, month or quarter of the year to see when they were most likely to do so.
 I started with the following query to get back the join timestamps:
 library(RNeo4j) query = &#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&#34;Neo4j - London User Group\&#34;}) RETURN membership.joined AS joinTimestamp&#34;</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Handling empty columns</title>
      <link>https://markhneedham.com/blog/2014/08/22/neo4j-load-csv-handling-empty-columns/</link>
      <pubDate>Fri, 22 Aug 2014 12:51:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/22/neo4j-load-csv-handling-empty-columns/</guid>
      <description>A common problem that people encounter when trying to import CSV files into Neo4j using Cypher&amp;#8217;s LOAD CSV command is how to handle empty or &#39;null&#39; entries in said files.
 For example let&amp;#8217;s try and import the following file which has 3 columns, 1 populated, 2 empty:
 $ cat /tmp/foo.csv a,b,c mark,,   load csv with headers from &#34;file:/tmp/foo.csv&#34; as row MERGE (p:Person {a: row.a}) SET p.b = row.</description>
    </item>
    
    <item>
      <title>R: Rook - Hello world example - &#39;Cannot find a suitable app in file&#39;</title>
      <link>https://markhneedham.com/blog/2014/08/22/r-rook-hello-world-example-cannot-find-a-suitable-app-in-file/</link>
      <pubDate>Fri, 22 Aug 2014 11:05:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/22/r-rook-hello-world-example-cannot-find-a-suitable-app-in-file/</guid>
      <description>I&amp;#8217;ve been playing around with the Rook library and struggled a bit getting a basic Hello World application up and running so I thought I should document it for future me.
 I wanted to spin up a web server using Rook and serve a page with the text &#39;Hello World&#39;. I started with the following code:
 library(Rook) s &amp;lt;- Rhttpd$new() s$add(name=&#39;MyApp&#39;,app=&#39;helloworld.R&#39;) s$start() s$browse(&#34;MyApp&#34;)   where helloWorld.R contained the following code:</description>
    </item>
    
    <item>
      <title>Ruby: Create and share Google Drive Spreadsheet</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-create-and-share-google-drive-spreadsheet/</link>
      <pubDate>Sun, 17 Aug 2014 21:42:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-create-and-share-google-drive-spreadsheet/</guid>
      <description>Over the weekend I&amp;#8217;ve been trying to write some code to help me create and share a Google Drive spreadsheet and for the first bit Ihttp://www.markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/[started out with the Google Drive gem].
 This worked reasonably well but that gem doesn&amp;#8217;t have an API for changing the permissions on a document so I ended up using the google-api-client gem for that bit.
 This tutorial provides a good quick start for getting up and running but it still has a manual step to copy/paste the &#39;OAuth token&#39; which I wanted to get rid of.</description>
    </item>
    
    <item>
      <title>Ruby: Receive JSON in request body</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-receive-json-in-request-body/</link>
      <pubDate>Sun, 17 Aug 2014 12:21:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-receive-json-in-request-body/</guid>
      <description>I&amp;#8217;ve been building a little Sinatra app to play around with the Google Drive API and one thing I struggled with was processing JSON posted in the request body.
 I came across a few posts which suggested that the request body would be available as params or request but after trying several ways of sending a POST request that doesn&amp;#8217;t seem to be the case.
 I eventually came across this StackOverflow post which shows how to do it:</description>
    </item>
    
    <item>
      <title>Ruby: Google Drive - Error=BadAuthentication (GoogleDrive::AuthenticationError) Info=InvalidSecondFactor</title>
      <link>https://markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/</link>
      <pubDate>Sun, 17 Aug 2014 01:49:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/17/ruby-google-drive-errorbadauthentication-googledriveauthenticationerror-infoinvalidsecondfactor/</guid>
      <description>I&amp;#8217;ve been using the Google Drive gem to try and interact with my Google Drive account and almost immediately ran into problems trying to login.
 I started out with the following code:
 require &#34;rubygems&#34; require &#34;google_drive&#34; session = GoogleDrive.login(&#34;me@mydomain.com&#34;, &#34;mypassword&#34;)   I&amp;#8217;ll move it to use OAuth when I put it into my application but for spiking this approach works. Unfortunately I got the following error when running the script:</description>
    </item>
    
    <item>
      <title>Where does r studio install packages/libraries?</title>
      <link>https://markhneedham.com/blog/2014/08/14/where-does-r-studio-install-packageslibraries/</link>
      <pubDate>Thu, 14 Aug 2014 10:24:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/14/where-does-r-studio-install-packageslibraries/</guid>
      <description>As a newbie to R I wanted to look at the source code of some of the libraries/packages that I&amp;#8217;d installed via R Studio which I initially struggled to do as I wasn&amp;#8217;t sure where the packages had been installed.
 I eventually came across a StackOverflow post which described the http://stat.ethz.ch/R-manual/R-devel/library/base/html/libPaths.html function which tells us where that is:
 &amp;gt; .libPaths() [1] &#34;/Library/Frameworks/R.framework/Versions/3.1/Resources/library&#34;   If we want to see which libraries are installed we can use the http://stat.</description>
    </item>
    
    <item>
      <title>R: Grouping by two variables</title>
      <link>https://markhneedham.com/blog/2014/08/11/r-grouping-by-two-variables/</link>
      <pubDate>Mon, 11 Aug 2014 16:47:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/08/11/r-grouping-by-two-variables/</guid>
      <description>In my continued playing around with R and meetup data I wanted to group a data table by two variables - day and event - so I could see the most popular day of the week for meetups and which events we&amp;#8217;d held on those days.
 I started off with the following data table:
 &amp;gt; head(eventsOf2014, 20) eventTime event.name rsvps datetime day monthYear 16 1.393351e+12 Intro to Graphs 38 2014-02-25 18:00:00 Tuesday 02-2014 17 1.</description>
    </item>
    
    <item>
      <title>4 types of user</title>
      <link>https://markhneedham.com/blog/2014/07/29/4-types-of-user/</link>
      <pubDate>Tue, 29 Jul 2014 19:07:11 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/29/4-types-of-user/</guid>
      <description>I&amp;#8217;ve been working with Neo4j full time for slightly more than a year now and from interacting with the community I&amp;#8217;ve noticed that while using different features of the product people fall into 4 categories.
 These are as follows:
   On one axis we have &#39;loudness&#39; i.e. how vocal somebody is either on twitter, StackOverflow or by email and on the other we have &#39;success&#39; which is how well a product feature is working for them.</description>
    </item>
    
    <item>
      <title>R: ggplot  - Plotting back to back charts using facet_wrap</title>
      <link>https://markhneedham.com/blog/2014/07/25/r-ggplot-plotting-back-to-back-charts-using-facet_wrap/</link>
      <pubDate>Fri, 25 Jul 2014 21:57:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/25/r-ggplot-plotting-back-to-back-charts-using-facet_wrap/</guid>
      <description>Earlier in the week I showed a way to plot back to back charts using R&amp;#8217;s ggplot library but looking back on the code it felt like it was a bit hacky to &#39;glue&#39; two charts together using a grid.
 I wanted to find a better way.
 To recap, I came up with the following charts showing the RSVPs to Neo4j London meetup events using this code:
   The first thing we need to do to simplify chart generation is to return &#39;yes&#39; and &#39;no&#39; responses in the same cypher query, like so:</description>
    </item>
    
    <item>
      <title>Java: Determining the status of data import using kill signals</title>
      <link>https://markhneedham.com/blog/2014/07/23/java-determining-the-status-of-data-import-using-kill-signals/</link>
      <pubDate>Wed, 23 Jul 2014 22:20:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/23/java-determining-the-status-of-data-import-using-kill-signals/</guid>
      <description>A few weeks ago I was working on the initial import of ~ 60 million bits of data into Neo4j and we kept running into a problem where the import process just seemed to freeze and nothing else was imported.
 It was very difficult to tell what was happening inside the process - taking a thread dump merely informed us that it was attempting to process one line of a CSV line and was somehow unable to do so.</description>
    </item>
    
    <item>
      <title>R: ggplot - Plotting back to back bar charts</title>
      <link>https://markhneedham.com/blog/2014/07/20/r-ggplot-plotting-back-to-back-bar-charts/</link>
      <pubDate>Sun, 20 Jul 2014 16:50:55 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/r-ggplot-plotting-back-to-back-bar-charts/</guid>
      <description>I&amp;#8217;ve been playing around with R&amp;#8217;s ggplot library to explore the Neo4j London meetup and the next thing I wanted to do was plot back to back bar charts showing &#39;yes&#39; and &#39;no&#39; RSVPs.
 I&amp;#8217;d already done the &#39;yes&#39; bar chart using the following code:
 query = &#34;MATCH (e:Event)&amp;lt;-[:TO]-(response {response: &#39;yes&#39;}) RETURN response.time AS time, e.time + e.utc_offset AS eventTime&#34; allYesRSVPs = cypher(graph, query) allYesRSVPs$time = timestampToDate(allYesRSVPs$time) allYesRSVPs$eventTime = timestampToDate(allYesRSVPs$eventTime) allYesRSVPs$difference = as.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.2: Finding where I am in a linked list</title>
      <link>https://markhneedham.com/blog/2014/07/20/neo4j-2-1-2-finding-where-i-am-in-a-linked-list/</link>
      <pubDate>Sun, 20 Jul 2014 15:13:00 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/neo4j-2-1-2-finding-where-i-am-in-a-linked-list/</guid>
      <description>I was recently asked how to calculate the position of a node in a linked list and realised that as the list increases in size this is one of the occasions when we should write an unmanaged extension rather than using cypher.
 I wrote a quick bit of code to create a linked list with 10,000 elements in it:
 public class Chains { public static void main(String[] args) { String simpleChains = &#34;</description>
    </item>
    
    <item>
      <title>R: ggplot - Don&#39;t know how to automatically pick scale for object of type difftime - Discrete value supplied to continuous scale</title>
      <link>https://markhneedham.com/blog/2014/07/20/r-ggplot-dont-know-how-to-automatically-pick-scale-for-object-of-type-difftime-discrete-value-supplied-to-continuous-scale/</link>
      <pubDate>Sun, 20 Jul 2014 00:21:17 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/20/r-ggplot-dont-know-how-to-automatically-pick-scale-for-object-of-type-difftime-discrete-value-supplied-to-continuous-scale/</guid>
      <description>While reading &#39;http://www.fastcolabs.com/3030063/why-the-r-programming-language-is-good-for-business[Why The R Programming Language Is Good For Business]&#39; I came across Udacity&amp;#8217;s &#39;https://www.udacity.com/course/viewer#!/c-ud651/l-685569241/e-824578546/m-824578547[Data Analysis with R]&#39; courses - part of which focuses exploring data sets using visualisations, something I haven&amp;#8217;t done much of yet.
 I thought it&amp;#8217;d be interesting to create some visualisations around the times that people RSVP &#39;yes&#39; to the various Neo4j events that we run in London.
 I started off with the following query which returns the date time that people replied &#39;Yes&#39; to an event and the date time of the event:</description>
    </item>
    
    <item>
      <title>R: Apply a custom function across multiple lists</title>
      <link>https://markhneedham.com/blog/2014/07/16/r-apply-a-custom-function-across-multiple-lists/</link>
      <pubDate>Wed, 16 Jul 2014 05:04:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/16/r-apply-a-custom-function-across-multiple-lists/</guid>
      <description>In my continued playing around with R I wanted to map a custom function over two lists comparing each item with its corresponding items.
 If we just want to use a built in function such as subtraction between two lists it&amp;#8217;s quite easy to do:
 &amp;gt; c(10,9,8,7,6,5,4,3,2,1) - c(5,4,3,4,3,2,2,1,2,1) [1] 5 5 5 3 3 3 2 2 0 0   I wanted to do a slight variation on that where instead of returning the difference I wanted to return a text value representing the difference e.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Processing hidden arrays in your CSV documents</title>
      <link>https://markhneedham.com/blog/2014/07/10/neo4j-load-csv-processing-hidden-arrays-in-your-csv-documents/</link>
      <pubDate>Thu, 10 Jul 2014 14:54:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/10/neo4j-load-csv-processing-hidden-arrays-in-your-csv-documents/</guid>
      <description>I was recently asked how to process an &#39;array&#39; of values inside a column in a CSV file using Neo4j&amp;#8217;s LOAD CSV tool and although I initially thought this wouldn&amp;#8217;t be possible as every cell is treated as a String, Michael showed me a way of working around this which I thought was pretty neat.
 Let&amp;#8217;s say we have a CSV file representing people and their friends. It might look like this:</description>
    </item>
    
    <item>
      <title>R/plyr: ddply - Error in vector(type, length) : vector: cannot make a vector of mode &#39;closure&#39;.</title>
      <link>https://markhneedham.com/blog/2014/07/07/rplyr-ddply-error-in-vectortype-length-vector-cannot-make-a-vector-of-mode-closure/</link>
      <pubDate>Mon, 07 Jul 2014 06:07:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/07/rplyr-ddply-error-in-vectortype-length-vector-cannot-make-a-vector-of-mode-closure/</guid>
      <description>In my continued playing around with plyr&amp;#8217;s ddply function I was trying to group a data frame by one of its columns and return a count of the number of rows with specific values and ran into a strange (to me) error message.
 I had a data frame:
 n = c(2, 3, 5) s = c(&#34;aa&#34;, &#34;bb&#34;, &#34;cc&#34;) b = c(TRUE, FALSE, TRUE) df = data.frame(n, s, b)   And wanted to group and count on column &#39;b&#39; so I&amp;#8217;d get back a count of 2 for TRUE and 1 for FALSE.</description>
    </item>
    
    <item>
      <title>R/plyr: ddply - Renaming the grouping/generated column when grouping by date</title>
      <link>https://markhneedham.com/blog/2014/07/02/rplyr-ddply-renaming-the-groupinggenerate-column-when-grouping-by-date/</link>
      <pubDate>Wed, 02 Jul 2014 06:30:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/07/02/rplyr-ddply-renaming-the-groupinggenerate-column-when-grouping-by-date/</guid>
      <description>On Nicole&amp;#8217;s recommendation I&amp;#8217;ve been having a look at R&amp;#8217;s plyr package to see if I could simplify my meetup analysis and I started by translating my code that grouped meetup join dates by day of the week.
 To refresh, the code without plyr looked like this:
 library(Rneo4j) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&#34;1970-01-01&#34;) query = &#34;MATCH (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&#34;Neo4j - London User Group\&#34;}) RETURN membership.joined AS joinDate&#34;</description>
    </item>
    
    <item>
      <title>R: Aggregate by different functions and join results into one data frame</title>
      <link>https://markhneedham.com/blog/2014/06/30/r-aggregate-by-different-functions-and-join-results-into-one-data-frame/</link>
      <pubDate>Mon, 30 Jun 2014 22:47:44 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/r-aggregate-by-different-functions-and-join-results-into-one-data-frame/</guid>
      <description>In continuing my analysis of the London Neo4j meetup group using R I wanted to see which days of the week we organise meetups and how many people RSVP affirmatively by the day.
 I started out with this query which returns each event and the number of &#39;yes&#39; RSVPS:
 library(Rneo4j) timestampToDate &amp;lt;- function(x) as.POSIXct(x / 1000, origin=&#34;1970-01-01&#34;) query = &#34;MATCH (g:Group {name: \&#34;Neo4j - London User Group\&#34;})-[:HOSTED_EVENT]-&amp;gt;(event)&amp;lt;-[:TO]-({response: &#39;yes&#39;})&amp;lt;-[:RSVPD]-() WHERE (event.</description>
    </item>
    
    <item>
      <title>R: Order by data frame column and take top 10 rows</title>
      <link>https://markhneedham.com/blog/2014/06/30/r-order-by-data-frame-column-and-take-top-10-rows/</link>
      <pubDate>Mon, 30 Jun 2014 21:44:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/r-order-by-data-frame-column-and-take-top-10-rows/</guid>
      <description>I&amp;#8217;ve been doing some ad-hoc analysis of the Neo4j London meetup group using R and Neo4j and having worked out how to group by certain keys the next step was to order the rows of the data frame.
 I wanted to drill into the days on which people join the group and see whether they join it at a specific time of day. My feeling was that most people would join on a Monday morning.</description>
    </item>
    
    <item>
      <title>Neo4j/R: Grouping meetup members by join timestamp</title>
      <link>https://markhneedham.com/blog/2014/06/30/neo4jr-grouping-meetup-members-by-join-timestamp/</link>
      <pubDate>Mon, 30 Jun 2014 00:06:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/30/neo4jr-grouping-meetup-members-by-join-timestamp/</guid>
      <description>I wanted to do some ad-hoc analysis on the join date of members of the Neo4j London meetup group and since cypher doesn&amp;#8217;t yet have functions for dealings with dates I thought I&amp;#8217;d give R a try.
 I started off by executing a cypher query which returned the join timestamp of all the group members using Nicole White&amp;#8217;s RNeo4j package:
 &amp;gt; library(Rneo4j) &amp;gt; query = &#34;match (:Person)-[:HAS_MEETUP_PROFILE]-&amp;gt;()-[:HAS_MEMBERSHIP]-&amp;gt;(membership)-[:OF_GROUP]-&amp;gt;(g:Group {name: \&#34;</description>
    </item>
    
    <item>
      <title>Neo4j: Set Based Operations with the experimental Cypher optimiser</title>
      <link>https://markhneedham.com/blog/2014/06/29/neo4j-set-based-operations-with-the-experimental-cypher-optimiser/</link>
      <pubDate>Sun, 29 Jun 2014 08:45:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/29/neo4j-set-based-operations-with-the-experimental-cypher-optimiser/</guid>
      <description>A few months ago I wrote about cypher queries which look for a missing relationship and showed how you could optimise them by re-working the query slightly.
 To refresh, we wanted to find all the people in the London office that I hadn&amp;#8217;t worked with given this model...
 &amp;lt;/img&amp;gt;
 ...and this initial query:
 MATCH (p:Person {name: &#34;me&#34;})-[:MEMBER_OF]-&amp;gt;(office {name: &#34;London Office&#34;})&amp;lt;-[:MEMBER_OF]-(colleague) WHERE NOT (p-[:COLLEAGUES]-&amp;gt;(colleague)) RETURN COUNT(colleague)   This took on average 7.</description>
    </item>
    
    <item>
      <title>Neo4j&#39;s Cypher vs Clojure - Group by and Sorting</title>
      <link>https://markhneedham.com/blog/2014/06/29/neo4j-cypher-vs-clojure-for-group-by-and-sorting/</link>
      <pubDate>Sun, 29 Jun 2014 02:56:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/29/neo4j-cypher-vs-clojure-for-group-by-and-sorting/</guid>
      <description>One of the points that I emphasised during my talk on building Neo4j backed applications using Clojure last week is understanding when to use Cypher to solve a problem and when to use the programming language.
 A good example of this is in the meetup application I&amp;#8217;ve been working on. I have a collection of events and want to display past events in descending order and future events in ascending order.</description>
    </item>
    
    <item>
      <title>Data Science: Mo&#39; Data Mo&#39; Problems</title>
      <link>https://markhneedham.com/blog/2014/06/28/data-science-mo-data-mo-problems/</link>
      <pubDate>Sat, 28 Jun 2014 23:35:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/28/data-science-mo-data-mo-problems/</guid>
      <description>Over the last couple of years I&amp;#8217;ve worked on several proof of concept style Neo4j projects and on a lot of them people have wanted to work with their entire data set which I don&amp;#8217;t think makes sense so early on.
 In the early parts of a project we&amp;#8217;re trying to prove out our approach rather than prove we can handle big data - something that Ashok taught me a couple of years ago on a project we worked on together.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Finding movies by decade</title>
      <link>https://markhneedham.com/blog/2014/06/28/neo4j-cypher-finding-movies-by-decade/</link>
      <pubDate>Sat, 28 Jun 2014 11:12:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/28/neo4j-cypher-finding-movies-by-decade/</guid>
      <description>I was recently asked how to find the number of movies produced per decade in the movie data set that comes with the Neo4j browser and can be imported with the following command:
 :play movies   We want to get one row per decade and have a count alongside so the easiest way is to start with one decade and build from there.
 MATCH (movie:Movie) WHERE movie.released &amp;gt;= 1990 and movie.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Separation of concerns</title>
      <link>https://markhneedham.com/blog/2014/06/27/neo4j-cypher-separation-of-concerns/</link>
      <pubDate>Fri, 27 Jun 2014 10:51:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/27/neo4j-cypher-separation-of-concerns/</guid>
      <description>While preparing my talk on building Neo4j backed applications with Clojure I realised that some of the queries I&amp;#8217;d written were incredibly complicated and went against anything I&amp;#8217;d learnt about separating different concerns.
 One example of this was the query I used to generate the data for the following page of the meetup application I&amp;#8217;ve been working on:
     Depending on the selected tab you can choose to see the people signed up for the meetup and the date that they signed up or the topics that those people are interested in.</description>
    </item>
    
    <item>
      <title>Neo4j: LOAD CSV - Handling conditionals</title>
      <link>https://markhneedham.com/blog/2014/06/17/neo4j-load-csv-handling-conditionals/</link>
      <pubDate>Tue, 17 Jun 2014 23:41:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/17/neo4j-load-csv-handling-conditionals/</guid>
      <description>While building up the Neo4j World Cup Graph I&amp;#8217;ve been making use of the http://neo4j.com/blog/neo4j-2-1-graph-etl function and I frequently found myself needing to do different things depending on the value in one of the columns.
 For example I have one CSV file which contains the different events that can happen in a football match:
 match_id,player,player_id,time,type &#34;1012&#34;,&#34;Antonin Panenka&#34;,&#34;174835&#34;,21,&#34;penalty&#34; &#34;1012&#34;,&#34;Faisal Al Dakhil&#34;,&#34;2204&#34;,57,&#34;goal&#34; &#34;102&#34;,&#34;Roger Milla&#34;,&#34;79318&#34;,106,&#34;goal&#34; &#34;102&#34;,&#34;Roger Milla&#34;,&#34;79318&#34;,108,&#34;goal&#34; &#34;102&#34;,&#34;Bernardo Redin&#34;,&#34;44555&#34;,115,&#34;goal&#34; &#34;102&#34;,&#34;Andre Kana-biyik&#34;,&#34;174649&#34;,44,&#34;yellow&#34;   If the type is &#39;penalty&#39;, &#39;owngoal&#39; or &#39;goal&#39; then I want to create a SCORED_GOAL relationship whereas if it&amp;#8217;s &#39;yellow&#39;, &#39;yellowred&#39; or &#39;red&#39; then I want to create a RECEIVED_CARD relationship instead.</description>
    </item>
    
    <item>
      <title>Ruby: Regex - Matching the Trademark ™ character</title>
      <link>https://markhneedham.com/blog/2014/06/08/ruby-regex-matching-the-trademark-character/</link>
      <pubDate>Sun, 08 Jun 2014 01:34:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/06/08/ruby-regex-matching-the-trademark-character/</guid>
      <description>I&amp;#8217;ve been playing around with some World Cup data and while cleaning up the data I wanted to strip out the year and host country for a world cup.
 I started with a string like this which I was reading from a file:
 1930 FIFA World Cup Uruguay ™   And I wanted to be able to extract just the &#39;Uruguay&#39; bit without getting the trademark or the space preceding it.</description>
    </item>
    
    <item>
      <title>Neo4j Meetup Coding Dojo Style</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-meetup-coding-dojo-style/</link>
      <pubDate>Sat, 31 May 2014 22:55:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-meetup-coding-dojo-style/</guid>
      <description>A few weeks ago we ran a http://www.meetup.com/graphdb-london/events/179211972/ meetup in the Neo4j London office during which we worked with the meta data around 1 million images recently released into the public domain by the British Library.
 Feedback from previous meetups had indicated that attendees wanted to practice modelling a domain from scratch and understand the options for importing said model into the database. This data set seemed perfect for this purpose.</description>
    </item>
    
    <item>
      <title>Neo4j/R: Analysing London NoSQL meetup membership</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/</link>
      <pubDate>Sat, 31 May 2014 21:32:24 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/</guid>
      <description>In my spare time I&amp;#8217;ve been working on a Neo4j application that runs on tops of meetup.com&amp;#8217;s API and Nicole recently showed me how I could wire up some of the queries to use her Rneo4j library:
  @markhneedham pic.twitter.com/8014jckEUl
&amp;mdash; Nicole White (@_nicolemargaret) May 31, 2014   The query used in that visualisation shows the number of members that overlap between each pair of groups but a more interesting query is the one which shows the % overlap between groups based on the unique members across the groups.</description>
    </item>
    
    <item>
      <title>Thoughts on meetups</title>
      <link>https://markhneedham.com/blog/2014/05/31/thoughts-on-meetups/</link>
      <pubDate>Sat, 31 May 2014 19:50:26 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/thoughts-on-meetups/</guid>
      <description>I recently came across an interesting blog post by Zach Tellman in which he explains a new approach that he&amp;#8217;s been trialling at The Bay Area Clojure User Group.
 Zach explains that a lecture based approach isn&amp;#8217;t necessarily the most effective way for people to learn and that half of the people attending the meetup are likely to be novices and would struggle to follow more advanced content.
 He then goes on to explain an alternative approach:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - UNWIND vs FOREACH</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-unwind-vs-foreach/</link>
      <pubDate>Sat, 31 May 2014 14:19:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-unwind-vs-foreach/</guid>
      <description>I&amp;#8217;ve written a couple of posts about the new UNWIND clause in Neo4j&amp;#8217;s cypher query language but I forgot about my favourite use of UNWIND, which is to get rid of some uses of FOREACH from our queries.
 Let&amp;#8217;s say we&amp;#8217;ve created a timetree up front and now have a series of events coming in that we want to create in the database and attach to the appropriate part of the timetree.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Neo.ClientError.Statement.ParameterMissing and neo4j-shell</title>
      <link>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-neo-clienterror-statement-parametermissing-and-neo4j-shell/</link>
      <pubDate>Sat, 31 May 2014 12:44:10 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/neo4j-cypher-neo-clienterror-statement-parametermissing-and-neo4j-shell/</guid>
      <description>Every now and then I get sent Neo4j cypher queries to look at and more often than not they&amp;#8217;re parameterised which means you can&amp;#8217;t easily run them in the Neo4j browser.
 For example let&amp;#8217;s say we have a database which has a user called &#39;Mark&#39;:
 CREATE (u:User {name: &#34;Mark&#34;})   Now we write a query to find &#39;Mark&#39; with the name parameterised so we can easily search for a different user in future:</description>
    </item>
    
    <item>
      <title>Clojure: Destructuring group-by&#39;s output</title>
      <link>https://markhneedham.com/blog/2014/05/31/clojure-destructuring-group-bys-output/</link>
      <pubDate>Sat, 31 May 2014 00:03:48 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/31/clojure-destructuring-group-bys-output/</guid>
      <description>One of my favourite features of Clojure is that it allows you to destructure a data structure into values that are a bit easier to work with.
 I often find myself referring to Jay Fields&#39; article which contains several examples showing the syntax and is a good starting point.
 One recent use of destructuring I had was where I was working with a vector containing events like this:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Rounding a float value to decimal places</title>
      <link>https://markhneedham.com/blog/2014/05/25/neo4j-cypher-rounding-a-float-value-to-decimal-places/</link>
      <pubDate>Sun, 25 May 2014 22:17:35 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/25/neo4j-cypher-rounding-a-float-value-to-decimal-places/</guid>
      <description>About 6 months ago Jacqui Read created a github issue explaining how she wanted to round a float value to a number of decimal places but was unable to do so due to the http://docs.neo4j.org/chunked/stable/query-functions-mathematical.html#functions-round function not taking the appropriate parameter.
 I found myself wanting to do the same thing last week where I initially had the following value:
 RETURN toFloat(&#34;12.336666&#34;) AS value   I wanted to round that to 2 decimal places and Wes suggested multiplying the value before using ROUND and then dividing afterwards to achieve that.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1:  Passing around node ids vs UNWIND</title>
      <link>https://markhneedham.com/blog/2014/05/25/neo4j-2-1-passing-around-node-ids-vs-unwind/</link>
      <pubDate>Sun, 25 May 2014 10:48:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/25/neo4j-2-1-passing-around-node-ids-vs-unwind/</guid>
      <description>When Neo4j 2.1 is released we&amp;#8217;ll have the UNWIND clause which makes working with collections of things easier.
 In my blog post about creating adjacency matrices we wanted to show how many people were members of the first 5 meetup groups ordered alphabetically and then check how many were members of each of the other groups.
 Without the UNWIND clause we&amp;#8217;d have to do this:
 MATCH (g:Group) WITH g ORDER BY g.</description>
    </item>
    
    <item>
      <title>Clojure: Create a directory</title>
      <link>https://markhneedham.com/blog/2014/05/24/clojure-create-a-directory/</link>
      <pubDate>Sat, 24 May 2014 00:12:56 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/24/clojure-create-a-directory/</guid>
      <description>I spent much longer than I should have done trying to work out how to create a directory in Clojure as part of an import script I&amp;#8217;m working out so for my future self this is how you do it:
 (.mkdir (java.io.File. &#34;/path/to/dir/to/create&#34;))   I&amp;#8217;m creating a directory which contains today&amp;#8217;s date so I&amp;#8217;d want something like &#39;members-2014-05-24&#39; if I was running it today. The clj-time library is very good for working with dates.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1: Creating adjacency matrices</title>
      <link>https://markhneedham.com/blog/2014/05/20/neo4j-2-0-creating-adjacency-matrices/</link>
      <pubDate>Tue, 20 May 2014 23:14:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/05/20/neo4j-2-0-creating-adjacency-matrices/</guid>
      <description>About 9 months ago I wrote a blog post showing how to export an adjacency matrix from a Neo4j 1.9 database using the cypher query language and I thought it deserves an update to use 2.0 syntax.
 I&amp;#8217;ve been spending some of my free time working on an application that runs on top of meetup.com&amp;#8217;s API and one of the queries I wanted to write was to find the common members between 2 meetup groups.</description>
    </item>
    
    <item>
      <title>Jersey/Jax RS: Streaming JSON</title>
      <link>https://markhneedham.com/blog/2014/04/30/jerseyjax-rs-streaming-json/</link>
      <pubDate>Wed, 30 Apr 2014 01:24:33 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/30/jerseyjax-rs-streaming-json/</guid>
      <description>About a year ago I wrote a blog post showing how to stream a HTTP response using Jersey/Jax RS and I recently wanted to do the same thing but this time using JSON.
 A common pattern is to take our Java object and get a JSON string representation of that but that isn&amp;#8217;t the most efficient use of memory because we now have the Java object and a string representation.</description>
    </item>
    
    <item>
      <title>Clojure: Paging meetup data using lazy sequences</title>
      <link>https://markhneedham.com/blog/2014/04/30/clojure-paging-meetup-data-using-lazy-sequences/</link>
      <pubDate>Wed, 30 Apr 2014 00:20:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/30/clojure-paging-meetup-data-using-lazy-sequences/</guid>
      <description>I&amp;#8217;ve been playing around with the meetup API to do some analysis on the Neo4j London meetup and one thing I wanted to do was download all the members of the group.
 A feature of the meetup API is that each end point will only allow you to return a maximum of 200 records so I needed to make use of offsets and paging to retrieve everybody.
 It seemed like a good chance to use some lazy sequences to keep track of the offsets and then stop making calls to the API once I wasn&amp;#8217;t retrieving any more results.</description>
    </item>
    
    <item>
      <title>Clojure: clj-time - Formatting a date / timestamp with day suffixes e.g. 1st, 2nd, 3rd</title>
      <link>https://markhneedham.com/blog/2014/04/26/clojure-clj-time-formatting-a-date-timestamp-with-day-suffixes-e-g-1st-2nd-3rd/</link>
      <pubDate>Sat, 26 Apr 2014 07:50:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/26/clojure-clj-time-formatting-a-date-timestamp-with-day-suffixes-e-g-1st-2nd-3rd/</guid>
      <description>I&amp;#8217;ve been using the clj-time library recently - a Clojure wrapper around Joda Time - and one thing I wanted to do is format a date with day suffixes e.g. 1st, 2nd, 3rd.
 I started with the following timestamp:
 1309368600000   The first step was to convert that into a DateTime object like so:
 user&amp;gt; (require &#39;[clj-time.coerce :as c]) user&amp;gt; (c/from-long 1309368600000) #&amp;lt;DateTime 2011-06-29T17:30:00.000Z&amp;gt;   I wanted to output that date in the following format:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Flatten a collection</title>
      <link>https://markhneedham.com/blog/2014/04/23/neo4j-cypher-flatten-a-collection/</link>
      <pubDate>Wed, 23 Apr 2014 22:02:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/23/neo4j-cypher-flatten-a-collection/</guid>
      <description>Every now and then in Cypher land we&amp;#8217;ll end up with a collection of arrays, often created via the COLLECT function, that we want to squash down into one array.
 For example let&amp;#8217;s say we have the following array of arrays...
 $ RETURN [[1,2,3], [4,5,6], [7,8,9]] AS result; ==&amp;gt; +---------------------------+ ==&amp;gt; | result | ==&amp;gt; +---------------------------+ ==&amp;gt; | [[1,2,3],[4,5,6],[7,8,9]] | ==&amp;gt; +---------------------------+ ==&amp;gt; 1 row   ...and we want to return the array .</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating a time tree down to the day</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-a-time-tree-down-to-the-day/</link>
      <pubDate>Sat, 19 Apr 2014 21:15:21 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-a-time-tree-down-to-the-day/</guid>
      <description>Michael recently wrote a blog post showing how to create a time tree representing time down to the second using Neo4j&amp;#8217;s Cypher query language, something I built on top of for a side project I&amp;#8217;m working on.
 The domain I want to model is RSVPs to meetup invites - I want to understand how much in advance people respond and how likely they are to drop out at a later stage.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.1: Cypher - Concatenating an empty collection / Type mismatch: expected Integer, Collection&lt;Integer&gt; or Collection&lt;Collection&lt;Integer&gt;&gt; but was Collection&lt;Any&gt;</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-2-0-1-cypher-concatenating-an-empty-collection-type-mismatch-expected-integer-collection-or-collection-but-was-collection/</link>
      <pubDate>Sat, 19 Apr 2014 19:51:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-2-0-1-cypher-concatenating-an-empty-collection-type-mismatch-expected-integer-collection-or-collection-but-was-collection/</guid>
      <description>Last weekend I was playing around with some collections using Neo4j&amp;#8217;s Cypher query language and I wanted to concatenate two collections.
 This was easy enough when both collections contained values...
 $ RETURN [1,2,3,4] + [5,6,7]; ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4] + [5,6,7] | ==&amp;gt; +---------------------+ ==&amp;gt; | [1,2,3,4,5,6,7] | ==&amp;gt; +---------------------+ ==&amp;gt; 1 row   ...but I ended up with the following exception when I tried to concatenate with an empty collection:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Creating relationships between a collection of nodes / Invalid input &#39;[&#39;:</title>
      <link>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-relationships-between-a-collection-of-nodes-invalid-input/</link>
      <pubDate>Sat, 19 Apr 2014 06:33:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/19/neo4j-cypher-creating-relationships-between-a-collection-of-nodes-invalid-input/</guid>
      <description>When working with graphs we&amp;#8217;ll frequently find ourselves wanting to create relationships between collections of nodes.
 A common example of this would be creating a linked list of days so that we can quickly traverse across a time tree. Let&amp;#8217;s say we start with just 3 days:
 MERGE (day1:Day {day:1 }) MERGE (day2:Day {day:2 }) MERGE (day3:Day {day:3 }) RETURN day1, day2, day3   And we want to create a &#39;NEXT&#39; relationship between adjacent days:</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Query not prepared correctly / Type mismatch: expected Map</title>
      <link>https://markhneedham.com/blog/2014/04/13/neo4j-2-0-0-query-not-prepared-correctly-type-mismatch-expected-map/</link>
      <pubDate>Sun, 13 Apr 2014 17:40:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/13/neo4j-2-0-0-query-not-prepared-correctly-type-mismatch-expected-map/</guid>
      <description>I was playing around with Neo4j&amp;#8217;s Cypher last weekend and found myself accidentally running some queries against an earlier version of the Neo4j 2.0 series (2.0.0).
 My first query started with a map and I wanted to create a person from an identifier inside the map:
 WITH {person: {id: 1}} AS params MERGE (p:Person {id: params.person.id}) RETURN p   When I ran the query I got this error:</description>
    </item>
    
    <item>
      <title>install4j and AppleScript: Creating a Mac OS X Application Bundle for a Java application</title>
      <link>https://markhneedham.com/blog/2014/04/07/install4j-and-applescript-creating-a-mac-os-x-application-bundle-for-a-java-application/</link>
      <pubDate>Mon, 07 Apr 2014 00:04:28 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/07/install4j-and-applescript-creating-a-mac-os-x-application-bundle-for-a-java-application/</guid>
      <description>We have a few internal applications at Neo which can be launched using &#39;java -jar &#39; and I always forget where the jars are so I thought I&amp;#8217;d wrap a Mac OS X application bundle around it to make life easier.&amp;lt;/p&amp;gt;
 My favourite installation pattern is the one where when you double click the dmg it shows you a window where you can drag the application into the &#39;Applications&#39; folder, like this:</description>
    </item>
    
    <item>
      <title>Clojure: Not so lazy sequences a.k.a chunking behaviour</title>
      <link>https://markhneedham.com/blog/2014/04/06/clojure-not-so-lazy-sequences-a-k-a-chunking-behaviour/</link>
      <pubDate>Sun, 06 Apr 2014 22:07:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/04/06/clojure-not-so-lazy-sequences-a-k-a-chunking-behaviour/</guid>
      <description>I&amp;#8217;ve been playing with Clojure over the weekend and got caught out by the behaviour of lazy sequences due to chunking - something which was obvious to experienced Clojurians although not me.
 I had something similar to the following bit of code which I expected to only evaluate the first item of the infinite sequence that the range function generates:
 &amp;gt; (take 1 (map (fn [x] (println (str &#34;</description>
    </item>
    
    <item>
      <title>Soulver: For all your random calculations</title>
      <link>https://markhneedham.com/blog/2014/03/30/soulver-for-all-your-random-calculations/</link>
      <pubDate>Sun, 30 Mar 2014 14:48:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/30/soulver-for-all-your-random-calculations/</guid>
      <description>I often find myself doing random calculations and I used to do so part manually and part using Alfred&#39;s calculator until Alistair pointed me at Soulver, a desktop/iPhone/iPad app, which is even better.
 I thought I&amp;#8217;d write some examples of calculations I use it for, partly so I&amp;#8217;ll remember the syntax in future!
 Calculating how much memory Neo4j memory mapping will take up
 800 mb + 2660mb + 6600mb + 9500mb + 40mb in GB = 19.</description>
    </item>
    
    <item>
      <title>Remote profiling Neo4j using yourkit</title>
      <link>https://markhneedham.com/blog/2014/03/24/remote-profiling-neo4j-using-yourkit/</link>
      <pubDate>Mon, 24 Mar 2014 23:44:29 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/24/remote-profiling-neo4j-using-yourkit/</guid>
      <description>yourkit is my favourite JVM profiling tool and whilst it&amp;#8217;s really easy to profile a local JVM process, sometimes I need to profile a process on a remote machine.
 In that case we need to first have the remote JVM started up with a yourkit agent parameter passed as one of the args to the Java program.
 Since I&amp;#8217;m mostly working with Neo4j this means we need to add the following to conf/neo4j-wrapper.</description>
    </item>
    
    <item>
      <title>Functional Programming in Java - Venkat Subramaniam: Book Review</title>
      <link>https://markhneedham.com/blog/2014/03/23/functional-programming-in-java-venkat-subramaniam-book-review/</link>
      <pubDate>Sun, 23 Mar 2014 21:18:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/23/functional-programming-in-java-venkat-subramaniam-book-review/</guid>
      <description>I picked up Venkat Subramaniam&amp;#8217;s &#39;http://pragprog.com/book/vsjava8/functional-programming-in-java[Functional Programming in Java: Harnessing the Power of Java 8 Lambda Expressions]&#39; to learn a little bit more about Java 8 having struggled to find any online tutorials which did that.
 A big chunk of the book focuses on lambdas, functional collection parameters and lazy evaluation which will be familiar to users of C#, Clojure, Scala, Haskell, Ruby, Python, F# or libraries like totallylazy and Guava.</description>
    </item>
    
    <item>
      <title>Neo4j 2.1.0-M01: LOAD CSV with Rik Van Bruggen&#39;s Tube Graph</title>
      <link>https://markhneedham.com/blog/2014/03/03/neo4j-2-1-0-m01-load-csv-with-rik-van-bruggens-tube-graph/</link>
      <pubDate>Mon, 03 Mar 2014 16:34:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/03/03/neo4j-2-1-0-m01-load-csv-with-rik-van-bruggens-tube-graph/</guid>
      <description>Last week we released the first milestone of Neo4j 2.1.0 and one its features is a new function in cypher - LOAD CSV - which aims to make it easier to get data into Neo4j.
 I thought I&amp;#8217;d give it a try to import the London tube graph - something that my colleague Rik wrote about a few months ago.
 I&amp;#8217;m using the same data set as Rik but I had to tweak it a bit as there were naming differences when describing the connection from Kennington to Waterloo and Kennington to Oval.</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Finding directors who acted in their own movie</title>
      <link>https://markhneedham.com/blog/2014/02/28/neo4j-cypher-finding-directors-who-acted-in-their-own-movie/</link>
      <pubDate>Fri, 28 Feb 2014 22:57:59 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/28/neo4j-cypher-finding-directors-who-acted-in-their-own-movie/</guid>
      <description>I&amp;#8217;ve been doing quite a few Intro to Neo4j sessions recently and since it contains a lot of problems for the attendees to work on I get to see how first time users of Cypher actually use it.
 A couple of hours in we want to write a query to find directors who acted in their own film based on the following model.
   A common answer is the following:</description>
    </item>
    
    <item>
      <title>Java 8: Lambda Expressions vs Auto Closeable</title>
      <link>https://markhneedham.com/blog/2014/02/26/java-8-lambda-expressions-vs-auto-closeable/</link>
      <pubDate>Wed, 26 Feb 2014 07:32:14 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/26/java-8-lambda-expressions-vs-auto-closeable/</guid>
      <description>If you used earlier versions of Neo4j via its Java API with Java 6 you probably have code similar to the following to ensure write operations happen within a transaction:
 public class StylesOfTx { public static void main( String[] args ) throws IOException { String path = &#34;/tmp/tx-style-test&#34;; FileUtils.deleteRecursively(new File(path)); GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( path ); Transaction tx = db.beginTx(); try { db.createNode(); tx.success(); } finally { tx.close(); } } }   In Neo4j 2.</description>
    </item>
    
    <item>
      <title>Jersey: Ignoring SSL certificate - javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException</title>
      <link>https://markhneedham.com/blog/2014/02/26/jersey-ignoring-ssl-certificate-javax-net-ssl-sslhandshakeexception-java-security-cert-certificateexception/</link>
      <pubDate>Wed, 26 Feb 2014 00:12:01 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/26/jersey-ignoring-ssl-certificate-javax-net-ssl-sslhandshakeexception-java-security-cert-certificateexception/</guid>
      <description>Last week Alistair and I were working on an internal application and we needed to make a HTTPS request directly to an AWS machine using a certificate signed to a different host.
 We use jersey-client so our code looked something like this:
 Client client = Client.create(); client.resource(&#34;https://some-aws-host.compute-1.amazonaws.com&#34;).post(); // and so on   When we ran this we predictably ran into trouble:
 com.sun.jersey.api.client.ClientHandlerException: javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching some-aws-host.</description>
    </item>
    
    <item>
      <title>Java 8: Group by with collections</title>
      <link>https://markhneedham.com/blog/2014/02/23/java-8-group-by-with-collections/</link>
      <pubDate>Sun, 23 Feb 2014 19:16:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/23/java-8-group-by-with-collections/</guid>
      <description>In my continued reading of Venkat Subramaniam&amp;#8217;s &#39;http://pragprog.com/book/vsjava8/functional-programming-in-java[Functional Programming in Java]&#39; I&amp;#8217;ve reached the part of the book where the http://download.java.net/jdk8/docs/api/java/util/stream/Stream.html#collect-java.util.stream.Collector- function is introduced.
 We want to take a collection of people, group them by age and return a map of (age -&amp;gt; people&amp;#8217;s names) for which this comes in handy.
 To refresh, this is what the Person class looks like:
 static class Person { private String name; private int age; Person(String name, int age) { this.</description>
    </item>
    
    <item>
      <title>Java 8: Sorting values in collections</title>
      <link>https://markhneedham.com/blog/2014/02/23/java-8-sorting-values-in-collections/</link>
      <pubDate>Sun, 23 Feb 2014 14:43:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/23/java-8-sorting-values-in-collections/</guid>
      <description>Having realised that Java 8 is due for its GA release within the next few weeks I thought it was about time I had a look at it and over the last week have been reading Venkat Subramaniam&amp;#8217;s book.
 I&amp;#8217;m up to chapter 3 which covers sorting a collection of people. The Person class is defined roughly like so:
 static class Person { private String name; private int age; Person(String name, int age) { this.</description>
    </item>
    
    <item>
      <title>Automating Skype&#39;s &#39;This message has been removed&#39;</title>
      <link>https://markhneedham.com/blog/2014/02/20/automating-skypes-this-message-has-been-removed/</link>
      <pubDate>Thu, 20 Feb 2014 23:16:34 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/20/automating-skypes-this-message-has-been-removed/</guid>
      <description>One of the stranger features of Skype is that that it allows you to delete the contents of a message that you&amp;#8217;ve already sent to someone - something I haven&amp;#8217;t seen on any other messaging system I&amp;#8217;ve used.
 For example if I wrote a message in Skype and wanted to edit it I would press the &#39;up&#39; arrow:
   Once I&amp;#8217;ve deleted the message I&amp;#8217;d see this in the space where the message used to be:</description>
    </item>
    
    <item>
      <title>Neo4j: Cypher - Set Based Operations</title>
      <link>https://markhneedham.com/blog/2014/02/20/neo4j-cypher-set-based-operations/</link>
      <pubDate>Thu, 20 Feb 2014 18:22:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/20/neo4j-cypher-set-based-operations/</guid>
      <description>I was recently reminded of a Neo4j cypher query that I wrote a couple of years ago to find the colleagues that I hadn&amp;#8217;t worked with in the ThoughtWorks London office.
 The model looked like this:
   And I created the following fake data set of the aforementioned model:
 public class SetBasedOperations { private static final Label PERSON = DynamicLabel.label( &#34;Person&#34; ); private static final Label OFFICE = DynamicLabel.</description>
    </item>
    
    <item>
      <title>Neo4j: Creating nodes and relationships from a list of maps</title>
      <link>https://markhneedham.com/blog/2014/02/17/neo4j-creating-nodes-and-relationships-from-a-list-of-maps/</link>
      <pubDate>Mon, 17 Feb 2014 14:11:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/17/neo4j-creating-nodes-and-relationships-from-a-list-of-maps/</guid>
      <description>Last week Alistair and I were porting some Neo4j cypher queries from 1.8 to 2.0 and one of the queries we had to change was an interesting one that created a bunch of relationships from a list/array of maps.
 In the query we had a user &#39;Mark&#39; and wanted to create &#39;FRIENDS_WITH&#39; relationships to Peter and Michael.
   The application passed in a list of maps representing Peter and Michael as a parameter but if we remove the parameters the query looked like this:</description>
    </item>
    
    <item>
      <title>Neo4j: Value in relationships, but value in nodes too!</title>
      <link>https://markhneedham.com/blog/2014/02/13/neo4j-value-in-relationships-but-value-in-nodes-too/</link>
      <pubDate>Thu, 13 Feb 2014 00:10:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/13/neo4j-value-in-relationships-but-value-in-nodes-too/</guid>
      <description>I&amp;#8217;ve recently spent a bit of time working with people on their graph commons and a common pattern I&amp;#8217;ve come across is that although the models have lots of relationships there are often missing nodes.
 Emails We&amp;#8217;ll start with a model which represents the emails that people send between each other. A first cut might look like this:
   The problem with this approach is that we haven&amp;#8217;t modelled the concept of an email - that&amp;#8217;s been implicitly modelled via a relationship.</description>
    </item>
    
    <item>
      <title>Jython/Neo4j: java.lang.ExceptionInInitializerError: java.lang.ExceptionInInitializerError</title>
      <link>https://markhneedham.com/blog/2014/02/05/jythonneo4j-java-lang-exceptionininitializererror-java-lang-exceptionininitializererror/</link>
      <pubDate>Wed, 05 Feb 2014 12:21:30 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/02/05/jythonneo4j-java-lang-exceptionininitializererror-java-lang-exceptionininitializererror/</guid>
      <description>I&amp;#8217;ve been playing around with calling Neo4j&amp;#8217;s Java API from Python via Jython and immediately ran into the following exception when trying to create an embedded instance:
 $ jython -Dpython.path /path/to/neo4j.jar Jython 2.5.3 (2.5:c56500f08d34+, Aug 13 2012, 14:48:36) [Java HotSpot(TM) 64-Bit Server VM (Oracle Corporation)] on java1.7.0_45 Type &#34;help&#34;, &#34;copyright&#34;, &#34;credits&#34; or &#34;license&#34; for more information. &amp;gt;&amp;gt;&amp;gt; import org.neo4j.graphdb.factory &amp;gt;&amp;gt;&amp;gt; org.neo4j.graphdb.factory.GraphDatabaseFactory().newEmbeddedDatabase(&#34;/tmp/foo&#34;) Traceback (most recent call last): File &#34;&amp;lt;stdin&amp;gt;&#34;, line 1, in &amp;lt;module&amp;gt; at org.</description>
    </item>
    
    <item>
      <title>Java: Handling a RuntimeException in a Runnable</title>
      <link>https://markhneedham.com/blog/2014/01/31/java-handling-a-runtimeexception-in-a-runnable/</link>
      <pubDate>Fri, 31 Jan 2014 23:59:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/java-handling-a-runtimeexception-in-a-runnable/</guid>
      <description>At the end of last year I was playing around with running scheduled tasks to monitor a Neo4j cluster and one of the problems I ran into was that the monitoring would sometimes exit.
 I eventually realised that this was because a RuntimeException was being thrown inside the Runnable method and I wasn&amp;#8217;t handling it. The following code demonstrates the problem:
 import java.util.ArrayList; import java.util.List; import java.util.concurrent.*; public class RunnableBlog { public static void main(String[] args) throws ExecutionException, InterruptedException { ScheduledExecutorService executor = Executors.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Optimising a football query</title>
      <link>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-optimising-a-football-query/</link>
      <pubDate>Fri, 31 Jan 2014 22:41:57 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-optimising-a-football-query/</guid>
      <description>A couple of months ago I wrote a blog post explaining how I&amp;#8217;d applied Wes Freeman&amp;#8217;s Cypher optimisation patterns to a query - since then Neo4j 2.0.0 has been released and I&amp;#8217;ve extended the model so I thought I&amp;#8217;d try again.
 The updated model looks like this:
   The query is similar to before - I want to calculate the top away goal scorers in the 2012-2013 season.</description>
    </item>
    
    <item>
      <title>Neo4j 2.0.0: Cypher - Index Hints and Neo.ClientError.Schema.NoSuchIndex</title>
      <link>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-cypher-index-hints-and-neo-clienterror-schema-nosuchindex/</link>
      <pubDate>Fri, 31 Jan 2014 07:14:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/neo4j-2-0-0-cypher-index-hints-and-neo-clienterror-schema-nosuchindex/</guid>
      <description>One of the features added into the more recent versions of Neo4j&amp;#8217;s cypher query language is the ability to tell Cypher which index you&amp;#8217;d like to use in your queries.
 We&amp;#8217;ll use the football dataset, so let&amp;#8217;s start by creating an index on the &#39;name&#39; property of nodes labelled &#39;Player&#39;:
 CREATE INDEX ON :Player(name)   Let&amp;#8217;s say we want to write a query to find &#39;Wayne Rooney&#39; while explicitly using this index.</description>
    </item>
    
    <item>
      <title>Java: Work out the serialVersionUID of a class</title>
      <link>https://markhneedham.com/blog/2014/01/31/java-work-out-the-serialversionuid-of-a-class/</link>
      <pubDate>Fri, 31 Jan 2014 06:51:06 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/31/java-work-out-the-serialversionuid-of-a-class/</guid>
      <description>Earlier in the week I wanted to work out the serialVersionUID of a serializable class so that I could override its toString method without breaking everything.
 I came across Frank Kim&amp;#8217;s blog post which suggested using the serialver tool which comes with the JDK.
 I created a little Maven project to test this tool out on a very simple class:
 import java.io.Serializable; public class SerialiseMe implements Serializable { }   If we compile that class into a JAR and then run the serialver tool we see the following output:</description>
    </item>
    
    <item>
      <title>Neo4j: org.eclipse.jetty.io.EofException - Caused by: java.io.IOException: Broken pipe</title>
      <link>https://markhneedham.com/blog/2014/01/27/neo4j-org-eclipse-jetty-io-eofexception-caused-by-java-io-ioexception-broken-pipe/</link>
      <pubDate>Mon, 27 Jan 2014 11:32:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/27/neo4j-org-eclipse-jetty-io-eofexception-caused-by-java-io-ioexception-broken-pipe/</guid>
      <description>From scouring the Neo4j google group and Stack Overflow I&amp;#8217;ve noticed that a few people have been hitting the following exception when executing queries against Neo4j server:
 SEVERE: The response of the WebApplicationException cannot be utilized as the response is already committed. Re-throwing to the HTTP container javax.ws.rs.WebApplicationException: javax.ws.rs.WebApplicationException: org.eclipse.jetty.io.EofException at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:174) at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) at com.</description>
    </item>
    
    <item>
      <title>Neo4j HA: org.neo4j.graphdb.TransactionFailureException: Timeout waiting for database to allow new transactions. Blocking components (1): []</title>
      <link>https://markhneedham.com/blog/2014/01/27/neo4j-ha-org-neo4j-graphdb-transactionfailureexception-timeout-waiting-for-database-to-allow-new-transactions-blocking-components-1/</link>
      <pubDate>Mon, 27 Jan 2014 09:42:18 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/27/neo4j-ha-org-neo4j-graphdb-transactionfailureexception-timeout-waiting-for-database-to-allow-new-transactions-blocking-components-1/</guid>
      <description>As I mentioned in my previous post, I&amp;#8217;ve been spending quite a bit of time working with Neo4j HA and recently came across the following exception in data/graph.db/messages.log:
 org.neo4j.graphdb.TransactionFailureException: Timeout waiting for database to allow new transactions. Blocking components (1): [] at org.neo4j.kernel.ha.HighlyAvailableGraphDatabase.beginTx(HighlyAvailableGraphDatabase.java:199) at org.neo4j.kernel.TransactionBuilderImpl.begin(TransactionBuilderImpl.java:43) at org.neo4j.kernel.InternalAbstractGraphDatabase.beginTx(InternalAbstractGraphDatabase.java:949) at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:52) at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:288) at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108) at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147) at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1469) at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1400) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) at com.</description>
    </item>
    
    <item>
      <title>Neo4j HA: Election could not pick a winner</title>
      <link>https://markhneedham.com/blog/2014/01/24/neo4j-ha-election-could-not-pick-a-winner/</link>
      <pubDate>Fri, 24 Jan 2014 10:30:41 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/24/neo4j-ha-election-could-not-pick-a-winner/</guid>
      <description>Recently I&amp;#8217;ve been spending a reasonable chunk of my time helping people get up and running with their Neo4j High Availability cluster and there&amp;#8217;s sometimes confusion around how it should be configured.
 A Neo4j cluster typically consists of a master and two slaves and you&amp;#8217;d usually have it configured so that any machine can be the master.
 However, there is a configuration parameter &#39;ha.slave_only&#39; which can be set to &#39;true&#39; to ensure that a machine will never be elected as master when an election takes place.</description>
    </item>
    
    <item>
      <title>Neo4j Backup: Store copy and consistency check</title>
      <link>https://markhneedham.com/blog/2014/01/22/neo4j-backup-store-copy-and-consistency-check/</link>
      <pubDate>Wed, 22 Jan 2014 17:36:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/22/neo4j-backup-store-copy-and-consistency-check/</guid>
      <description>One of the lesser known things about the Neo4j online backup tool, which I wrote about last week, is that conceptually there are two parts to it:
  Copying the store files to a location of your choice
  Verifying that those store files are consistent.
   By default both of these run when you run the &#39;neo4j-backup&#39; script but sometimes it&amp;#8217;s useful to be able to run them separately.</description>
    </item>
    
    <item>
      <title>Neo4j Backup: java.lang.ClassCastException: org.jboss.netty.buffer.BigEndianHeapChannelBuffer cannot be cast to org.neo4j.cluster.com.message.Message</title>
      <link>https://markhneedham.com/blog/2014/01/19/neo4j-backup-java-lang-classcastexception-org-jboss-netty-buffer-bigendianheapchannelbuffer-cannot-be-cast-to-org-neo4j-cluster-com-message-message/</link>
      <pubDate>Sun, 19 Jan 2014 19:29:16 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/19/neo4j-backup-java-lang-classcastexception-org-jboss-netty-buffer-bigendianheapchannelbuffer-cannot-be-cast-to-org-neo4j-cluster-com-message-message/</guid>
      <description>(as Gabriel points out in the comments the ability to do a &#39;HA backup&#39; doesn&amp;#8217;t exist in more recent versions of Neo4j. I&amp;#8217;ll leave this post here for people still running on older versions who encounter the error.)
 When using Neo4j&amp;#8217;s online backup facility there are two ways of triggering it, either by using the &#39;http://docs.neo4j.org/chunked/milestone/backup-embedded-and-server.html[single://]&#39; or &#39;http://docs.neo4j.org/chunked/milestone/backup-ha.html[ha://]&#39; syntax and these behave slightly differently.
 If you&amp;#8217;re using the &#39;single://&#39; syntax and don&amp;#8217;t specify a port then it will connect to &#39;6362&#39; by default:</description>
    </item>
    
    <item>
      <title>Learning about bitmaps</title>
      <link>https://markhneedham.com/blog/2014/01/12/learning-about-bitmaps/</link>
      <pubDate>Sun, 12 Jan 2014 17:44:46 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2014/01/12/learning-about-bitmaps/</guid>
      <description>A few weeks ago Alistair and I were working on the code used to model the labels that a node has attached to it in a Neo4j database.
 The way this works is that chunks of 32 nodes ids are represented as a 32 bit bitmap for each label where a 1 for a bit means that a node has the label and a 0 means that it doesn&amp;#8217;t.</description>
    </item>
    
  </channel>
</rss>