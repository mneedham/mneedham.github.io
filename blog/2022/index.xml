<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022s on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/2022/</link>
    <description>Recent content in 2022s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Jan 2022 00:44:37 +0000</lastBuildDate>
    
	<atom:link href="https://www.markhneedham.com/blog/2022/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache Pinot: Sorted indexes on offline tables</title>
      <link>https://www.markhneedham.com/blog/2022/01/19/apache-pinot-sorted-indexes-offline-tables/</link>
      <pubDate>Wed, 19 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/19/apache-pinot-sorted-indexes-offline-tables/</guid>
      <description>I&amp;#8217;ve recently been learning all about Apache Pinot&amp;#8217;s sorted forward indexes. I was initially going to explain how they work for offline and real-time tables, but the post got a bit long, so instead we&amp;#8217;ll have two blog posts. In this one we&amp;#8217;ll learn how sorted indexes are applied for offline tables.
  Figure 1. Apache Pinot: Sorted indexes on offline tables  Launch Components We&amp;#8217;re going to spin up a local instance of Pinot using the following Docker compose config:</description>
    </item>
    
    <item>
      <title>Strava: Export and interpolate lat/long points for an activity</title>
      <link>https://www.markhneedham.com/blog/2022/01/18/strava-export-interpolate-lat-long-points-activity/</link>
      <pubDate>Tue, 18 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/18/strava-export-interpolate-lat-long-points-activity/</guid>
      <description>I&amp;#8217;ve been working with Strava data again recently and wanted to extract all the lat/long coordinates recorded for my runs. Having done this, I realised that my running watch hadn&amp;#8217;t recorded as many points as I expected, so I needed to interpolate the missing points. In this blog post we&amp;#8217;ll learn how to do that.
  Figure 1. Strava: Export and interpolate lat/long points for an activity  Setup Let&amp;#8217;s first install a few libraries that we&amp;#8217;ll be using:</description>
    </item>
    
    <item>
      <title>Python: Generate WKT from Lat Long Coordinates</title>
      <link>https://www.markhneedham.com/blog/2022/01/14/python-generate-wkt-lat-long-coordinates/</link>
      <pubDate>Fri, 14 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/14/python-generate-wkt-lat-long-coordinates/</guid>
      <description>Recently I&amp;#8217;ve been playing around with geometry objects in WKT format while documenting Apache Pinot&amp;#8217;s Geospatial functions. I then wanted to figure out how to generate a WKT string from a list of lat long coordinates, which we&amp;#8217;ll learn how to do in this blog post.
  Figure 1. Python: Generate WKT from Lat Long Coordinates  We&amp;#8217;re going to do all this using Python&amp;#8217;s Shapely library, so let&amp;#8217;s first install that library:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Checking which indexes are defined</title>
      <link>https://www.markhneedham.com/blog/2022/01/13/apache-pinot-which-indexes-are-defined/</link>
      <pubDate>Thu, 13 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/13/apache-pinot-which-indexes-are-defined/</guid>
      <description>One of the most common questions in the Apache Pinot community Slack is how to work out which indexes are defined on columns in Pinot segments. This blog post will attempt to answer that question.
  Figure 1. Apache Pinot: Checking which indexes are defined  Setup First, we&amp;#8217;re going to spin up a local instance of Pinot using the following Docker compose config:
 docker-compose.yml version: &#39;3.7&#39; services: zookeeper: image: zookeeper:3.</description>
    </item>
    
  </channel>
</rss>