<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022s on Mark Needham</title>
    <link>https://www.markhneedham.com/blog/2022/</link>
    <description>Recent content in 2022s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jun 2022 02:44:37 +0000</lastBuildDate>
    
	<atom:link href="https://www.markhneedham.com/blog/2022/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker exec: Passing in environment variables</title>
      <link>https://www.markhneedham.com/blog/2022/06/16/docker-exec-environment-variables/</link>
      <pubDate>Thu, 16 Jun 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/06/16/docker-exec-environment-variables/</guid>
      <description>I&amp;#8217;ve been working on an Apache Pinot recipe showing how to ingest data from S3 and I needed to pass in my AWS credentials to the docker exec command that I was running. It wasn&amp;#8217;t difficult to do, but took me a little while to figure out.
  Figure 1. docker exec: Passing in environment variables  The command that I was running looked like this:
 docker exec \ -it pinot-controller bin/pinot-admin.</description>
    </item>
    
    <item>
      <title>Dash: Configurable dcc.Interval</title>
      <link>https://www.markhneedham.com/blog/2022/04/23/dash-configurable-dcc-interval/</link>
      <pubDate>Sat, 23 Apr 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/04/23/dash-configurable-dcc-interval/</guid>
      <description>As I mentioned in my blog post about building a Real-Time Crypto Dashboard, I&amp;#8217;ve recently been working with the Dash low-code framework for building interactive data apps.
 I was using the dcc.Interval component to automatically refresh components on the page and wanted to make the refresh interval configurable. In this blog post we&amp;#8217;ll learn how to do that.
  Figure 1. Dash: Configurable dcc.Interval  Setup Let&amp;#8217;s first setup our Python environment:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Speeding up queries with IdSets</title>
      <link>https://www.markhneedham.com/blog/2022/04/08/apache-pinot-speeding-up-queries-id-set/</link>
      <pubDate>Fri, 08 Apr 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/04/08/apache-pinot-speeding-up-queries-id-set/</guid>
      <description>As I continue to build an Apache Pinot demo using CryptoWatch data, I found myself needing to optimise some queries so that the real-time dashboard would render more quickly. I did this using IdSets and in this blog post we&amp;#8217;ll learn about those and how to use them.
  Figure 1. Apache Pinot: Speeding up queries with IdSets  Pinot Schema For the purpose of this blog post we don&amp;#8217;t need to know how to configure the Pinot schema and tables, but we do need to know that we&amp;#8217;re working with trades and pairs tables, whose schemas are shown below:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Lookup Join - 500 Error - Unsupported function: lookup with 4 parameters</title>
      <link>https://www.markhneedham.com/blog/2022/04/05/apache-pinot-lookup-join-internal-error-unsupported-function/</link>
      <pubDate>Tue, 05 Apr 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/04/05/apache-pinot-lookup-join-internal-error-unsupported-function/</guid>
      <description>I&amp;#8217;m currently working on an Apache Pinot demo using data from Crypto Watch, in which I was using the lookup function and had a bug in my query that didn&amp;#8217;t return the clearest error message. In this blog post we&amp;#8217;ll have a look at the query and how to fix it.
  Figure 1. Apache Pinot: Lookup Join - 500 Error - Unsupported function: lookup with 4 parameters  The query that I was writing was using the lookup function to return the name of the base asset in a transaction:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Failed to generate segment - Input path {} does not exist</title>
      <link>https://www.markhneedham.com/blog/2022/03/17/apache-pinot-failed-to-generated-segment-input-path-does-not-exist/</link>
      <pubDate>Thu, 17 Mar 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/03/17/apache-pinot-failed-to-generated-segment-input-path-does-not-exist/</guid>
      <description>In this blog post we&amp;#8217;re going to learn how to work around a bug when trying to ingest CSV files with the same name into Apache Pinot. I came across this issue while writing a recipe showing how to import data files from different directories.
  Figure 1. Apache Pinot: Failed to generate segment - Input path {} does not exist  Setup We&amp;#8217;re going to spin up a local instance of Pinot and Kafka using the following Docker compose config:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Deleting instances in a bad state</title>
      <link>https://www.markhneedham.com/blog/2022/02/21/apache-pinot-delete-instances-bad-state/</link>
      <pubDate>Mon, 21 Feb 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/02/21/apache-pinot-delete-instances-bad-state/</guid>
      <description>Sometimes when I start up a local Pinot cluster after doing a hard shutdown (by restarting my computer) I noticed that the Pinot Data Explorer shows controllers, brokers, or servers in a bad state. In this blog post we&amp;#8217;ll see how to get rid of those bad instances.
  Figure 1. Apache Pinot: Deleting instances in a bad state  The screenshot below shows several instances in the bad state.</description>
    </item>
    
    <item>
      <title>Streamlit: Overwrite previous value in a loop</title>
      <link>https://www.markhneedham.com/blog/2022/02/19/streamlit-overwrite-previous-value-loop/</link>
      <pubDate>Sat, 19 Feb 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/02/19/streamlit-overwrite-previous-value-loop/</guid>
      <description>I was recently building a Streamlit app in which I was looping through a stream of values and wanted to only print out the most recent value. In this blog post we&amp;#8217;ll learn how to do that.
  Figure 1. Streamlit: Overwrite previous value in a loop  Setup If you want to play along you&amp;#8217;ll need to create a virtual environment and install Streamlit:
 python -m venv env source venv/bin/activate pip install streamlit     Streamlit App Now, create a file app.</description>
    </item>
    
    <item>
      <title>Apache Pinot: Resetting a segment after an invalid JSON Transformation</title>
      <link>https://www.markhneedham.com/blog/2022/01/31/pinot-resetting-segment-invalid-json-transformation/</link>
      <pubDate>Mon, 31 Jan 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/31/pinot-resetting-segment-invalid-json-transformation/</guid>
      <description>I recently had a typo in a Pinot ingestion transformation function and wanted to have Pinot re-process the Kafka stream without having to restart all the things. In this blog post we&amp;#8217;ll learn how to do that.
  Figure 1. Apache Pinot: Resetting a segment after an invalid JSON Transformation  Setup We&amp;#8217;re going to spin up a local instance of Pinot and Kafka using the following Docker compose config:</description>
    </item>
    
    <item>
      <title>Kafka: Writing data to a topic from the command line</title>
      <link>https://www.markhneedham.com/blog/2022/01/22/kafka-writing-data-topic-command-line/</link>
      <pubDate>Sat, 22 Jan 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/22/kafka-writing-data-topic-command-line/</guid>
      <description>I&amp;#8217;ve been doing more Apache Pinot documentation - this time covering the JSON functions - and I needed to quickly write some data into Kafka to test things out. I&amp;#8217;d normally do that using the Python Kafka client, but this time I wanted to do it using only command line tools. So that&amp;#8217;s what we&amp;#8217;ll be doing in this blog post and it&amp;#8217;s more for future me than anyone else!</description>
    </item>
    
    <item>
      <title>Apache Pinot: Sorted indexes on real-time tables</title>
      <link>https://www.markhneedham.com/blog/2022/01/20/apache-pinot-sorted-indexes-realtime-tables/</link>
      <pubDate>Thu, 20 Jan 2022 02:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/20/apache-pinot-sorted-indexes-realtime-tables/</guid>
      <description>I&amp;#8217;ve recently been learning all about Apache Pinot&amp;#8217;s sorted forward indexes, and in my first blog post I explained how they work for offline tables. In this blog post we&amp;#8217;ll learn how sorted indexes work with real-time tables.
  Figure 1. Apache Pinot: Sorted indexes on real-time tables  Launch Components We&amp;#8217;re going to spin up a local instance of Pinot and Kafka using the following Docker compose config:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Sorted indexes on offline tables</title>
      <link>https://www.markhneedham.com/blog/2022/01/19/apache-pinot-sorted-indexes-offline-tables/</link>
      <pubDate>Wed, 19 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/19/apache-pinot-sorted-indexes-offline-tables/</guid>
      <description>I&amp;#8217;ve recently been learning all about Apache Pinot&amp;#8217;s sorted forward indexes. I was initially going to explain how they work for offline and real-time tables, but the post got a bit long, so instead we&amp;#8217;ll have two blog posts. In this one we&amp;#8217;ll learn how sorted indexes are applied for offline tables.
  Figure 1. Apache Pinot: Sorted indexes on offline tables  Launch Components We&amp;#8217;re going to spin up a local instance of Pinot using the following Docker compose config:</description>
    </item>
    
    <item>
      <title>Strava: Export and interpolate lat/long points for an activity</title>
      <link>https://www.markhneedham.com/blog/2022/01/18/strava-export-interpolate-lat-long-points-activity/</link>
      <pubDate>Tue, 18 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/18/strava-export-interpolate-lat-long-points-activity/</guid>
      <description>I&amp;#8217;ve been working with Strava data again recently and wanted to extract all the lat/long coordinates recorded for my runs. Having done this, I realised that my running watch hadn&amp;#8217;t recorded as many points as I expected, so I needed to interpolate the missing points. In this blog post we&amp;#8217;ll learn how to do that.
  Figure 1. Strava: Export and interpolate lat/long points for an activity  Setup Let&amp;#8217;s first install a few libraries that we&amp;#8217;ll be using:</description>
    </item>
    
    <item>
      <title>Python: Generate WKT from Lat Long Coordinates</title>
      <link>https://www.markhneedham.com/blog/2022/01/14/python-generate-wkt-lat-long-coordinates/</link>
      <pubDate>Fri, 14 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/14/python-generate-wkt-lat-long-coordinates/</guid>
      <description>Recently I&amp;#8217;ve been playing around with geometry objects in WKT format while documenting Apache Pinot&amp;#8217;s Geospatial functions. I then wanted to figure out how to generate a WKT string from a list of lat long coordinates, which we&amp;#8217;ll learn how to do in this blog post.
  Figure 1. Python: Generate WKT from Lat Long Coordinates  We&amp;#8217;re going to do all this using Python&amp;#8217;s Shapely library, so let&amp;#8217;s first install that library:</description>
    </item>
    
    <item>
      <title>Apache Pinot: Checking which indexes are defined</title>
      <link>https://www.markhneedham.com/blog/2022/01/13/apache-pinot-which-indexes-are-defined/</link>
      <pubDate>Thu, 13 Jan 2022 00:44:37 +0000</pubDate>
      
      <guid>https://www.markhneedham.com/blog/2022/01/13/apache-pinot-which-indexes-are-defined/</guid>
      <description>One of the most common questions in the Apache Pinot community Slack is how to work out which indexes are defined on columns in Pinot segments. This blog post will attempt to answer that question.
  Figure 1. Apache Pinot: Checking which indexes are defined  Setup First, we&amp;#8217;re going to spin up a local instance of Pinot using the following Docker compose config:
 docker-compose.yml version: &#39;3.7&#39; services: zookeeper: image: zookeeper:3.</description>
    </item>
    
  </channel>
</rss>