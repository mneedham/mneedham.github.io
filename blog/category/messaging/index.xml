<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Messaging on Mark Needham</title>
    <link>https://markhneedham.com/blog/category/messaging/</link>
    <description>Recent content in Messaging on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Aug 2008 01:39:52 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/category/messaging/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C# Thrift Examples</title>
      <link>https://markhneedham.com/blog/2008/08/29/c-thrift-examples/</link>
      <pubDate>Fri, 29 Aug 2008 01:39:52 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/29/c-thrift-examples/</guid>
      <description>As I mentioned in my earlier postI have been working with Facebook&amp;rsquo;s Thriftmessaging project.
Unfortunately there are not currently any C# examples of how to use the Data Transfer Objects the Thrift compiler generates for us on the official wiki.
We managed to figure out how to do it by following the Java instructionsand converting them into C# code. Before writing any code we need to import Thrift.dll into our Visual Studio project.</description>
    </item>
    
    <item>
      <title>Thrift as a message definition layer</title>
      <link>https://markhneedham.com/blog/2008/08/29/thrift-as-a-message-definition-layer/</link>
      <pubDate>Fri, 29 Aug 2008 00:42:51 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2008/08/29/thrift-as-a-message-definition-layer/</guid>
      <description>Thriftis a Facebook released open source project for cross language serialisation and RPC communication.
We made use of it for our message definition layer - when it comes to messaging I&amp;rsquo;m a fan of the event based approach so we left the RPC stuffwell alone.
The reason we used Thrift in the first place was because we had a requirement to get interoperability between a Java and .NET application across a message bus and it provided an easy way to do this.</description>
    </item>
    
  </channel>
</rss>