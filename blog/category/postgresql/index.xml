<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL on Mark Needham</title>
    <link>https://markhneedham.com/blog/category/postgresql/</link>
    <description>Recent content in PostgreSQL on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 May 2017 20:42:07 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/category/postgresql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PostgreSQL: ERROR:  argument of WHERE must not return a set</title>
      <link>https://markhneedham.com/blog/2017/05/01/postgresql-error-argument-must-not-return-set/</link>
      <pubDate>Mon, 01 May 2017 20:42:07 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/01/postgresql-error-argument-must-not-return-set/</guid>
      <description>SELECT id, data-&amp;gt;&amp;#39;start_date&amp;#39; AS startDate, data-&amp;gt;&amp;#39;average_speed&amp;#39; AS averageSpeed FROM runs WHERE jsonb_array_elements(data-&amp;gt;&amp;#39;segment_efforts&amp;#39;)-&amp;gt;&amp;#39;segment&amp;#39;-&amp;gt;&amp;gt;&amp;#39;id&amp;#39; = &amp;#39;6818475&amp;#39; ERROR: argument of WHERE must not return a set LINE 3: WHERE jsonb_array_elements(data-&amp;gt;&amp;#39;segment_efforts&amp;#39;)-&amp;gt;&amp;#39;segmen... SELECT id, data-&amp;gt;&amp;#39;start_date&amp;#39; AS startDate, data-&amp;gt;&amp;#39;average_speed&amp;#39; AS averageSpeed FROM runs r, LATERAL jsonb_array_elements(r.data-&amp;gt;&amp;#39;segment_efforts&amp;#39;) segment WHERE segment -&amp;gt;&amp;#39;segment&amp;#39;-&amp;gt;&amp;gt;&amp;#39;id&amp;#39; = &amp;#39;6818475&amp;#39; id | startdate | averagespeed -----------+------------------------+--------------  455461182 | &amp;#34;2015-12-24T11:20:26Z&amp;#34; | 2.841 440088621 | &amp;#34;2015-11-27T06:10:42Z&amp;#34; | 2.975 407930503 | &amp;#34;2015-10-07T05:18:34Z&amp;#34; | 2.985 317170464 | &amp;#34;2015-06-03T04:44:59Z&amp;#34; | 2.</description>
    </item>
    
    <item>
      <title>Loading and analysing Strava runs using PostgreSQL JSON data type</title>
      <link>https://markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/</link>
      <pubDate>Mon, 01 May 2017 19:11:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/05/01/loading-and-analysing-strava-runs-using-postgresql-json-data-type/</guid>
      <description>create database strava; \connect strava; CREATE TABLE runs ( id INTEGER NOT NULL, data jsonb ); ALTER TABLE runs ADD PRIMARY KEY(id); import requests import os import json import psycopg2 token = os.environ[&amp;#34;TOKEN&amp;#34;] headers = {&amp;#39;Authorization&amp;#39;: &amp;#34;Bearer {0}&amp;#34;.format(token)} with psycopg2.connect(&amp;#34;dbname=strava user=markneedham&amp;#34;) as conn: with conn.cursor() as cur: page = 1 while True: r = requests.get(&amp;#34;https://www.strava.com/api/v3/athlete/activities?page={0}&amp;#34;.format(page), headers = headers) response = r.json() if len(response) == 0: break else: for activity in response: r = requests.</description>
    </item>
    
  </channel>
</rss>