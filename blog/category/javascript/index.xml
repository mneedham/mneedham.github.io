<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Mark Needham</title>
    <link>https://markhneedham.com/blog/category/javascript/</link>
    <description>Recent content in Javascript on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Dec 2017 17:35:03 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/category/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leaflet: Fit polyline in view</title>
      <link>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</link>
      <pubDate>Sun, 31 Dec 2017 17:35:03 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/12/31/leaflet-fit-polyline-view/</guid>
      <description>&amp;lt;div id=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34;/&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css&amp;#34;/&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;); L.tileLayer(&amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, {maxZoom: 18,}).addTo(map); var rawPoints = [ { &amp;#34;latitude&amp;#34;: 51.357874010145395, &amp;#34;longitude&amp;#34;: -0.198045110923591 }, { &amp;#34;latitude&amp;#34;: 51.3573858289394, &amp;#34;longitude&amp;#34;: -0.19787754933584795 }, { &amp;#34;latitude&amp;#34;: 51.35632791810057, &amp;#34;longitude&amp;#34;: -0.19750254941422557 }, { &amp;#34;latitude&amp;#34;: 51.35553240304241, &amp;#34;longitude&amp;#34;: -0.197232163894512 }, { &amp;#34;latitude&amp;#34;: 51.35496267279901, &amp;#34;longitude&amp;#34;: -0.1970247338143316 }, { &amp;#34;latitude&amp;#34;: 51.35388700570004, &amp;#34;longitude&amp;#34;: -0.19666483094752069 }, { &amp;#34;latitude&amp;#34;: 51.</description>
    </item>
    
    <item>
      <title>Leaflet: Mapping Strava runs/polylines on Open Street Map</title>
      <link>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</link>
      <pubDate>Sat, 29 Apr 2017 15:36:36 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/04/29/leaflet-strava-polylines-osm/</guid>
      <description>&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Mapping my runs&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://rawgit.com/jieter/Leaflet.encoded/master/Polyline.encoded.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;http://cdn.leafletjs.com/leaflet-0.7/leaflet.css&amp;#34; /&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34; style=&amp;#34;width: 100%; height: 100%&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var map = L.map(&amp;#39;map&amp;#39;).setView([55.609818, 13.003286], 13); L.tileLayer( &amp;#39;http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18, }).addTo(map); var encodedRoutes = [ &amp;#34;{zkrIm`inANPD?BDXGPKLATHNRBRFtAR~AFjAHl@D|ALtATj@HHJBL?`@EZ?NQ\\Y^MZURGJKR]RMXYh@QdAWf@[~@aAFGb@?j@YJKBU@m@FKZ[NSPKTCRJD?`@Wf@Wb@g@HCp@Qh@]z@SRMRE^EHJZnDHbBGPHb@NfBTxBN|DVbCBdA^lBFl@Lz@HbBDl@Lr@Bb@ApCAp@Ez@g@bEMl@g@`B_AvAq@l@ QF]Rs@Nq@CmAVKCK?_@Nw@h@UJIHOZa@xA]~@UfASn@U`@_@~@[d@Sn@s@rAs@dAGN?NVhAB\\Ox@@b@S|A?Tl@jBZpAt@vBJhATfGJn@b@fARp@H^Hx@ARGNSTIFWHe@AGBOTAP@^\\zBMpACjEWlEIrCKl@i@nAk@}@}@yBOWSg@kAgBUk@Mu@[mC?QLIEUAuAS_E?uCKyCA{BH{DDgF`AaEr@uAb@oA~@{AE}AKw@ g@qAU[_@w@[gAYm@]qAEa@FOXg@JGJ@j@o@bAy@NW?Qe@oCCc@SaBEOIIEQGaAe@kC_@{De@cE?KD[H[P]NcAJ_@DGd@Gh@UHI@Ua@}Bg@yBa@uDSo@i@UIICQUkCi@sCKe@]aAa@oBG{@G[CMOIKMQe@IIM@KB]Tg@Nw@^QL]NMPMn@@\\Lb@P~@XT&amp;#34;, &amp;#34;u}krIq_inA_@y@My@Yu@OqAUsA]mAQc@CS@o@FSHSp@e@n@Wl@]ZCFEBK?OC_@Qw@?m@CSK[]]EMBeAA_@m@qEAg@UoCAaAMs@IkBMoACq@SwAGOYa@IYIyA_@kEMkC]{DEaAScC@yEHkGA_ALsCBiA@mCD{CCuAZcANOH@HDZl@Z`@RFh@\\TDT@ZVJBPMVGLM\\Mz@c@NCPMXERO|@a@^Ut@s@p@KJAJ Bd@EHEXi@f@a@\\g@b@[HUD_B@uADg@DQLCLD~@l@`@J^TF?JANQ\\UbAyABEZIFG`@o@RAJEl@_@ZENDDIA[Ki@BURQZaARODKVs@LSdAiAz@G`BU^A^GT@PRp@zARXRn@`BlDHt@ZlAFh@^`BX|@HHHEf@i@FAHHp@bBd@v@DRAVMl@i@v@SROXm@tBILOTOLs@NON_@t@KX]h@Un@k@\\c@h@Ud@]ZGNKp@Sj@KJo@ b@W`@UPOX]XWd@UF]b@WPOAIBSf@QVi@j@_@V[b@Uj@YtAEFCCELARBn@`@lBjAzD^vB^hB?LENURkAv@[Ze@Xg@Py@p@QHONMA[HGAWE_@Em@Hg@AMCG@QHq@Cm@M[Jy@?UJIA{@Ae@KI@GFKNIX[QGAcAT[JK?OVMFK@IAIUKAYJI?QKUCGFIZCXDtAHl@@p@LjBCZS^ERAn@Fj@Br@Hn@HzAHh@RfD?j@TnCTlA NjANb@\\z@TtARr@P`AFnAGfBG`@CFE?&amp;#34; ] for (let encoded of encodedRoutes) { var coordinates = L.Polyline.fromEncoded(encoded).getLatLngs(); L.polyline( coordinates, { color: &amp;#39;blue&amp;#39;, weight: 2, opacity: .7, lineJoin: &amp;#39;round&amp;#39; } ).addTo(map); } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; $ python -m http.</description>
    </item>
    
    <item>
      <title>ReactJS/Material-UI: Cannot resolve module &#39;material-ui/lib/&#39;</title>
      <link>https://markhneedham.com/blog/2017/02/12/reactjsmaterial-ui-cannot-resolve-module-material-uilib/</link>
      <pubDate>Sun, 12 Feb 2017 22:43:53 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2017/02/12/reactjsmaterial-ui-cannot-resolve-module-material-uilib/</guid>
      <description>ERROR in ./src/app/modules/Foo.js Module not found: Error: Cannot resolve module &amp;#39;material-ui/lib/Subheader&amp;#39; in /Users/markneedham/neo/reactjs-test/src/app/modules @ ./src/app/modules/Foo.js 13:17-53 webpack: Failed to compile. import React from &amp;#39;react&amp;#39; import Subheader from &amp;#39;material-ui/lib/Subheader&amp;#39; export default React.createClass({ render() { return &amp;lt;div&amp;gt; &amp;lt;Subheader&amp;gt;Some Text&amp;lt;/Subheader&amp;gt; &amp;lt;/div&amp;gt; } }) import Foo from &amp;#39;./modules/Foo&amp;#39; render(Foo, document.getElementById(&amp;#34;app&amp;#34;)) import React from &amp;#39;react&amp;#39; import Subheader from &amp;#39;material-ui/Subheader&amp;#39; export default React.createClass({ render() { return &amp;lt;div&amp;gt; &amp;lt;Subheader&amp;gt;Some Text&amp;lt;/Subheader&amp;gt; &amp;lt;/div&amp;gt; } }) </description>
    </item>
    
    <item>
      <title>Leaflet JS: Resizing a map to keep a circle diameter inside it</title>
      <link>https://markhneedham.com/blog/2013/06/30/leaflet-js-resizing-a-map-to-keep-a-circle-diameter-inside-it/</link>
      <pubDate>Sun, 30 Jun 2013 22:23:50 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2013/06/30/leaflet-js-resizing-a-map-to-keep-a-circle-diameter-inside-it/</guid>
      <description>var distance = 10; $(&amp;#34;#inputDistance&amp;#34;).val(distance); var latLong=[51.505, -0.11398315429687499]; $(&amp;#34;#inputLatLong&amp;#34;).val(latLong) var map = L.map(&amp;#39;map&amp;#39;).setView(latLong,11); var layer = L.tileLayer(&amp;#39;http://{s}.tile.cloudmade.com/e7b61e61295a44a5b319ca0bd3150890/997/256/{z}/{x}/{y}.png&amp;#39;, { maxZoom: 18 }); layer.addTo(map); var currentDiameter = L.circle(latLong, distance * 1000); currentDiameter.addTo(map); var currentPositionMarker = L.marker([latLong[0], latLong[1]]); currentPositionMarker.addTo(map); $(&amp;#34;#inputDistance&amp;#34;).change(function() {	map.removeLayer(currentDiameter); currentDiameter = L.circle(currentPositionMarker.getLatLng(), $(&amp;#34;#inputDistance&amp;#34;).val() * 1000); currentDiameter.addTo(map); }); $(&amp;#34;#inputDistance&amp;#34;).change(function() {	map.removeLayer(currentDiameter); currentDiameter = L.circle(currentPositionMarker.getLatLng(), $(&amp;#34;#inputDistance&amp;#34;).val() * 1000); currentDiameter.addTo(map); map.fitBounds(currentDiameter.getBounds()); }); $(document).ready(function() {	var distance = 10; $(&amp;#34;#inputDistance&amp;#34;).val(distance); var latLong=[51.505, -0.11398315429687499]; $(&amp;#34;#inputLatLong&amp;#34;).val(latLong) var map = L.</description>
    </item>
    
    <item>
      <title>jQuery: Collecting the results from a collection of asynchronous requests</title>
      <link>https://markhneedham.com/blog/2011/09/25/jquery-collecting-the-results-from-a-collection-of-asynchronous-requests/</link>
      <pubDate>Sun, 25 Sep 2011 09:26:19 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/25/jquery-collecting-the-results-from-a-collection-of-asynchronous-requests/</guid>
      <description>Lizand I recently spent some time building a pair stair to show how long ago people had paired with each other and one of the things we had to do was make AJAX requests to get the pairing data for each person and then collate it all to build the stair.
The original attempt to do this looked a bit like this:
var people = [&amp;#34;Marc&amp;#34;, &amp;#34;Liz&amp;#34;, &amp;#34;Ken&amp;#34;, &amp;#34;Duncan&amp;#34;, &amp;#34;Uday&amp;#34;, &amp;#34;Mark&amp;#34;, &amp;#34;Charles&amp;#34;]; var grid = []; $.</description>
    </item>
    
    <item>
      <title>node.js: child_process.exec not returning all results</title>
      <link>https://markhneedham.com/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</link>
      <pubDate>Thu, 22 Sep 2011 19:55:45 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/22/node-js-child_process-exec-not-returning-all-results/</guid>
      <description>I&amp;rsquo;ve been playing around with some node.js code to get each of the commits from our git repository but noticed that it didn&amp;rsquo;t seem to be returning me all the results.
I had the following code:
var exec = require(&amp;#39;child_process&amp;#39;).exec; var gitRepository = &amp;#39;/some/local/path&amp;#39;; exec(&amp;#39;cd &amp;#39; + gitRepository + &amp;#39; &amp;amp;&amp;amp; git log --pretty=format:&amp;#34;%H | %ad | %s%d&amp;#34; --date=raw &amp;#39;, function(error, stdout, stderror) { var commits = stdout.split(&amp;#34;\n&amp;#34;); // do some stuff with commits }); We have around 2000 commits in the repository but I was only getting back 1600 of them when I checked the lengthof commits.</description>
    </item>
    
    <item>
      <title>Javascript: Internet Explorer 8 - trim() leads to &#39;Object doesn&#39;t support this property or method&#39; error</title>
      <link>https://markhneedham.com/blog/2011/09/13/javascript-internet-explorer-8-trim-leads-to-object-doesnt-support-this-property-or-method-error/</link>
      <pubDate>Tue, 13 Sep 2011 13:33:43 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/13/javascript-internet-explorer-8-trim-leads-to-object-doesnt-support-this-property-or-method-error/</guid>
      <description>We make use of the Javascript trim()function in our application but didn&amp;rsquo;t realise that it isn&amp;rsquo;t implemented by Internet Explorer until version 9.
This led to the following error on IE8 when we used it:
There&amp;rsquo;s a stackoverflow threadsuggesting some different ways of implementing your own &amp;lsquo;trim()&amp;rsquo; method but since we&amp;rsquo;re using jQuery already we decided to just use the &amp;lsquo;$.trim()&amp;rsquo; function from there.
Therefore:
var cleaned = ourString.trim(); becomes:</description>
    </item>
    
    <item>
      <title>Learning node.js: Step</title>
      <link>https://markhneedham.com/blog/2011/09/11/learning-node-js-step/</link>
      <pubDate>Sun, 11 Sep 2011 22:37:15 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/09/11/learning-node-js-step/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js to generate some graphs from our git repository which effectively meant chaining together a bunch of shell commands to give me the repository data in the format I wanted.
I was able to do this by making use of child_processwhich comes with the core library.
The first version looked like this:
var exec = require(&amp;#39;child_process&amp;#39;).exec, _ = require(&amp;#34;underscore&amp;#34;); ... function parseCommitsFromRepository(fn) { var gitRepository = &amp;#34;/tmp/core&amp;#34;; var gitPlayArea = &amp;#34;/tmp/&amp;#34; + new Date().</description>
    </item>
    
    <item>
      <title>node.js: Building a graph of build times using the Go API</title>
      <link>https://markhneedham.com/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</link>
      <pubDate>Sat, 13 Aug 2011 14:52:25 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2011/08/13/node-js-building-a-graph-of-build-times-using-the-go-api/</guid>
      <description>I&amp;rsquo;ve been playing around with node.js again and one thing that I wanted to do was take a CSV file generated by the Go APIand extract the build times so that we could display it on a graph.
Since I don&amp;rsquo;t have a Go instance on my machine I created a URL in my node application which would mimic the API and return a CSV file.
I&amp;rsquo;m using the express web frameworkto take care of some of the plumbing:</description>
    </item>
    
    <item>
      <title>node.js: A little application with Twitter &amp; CouchDB</title>
      <link>https://markhneedham.com/blog/2010/03/21/node-js-a-little-application-with-twitter-couchdb/</link>
      <pubDate>Sun, 21 Mar 2010 22:13:27 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/21/node-js-a-little-application-with-twitter-couchdb/</guid>
      <description>I&amp;rsquo;ve been continuing to play around with node.jsand I thought it would be interesting to write a little application to poll Twitter every minute and save any new Tweets into a CouchDBdatabase.
I first played around with CouchDB in May last year and initially spent a lot of time trying to work out how to install it before coming across CouchDBXwhich gives you one click installation for Mac OS X.</description>
    </item>
    
    <item>
      <title>node.js: First thoughts</title>
      <link>https://markhneedham.com/blog/2010/03/15/node-js-first-thoughts/</link>
      <pubDate>Mon, 15 Mar 2010 00:09:47 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/15/node-js-first-thoughts/</guid>
      <description>I recently came across node.jsvia a blog post by Paul Grossand I&amp;rsquo;ve been playing around with it a bit over the weekend trying to hook up some code to call through to the Twitter API and then return the tweets on my friend timeline.
node.js gives us event driven I/O using JavaScript running server side on top of Google&amp;rsquo;s V8 JavaScript engine.
Simon Willison has part of a presentation on slidesharewhere he describes the difference between the typical thread per request approach and the event based approach to dealing with web requests using the metaphor of bunnies.</description>
    </item>
    
    <item>
      <title>Javascript: Function scoping</title>
      <link>https://markhneedham.com/blog/2010/03/10/javascript-function-scoping/</link>
      <pubDate>Wed, 10 Mar 2010 23:06:31 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/10/javascript-function-scoping/</guid>
      <description>My colleague John Hume wrote an interesting post about his experience with the &amp;lsquo;const&amp;rsquo; keyword in ActionScriptwhere he describes the problems with trying to capture a loop variable in a closure and then evaluating it later on in the code.
Since ActionScript and JavaScript are both dialects of ECMAscript, this is a problem in JavaScript as well, and is due to the fact that variables in JavaScript have function scope rather than block scopewhich is the case in many other languages.</description>
    </item>
    
    <item>
      <title>Javascript: The &#39;new&#39; keyword</title>
      <link>https://markhneedham.com/blog/2010/03/06/javascript-the-new-keyword/</link>
      <pubDate>Sat, 06 Mar 2010 15:16:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/03/06/javascript-the-new-keyword/</guid>
      <description>I came across an interesting post by John Resig where he describes a &amp;lsquo;makeClass&amp;rsquo; functionthat he uses in his code to create functions which can instantiate objects regardless of whether the user calls that function with or without the new keyword.
The main reason that the new keyword seems to be considered harmful is because we might make assumptions in our function that it will be called with the new keyword which changes the meaning of &amp;lsquo;this&amp;rsquo; inside that function.</description>
    </item>
    
    <item>
      <title>Javascript: Confusing &#39;call&#39; and &#39;apply&#39;</title>
      <link>https://markhneedham.com/blog/2010/02/28/javascript-confusing-call-and-apply/</link>
      <pubDate>Sun, 28 Feb 2010 01:45:49 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/28/javascript-confusing-call-and-apply/</guid>
      <description>I wrote a couple of weeks ago about using the &amp;lsquo;call&amp;rsquo; and &amp;lsquo;apply&amp;rsquo; functions in Javascript when passing functions aroundand while working on our IE6 specific codeI realised that I&amp;rsquo;d got them mixed up.
We were writing some code to override one of our functions so that we could call the original function and then do something else after that.
The code was roughly like this:
Foo = { bar : function(duck) { console.</description>
    </item>
    
    <item>
      <title>Javascript: Isolating browser specific code</title>
      <link>https://markhneedham.com/blog/2010/02/28/javascript-isolating-browser-specific-code/</link>
      <pubDate>Sun, 28 Feb 2010 00:11:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/28/javascript-isolating-browser-specific-code/</guid>
      <description>One thing we&amp;rsquo;ve found on my current project is that despite our best efforts we&amp;rsquo;ve still ended up with some javascript code which we only want to run if the user is using Internet Explorer 6 and the question then becomes how to write that code so that it doesn&amp;rsquo;t end up being spread all over the application.
jQuery has some functions which allow you to work out which browser&amp;rsquo;s being used but I&amp;rsquo;ve noticed that when we use those you tend to end up with if statements dotted all around the code which isn&amp;rsquo;t so good.</description>
    </item>
    
    <item>
      <title>Javascript: Bowling Game Kata</title>
      <link>https://markhneedham.com/blog/2010/02/22/javascript-bowling-game-kata/</link>
      <pubDate>Mon, 22 Feb 2010 23:14:20 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/22/javascript-bowling-game-kata/</guid>
      <description>I spent some time over the weekend playing with the bowling game katain Javascript.
I thought I knew the language well enough to be able to do this kata quite easily so I was quite surprised at how much I struggled initially.
These are some of my observations from this exercise:
I don&amp;rsquo;t think I quite get the idea of the &amp;lsquo;describe&amp;rsquo; and &amp;lsquo;it&amp;rsquo; blocks which I believe are inspired by Rspec.</description>
    </item>
    
    <item>
      <title>Javascript: Some stuff I learnt this week</title>
      <link>https://markhneedham.com/blog/2010/02/12/javascript-some-stuff-i-learnt-this-week/</link>
      <pubDate>Fri, 12 Feb 2010 21:11:54 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/12/javascript-some-stuff-i-learnt-this-week/</guid>
      <description>I already wrote about how I&amp;rsquo;ve learnt a bit about the &amp;lsquo;call&amp;rsquo; and &amp;lsquo;apply&amp;rsquo; functions in Javascript this week but as I&amp;rsquo;ve spent the majority of my time doing front end stuff this week I&amp;rsquo;ve also learnt and noticed some other things which I thought were quite interesting.
As a result we needed to know the character codes for the banned characters. While googling to work them out we came across Uncle Jim&amp;rsquo;s CharCode Translatorwhich allows you to type in a character and get its character code and vice versa.</description>
    </item>
    
    <item>
      <title>Javascript: Passing functions around with call and apply</title>
      <link>https://markhneedham.com/blog/2010/02/12/javascript-passing-functions-around-with-call-and-apply/</link>
      <pubDate>Fri, 12 Feb 2010 20:18:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/12/javascript-passing-functions-around-with-call-and-apply/</guid>
      <description>Having read Douglas Crockford&amp;rsquo;s &amp;lsquo;Javascript: The Good Parts&amp;rsquo; I was already aware that making use of the &amp;lsquo;this&amp;rsquo; keyword in Javascript is quite dangerous but we came across what must be a fairly common situation this week where we wanted to pass around a function which made use of &amp;lsquo;this&amp;rsquo; internally.
We were writing some JSTestDrivertests around a piece of code which looked roughly like this:
function Common() { this.OtherMethod = function(value) { // do some manipulation on value 	return someMagicalNewValue;	}; this.</description>
    </item>
    
    <item>
      <title>Javascript: File encoding when using string.replace</title>
      <link>https://markhneedham.com/blog/2010/02/10/javascript-file-encoding-when-using-string-replace/</link>
      <pubDate>Wed, 10 Feb 2010 00:02:02 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2010/02/10/javascript-file-encoding-when-using-string-replace/</guid>
      <description>We ran into an interesting problem today when moving some Javascript code which was making use of the &amp;lsquo;string.replace&amp;rsquo; function to strip out the £ sign from some text boxes on a form.
The code we had written was just doing this:
var textboxValue = $(&amp;#34;#fieldId&amp;#34;).val().replace(/£/, &amp;#39;&amp;#39;); So having realised that we had this code all over the place we decided it would make sense to create a common function that strip the pound sign out.</description>
    </item>
    
    <item>
      <title>Treating Javascript as an integration point</title>
      <link>https://markhneedham.com/blog/2009/10/17/treating-javascript-as-an-integration-point/</link>
      <pubDate>Sat, 17 Oct 2009 09:16:12 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/10/17/treating-javascript-as-an-integration-point/</guid>
      <description>A couple of weeks ago I wrote a post about my software development journeyover the last year and towards the end I described the difficulties we were having in making changes to some C# code while being sure that we hadn&amp;rsquo;t broken javascript functionality that also relied on that code.
We typically have code which looks like this:
public class SomeController { public ActionResult SomeControllerAction() { var someModel = new SomeModel { Property1 = &amp;#34;my Property&amp;#34; }; return new JsonResult { Data = someModel }; } } public class SomeModel { public string Property1 { get; set; } } We would make use of this type of object in javascript code like so:</description>
    </item>
    
    <item>
      <title>Javascript: Using &#39;replace&#39; to make a link clickable</title>
      <link>https://markhneedham.com/blog/2009/06/08/javascript-using-replace-to-make-a-link-clickable/</link>
      <pubDate>Mon, 08 Jun 2009 11:57:39 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/06/08/javascript-using-replace-to-make-a-link-clickable/</guid>
      <description>I&amp;rsquo;ve been doing a bit more work on my twitter applicationover the weekend - this time taking the tweets that I&amp;rsquo;ve stored in CouchDB and displaying them on a web page.
One of the problems I had is that the text of the tweets is just plain text so if there is a link in a tweet then when I display it on a web page it isn&amp;rsquo;t clickable since it isn&amp;rsquo;t enclosed by the &amp;lsquo;&amp;lt;a href&amp;rdquo;&amp;hellip;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;rsquo; tag.</description>
    </item>
    
    <item>
      <title>Javascript Dates - Be aware of mutability</title>
      <link>https://markhneedham.com/blog/2009/01/07/javascript-dates-be-aware-of-mutability/</link>
      <pubDate>Wed, 07 Jan 2009 23:17:05 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/07/javascript-dates-be-aware-of-mutability/</guid>
      <description>It seems that much like in Java, dates in Javascript are mutable, meaning that it is possible to change a date after it has been created.
We had this painfully shown to us when using the datejslibrary to manipulate some dates.
The erroneous code was similar to this:
var jan312009 = new Date(2008, 1-1, 31); var oneMonthFromJan312009 = new Date(jan312009.add(1).month()); See the subtle error? Outputting these two values gives the following:</description>
    </item>
    
    <item>
      <title>Javascript: Add a month to a date</title>
      <link>https://markhneedham.com/blog/2009/01/07/javascript-add-a-month-to-a-date/</link>
      <pubDate>Wed, 07 Jan 2009 23:00:58 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2009/01/07/javascript-add-a-month-to-a-date/</guid>
      <description>We&amp;rsquo;ve been doing a bit of date manipulation in Javascript on my current project and one of the things that we wanted to do is add 1 month to a given date.
We can kind of achieve this using the standard date libraries but it doesn&amp;rsquo;t work for edge cases.
For example, say we want to add one month to January 31st 2009. We would expect one month from this date to be February 28th 2009:</description>
    </item>
    
  </channel>
</rss>