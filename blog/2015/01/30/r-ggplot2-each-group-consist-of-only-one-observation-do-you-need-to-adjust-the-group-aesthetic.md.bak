+++
draft = false
date="2015-01-30 00:27:53"
title="R: ggplot2 - Each group consist of only one observation. Do you need to adjust the group aesthetic?"
tag=['r-2', 'rstats']
category=['R']
+++

<p>I've been playing around with some weather data over the last couple of days which I aggregated down to the average temperature per month over the last 4 years and stored in a CSV file.</p>


<p>This is what the file looks like:</p>



~~~bash

$ cat /tmp/averageTemperatureByMonth.csv
"month","aveTemperature"
"January",6.02684563758389
"February",5.89380530973451
"March",7.54838709677419
"April",10.875
"May",13.3064516129032
"June",15.9666666666667
"July",18.8387096774194
"August",18.3709677419355
"September",16.2583333333333
"October",13.4596774193548
"November",9.19166666666667
"December",7.01612903225806
~~~

<p>I wanted to create a simple line chart which would show the months of the year in ascending order with the appropriate temperature.</p>


<p>My first attempt was the following:</p>



~~~rstats

df = read.csv("/tmp/averageTemperatureByMonth.csv")
df$month = factor(df$month, month.name)

ggplot(aes(x = month, y = aveTemperature), data = df) + 
  geom_line( ) + 
  ggtitle("Temperature by month")
~~~

<p>which resulted in the following error:</p>



~~~text

geom_path: Each group consist of only one observation. Do you need to adjust the group aesthetic?
~~~

<p>My understanding is that the points don't get joined up by default because the variable on the x axis is not a continuous one but rather a factor variable.
</p>


<p>One way to work around this problem is to make it numeric, like so:</p>



~~~rstats

ggplot(aes(x = as.numeric(month), y = aveTemperature), data = df) + 
  geom_line( ) + 
  ggtitle("Temperature by month")
~~~

<p>which results in the following chart:</p>


<div>

<img src="http://www.markhneedham.com/blog/wp-content/uploads/2015/01/2015-01-30_00-25-18.png" alt="2015 01 30 00 25 18" title="2015-01-30_00-25-18.png" border="0" width="600" height="353" />

</div>

<p>This isn't bad but it'd be much nicer if we could have the month names along the bottom instead. 
</p>


<p>
It turns out we can but we need to <a href="https://kohske.wordpress.com/2010/12/27/faq-geom_line-doesnt-draw-lines/">specify a group</a> that each point belongs to. ggplot will then connects points which belong to the same group.
</p>


<p>In this case we don't really have one so we'll define a dummy one instead:</p>



~~~rstats

ggplot(aes(x = month, y = aveTemperature, group=1), data = df) + 
  geom_line( ) + 
  ggtitle("Temperature by month")
~~~

<p>And now we get the visualisation we want:
</p>


<div>

<img src="http://www.markhneedham.com/blog/wp-content/uploads/2015/01/2015-01-29_23-28-23.png" alt="2015 01 29 23 28 23" title="2015-01-29_23-28-23.png" border="0" width="600" height="350" />

</div>
