+++
draft = false
date="2015-04-30 07:48:38"
title="Deliberate Practice: Building confidence vs practicing"
tag=['software-development']
category=['Software Development', 'Deliberate Practice']
+++

<p>A few weeks ago I wrote about the <a href="http://www.markhneedham.com/blog/2015/04/07/neo4j-the-learning-to-cycle-dependency-graph/">learning to cycle dependency graph</a> which described some of the skills required to become proficient at riding a bike.</p>


<div style="float:right">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2015/04/IMG_20150430_073120.jpg" alt="IMG 20150430 073120" title="IMG_20150430_073120.jpg" border="0" width="300"  />
</div>

<P>
While we've been practicing various skills/sub skills I've often found myself saying the following:
<p>

<blockquote>
if it's not hard you're not practicing

me, April 2015
</blockquote>

<P>
i.e. you should find the skill you're currently practicing difficult otherwise you're not stretching yourself and therefore aren't getting better. 

<p>For example, in cycling you could be very comfortable riding with both hands on the handle bars and find using one hand a struggle. However, if you don't practice that you won't be able to indicate and turn corners.
</p>


<p>
This ties in with all my reading about deliberate practice which suggests that the type of exercises you do while deliberately practicing aren't intended to be fun and are meant to <a href="http://www.markhneedham.com/blog/2015/04/25/deliberate-practice-watching-yourself-fail/">expose your lack of knowledge</a>.
</p>


<p>
In an ideal world we would spend all our time practicing these challenging skills but in reality there's some part of us that wants to feel that we're actually improving by spending some of the time doing things that we're good at. Doing things you're not good at is a bit of a slog as well so we might find that we have less motivation for this type of thing.
</p>


<p>
We therefore need to find <strong>a balance between doing challenging exercises and having fun building something</strong> or writing code that we already know how to do. I've found the best way to do this is to combine the two types of work into mini projects which contain some tasks that we're already good at and some that require us to struggle.</p>
 

<p>For me this might involved cleaning up and importing a data set into Neo4j, which I'm comfortable with, and combining that with something else that I want to learn.
</p>


<p>
For example in the middle of last year I did some <a href="http://www.markhneedham.com/blog/2014/05/31/neo4jr-analysing-london-nosql-meetup-membership/">meetup analysis</a> which involved creating a Neo4j graph of London's NoSQL meetups and learning a bit about R, dplyr and linear regression along the way.
</p>


<p>
In January I built a <a href="http://www.markhneedham.com/blog/2015/02/19/pythons-pandas-vs-neo4js-cypher-exploring-popular-phrases-in-how-i-met-your-mother-transcripts/">How I met your mother graph</a> and then spent a few weeks learning various algorithms for extracting topics from free text to give even more ways to explore the dataset.
</p>


<p>
Most recently I've been practicing exercises from <a href="http://www.greenteapress.com/thinkbayes/">Think Bayes</a> and while it's good practice I think I'd probably spend more time doing it if I linked it into a mini project with something I'm already comfortable with.</p>
 

<p>I'll go off and have a think what that should be!
</p>

