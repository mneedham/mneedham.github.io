+++
draft = false
date="2013-10-22 22:02:14"
title="Neo4j: Modelling hyper edges in a property graph"
tag=['neo4j']
category=['neo4j']
+++

<p>At the <a href="http://www.meetup.com/graphdb-belgium/">Graph Database meet up in Antwerp</a> last week we discussed how you would model a hyper edge in a property graph like Neo4j and I realised that I'd done this in my football graph without realising.</p>


<p>A hyper edge is <a href="http://www.hyperedge.com.au/why-hyperedge">defined as follows</a>:</p>


<blockquote>
A hyperedge is a <strong>connection between two or more vertices</strong>, or nodes, of a hypergraph. A hypergraph is a graph in which generalized edges (called hyperedges) may connect more than two nodes with discrete properties.
</blockquote>

<p>In Neo4j an edge (or relationship) can only be between itself or another node, there's no way of creating a relationship between more than 2 nodes.</p>


<p>I had problems when trying to model the relationship between a player and a football match because I wanted to say that a player participated in a match and represented a specific team in that match.</p>


<p>I started out with the following model:</p>


<div align="center">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2013/10/2013-10-22_22-47-13.png" alt="2013 10 22 22 47 13" title="2013-10-22_22-47-13.png" border="0" width="600" height="383" />
</div>

<p>Unfortunately creating a direct relationship from the player to the match means that there's no way to work out which team they played for.</p>


<p>This information is useful because sometimes players transfer teams in the middle of a season and we want to analyse how they performed for each team.</p>


<p>In a property graph we need to introduce an extra node which links the match, player and team together:</p>


<div align="center">
<img src="http://www.markhneedham.com/blog/wp-content/uploads/2013/10/2013-10-22_22-54-25.png" alt="2013 10 22 22 54 25" title="2013-10-22_22-54-25.png" border="0" width="600" height="324" />
</div>

<p>Although we are forced to adopt this design it actually helps us <strong>realise an extra entity</strong> in our domain which wasn't visible before - a player's performance in a match.</p>


<p>If we want to capture information about a players' performance in a match we can store it on this node.</p>


<p>We can also easily aggregate players stats by following the <cite>played</cite> relationship without needing to worry about the matches they played in.</p>


<p>The Neo4j manual has a <a href="http://docs.neo4j.org/chunked/milestone/cypher-cookbook-hyperedges.html">few more examples of domain models containing hyper edges</a> which are worth having a look at if you want to learn more.
