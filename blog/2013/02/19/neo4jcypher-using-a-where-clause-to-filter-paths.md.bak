+++
draft = false
date="2013-02-19 00:03:18"
title="neo4j/cypher: Using a WHERE clause to filter paths"
tag=['neo4j', 'cypher']
category=['neo4j']
+++

<p>One of the <a href="http://docs.neo4j.org/chunked/milestone/cypher-query-lang.html">cypher</a> queries that I wanted to write recently was one to find all the players that have started matches for Arsenal this season and the number of matches that they've played in.</p>


<p>The data model that I'm querying looks like this:</p>


<div align="center">

<img src="http://www.markhneedham.com/blog/wp-content/uploads/2013/02/games.png" alt="Games" title="games.png" border="0" width="600" height="130" /></div>

<p>I started off with the following query which traverses from Arsenal to all the games that they've taken part in and finds all the players who've played in those games:</p>



~~~text

START team = node:teams('name:"Arsenal"')
MATCH team-[:home_team|away_team]-game-[:played_in]-player
RETURN player.name, COUNT(player.name) as games
ORDER BY games desc
~~~

<p>It returns the following result set:</p>



~~~text

------------------------------+
| player.name          | games |
+------------------------------+
| "Cazorla"            | 25    |
| "Arteta"             | 22    |
| "Mertesacker"        | 22    |
| "Vermaelen"          | 22    |
| "Podolski"           | 21    |
| "Gibbs"              | 18    |
| "Szczesny"           | 17    |
â€¦
| "Tiote"              | 1     |
| "Diame"              | 1     |
| "Ridgewell"          | 1     |
| "Lampard"            | 1     |
| "Bramble"            | 1     |
| "Simpson"            | 1     |
+------------------------------+
258 rows
~~~

<p>which is partially right but also includes a bunch of players who played for the opposition rather than for Arsenal.</p>


<p>The reason for this is that we're following the 'played_in' relationship from the games and that relationship doesn't distinguish between players playing for a specific team in the match.</p>


<p>I initially tried to reduce the number of rows returned by adding to the MATCH clause like this:</p>



~~~text

START team = node:teams('name:"Arsenal"')
MATCH team-[:home_team|away_team]-game-[:played_in]-player, 
      player-[:played]-()-[:for]-team
RETURN player.name, COUNT(player.name) as games
ORDER BY games desc
~~~

<p>This did work to an extent - it now returned only Arsenal players but the count of games was completely wrong:</p>



~~~text

+------------------------------+
| player.name          | games |
+------------------------------+
| "Cazorla"            | 625   |
| "Mertesacker"        | 484   |
| "Arteta"             | 484   |
| "Vermaelen"          | 484   |
| "Podolski"           | 441   |
| "Giroud"             | 400   |
| "Gibbs"              | 324   |
...
+------------------------------+
21 rows
~~~

<p>The reason this doesn't work is that for every <cite>Team -> Game -> Player</cite> traversal in the first MATCH clauses we are doing a <cite>Player->Stats->Team</cite> traversal.</p>


<p>Taking Cazorla as an example: the first traversal matches 25 paths and then the second traversal also matches 25 paths.</p>


<p>The reason we end up with 625 matching paths for him is that we're doing that second traversal 25 times, once for each of the matching paths from the first traversal.</p>


<p>What we actually need to do is make that second MATCH clause a WHERE clause which I hadn't realised was possible until a few days ago.</p>


<p>In all the previous queries I've written with cypher I only ever used the WHERE clause to filter based on node or relationship properties.</p>


<p>If we make this change we end up with the following query</p>



~~~text

START team = node:teams('name:"Arsenal"')
MATCH team-[:home_team|away_team]-game-[:played_in]-player
WHERE player-[:played]-()-[:for]-team
RETURN player.name, COUNT(player.name) as games
ORDER BY games desc
~~~

<p>This returns the following result set:</p>



~~~text

+------------------------------+
| player.name          | games |
+------------------------------+
| "Cazorla"            | 25    |
| "Arteta"             | 22    |
| "Mertesacker"        | 22    |
| "Vermaelen"          | 22    |
| "Podolski"           | 21    |
| "Gibbs"              | 18    |
| "Szczesny"           | 17    |
| "Sagna"              | 16    |
| "Wilshere"           | 16    |
...
+------------------------------+
21 rows
~~~

<p>Which is exactly what we want!</p>


<p>The use of WHERE clauses in this way is explained in more detail <a href="http://docs.neo4j.org/chunked/milestone/query-where.html#where-filter-on-patterns">towards the end of the documentation</a>.</p>

