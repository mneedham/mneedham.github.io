<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2021s on Mark Needham</title>
    <link>https://markhneedham.com/blog/2021/</link>
    <description>Recent content in 2021s on Mark Needham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Feb 2021 00:44:37 +0000</lastBuildDate>
    
	<atom:link href="https://markhneedham.com/blog/2021/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Neo4j Graph Data Science 1.5: Exploring the HITS Algorithm</title>
      <link>https://markhneedham.com/blog/2021/02/03/neo4j-gdsl-hits-algorithm/</link>
      <pubDate>Wed, 03 Feb 2021 00:44:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2021/02/03/neo4j-gdsl-hits-algorithm/</guid>
      <description>The Neo4j Graph Data Science Library provides efficiently implemented, parallel versions of common graph algorithms for Neo4j, exposed as Cypher procedures. It recently published the preview release of version 1.5, which has lots of goodies to play with.
   In this blog post we&amp;#8217;re going to explore the newly added HITS algorithm with the help of a citations dataset.
 Launching Neo4j We&amp;#8217;re going to run Neo4j with the Graph Data Science Library using the following Docker Compose configuration:</description>
    </item>
    
    <item>
      <title>Materialize: Creating multiple views on one source</title>
      <link>https://markhneedham.com/blog/2021/01/28/materialize-multiple-views-one-source/</link>
      <pubDate>Thu, 28 Jan 2021 00:44:37 +0000</pubDate>
      
      <guid>https://markhneedham.com/blog/2021/01/28/materialize-multiple-views-one-source/</guid>
      <description>This is another post describing my exploration of Materialize, a SQL streaming database. In this post we&amp;#8217;re going to learn how to create multiple views on top of the same underlying source.
   We&amp;#8217;re still going to be using data extracted from Strava, an app that I use to record my runs, but this time we have more detailed information about each run. As in the previous blog posts, each run is represented as JSON document and store in the activities-detailed-all.</description>
    </item>
    
  </channel>
</rss>